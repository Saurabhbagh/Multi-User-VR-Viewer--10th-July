{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Valve.VR.SteamVR_Behaviour_Pose Class Reference\par \pard\plain 
{\tc\tcl2 \v Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose}
{\bkmkstart AAAAAAAQIJ}
{\bkmkend AAAAAAAQIJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component simplifies the use of Pose actions. Adding it to a gameobject will auto set that transform's position and rotation every update to match the pose. Advanced velocity estimation is handled through a buffer of the last 30 updates. }}\par
Inheritance diagram for Valve.VR.SteamVR_Behaviour_Pose:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetDeviceIndex} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the device index for the device bound to the pose. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b GetVelocity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current velocity of the pose (as of the last update) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b GetAngularVelocity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current angular velocity of the pose (as of the last update) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetVelocitiesAtTimeOffset} (float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the velocities of the pose at the time specified. Can predict in the future or return past values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetEstimatedPeakVelocities} (out Vector3 velocity, out Vector3 angularVelocity)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses previously recorded values to find the peak speed of the pose and returns the corresponding velocity and angular velocity }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetLocalizedName} (params {\b EVRInputStringBits}[] localizedParts)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the localized name of the device that the action corresponds to. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b ActiveChangeHandler} ({\b SteamVR_Behaviour_Pose} fromAction, {\b SteamVR_Input_Sources} fromSource, bool active)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b ChangeHandler} ({\b SteamVR_Behaviour_Pose} fromAction, {\b SteamVR_Input_Sources} fromSource)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b UpdateHandler} ({\b SteamVR_Behaviour_Pose} fromAction, {\b SteamVR_Input_Sources} fromSource)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b TrackingChangeHandler} ({\b SteamVR_Behaviour_Pose} fromAction, {\b SteamVR_Input_Sources} fromSource, {\b ETrackingResult} trackingState)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b ValidPoseChangeHandler} ({\b SteamVR_Behaviour_Pose} fromAction, {\b SteamVR_Input_Sources} fromSource, bool validPose)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b DeviceConnectedChangeHandler} ({\b SteamVR_Behaviour_Pose} fromAction, {\b SteamVR_Input_Sources} fromSource, bool deviceConnected)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b DeviceIndexChangedHandler} ({\b SteamVR_Behaviour_Pose} fromAction, {\b SteamVR_Input_Sources} fromSource, int newDeviceIndex)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose} {\b poseAction} = SteamVR_Input.GetAction<{\b SteamVR_Action_Pose}>("Pose")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Input_Sources} {\b inputSource}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Transform {\b origin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Behaviour_PoseEvent} {\b onTransformUpdated}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the position or rotation of this transform is updated. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Behaviour_PoseEvent} {\b onTransformChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the position or rotation of this transform is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Behaviour_Pose_ConnectedChangedEvent} {\b onConnectedChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the device is connected or disconnected }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Behaviour_Pose_TrackingChangedEvent} {\b onTrackingChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the device's tracking state changes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Behaviour_Pose_DeviceIndexChangedEvent} {\b onDeviceIndexChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the device's deviceIndex changes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UpdateHandler} {\b onTransformUpdatedEvent}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the position or rotation of this transform is updated. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ChangeHandler} {\b onTransformChangedEvent}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the position or rotation of this transform is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DeviceConnectedChangeHandler} {\b onConnectedChangedEvent}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the device is connected or disconnected }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrackingChangeHandler} {\b onTrackingChangedEvent}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the device's tracking state changes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DeviceIndexChangedHandler} {\b onDeviceIndexChangedEvent}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the device's deviceIndex changes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b broadcastDeviceChanges} = true\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Start} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnDisable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b UpdateTransform} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnDeviceConnectedChanged} ({\b SteamVR_Action_Pose} changedAction, {\b SteamVR_Input_Sources} changedSource, bool connected)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTrackingChanged} ({\b SteamVR_Action_Pose} changedAction, {\b SteamVR_Input_Sources} changedSource, {\b ETrackingResult} trackingChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b CheckDeviceIndex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateHistoryBuffer} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b deviceIndex} = -1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_HistoryBuffer} {\b historyBuffer} = new {\b SteamVR_HistoryBuffer}(30)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lastFrameUpdated}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether or not the current pose is in a valid state }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isActive}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether or not the pose action is bound and able to be updated }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This component simplifies the use of Pose actions. Adding it to a gameobject will auto set that transform's position and rotation every update to match the pose. Advanced velocity estimation is handled through a buffer of the last 30 updates. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 15 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ActiveChangeHandler\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:ActiveChangeHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Valve.VR.SteamVR_Behaviour_Pose.ActiveChangeHandler ({\b SteamVR_Behaviour_Pose}  {\i fromAction}, {\b SteamVR_Input_Sources}  {\i fromSource}, bool  {\i active})}}
\par
{\bkmkstart AAAAAAAQIK}
{\bkmkend AAAAAAAQIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ChangeHandler\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:ChangeHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Valve.VR.SteamVR_Behaviour_Pose.ChangeHandler ({\b SteamVR_Behaviour_Pose}  {\i fromAction}, {\b SteamVR_Input_Sources}  {\i fromSource})}}
\par
{\bkmkstart AAAAAAAQIL}
{\bkmkend AAAAAAAQIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckDeviceIndex\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:CheckDeviceIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Behaviour_Pose.CheckDeviceIndex (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAQIM}
{\bkmkend AAAAAAAQIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 165 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v DeviceConnectedChangeHandler\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:DeviceConnectedChangeHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Valve.VR.SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler ({\b SteamVR_Behaviour_Pose}  {\i fromAction}, {\b SteamVR_Input_Sources}  {\i fromSource}, bool  {\i deviceConnected})}}
\par
{\bkmkstart AAAAAAAQIN}
{\bkmkend AAAAAAAQIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DeviceIndexChangedHandler\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:DeviceIndexChangedHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Valve.VR.SteamVR_Behaviour_Pose.DeviceIndexChangedHandler ({\b SteamVR_Behaviour_Pose}  {\i fromAction}, {\b SteamVR_Input_Sources}  {\i fromSource}, int  {\i newDeviceIndex})}}
\par
{\bkmkstart AAAAAAAQIO}
{\bkmkend AAAAAAAQIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetAngularVelocity\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:GetAngularVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Behaviour_Pose.GetAngularVelocity ()}}
\par
{\bkmkstart AAAAAAAQIP}
{\bkmkend AAAAAAAQIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current angular velocity of the pose (as of the last update) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 207 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v GetDeviceIndex\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:GetDeviceIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Valve.VR.SteamVR_Behaviour_Pose.GetDeviceIndex ()}}
\par
{\bkmkstart AAAAAAAQIQ}
{\bkmkend AAAAAAAQIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the device index for the device bound to the pose. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 192 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v GetEstimatedPeakVelocities\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:GetEstimatedPeakVelocities}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Valve.VR.SteamVR_Behaviour_Pose.GetEstimatedPeakVelocities (out Vector3  {\i velocity}, out Vector3  {\i angularVelocity})}}
\par
{\bkmkstart AAAAAAAQIR}
{\bkmkend AAAAAAAQIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses previously recorded values to find the peak speed of the pose and returns the corresponding velocity and angular velocity }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 219 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v GetLocalizedName\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:GetLocalizedName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Valve.VR.SteamVR_Behaviour_Pose.GetLocalizedName (params {\b EVRInputStringBits} []  {\i localizedParts})}}
\par
{\bkmkstart AAAAAAAQIS}
{\bkmkend AAAAAAAQIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the localized name of the device that the action corresponds to. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i localizedParts} \cell }{{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VRInputString_Hand - Which hand the origin is in. E.g. "Left Hand" \par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. "Vive Controller" \par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VRInputString_InputSource - What part of that controller is the origin. E.g. "Trackpad" \par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VRInputString_All - All of the above. E.g. "Left Hand Vive Controller Trackpad" \par}
\cell }
{\row }
}
}{
Definition at line 248 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v GetVelocitiesAtTimeOffset\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:GetVelocitiesAtTimeOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Behaviour_Pose.GetVelocitiesAtTimeOffset (float  {\i secondsFromNow}, out Vector3  {\i velocity}, out Vector3  {\i angularVelocity})}}
\par
{\bkmkstart AAAAAAAQIT}
{\bkmkend AAAAAAAQIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the velocities of the pose at the time specified. Can predict in the future or return past values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 213 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v GetVelocity\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:GetVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Behaviour_Pose.GetVelocity ()}}
\par
{\bkmkstart AAAAAAAQIU}
{\bkmkend AAAAAAAQIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current velocity of the pose (as of the last update) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 201 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v OnDeviceConnectedChanged\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:OnDeviceConnectedChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Behaviour_Pose.OnDeviceConnectedChanged ({\b SteamVR_Action_Pose}  {\i changedAction}, {\b SteamVR_Input_Sources}  {\i changedSource}, bool  {\i connected}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAQIV}
{\bkmkend AAAAAAAQIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v OnDisable\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:OnDisable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Behaviour_Pose.OnDisable (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAQIW}
{\bkmkend AAAAAAAQIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v OnEnable\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:OnEnable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Behaviour_Pose.OnEnable (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAQIX}
{\bkmkend AAAAAAAQIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v OnTrackingChanged\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:OnTrackingChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Behaviour_Pose.OnTrackingChanged ({\b SteamVR_Action_Pose}  {\i changedAction}, {\b SteamVR_Input_Sources}  {\i changedSource}, {\b ETrackingResult}  {\i trackingChanged}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAQIY}
{\bkmkend AAAAAAAQIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 157 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v Start\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Behaviour_Pose.Start (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAQIZ}
{\bkmkend AAAAAAAQIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v TrackingChangeHandler\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:TrackingChangeHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Valve.VR.SteamVR_Behaviour_Pose.TrackingChangeHandler ({\b SteamVR_Behaviour_Pose}  {\i fromAction}, {\b SteamVR_Input_Sources}  {\i fromSource}, {\b ETrackingResult}  {\i trackingState})}}
\par
{\bkmkstart AAAAAAAQJA}
{\bkmkend AAAAAAAQJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateHandler\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:UpdateHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Valve.VR.SteamVR_Behaviour_Pose.UpdateHandler ({\b SteamVR_Behaviour_Pose}  {\i fromAction}, {\b SteamVR_Input_Sources}  {\i fromSource})}}
\par
{\bkmkstart AAAAAAAQJB}
{\bkmkend AAAAAAAQJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateHistoryBuffer\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:UpdateHistoryBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Valve.VR.SteamVR_Behaviour_Pose.UpdateHistoryBuffer (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAQJC}
{\bkmkend AAAAAAAQJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 227 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v UpdateTransform\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:UpdateTransform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Behaviour_Pose.UpdateTransform (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAQJD}
{\bkmkend AAAAAAAQJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v ValidPoseChangeHandler\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:ValidPoseChangeHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Valve.VR.SteamVR_Behaviour_Pose.ValidPoseChangeHandler ({\b SteamVR_Behaviour_Pose}  {\i fromAction}, {\b SteamVR_Input_Sources}  {\i fromSource}, bool  {\i validPose})}}
\par
{\bkmkstart AAAAAAAQJE}
{\bkmkend AAAAAAAQJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v broadcastDeviceChanges\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:broadcastDeviceChanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Behaviour_Pose.broadcastDeviceChanges = true}}
\par
{\bkmkstart AAAAAAAQJF}
{\bkmkend AAAAAAAQJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v deviceIndex\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:deviceIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Valve.VR.SteamVR_Behaviour_Pose.deviceIndex = -1{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAQJG}
{\bkmkend AAAAAAAQJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v historyBuffer\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:historyBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_HistoryBuffer} Valve.VR.SteamVR_Behaviour_Pose.historyBuffer = new {\b SteamVR_HistoryBuffer}(30){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAQJH}
{\bkmkend AAAAAAAQJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v inputSource\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:inputSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Input_Sources} Valve.VR.SteamVR_Behaviour_Pose.inputSource}}
\par
{\bkmkstart AAAAAAAQJI}
{\bkmkend AAAAAAAQJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v lastFrameUpdated\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:lastFrameUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Valve.VR.SteamVR_Behaviour_Pose.lastFrameUpdated{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAQJJ}
{\bkmkend AAAAAAAQJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 226 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onConnectedChanged\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onConnectedChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Behaviour_Pose_ConnectedChangedEvent} Valve.VR.SteamVR_Behaviour_Pose.onConnectedChanged}}
\par
{\bkmkstart AAAAAAAQJK}
{\bkmkend AAAAAAAQJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the device is connected or disconnected }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 39 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onConnectedChangedEvent\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onConnectedChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DeviceConnectedChangeHandler} Valve.VR.SteamVR_Behaviour_Pose.onConnectedChangedEvent}}
\par
{\bkmkstart AAAAAAAQJL}
{\bkmkend AAAAAAAQJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the device is connected or disconnected }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 55 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onDeviceIndexChanged\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onDeviceIndexChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Behaviour_Pose_DeviceIndexChangedEvent} Valve.VR.SteamVR_Behaviour_Pose.onDeviceIndexChanged}}
\par
{\bkmkstart AAAAAAAQJM}
{\bkmkend AAAAAAAQJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the device's deviceIndex changes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 45 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onDeviceIndexChangedEvent\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onDeviceIndexChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DeviceIndexChangedHandler} Valve.VR.SteamVR_Behaviour_Pose.onDeviceIndexChangedEvent}}
\par
{\bkmkstart AAAAAAAQJN}
{\bkmkend AAAAAAAQJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the device's deviceIndex changes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 61 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onTrackingChanged\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onTrackingChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Behaviour_Pose_TrackingChangedEvent} Valve.VR.SteamVR_Behaviour_Pose.onTrackingChanged}}
\par
{\bkmkstart AAAAAAAQJO}
{\bkmkend AAAAAAAQJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the device's tracking state changes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 42 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onTrackingChangedEvent\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onTrackingChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TrackingChangeHandler} Valve.VR.SteamVR_Behaviour_Pose.onTrackingChangedEvent}}
\par
{\bkmkstart AAAAAAAQJP}
{\bkmkend AAAAAAAQJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the device's tracking state changes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 58 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onTransformChanged\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onTransformChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Behaviour_PoseEvent} Valve.VR.SteamVR_Behaviour_Pose.onTransformChanged}}
\par
{\bkmkstart AAAAAAAQJQ}
{\bkmkend AAAAAAAQJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the position or rotation of this transform is changed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 36 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onTransformChangedEvent\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onTransformChangedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ChangeHandler} Valve.VR.SteamVR_Behaviour_Pose.onTransformChangedEvent}}
\par
{\bkmkstart AAAAAAAQJR}
{\bkmkend AAAAAAAQJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the position or rotation of this transform is changed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 52 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onTransformUpdated\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onTransformUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Behaviour_PoseEvent} Valve.VR.SteamVR_Behaviour_Pose.onTransformUpdated}}
\par
{\bkmkstart AAAAAAAQJS}
{\bkmkend AAAAAAAQJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This Unity event will fire whenever the position or rotation of this transform is updated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 33 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v onTransformUpdatedEvent\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:onTransformUpdatedEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UpdateHandler} Valve.VR.SteamVR_Behaviour_Pose.onTransformUpdatedEvent}}
\par
{\bkmkstart AAAAAAAQJT}
{\bkmkend AAAAAAAQJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This C# event will fire whenever the position or rotation of this transform is updated. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 49 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v origin\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:origin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Transform Valve.VR.SteamVR_Behaviour_Pose.origin}}
\par
{\bkmkstart AAAAAAAQJU}
{\bkmkend AAAAAAAQJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v poseAction\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:poseAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose} Valve.VR.SteamVR_Behaviour_Pose.poseAction = SteamVR_Input.GetAction<{\b SteamVR_Action_Pose}>("Pose")}}
\par
{\bkmkstart AAAAAAAQJV}
{\bkmkend AAAAAAAQJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v isActive\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:isActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Behaviour_Pose.isActive{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAQJW}
{\bkmkend AAAAAAAQJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether or not the pose action is bound and able to be updated }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 29 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\xe \v isValid\:Valve.VR.SteamVR_Behaviour_Pose}
{\xe \v Valve.VR.SteamVR_Behaviour_Pose\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Behaviour_Pose.isValid{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAQJX}
{\bkmkend AAAAAAAQJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether or not the current pose is in a valid state }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 26 of file SteamVR_Behaviour_Pose.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O:/GitHUBMINIPRoject/Assets/SteamVR/Input/{\b SteamVR_Behaviour_Pose.cs}\par
}}