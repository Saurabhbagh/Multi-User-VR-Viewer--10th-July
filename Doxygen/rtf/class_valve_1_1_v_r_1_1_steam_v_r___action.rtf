{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Valve.VR.SteamVR_Action< SourceMap, SourceElement > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\bkmkstart AAAAAAAPDF}
{\bkmkend AAAAAAAPDF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base level action for {\b SteamVR} Input Actions. All {\b SteamVR_Action_In} and {\b SteamVR_Action_Out} inherit from this. Initializes the ulong handle for the action, has some helper references that all actions will have. }}\par
Inheritance diagram for Valve.VR.SteamVR_Action< SourceMap, SourceElement >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_valve_1_1_v_r_1_1_steam_v_r___action.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b PreInitialize} (string newActionPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepares the action to be initialized. Creating dictionaries, finding the right existing action, etc. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b TryNeedsInitData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  If it looks like we aren't attached to a real action then try and find the existing action for our given path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Initialize} (bool createNew=false, bool throwErrors=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Initializes the individual sources as well as the base map itself. Gets the handle for the action from {\b SteamVR} and does any other {\b SteamVR} related setup that needs to be done }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b SteamVR_Action_Source_Map} {\b GetSourceMap} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Returns the underlying source map for the action. {\b [Should not be called by user code]}  Returns the underlying source map for the action. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b GetActive} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the action is currently bound and if the containing action set is active }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b GetActiveBinding} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the action is currently bound }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b GetLastActive} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value from the previous update indicating whether or not the action was currently bound and if the containing action set was active }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b GetLastActiveBinding} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value from the previous update indicating whether or not the action is currently bound }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CreateType {\b GetCopy< CreateType >} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Gets a copy of the underlying source map so we're always using the same underlying event data }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b TryNeedsInitData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b PreInitialize} (string newActionPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepares the action to be initialized. Creating dictionaries, finding the right existing action, etc. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b Initialize} (bool createNew=false, bool throwNotSetError=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the individual sources as well as the base map itself. Gets the handle for the action from {\b SteamVR} and does any other {\b SteamVR} related setup that needs to be done }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract float {\b GetTimeLastChanged} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the last timestamp this action was changed. (by Time.realtimeSinceStartup) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b SteamVR_Action_Source_Map} {\b GetSourceMap} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b GetActive} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the action is currently bound and if the containing action set is active }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetSetActive} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the containing action set is active }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b GetActiveBinding} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the action is currently bound }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b GetLastActive} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value from the previous update indicating whether or not the action is currently bound and if the containing action set is active }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b GetLastActiveBinding} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value from the previous update indicating whether or not the action is currently bound }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetPath} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the full action path for this action. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b IsUpdating} ({\b SteamVR_Input_Sources} inputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the data for this action is being updated for the specified input source. This can be triggered by querying the data }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override int {\b GetHashCode} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a hashcode from the full action path of this action }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Equals} ({\b SteamVR_Action} other)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two {\b SteamVR_Actions} by their action path instead of references }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b Equals} (object other)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two {\b SteamVR_Actions} by their action path instead of references }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetShortName} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets just the name of this action. The last part of the path for this action. Removes action set, and direction. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static CreateType {\b Create< CreateType >} (string newActionPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Creates an actual action that will later be called by user code. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static CreateType {\b CreateUninitialized< CreateType >} (string setName, {\b SteamVR_ActionDirections} {\b direction}, string newActionName, bool caseSensitive)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Creates an uninitialized action that can be saved without being attached to a real action }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static CreateType {\b CreateUninitialized< CreateType >} (string {\b actionPath}, bool caseSensitive)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Creates an uninitialized action that can be saved without being attached to a real action }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b operator !=} ({\b SteamVR_Action} action1, {\b SteamVR_Action} action2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two {\b SteamVR_Actions} by their action path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b operator==} ({\b SteamVR_Action} action1, {\b SteamVR_Action} action2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two {\b SteamVR_Actions} by their action path. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b SteamVR_Action} {\b FindExistingActionForPartialPath} (string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tries to find an existing action matching some subsection of an action path. More useful functions in {\b SteamVR_Input}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b startUpdatingSourceOnAccess} = true\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Not recommended.}  Determines if we should do a lazy-loading style of updating actions where we don't check for their data until the code asks for it. Note: You will have to manually activate actions otherwise. Not recommended. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b CreateUninitialized} (string newActionPath, bool caseSensitive)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b CreateUninitialized} (string newActionSet, {\b SteamVR_ActionDirections} {\b direction}, string newAction, bool caseSensitive)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b InitializeCopy} (string newActionPath, {\b SteamVR_Action_Source_Map} newData)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InitAfterDeserialize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b InitializeCopy} (string newActionPath, {\b SteamVR_Action_Source_Map} newData)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b CreateUninitialized} (string newActionPath, bool caseSensitive)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b CreateUninitialized} (string newActionSet, {\b SteamVR_ActionDirections} {\b direction}, string newAction, bool caseSensitive)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SourceMap {\b sourceMap}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The map to the source elements, a dictionary of source elements. Should be accessed through the action indexer }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized} = false\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b actionPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b needsReinit}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual SourceElement {\b this[SteamVR_Input_Sources inputSource]}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this action restricted to individual input sources. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b fullPath}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The full string path for this action }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override ulong {\b handle}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The underlying handle for this action used for native {\b SteamVR} Input calls }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b SteamVR_ActionSet} {\b actionSet}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actionset this action is contained within }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b SteamVR_ActionDirections} {\b direction}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The action direction of this action (in for input - most actions, out for output - mainly haptics) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b active}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action is bound and the actionset is active }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b lastActive}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action was bound and the ActionSet was active during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b activeBinding}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action is bound }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b lastActiveBinding}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action was bound at the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b fullPath}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The full string path for this action }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract ulong {\b handle}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The underlying handle for this action used for native {\b SteamVR} Input calls }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b SteamVR_ActionSet} {\b actionSet}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actionset this action is contained within }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b SteamVR_ActionDirections} {\b direction}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The action direction of this action (in for input - most actions, out for output - mainly haptics) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setActive}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action set that contains this action is active for Any input source. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b active}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action is bound and the actionset is active }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b activeBinding}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action is bound }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b lastActive}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action was bound and the actionset was active at the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract bool {\b lastActiveBinding}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the base level action for {\b SteamVR} Input Actions. All {\b SteamVR_Action_In} and {\b SteamVR_Action_Out} inherit from this. Initializes the ulong handle for the action, has some helper references that all actions will have. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Type Constraints}}\par
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\i SourceMap} : {\i {\b SteamVR_Action_Source_Map}<SourceElement>} \par
{\i SourceMap} : {\i new()} \par
{\i SourceElement} : {\i {\b SteamVR_Action_Source}} \par
{\i SourceElement} : {\i new()} \par
\par
}{
Definition at line 26 of file SteamVR_Action.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SteamVR_Action\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:SteamVR_Action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.{\b SteamVR_Action} ()}}
\par
{\bkmkstart AAAAAAAPDG}
{\bkmkend AAAAAAAPDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 275 of file SteamVR_Action.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create< CreateType >\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:Create< CreateType >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static CreateType {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.{\b Create}< CreateType > (string  {\i newActionPath}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAPDH}
{\bkmkend AAAAAAAPDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Creates an actual action that will later be called by user code. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Type Constraints}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\i CreateType} : {\i SteamVR_Action} \par
{\i CreateType} : {\i new()} \par
\par
}{
Definition at line 291 of file SteamVR_Action.cs.}\par
}
{\xe \v CreateUninitialized\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:CreateUninitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.CreateUninitialized (string  {\i newActionPath}, bool  {\i caseSensitive}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPDI}
{\bkmkend AAAAAAAPDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file SteamVR_Action.cs.}\par
}
{\xe \v CreateUninitialized\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:CreateUninitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.CreateUninitialized (string  {\i newActionSet}, {\b SteamVR_ActionDirections}  {\i direction}, string  {\i newAction}, bool  {\i caseSensitive}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPDJ}
{\bkmkend AAAAAAAPDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file SteamVR_Action.cs.}\par
}
{\xe \v CreateUninitialized\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:CreateUninitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.CreateUninitialized (string  {\i newActionPath}, bool  {\i caseSensitive}){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPDK}
{\bkmkend AAAAAAAPDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CreateUninitialized\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:CreateUninitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.CreateUninitialized (string  {\i newActionSet}, {\b SteamVR_ActionDirections}  {\i direction}, string  {\i newAction}, bool  {\i caseSensitive}){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPDL}
{\bkmkend AAAAAAAPDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CreateUninitialized< CreateType >\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:CreateUninitialized< CreateType >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static CreateType {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.{\b CreateUninitialized}< CreateType > (string  {\i setName}, {\b SteamVR_ActionDirections}  {\i direction}, string  {\i newActionName}, bool  {\i caseSensitive}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAPDM}
{\bkmkend AAAAAAAPDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Creates an uninitialized action that can be saved without being attached to a real action }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Type Constraints}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\i CreateType} : {\i SteamVR_Action} \par
{\i CreateType} : {\i new()} \par
\par
}{
Definition at line 301 of file SteamVR_Action.cs.}\par
}
{\xe \v CreateUninitialized< CreateType >\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:CreateUninitialized< CreateType >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static CreateType {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.{\b CreateUninitialized}< CreateType > (string  {\i actionPath}, bool  {\i caseSensitive}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAPDN}
{\bkmkend AAAAAAAPDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Creates an uninitialized action that can be saved without being attached to a real action }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Type Constraints}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\i CreateType} : {\i SteamVR_Action} \par
{\i CreateType} : {\i new()} \par
\par
}{
Definition at line 311 of file SteamVR_Action.cs.}\par
}
{\xe \v Equals\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.Equals ({\b SteamVR_Action}< SourceMap, SourceElement >  {\i other})}}
\par
{\bkmkstart AAAAAAAPDO}
{\bkmkend AAAAAAAPDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two {\b SteamVR_Actions} by their action path instead of references }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 444 of file SteamVR_Action.cs.}\par
}
{\xe \v Equals\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.Equals (object  {\i other})}}
\par
{\bkmkstart AAAAAAAPDP}
{\bkmkend AAAAAAAPDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two {\b SteamVR_Actions} by their action path instead of references }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 455 of file SteamVR_Action.cs.}\par
}
{\xe \v FindExistingActionForPartialPath\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:FindExistingActionForPartialPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b SteamVR_Action} {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.FindExistingActionForPartialPath (string  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAPDQ}
{\bkmkend AAAAAAAPDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tries to find an existing action matching some subsection of an action path. More useful functions in {\b SteamVR_Input}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 503 of file SteamVR_Action.cs.}\par
}
{\xe \v GetActive\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetActive ({\b SteamVR_Input_Sources}  {\i inputSource})}}
\par
{\bkmkstart AAAAAAANKM}
{\bkmkend AAAAAAANKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the action is currently bound and if the containing action set is active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}{
Implements {\b Valve.VR.ISteamVR_Action} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAANKK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 237 of file SteamVR_Action.cs.}\par
}
{\xe \v GetActive\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetActive ({\b SteamVR_Input_Sources}  {\i inputSource}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAANKL}
{\bkmkend AAAAAAANKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the action is currently bound and if the containing action set is active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}{
Implements {\b Valve.VR.ISteamVR_Action} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAANKK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetActiveBinding\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetActiveBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetActiveBinding ({\b SteamVR_Input_Sources}  {\i inputSource})}}
\par
{\bkmkstart AAAAAAAPDR}
{\bkmkend AAAAAAAPDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the action is currently bound }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}{
Definition at line 246 of file SteamVR_Action.cs.}\par
}
{\xe \v GetActiveBinding\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetActiveBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetActiveBinding ({\b SteamVR_Input_Sources}  {\i inputSource}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPDS}
{\bkmkend AAAAAAAPDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the action is currently bound }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}}
{\xe \v GetCopy< CreateType >\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetCopy< CreateType >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CreateType {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetCopy< CreateType > ()}}
\par
{\bkmkstart AAAAAAAPDT}
{\bkmkend AAAAAAAPDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Gets a copy of the underlying source map so we're always using the same underlying event data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Type Constraints}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\i CreateType} : {\i SteamVR_Action} \par
{\i CreateType} : {\i new()} \par
\par
}{
Definition at line 321 of file SteamVR_Action.cs.}\par
}
{\xe \v GetHashCode\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetHashCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override int {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetHashCode ()}}
\par
{\bkmkstart AAAAAAAPDU}
{\bkmkend AAAAAAAPDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a hashcode from the full action path of this action }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 433 of file SteamVR_Action.cs.}\par
}
{\xe \v GetLastActive\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetLastActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetLastActive ({\b SteamVR_Input_Sources}  {\i inputSource})}}
\par
{\bkmkstart AAAAAAAPDV}
{\bkmkend AAAAAAAPDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value from the previous update indicating whether or not the action was currently bound and if the containing action set was active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}{
Definition at line 256 of file SteamVR_Action.cs.}\par
}
{\xe \v GetLastActive\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetLastActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetLastActive ({\b SteamVR_Input_Sources}  {\i inputSource}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPDW}
{\bkmkend AAAAAAAPDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value from the previous update indicating whether or not the action is currently bound and if the containing action set is active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}}
{\xe \v GetLastActiveBinding\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetLastActiveBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetLastActiveBinding ({\b SteamVR_Input_Sources}  {\i inputSource})}}
\par
{\bkmkstart AAAAAAAPDX}
{\bkmkend AAAAAAAPDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value from the previous update indicating whether or not the action is currently bound }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}{
Definition at line 265 of file SteamVR_Action.cs.}\par
}
{\xe \v GetLastActiveBinding\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetLastActiveBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetLastActiveBinding ({\b SteamVR_Input_Sources}  {\i inputSource}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPDY}
{\bkmkend AAAAAAAPDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value from the previous update indicating whether or not the action is currently bound }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}}
{\xe \v GetPath\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetPath ()}}
\par
{\bkmkstart AAAAAAAPDZ}
{\bkmkend AAAAAAAPDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the full action path for this action. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 419 of file SteamVR_Action.cs.}\par
}
{\xe \v GetSetActive\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetSetActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetSetActive ({\b SteamVR_Input_Sources}  {\i inputSource})}}
\par
{\bkmkstart AAAAAAAPEA}
{\bkmkend AAAAAAAPEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether or not the containing action set is active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The device you would like to get data from. Any if the action is not device specific.\cell }
{\row }
}
}{
Definition at line 394 of file SteamVR_Action.cs.}\par
}
{\xe \v GetShortName\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetShortName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetShortName ()}}
\par
{\bkmkstart AAAAAAANKO}
{\bkmkend AAAAAAANKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets just the name of this action. The last part of the path for this action. Removes action set, and direction. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Implements {\b Valve.VR.ISteamVR_Action} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAANKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 532 of file SteamVR_Action.cs.}\par
}
{\xe \v GetSourceMap\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetSourceMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b SteamVR_Action_Source_Map} {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetSourceMap ()}}
\par
{\bkmkstart AAAAAAAPEB}
{\bkmkend AAAAAAAPEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Returns the underlying source map for the action. {\b [Should not be called by user code]}  Returns the underlying source map for the action. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 199 of file SteamVR_Action.cs.}\par
}
{\xe \v GetSourceMap\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetSourceMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract {\b SteamVR_Action_Source_Map} {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetSourceMap (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPEC}
{\bkmkend AAAAAAAPEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTimeLastChanged\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:GetTimeLastChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract float {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.GetTimeLastChanged ({\b SteamVR_Input_Sources}  {\i inputSource}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPED}
{\bkmkend AAAAAAAPED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the last timestamp this action was changed. (by Time.realtimeSinceStartup) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The input source to use to select the last changed time\cell }
{\row }
}
}{
Implemented in {\b Valve.VR.SteamVR_Action_In< SourceMap, SourceElement >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPEE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v InitAfterDeserialize\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:InitAfterDeserialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.InitAfterDeserialize (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPEF}
{\bkmkend AAAAAAAPEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 212 of file SteamVR_Action.cs.}\par
}
{\xe \v Initialize\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.Initialize (bool  {\i createNew} = {\f2 false}, bool  {\i throwErrors} = {\f2 true})}}
\par
{\bkmkstart AAAAAAAPEG}
{\bkmkend AAAAAAAPEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Initializes the individual sources as well as the base map itself. Gets the handle for the action from {\b SteamVR} and does any other {\b SteamVR} related setup that needs to be done }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 159 of file SteamVR_Action.cs.}\par
}
{\xe \v Initialize\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.Initialize (bool  {\i createNew} = {\f2 false}, bool  {\i throwNotSetError} = {\f2 true}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPEH}
{\bkmkend AAAAAAAPEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the individual sources as well as the base map itself. Gets the handle for the action from {\b SteamVR} and does any other {\b SteamVR} related setup that needs to be done }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v InitializeCopy\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:InitializeCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.InitializeCopy (string  {\i newActionPath}, {\b SteamVR_Action_Source_Map}  {\i newData}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPEI}
{\bkmkend AAAAAAAPEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 204 of file SteamVR_Action.cs.}\par
}
{\xe \v InitializeCopy\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:InitializeCopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.InitializeCopy (string  {\i newActionPath}, {\b SteamVR_Action_Source_Map}  {\i newData}){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPEJ}
{\bkmkend AAAAAAAPEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsUpdating\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:IsUpdating}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.IsUpdating ({\b SteamVR_Input_Sources}  {\i inputSource}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPEK}
{\bkmkend AAAAAAAPEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns true if the data for this action is being updated for the specified input source. This can be triggered by querying the data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Implemented in {\b Valve.VR.SteamVR_Action_In< SourceMap, SourceElement >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPEL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v operator !=\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:operator !=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.operator != ({\b SteamVR_Action}< SourceMap, SourceElement >  {\i action1}, {\b SteamVR_Action}< SourceMap, SourceElement >  {\i action2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAPEM}
{\bkmkend AAAAAAAPEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two {\b SteamVR_Actions} by their action path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 479 of file SteamVR_Action.cs.}\par
}
{\xe \v operator==\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.operator== ({\b SteamVR_Action}< SourceMap, SourceElement >  {\i action1}, {\b SteamVR_Action}< SourceMap, SourceElement >  {\i action2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAPEN}
{\bkmkend AAAAAAAPEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compares two {\b SteamVR_Actions} by their action path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 487 of file SteamVR_Action.cs.}\par
}
{\xe \v PreInitialize\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:PreInitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.PreInitialize (string  {\i newActionPath})}}
\par
{\bkmkstart AAAAAAAPEO}
{\bkmkend AAAAAAAPEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepares the action to be initialized. Creating dictionaries, finding the right existing action, etc. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 95 of file SteamVR_Action.cs.}\par
}
{\xe \v PreInitialize\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:PreInitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.PreInitialize (string  {\i newActionPath}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPEP}
{\bkmkend AAAAAAAPEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepares the action to be initialized. Creating dictionaries, finding the right existing action, etc. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\xe \v TryNeedsInitData\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:TryNeedsInitData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.TryNeedsInitData ()}}
\par
{\bkmkstart AAAAAAAPEQ}
{\bkmkend AAAAAAAPEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  If it looks like we aren't attached to a real action then try and find the existing action for our given path. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 130 of file SteamVR_Action.cs.}\par
}
{\xe \v TryNeedsInitData\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:TryNeedsInitData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.TryNeedsInitData (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAPER}
{\bkmkend AAAAAAAPER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v actionPath\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:actionPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.actionPath{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPES}
{\bkmkend AAAAAAAPES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 278 of file SteamVR_Action.cs.}\par
}
{\xe \v initialized\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:initialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.initialized = false{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPET}
{\bkmkend AAAAAAAPET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file SteamVR_Action.cs.}\par
}
{\xe \v needsReinit\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:needsReinit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.needsReinit{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPEU}
{\bkmkend AAAAAAAPEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 281 of file SteamVR_Action.cs.}\par
}
{\xe \v sourceMap\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:sourceMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SourceMap {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.sourceMap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPEV}
{\bkmkend AAAAAAAPEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The map to the source elements, a dictionary of source elements. Should be accessed through the action indexer }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 32 of file SteamVR_Action.cs.}\par
}
{\xe \v startUpdatingSourceOnAccess\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:startUpdatingSourceOnAccess}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.startUpdatingSourceOnAccess = true{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAPEW}
{\bkmkend AAAAAAAPEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Not recommended.}  Determines if we should do a lazy-loading style of updating actions where we don't check for their data until the code asks for it. Note: You will have to manually activate actions otherwise. Not recommended. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 286 of file SteamVR_Action.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v actionSet\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:actionSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b SteamVR_ActionSet} {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.actionSet{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPEX}
{\bkmkend AAAAAAAPEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actionset this action is contained within }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 60 of file SteamVR_Action.cs.}\par
}
{\xe \v actionSet\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:actionSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract {\b SteamVR_ActionSet} {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.actionSet{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPEY}
{\bkmkend AAAAAAAPEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The actionset this action is contained within }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 340 of file SteamVR_Action.cs.}\par
}
{\xe \v active\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:active}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.active{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPEZ}
{\bkmkend AAAAAAAPEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action is bound and the actionset is active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 77 of file SteamVR_Action.cs.}\par
}
{\xe \v active\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:active}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.active{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFA}
{\bkmkend AAAAAAAPFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action is bound and the actionset is active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 349 of file SteamVR_Action.cs.}\par
}
{\xe \v activeBinding\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:activeBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.activeBinding{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFB}
{\bkmkend AAAAAAAPFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action is bound }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 83 of file SteamVR_Action.cs.}\par
}
{\xe \v activeBinding\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:activeBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.activeBinding{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFC}
{\bkmkend AAAAAAAPFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action is bound }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 352 of file SteamVR_Action.cs.}\par
}
{\xe \v direction\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:direction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b SteamVR_ActionDirections} {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.direction{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFD}
{\bkmkend AAAAAAAPFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The action direction of this action (in for input - most actions, out for output - mainly haptics) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 69 of file SteamVR_Action.cs.}\par
}
{\xe \v direction\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:direction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract {\b SteamVR_ActionDirections} {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.direction{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFE}
{\bkmkend AAAAAAAPFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The action direction of this action (in for input - most actions, out for output - mainly haptics) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 343 of file SteamVR_Action.cs.}\par
}
{\xe \v fullPath\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:fullPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.fullPath{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFF}
{\bkmkend AAAAAAAPFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The full string path for this action }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 48 of file SteamVR_Action.cs.}\par
}
{\xe \v fullPath\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:fullPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.fullPath{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFG}
{\bkmkend AAAAAAAPFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The full string path for this action }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 334 of file SteamVR_Action.cs.}\par
}
{\xe \v handle\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override ulong {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.handle{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFH}
{\bkmkend AAAAAAAPFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The underlying handle for this action used for native {\b SteamVR} Input calls }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 56 of file SteamVR_Action.cs.}\par
}
{\xe \v handle\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract ulong {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.handle{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFI}
{\bkmkend AAAAAAAPFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The underlying handle for this action used for native {\b SteamVR} Input calls }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 337 of file SteamVR_Action.cs.}\par
}
{\xe \v lastActive\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:lastActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.lastActive{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFJ}
{\bkmkend AAAAAAAPFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action was bound and the ActionSet was active during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 80 of file SteamVR_Action.cs.}\par
}
{\xe \v lastActive\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:lastActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.lastActive{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFK}
{\bkmkend AAAAAAAPFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action was bound and the actionset was active at the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 355 of file SteamVR_Action.cs.}\par
}
{\xe \v lastActiveBinding\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:lastActiveBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.lastActiveBinding{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFL}
{\bkmkend AAAAAAAPFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action was bound at the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 86 of file SteamVR_Action.cs.}\par
}
{\xe \v lastActiveBinding\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:lastActiveBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.lastActiveBinding{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFM}
{\bkmkend AAAAAAAPFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 360 of file SteamVR_Action.cs.}\par
}
{\xe \v setActive\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:setActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.setActive{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFN}
{\bkmkend AAAAAAAPFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Shortcut to: {\b SteamVR_Input_Sources.Any}]}  Returns true if the action set that contains this action is active for Any input source. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 346 of file SteamVR_Action.cs.}\par
}
{\xe \v this[SteamVR_Input_Sources inputSource]\:Valve.VR.SteamVR_Action< SourceMap, SourceElement >}
{\xe \v Valve.VR.SteamVR_Action< SourceMap, SourceElement >\:this[SteamVR_Input_Sources inputSource]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual SourceElement {\b Valve.VR.SteamVR_Action}< SourceMap, SourceElement >.this[{\b SteamVR_Input_Sources} inputSource]{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPFO}
{\bkmkend AAAAAAAPFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Access this action restricted to individual input sources. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputSource} \cell }{The input source to access for this action\cell }
{\row }
}
}{
Definition at line 39 of file SteamVR_Action.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O:/GitHUBMINIPRoject/Assets/SteamVR/Input/{\b SteamVR_Action.cs}\par
}}