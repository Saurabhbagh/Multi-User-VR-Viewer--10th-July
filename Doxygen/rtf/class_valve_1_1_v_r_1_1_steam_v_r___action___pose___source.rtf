{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Valve.VR.SteamVR_Action_Pose_Source Class Reference\par \pard\plain 
{\tc\tcl2 \v Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source}
{\bkmkstart AAAAAAAPMS}
{\bkmkend AAAAAAAPMS}
Inheritance diagram for Valve.VR.SteamVR_Action_Pose_Source:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Preinitialize} ({\b SteamVR_Action} wrappingAction, {\b SteamVR_Input_Sources} forInputSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Sets up the internals of the action source before {\b SteamVR} has been initialized. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Initialize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Initializes the handle for the inputSource, the pose action data size, and any other related {\b SteamVR} data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b UpdateValue} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Updates the data for this action and this input source. Sends related events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b UpdateValue} (bool skipStateAndEventUpdates)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Updates the data for this action and this input source. Sends related events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetVelocitiesAtTimeOffset} (float secondsFromNow, out Vector3 velocityAtTime, out Vector3 angularVelocityAtTime)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SteamVR} keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetPoseAtTimeOffset} (float secondsFromNow, out Vector3 positionAtTime, out Quaternion rotationAtTime, out Vector3 velocityAtTime, out Vector3 angularVelocityAtTime)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SteamVR} keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateTransform} (Transform transformToUpdate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update a transform's local position and local roation to match the pose. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ETrackingUniverseOrigin} {\b universeOrigin} = {\b ETrackingUniverseOrigin.TrackingUniverseRawAndUncalibrated}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b predictedSecondsFromNow} = 0.011f\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The amount of time in the future (or past!) the input system will predict poses for. Default is one frame forward (at 90hz) to account for render time. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b changeTolerance} = Mathf.Epsilon\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance the pose needs to move/rotate before a change is detected }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetCacheVariables} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b CheckAndSendEvents} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b GetUnityCoordinateVelocity} ({\b HmdVector3_t} vector)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b GetUnityCoordinateAngularVelocity} ({\b HmdVector3_t} vector)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b GetUnityCoordinateVelocity} (float x, float y, float z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b GetUnityCoordinateAngularVelocity} (float x, float y, float z)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InputPoseActionData_t} {\b poseActionData} = new {\b InputPoseActionData_t}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InputPoseActionData_t} {\b lastPoseActionData} = new {\b InputPoseActionData_t}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InputPoseActionData_t} {\b tempPoseActionData} = new {\b InputPoseActionData_t}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose} {\b poseAction}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint {\b poseActionData_size} = 0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b changed}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True when the orientation of the pose has changhed more than changeTolerance in the last update. Note: Will only return true if the action is also active. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b lastChanged}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The value of the action's 'changed' during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override ulong {\b activeOrigin}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The handle to the origin of the component that was used to update this pose }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override ulong {\b lastActiveOrigin}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The handle to the origin of the component that was used to update the value for this action (for the previous update) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b active}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if this action is bound and the ActionSet is active }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b activeBinding}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the action is bound }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b lastActive}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the action was active (ActionSet active and binding active) during the last update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b lastActiveBinding}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the action's binding was active during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ETrackingResult} {\b trackingState}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The state of the tracking system that is used to create pose data (position, rotation, etc) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ETrackingResult} {\b lastTrackingState}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tracking state for this pose during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b poseIsValid}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the pose retrieved for this action and input source is valid (good data from the tracking source) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b lastPoseIsValid}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the pose was valid during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b deviceIsConnected}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the device bound to this action and input source is connected }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b lastDeviceIsConnected}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the device bound to this action was connected during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b localPosition}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local position of this action relative to the universe origin }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Quaternion {\b localRotation}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local rotation of this action relative to the universe origin }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b lastLocalPosition}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local position for this pose during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Quaternion {\b lastLocalRotation}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local rotation for this pose during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b velocity}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local velocity of this pose relative to the universe origin }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b lastVelocity}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The velocity for this pose during the previous update }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b angularVelocity}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local angular velocity of this pose relative to the universe origin }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector3 {\b lastAngularVelocity}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The angular velocity for this pose during the previous update }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose.ActiveChangeHandler} {\b onActiveChange}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the active state (ActionSet active and binding active) changes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose.ActiveChangeHandler} {\b onActiveBindingChange}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the active state of the binding changes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose.ChangeHandler} {\b onChange}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the orientation of the pose changes more than the changeTolerance }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose.UpdateHandler} {\b onUpdate}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the action is updated }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose.TrackingChangeHandler} {\b onTrackingChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose.ValidPoseChangeHandler} {\b onValidPoseChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SteamVR_Action_Pose.DeviceConnectedChangeHandler} {\b onDeviceConnectedChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the device bound to this action is connected or disconnected }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 408 of file SteamVR_Action_Pose.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckAndSendEvents\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:CheckAndSendEvents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Action_Pose_Source.CheckAndSendEvents (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAPMT}
{\bkmkend AAAAAAAPMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Valve.VR.SteamVR_Action_Skeleton_Source} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPMU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 670 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v GetChanged\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:GetChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Action_Pose_Source.GetChanged (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPMV}
{\bkmkend AAAAAAAPMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 596 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v GetPoseAtTimeOffset\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:GetPoseAtTimeOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Action_Pose_Source.GetPoseAtTimeOffset (float  {\i secondsFromNow}, out Vector3  {\i positionAtTime}, out Quaternion  {\i rotationAtTime}, out Vector3  {\i velocityAtTime}, out Vector3  {\i angularVelocityAtTime})}}
\par
{\bkmkstart AAAAAAAPMW}
{\bkmkend AAAAAAAPMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SteamVR} keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i secondsFromNow} \cell }{The time offset in the future (estimated) or in the past (previously recorded) you want to get data from\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid true if we successfully returned a pose\par
}}{
Definition at line 638 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v GetUnityCoordinateAngularVelocity\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:GetUnityCoordinateAngularVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.GetUnityCoordinateAngularVelocity ({\b HmdVector3_t}  {\i vector}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPMX}
{\bkmkend AAAAAAAPMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 699 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v GetUnityCoordinateAngularVelocity\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:GetUnityCoordinateAngularVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.GetUnityCoordinateAngularVelocity (float  {\i x}, float  {\i y}, float  {\i z}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPMY}
{\bkmkend AAAAAAAPMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 713 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v GetUnityCoordinateVelocity\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:GetUnityCoordinateVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.GetUnityCoordinateVelocity ({\b HmdVector3_t}  {\i vector}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPMZ}
{\bkmkend AAAAAAAPMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 694 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v GetUnityCoordinateVelocity\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:GetUnityCoordinateVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.GetUnityCoordinateVelocity (float  {\i x}, float  {\i y}, float  {\i z}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPNA}
{\bkmkend AAAAAAAPNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 704 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v GetVelocitiesAtTimeOffset\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:GetVelocitiesAtTimeOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Action_Pose_Source.GetVelocitiesAtTimeOffset (float  {\i secondsFromNow}, out Vector3  {\i velocityAtTime}, out Vector3  {\i angularVelocityAtTime})}}
\par
{\bkmkstart AAAAAAAPNB}
{\bkmkend AAAAAAAPNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b SteamVR} keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i secondsFromNow} \cell }{The time offset in the future (estimated) or in the past (previously recorded) you want to get data from\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid true if we successfully returned a pose\par
}}{
Definition at line 615 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v Initialize\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:Initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Valve.VR.SteamVR_Action_Pose_Source.Initialize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAPJA}
{\bkmkend AAAAAAAPJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Initializes the handle for the inputSource, the pose action data size, and any other related {\b SteamVR} data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented from {\b Valve.VR.SteamVR_Action_In_Source} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPIY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b Valve.VR.SteamVR_Action_Skeleton_Source} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPIZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 543 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v Preinitialize\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:Preinitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Valve.VR.SteamVR_Action_Pose_Source.Preinitialize ({\b SteamVR_Action}  {\i wrappingAction}, {\b SteamVR_Input_Sources}  {\i forInputSource}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAPNC}
{\bkmkend AAAAAAAPNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Sets up the internals of the action source before {\b SteamVR} has been initialized. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented from {\b Valve.VR.SteamVR_Action_Source} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPHG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b Valve.VR.SteamVR_Action_Skeleton_Source} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPND \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 533 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v SetCacheVariables\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:SetCacheVariables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Valve.VR.SteamVR_Action_Pose_Source.SetCacheVariables (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPNE}
{\bkmkend AAAAAAAPNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 587 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v UpdateTransform\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:UpdateTransform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Valve.VR.SteamVR_Action_Pose_Source.UpdateTransform (Transform  {\i transformToUpdate})}}
\par
{\bkmkstart AAAAAAAPNF}
{\bkmkend AAAAAAAPNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update a transform's local position and local roation to match the pose. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i transformToUpdate} \cell }{The transform of the object to be updated\cell }
{\row }
}
}{
Definition at line 664 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v UpdateValue\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:UpdateValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Valve.VR.SteamVR_Action_Pose_Source.UpdateValue (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAPJG}
{\bkmkend AAAAAAAPJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Updates the data for this action and this input source. Sends related events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Implements {\b Valve.VR.SteamVR_Action_In_Source} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPHI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b Valve.VR.SteamVR_Action_Skeleton_Source} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPJF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 554 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v UpdateValue\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:UpdateValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Valve.VR.SteamVR_Action_Pose_Source.UpdateValue (bool  {\i skipStateAndEventUpdates}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAPNG}
{\bkmkend AAAAAAAPNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b [Should not be called by user code]}  Updates the data for this action and this input source. Sends related events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Reimplemented in {\b Valve.VR.SteamVR_Action_Skeleton_Source} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAPNH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 562 of file SteamVR_Action_Pose.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v changeTolerance\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:changeTolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Valve.VR.SteamVR_Action_Pose_Source.changeTolerance = Mathf.Epsilon}}
\par
{\bkmkstart AAAAAAAPNI}
{\bkmkend AAAAAAAPNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance the pose needs to move/rotate before a change is detected }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 418 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastPoseActionData\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastPoseActionData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b InputPoseActionData_t} Valve.VR.SteamVR_Action_Pose_Source.lastPoseActionData = new {\b InputPoseActionData_t}(){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPNJ}
{\bkmkend AAAAAAAPNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 523 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v poseAction\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:poseAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose} Valve.VR.SteamVR_Action_Pose_Source.poseAction{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPNK}
{\bkmkend AAAAAAAPNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 528 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v poseActionData\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:poseActionData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b InputPoseActionData_t} Valve.VR.SteamVR_Action_Pose_Source.poseActionData = new {\b InputPoseActionData_t}(){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPNL}
{\bkmkend AAAAAAAPNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 521 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v poseActionData_size\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:poseActionData_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint Valve.VR.SteamVR_Action_Pose_Source.poseActionData_size = 0{\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPNM}
{\bkmkend AAAAAAAPNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 412 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v predictedSecondsFromNow\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:predictedSecondsFromNow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Valve.VR.SteamVR_Action_Pose_Source.predictedSecondsFromNow = 0.011f}}
\par
{\bkmkstart AAAAAAAPNN}
{\bkmkend AAAAAAAPNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The amount of time in the future (or past!) the input system will predict poses for. Default is one frame forward (at 90hz) to account for render time. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 415 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v tempPoseActionData\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:tempPoseActionData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b InputPoseActionData_t} Valve.VR.SteamVR_Action_Pose_Source.tempPoseActionData = new {\b InputPoseActionData_t}(){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAPNO}
{\bkmkend AAAAAAAPNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 525 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v universeOrigin\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:universeOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ETrackingUniverseOrigin} Valve.VR.SteamVR_Action_Pose_Source.universeOrigin = {\b ETrackingUniverseOrigin.TrackingUniverseRawAndUncalibrated}}}
\par
{\bkmkstart AAAAAAAPNP}
{\bkmkend AAAAAAAPNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 410 of file SteamVR_Action_Pose.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v active\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:active}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Valve.VR.SteamVR_Action_Pose_Source.active{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPNQ}
{\bkmkend AAAAAAAPNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if this action is bound and the ActionSet is active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 465 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v activeBinding\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:activeBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Valve.VR.SteamVR_Action_Pose_Source.activeBinding{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPNR}
{\bkmkend AAAAAAAPNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the action is bound }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 468 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v activeOrigin\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:activeOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override ulong Valve.VR.SteamVR_Action_Pose_Source.activeOrigin{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPNS}
{\bkmkend AAAAAAAPNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The handle to the origin of the component that was used to update this pose }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 451 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v angularVelocity\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:angularVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.angularVelocity{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPNT}
{\bkmkend AAAAAAAPNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local angular velocity of this pose relative to the universe origin }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 515 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v changed\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:changed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Valve.VR.SteamVR_Action_Pose_Source.changed{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPNU}
{\bkmkend AAAAAAAPNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True when the orientation of the pose has changhed more than changeTolerance in the last update. Note: Will only return true if the action is also active. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 444 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v deviceIsConnected\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:deviceIsConnected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Action_Pose_Source.deviceIsConnected{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPNV}
{\bkmkend AAAAAAAPNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the device bound to this action and input source is connected }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 490 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastActive\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Valve.VR.SteamVR_Action_Pose_Source.lastActive{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPNW}
{\bkmkend AAAAAAAPNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the action was active (ActionSet active and binding active) during the last update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 472 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastActiveBinding\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastActiveBinding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Valve.VR.SteamVR_Action_Pose_Source.lastActiveBinding{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPNX}
{\bkmkend AAAAAAAPNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the action's binding was active during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 475 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastActiveOrigin\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastActiveOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override ulong Valve.VR.SteamVR_Action_Pose_Source.lastActiveOrigin{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPNY}
{\bkmkend AAAAAAAPNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The handle to the origin of the component that was used to update the value for this action (for the previous update) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 462 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastAngularVelocity\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastAngularVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.lastAngularVelocity{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPNZ}
{\bkmkend AAAAAAAPNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The angular velocity for this pose during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 518 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastChanged\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Valve.VR.SteamVR_Action_Pose_Source.lastChanged{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPOA}
{\bkmkend AAAAAAAPOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The value of the action's 'changed' during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 447 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastDeviceIsConnected\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastDeviceIsConnected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Action_Pose_Source.lastDeviceIsConnected{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPOB}
{\bkmkend AAAAAAAPOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the device bound to this action was connected during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 493 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastLocalPosition\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastLocalPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.lastLocalPosition{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPOC}
{\bkmkend AAAAAAAPOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local position for this pose during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 503 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastLocalRotation\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastLocalRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Quaternion Valve.VR.SteamVR_Action_Pose_Source.lastLocalRotation{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPOD}
{\bkmkend AAAAAAAPOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local rotation for this pose during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 506 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastPoseIsValid\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastPoseIsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Action_Pose_Source.lastPoseIsValid{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPOE}
{\bkmkend AAAAAAAPOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the pose was valid during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 487 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastTrackingState\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastTrackingState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ETrackingResult} Valve.VR.SteamVR_Action_Pose_Source.lastTrackingState{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPOF}
{\bkmkend AAAAAAAPOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tracking state for this pose during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 481 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v lastVelocity\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:lastVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.lastVelocity{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPOG}
{\bkmkend AAAAAAAPOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The velocity for this pose during the previous update }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 512 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v localPosition\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:localPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.localPosition{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPOH}
{\bkmkend AAAAAAAPOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local position of this action relative to the universe origin }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 497 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v localRotation\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:localRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Quaternion Valve.VR.SteamVR_Action_Pose_Source.localRotation{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPOI}
{\bkmkend AAAAAAAPOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local rotation of this action relative to the universe origin }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 500 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v poseIsValid\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:poseIsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Valve.VR.SteamVR_Action_Pose_Source.poseIsValid{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPOJ}
{\bkmkend AAAAAAAPOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if the pose retrieved for this action and input source is valid (good data from the tracking source) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 484 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v trackingState\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:trackingState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ETrackingResult} Valve.VR.SteamVR_Action_Pose_Source.trackingState{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAPOK}
{\bkmkend AAAAAAAPOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The state of the tracking system that is used to create pose data (position, rotation, etc) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 478 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v velocity\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:velocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector3 Valve.VR.SteamVR_Action_Pose_Source.velocity{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAPOL}
{\bkmkend AAAAAAAPOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local velocity of this pose relative to the universe origin }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 509 of file SteamVR_Action_Pose.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v onActiveBindingChange\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:onActiveBindingChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose.ActiveChangeHandler} Valve.VR.SteamVR_Action_Pose_Source.onActiveBindingChange}}
\par
{\bkmkstart AAAAAAAPOM}
{\bkmkend AAAAAAAPOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the active state of the binding changes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 424 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v onActiveChange\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:onActiveChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose.ActiveChangeHandler} Valve.VR.SteamVR_Action_Pose_Source.onActiveChange}}
\par
{\bkmkstart AAAAAAAPON}
{\bkmkend AAAAAAAPON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the active state (ActionSet active and binding active) changes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 421 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v onChange\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:onChange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose.ChangeHandler} Valve.VR.SteamVR_Action_Pose_Source.onChange}}
\par
{\bkmkstart AAAAAAAPOO}
{\bkmkend AAAAAAAPOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the orientation of the pose changes more than the changeTolerance }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 427 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v onDeviceConnectedChanged\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:onDeviceConnectedChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose.DeviceConnectedChangeHandler} Valve.VR.SteamVR_Action_Pose_Source.onDeviceConnectedChanged}}
\par
{\bkmkstart AAAAAAAPOP}
{\bkmkend AAAAAAAPOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the device bound to this action is connected or disconnected }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 439 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v onTrackingChanged\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:onTrackingChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose.TrackingChangeHandler} Valve.VR.SteamVR_Action_Pose_Source.onTrackingChanged}}
\par
{\bkmkstart AAAAAAAPOQ}
{\bkmkend AAAAAAAPOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 433 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v onUpdate\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:onUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose.UpdateHandler} Valve.VR.SteamVR_Action_Pose_Source.onUpdate}}
\par
{\bkmkstart AAAAAAAPOR}
{\bkmkend AAAAAAAPOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the action is updated }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 430 of file SteamVR_Action_Pose.cs.}\par
}
{\xe \v onValidPoseChanged\:Valve.VR.SteamVR_Action_Pose_Source}
{\xe \v Valve.VR.SteamVR_Action_Pose_Source\:onValidPoseChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SteamVR_Action_Pose.ValidPoseChangeHandler} Valve.VR.SteamVR_Action_Pose_Source.onValidPoseChanged}}
\par
{\bkmkstart AAAAAAAPOS}
{\bkmkend AAAAAAAPOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line 436 of file SteamVR_Action_Pose.cs.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
O:/GitHUBMINIPRoject/Assets/SteamVR/Input/{\b SteamVR_Action_Pose.cs}\par
}}