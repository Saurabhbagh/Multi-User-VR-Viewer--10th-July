<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_anchorable_behaviour_8cs" kind="file" language="C#">
    <compoundname>AnchorableBehaviour.cs</compoundname>
    <innerclass refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour" prot="public">Leap::Unity::Interaction::AnchorableBehaviour</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity">Leap::Unity</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity_1_1_interaction">Leap::Unity::Interaction</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>.<ref refid="namespace_leap_1_1_unity_1_1_attributes" kindref="compound">Attributes</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>.<ref refid="namespace_leap_1_1_unity_1_1_interaction" kindref="compound">Interaction</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.Events;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity_1_1_interaction" kindref="compound">Leap.Unity.Interaction</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour" kindref="compound">AnchorableBehaviour</ref><sp/>:<sp/>MonoBehaviour<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>[Disable]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Whether<sp/>or<sp/>not<sp/>this<sp/>AnchorableBehaviour<sp/>is<sp/>actively<sp/>attached<sp/>to<sp/>its<sp/>anchor.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isAttached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" kindref="member">isAttached</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_isAttached;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_isAttached<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_anchor<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isAttached<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_anchor.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a063da3d8209d998112e4268f024ececa" kindref="member">NotifyAttached</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6fbe787555ba1bcbae45f715777e0b7d" kindref="member">OnAttachedToAnchor</ref>.Invoke();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>attach<sp/>an<sp/>anchorable<sp/>behaviour,<sp/>but<sp/>it<sp/>has<sp/>no<sp/>assigned<sp/>anchor.&quot;</highlight><highlight class="normal">,<sp/>this.gameObject);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isAttached<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isLockedToAnchor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isRotationLockedToAnchor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a61aec444eb2b020981d37d7a15c1b280" kindref="member">OnDetachedFromAnchor</ref>.Invoke();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_anchor.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af1262853ca7469aec0058bc30d1b9f31" kindref="member">NotifyDetached</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetPositionLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetRotationLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>A<sp/>more<sp/>robust<sp/>gravity<sp/>fix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_reactivateGravityOnDetach)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c" kindref="member">rigidbody</ref>.useGravity<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reactivateGravityOnDetach<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>current<sp/>anchor<sp/>of<sp/>this<sp/>AnchorableBehaviour.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>[OnEditorChange(</highlight><highlight class="stringliteral">&quot;anchor&quot;</highlight><highlight class="normal">),<sp/>SerializeField]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/>_anchor;</highlight></codeline>
<codeline lineno="73" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_anchor;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_anchor<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a8e014a55c2402653af66bff1ea6b2ba9" kindref="member">IsValidAnchor</ref>(value))<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_anchor<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a61aec444eb2b020981d37d7a15c1b280" kindref="member">OnDetachedFromAnchor</ref>.Invoke();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_anchor.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af1262853ca7469aec0058bc30d1b9f31" kindref="member">NotifyDetached</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isLockedToAnchor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isRotationLockedToAnchor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_anchor<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetPositionLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetRotationLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_anchor<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" kindref="member">isAttached</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" kindref="member">isAttached</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(</highlight><highlight class="stringliteral">&quot;The<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>value.name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>anchor<sp/>is<sp/>not<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>anchor<sp/>group.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.gameObject);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>anchor<sp/>group<sp/>for<sp/>this<sp/>AnchorableBehaviour.<sp/>If<sp/>set<sp/>to<sp/>null,<sp/>all<sp/>Anchors<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;will<sp/>be<sp/>valid<sp/>anchors<sp/>for<sp/>this<sp/>object.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>[OnEditorChange(</highlight><highlight class="stringliteral">&quot;anchorGroup&quot;</highlight><highlight class="normal">),<sp/>SerializeField]</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_group" kindref="compound">AnchorGroup</ref><sp/>_anchorGroup;</highlight></codeline>
<codeline lineno="109" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a493657fd562e747009c5536592f30e7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_group" kindref="compound">AnchorGroup</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a493657fd562e747009c5536592f30e7a" kindref="member">anchorGroup</ref><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_anchorGroup;<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_anchorGroup<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>_anchorGroup.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_group_1a76fd6cba4f8581ac74f37c8ce19bed52" kindref="member">NotifyAnchorableObjectRemoved</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_anchorGroup<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!_anchorGroup.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_group_1a8a1125abd6cbd8bb0083b9fe8ecf4fdc" kindref="member">Contains</ref>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>))<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.LogWarning(this.name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>anchor<sp/>is<sp/>not<sp/>within<sp/>its<sp/>anchorGroup<sp/>(setting<sp/>it<sp/>to<sp/>null).&quot;</highlight><highlight class="normal">,<sp/>this.gameObject);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_anchorGroup<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>_anchorGroup.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_group_1a1f681a3c9b69d0e472e6ca2369103f5d" kindref="member">NotifyAnchorableObjectAdded</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Attachment&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Anchors<sp/>beyond<sp/>this<sp/>range<sp/>are<sp/>ignored<sp/>as<sp/>possible<sp/>anchors<sp/>for<sp/>this<sp/>object.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="127" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref><sp/>=<sp/>0.3F;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Only<sp/>allowed<sp/>when<sp/>an<sp/>InteractionBehaviour<sp/>is<sp/>attached<sp/>to<sp/>this<sp/>object.<sp/>If<sp/>enabled,<sp/>this<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;object&apos;s<sp/>Attach()<sp/>method<sp/>or<sp/>its<sp/>variants<sp/>will<sp/>weigh<sp/>its<sp/>velocity<sp/>towards<sp/>an<sp/>anchor<sp/>along<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>its<sp/>proximity<sp/>when<sp/>seeking<sp/>an<sp/>anchor<sp/>to<sp/>attach<sp/>to.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_disable_if" kindref="compound">DisableIf</ref>(</highlight><highlight class="stringliteral">&quot;_interactionBehaviourIsNull&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="133" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab05fef36f601748387b8a283433909f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab05fef36f601748387b8a283433909f3" kindref="member">useTrajectory</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>fraction<sp/>of<sp/>the<sp/>maximum<sp/>anchor<sp/>range<sp/>to<sp/>use<sp/>as<sp/>the<sp/>effective<sp/>max<sp/>range<sp/>when<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;useTrajectory<sp/>is<sp/>enabled,<sp/>but<sp/>the<sp/>object<sp/>attempts<sp/>to<sp/>find<sp/>an<sp/>anchor<sp/>without<sp/>any<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;velocity.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0.01F,<sp/>1F)]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_motionlessRangeFraction<sp/>=<sp/>0.40F;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField,<sp/>Disable]</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_maxMotionlessRange;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>maximum<sp/>angle<sp/>this<sp/>object&apos;s<sp/>trajectory<sp/>can<sp/>be<sp/>away<sp/>from<sp/>an<sp/>anchor<sp/>to<sp/>consider<sp/>it<sp/>as<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;an<sp/>anchor<sp/>to<sp/>attach<sp/>to.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(20F,<sp/>90F)]</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_maxAttachmentAngle<sp/>=<sp/>60F;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_minAttachmentDotProduct;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Always<sp/>attach<sp/>an<sp/>anchor<sp/>if<sp/>there<sp/>is<sp/>one<sp/>within<sp/>this<sp/>distance,<sp/>regardless<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;of<sp/>trajectory.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_min_value" kindref="compound">MinValue</ref>(0f)]</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_alwaysAttachDistance<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Motion&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Should<sp/>the<sp/>object<sp/>move<sp/>instantly<sp/>to<sp/>the<sp/>anchor<sp/>position?&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="161" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a639dc5b718626a5ab76777eb8d2a24a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a639dc5b718626a5ab76777eb8d2a24a2" kindref="member">lockToAnchor</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Should<sp/>the<sp/>object<sp/>move<sp/>smoothly<sp/>towards<sp/>the<sp/>anchor<sp/>at<sp/>first,<sp/>but<sp/>lock<sp/>to<sp/>it<sp/>once<sp/>it<sp/>reaches<sp/>the<sp/>anchor?<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;Note:<sp/>Disabling<sp/>the<sp/>AnchorableBehaviour<sp/>will<sp/>stop<sp/>the<sp/>object<sp/>from<sp/>moving<sp/>towards<sp/>its<sp/>anchor,<sp/>and<sp/>will<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;release&apos;<sp/>it<sp/>from<sp/>the<sp/>anchor,<sp/>so<sp/>that<sp/>on<sp/>re-enable<sp/>the<sp/>object<sp/>will<sp/>smoothly<sp/>move<sp/>to<sp/>the<sp/>anchor<sp/>again.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_disable_if" kindref="compound">DisableIf</ref>(</highlight><highlight class="stringliteral">&quot;lockToAnchor&quot;</highlight><highlight class="normal">,<sp/>isEqualTo:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="167" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a06a27a8ca63c701cfea9f99ee512d293" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a06a27a8ca63c701cfea9f99ee512d293" kindref="member">lockWhenAttached</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;While<sp/>this<sp/>object<sp/>is<sp/>moving<sp/>smoothly<sp/>towards<sp/>its<sp/>anchor,<sp/>should<sp/>it<sp/>also<sp/>inherit<sp/>the<sp/>motion<sp/>of<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;anchor<sp/>itself<sp/>if<sp/>the<sp/>anchor<sp/>is<sp/>not<sp/>stationary?<sp/>Otherwise,<sp/>the<sp/>anchor<sp/>might<sp/>be<sp/>able<sp/>to<sp/>run<sp/>away<sp/>from<sp/>this<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;AnchorableBehaviour<sp/>and<sp/>prevent<sp/>it<sp/>from<sp/>actually<sp/>getting<sp/>to<sp/>the<sp/>anchor.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_disable_if" kindref="compound">DisableIf</ref>(</highlight><highlight class="stringliteral">&quot;lockToAnchor&quot;</highlight><highlight class="normal">,<sp/>isEqualTo:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="173" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae08e06de9abe0fe650acd8f1f1c31f74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae08e06de9abe0fe650acd8f1f1c31f74" kindref="member">matchAnchorMotionWhileAttaching</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;How<sp/>fast<sp/>should<sp/>the<sp/>object<sp/>move<sp/>towards<sp/>its<sp/>target<sp/>position?<sp/>Higher<sp/>values<sp/>are<sp/>faster.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_disable_if" kindref="compound">DisableIf</ref>(</highlight><highlight class="stringliteral">&quot;lockToAnchor&quot;</highlight><highlight class="normal">,<sp/>isEqualTo:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0,<sp/>100F)]</highlight></codeline>
<codeline lineno="178" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a4f5df5a27d79d1ffcbbcdfb80da57274" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a4f5df5a27d79d1ffcbbcdfb80da57274" kindref="member">anchorLerpCoeffPerSec</ref><sp/>=<sp/>20F;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Rotation&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Should<sp/>the<sp/>object<sp/>also<sp/>rotate<sp/>to<sp/>match<sp/>its<sp/>anchor&apos;s<sp/>rotation?<sp/>If<sp/>checked,<sp/>motion<sp/>settings<sp/>applied<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;to<sp/>how<sp/>the<sp/>anchor<sp/>translates<sp/>will<sp/>also<sp/>apply<sp/>to<sp/>how<sp/>it<sp/>rotates.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="184" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6e8db2d74a39b3647c7019c1c7ee92d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6e8db2d74a39b3647c7019c1c7ee92d5" kindref="member">anchorRotation</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Interaction&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Additional<sp/>features<sp/>are<sp/>enabled<sp/>when<sp/>this<sp/>GameObject<sp/>also<sp/>has<sp/>an<sp/>InteractionBehaviour<sp/>component.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>[Disable]</highlight></codeline>
<codeline lineno="190" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour" kindref="compound">InteractionBehaviour</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField,<sp/>HideInInspector]</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_interactionBehaviourIsNull<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;If<sp/>the<sp/>InteractionBehaviour<sp/>is<sp/>set,<sp/>objects<sp/>will<sp/>automatically<sp/>detach<sp/>from<sp/>their<sp/>anchor<sp/>when<sp/>grasped.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>[Disable]</highlight></codeline>
<codeline lineno="196" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a3cffb103b9353e00207cea037e2054a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a3cffb103b9353e00207cea037e2054a0" kindref="member">detachWhenGrasped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Should<sp/>the<sp/>AnchorableBehaviour<sp/>automatically<sp/>try<sp/>to<sp/>anchor<sp/>itself<sp/>when<sp/>a<sp/>grasp<sp/>ends?<sp/>If<sp/>useTrajectory<sp/>is<sp/>enabled,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>object<sp/>will<sp/>automatically<sp/>attempt<sp/>to<sp/>attach<sp/>to<sp/>the<sp/>nearest<sp/>valid<sp/>anchor<sp/>that<sp/>is<sp/>in<sp/>the<sp/>direction<sp/>of<sp/>its<sp/>trajectory,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;otherwise<sp/>it<sp/>will<sp/>simply<sp/>attempt<sp/>to<sp/>attach<sp/>to<sp/>its<sp/>nearest<sp/>valid<sp/>anchor.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>[OnEditorChange(</highlight><highlight class="stringliteral">&quot;tryAnchorNearestOnGraspEnd&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_tryAnchorNearestOnGraspEnd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaa63f2fc2253c8a559150fb0127730f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaa63f2fc2253c8a559150fb0127730f5" kindref="member">tryAnchorNearestOnGraspEnd</ref><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tryAnchorNearestOnGraspEnd;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>duplicate<sp/>subscription.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1aa28fa95514cad60b292efec67f235e35" kindref="member">OnGraspEnd</ref><sp/>-=<sp/>tryToAnchorOnGraspEnd;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_tryAnchorNearestOnGraspEnd<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>_tryAnchorNearestOnGraspEnd)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1aa28fa95514cad60b292efec67f235e35" kindref="member">OnGraspEnd</ref><sp/>+=<sp/>tryToAnchorOnGraspEnd;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Should<sp/>the<sp/>object<sp/>pull<sp/>away<sp/>from<sp/>its<sp/>anchor<sp/>and<sp/>reach<sp/>towards<sp/>the<sp/>user&apos;s<sp/>hand<sp/>when<sp/>the<sp/>user&apos;s<sp/>hand<sp/>is<sp/>nearby?&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="222" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a85262d2cae0fd2ab5291d18406868c48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a85262d2cae0fd2ab5291d18406868c48" kindref="member">isAttractedByHand</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;If<sp/>the<sp/>object<sp/>is<sp/>attracted<sp/>to<sp/>hands,<sp/>how<sp/>far<sp/>should<sp/>the<sp/>object<sp/>be<sp/>allowed<sp/>to<sp/>pull<sp/>away<sp/>from<sp/>its<sp/>anchor<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;towards<sp/>a<sp/>nearby<sp/>InteractionHand?<sp/>Value<sp/>is<sp/>in<sp/>Unity<sp/>distance<sp/>units,<sp/>WORLD<sp/>space.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="226" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a71b2fb0a2dba4935795a00a88f15bf1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a71b2fb0a2dba4935795a00a88f15bf1a" kindref="member">maxAttractionReach</ref><sp/>=<sp/>0.1F;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;This<sp/>curve<sp/>converts<sp/>the<sp/>distance<sp/>of<sp/>the<sp/>hand<sp/>(X<sp/>axis)<sp/>to<sp/>the<sp/>desired<sp/>attraction<sp/>reach<sp/>distance<sp/>for<sp/>the<sp/>object<sp/>(Y<sp/>axis).<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>evaluated<sp/>value<sp/>is<sp/>clamped<sp/>between<sp/>0<sp/>and<sp/>1,<sp/>and<sp/>then<sp/>scaled<sp/>by<sp/>maxAttractionReach.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="230" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a8ff2f11921e25a9a278de2cf09f8499f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AnimationCurve<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a8ff2f11921e25a9a278de2cf09f8499f" kindref="member">attractionReachByDistance</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/>_preferredAnchor<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab82e05ed50e6b2de8cad02a53efec6d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab82e05ed50e6b2de8cad02a53efec6d4" kindref="member">preferredAnchor</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_preferredAnchor;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6fbe787555ba1bcbae45f715777e0b7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6fbe787555ba1bcbae45f715777e0b7d" kindref="member">OnAttachedToAnchor</ref><sp/>=<sp/>()<sp/>=&gt;<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a03147adbeb35c85e8bded5c70a266f5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a03147adbeb35c85e8bded5c70a266f5d" kindref="member">OnLockedToAnchor</ref><sp/>=<sp/>()<sp/>=&gt;<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a61aec444eb2b020981d37d7a15c1b280" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a61aec444eb2b020981d37d7a15c1b280" kindref="member">OnDetachedFromAnchor</ref><sp/>=<sp/>()<sp/>=&gt;<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaf482a8b7ddc06ccae2435b20e211c32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaf482a8b7ddc06ccae2435b20e211c32" kindref="member">WhileAttachedToAnchor</ref><sp/>=<sp/>()<sp/>=&gt;<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae28b784351149af7a30d9079820c1a35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae28b784351149af7a30d9079820c1a35" kindref="member">WhileLockedToAnchor</ref><sp/>=<sp/>()<sp/>=&gt;<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a29a27e344ab1105d4fa8657de3fe5dab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a29a27e344ab1105d4fa8657de3fe5dab" kindref="member">OnPostTryAnchorOnGraspEnd</ref><sp/>=<sp/>()<sp/>=&gt;<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isLockedToAnchor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/>_offsetTowardsHand<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/>_targetPositionLastUpdate<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_hasTargetPositionLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isRotationLockedToAnchor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Quaternion<sp/>_targetRotationLastUpdate<sp/>=<sp/>Quaternion.identity;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_hasTargetRotationLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnValidate()<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refreshInteractionBehaviour();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refreshInspectorConveniences();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refreshInteractionBehaviour();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Awake()<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refreshInteractionBehaviour();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refreshInspectorConveniences();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a2d1393f9aa91a358e24fa6919eb09265" kindref="member">OnGraspBegin</ref><sp/>+=<sp/>detachAnchorOnGraspBegin;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_tryAnchorNearestOnGraspEnd)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1aa28fa95514cad60b292efec67f235e35" kindref="member">OnGraspEnd</ref><sp/>+=<sp/>tryToAnchorOnGraspEnd;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initUnityEvents();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start()<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>_isAttached)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a063da3d8209d998112e4268f024ececa" kindref="member">NotifyAttached</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6fbe787555ba1bcbae45f715777e0b7d" kindref="member">OnAttachedToAnchor</ref>();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_reactivateGravityOnDetach<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update()<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateAttractionToHand();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" kindref="member">isAttached</ref>)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c" kindref="member">rigidbody</ref>.useGravity)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>is<sp/>a<sp/>temporary<sp/>fix<sp/>for<sp/>gravity<sp/>to<sp/>be<sp/>fixed<sp/>in<sp/>a<sp/>future<sp/>IE<sp/>PR.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>proper<sp/>solution<sp/>involves<sp/>switching<sp/>the<sp/>behaviour<sp/>to<sp/>FixedUpdate<sp/>and<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intelligently<sp/>communicating<sp/>with<sp/>the<sp/>attached<sp/>InteractionBehaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c" kindref="member">rigidbody</ref>.useGravity<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_reactivateGravityOnDetach<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateAnchorAttachment();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6e8db2d74a39b3647c7019c1c7ee92d5" kindref="member">anchorRotation</ref>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateAnchorAttachmentRotation();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaf482a8b7ddc06ccae2435b20e211c32" kindref="member">WhileAttachedToAnchor</ref>.Invoke();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_isLockedToAnchor)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae28b784351149af7a30d9079820c1a35" kindref="member">WhileLockedToAnchor</ref>.Invoke();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updateAnchorPreference();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDisable()<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this.enabled)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1afdba1fc31f7d6a20af66bdac91bf5d72" kindref="member">Detach</ref>();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>leave<sp/>dangling<sp/>anchor-preference<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endAnchorPreference();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDestroy()<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a2d1393f9aa91a358e24fa6919eb09265" kindref="member">OnGraspBegin</ref><sp/>-=<sp/>detachAnchorOnGraspBegin;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1aa28fa95514cad60b292efec67f235e35" kindref="member">OnGraspEnd</ref><sp/>-=<sp/>tryToAnchorOnGraspEnd;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>leave<sp/>dangling<sp/>anchor-preference<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endAnchorPreference();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refreshInspectorConveniences()<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_minAttachmentDotProduct<sp/>=<sp/>Mathf.Cos(_maxAttachmentAngle<sp/>*<sp/>Mathf.Deg2Rad);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_maxMotionlessRange<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref><sp/>*<sp/>_motionlessRangeFraction;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refreshInteractionBehaviour()<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>=<sp/>GetComponent&lt;InteractionBehaviour&gt;();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_interactionBehaviourIsNull<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a3cffb103b9353e00207cea037e2054a0" kindref="member">detachWhenGrasped</ref><sp/>=<sp/>!_interactionBehaviourIsNull;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_interactionBehaviourIsNull)<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab05fef36f601748387b8a283433909f3" kindref="member">useTrajectory</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1afdba1fc31f7d6a20af66bdac91bf5d72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1afdba1fc31f7d6a20af66bdac91bf5d72" kindref="member">Detach</ref>()<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" kindref="member">isAttached</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a8e014a55c2402653af66bff1ea6b2ba9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a8e014a55c2402653af66bff1ea6b2ba9" kindref="member">IsValidAnchor</ref>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a493657fd562e747009c5536592f30e7a" kindref="member">anchorGroup</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a493657fd562e747009c5536592f30e7a" kindref="member">anchorGroup</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_group_1a8a1125abd6cbd8bb0083b9fe8ecf4fdc" kindref="member">Contains</ref>(anchor);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a93ce5813c3ce4805451e93d5c5050d4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a93ce5813c3ce4805451e93d5c5050d4e" kindref="member">IsWithinRange</ref>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this.transform.position<sp/>-<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform.position).sqrMagnitude<sp/>&lt;<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref><sp/>*<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a1ec7edef87a35f76a8ffc601ce1b615a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a1ec7edef87a35f76a8ffc601ce1b615a" kindref="member">FindPreferredAnchor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab05fef36f601748387b8a283433909f3" kindref="member">useTrajectory</ref>)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simply<sp/>try<sp/>to<sp/>attach<sp/>to<sp/>the<sp/>nearest<sp/>valid<sp/>anchor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a34daac6bf30d498a6df3c847124dd219" kindref="member">GetNearestValidAnchor</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pick<sp/>the<sp/>nearby<sp/>valid<sp/>anchor<sp/>with<sp/>the<sp/>highest<sp/>score,<sp/>based<sp/>on<sp/>proximity<sp/>and<sp/>trajectory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/>optimalAnchor<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>optimalScore<sp/>=<sp/>0F;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/>testAnchor<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>testScore<sp/>=<sp/>0F;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a5a5c9e551804405da221dd9bdc3b9e42" kindref="member">GetNearbyValidAnchors</ref>())<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testAnchor<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testScore<sp/>=<sp/>getAnchorScore(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scores<sp/>of<sp/>0<sp/>mark<sp/>ineligible<sp/>anchors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(testScore<sp/>==<sp/>0F)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(testScore<sp/>&gt;<sp/>optimalScore)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalAnchor<sp/>=<sp/>testAnchor;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimalScore<sp/>=<sp/>testScore;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>optimalAnchor;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Anchor&gt;<sp/>_nearbyAnchorsBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Anchor&gt;();</highlight></codeline>
<codeline lineno="458" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a5a5c9e551804405da221dd9bdc3b9e42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;Anchor&gt;<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a5a5c9e551804405da221dd9bdc3b9e42" kindref="member">GetNearbyValidAnchors</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>requireAnchorHasSpace<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>requireAnchorActiveAndEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HashSet&lt;Anchor&gt;<sp/>anchorsToCheck;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a493657fd562e747009c5536592f30e7a" kindref="member">anchorGroup</ref><sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorsToCheck<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac55ba01abd9142448ba2ec9dc1f66baa" kindref="member">allAnchors</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorsToCheck<sp/>=<sp/>this.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a493657fd562e747009c5536592f30e7a" kindref="member">anchorGroup</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_group_1a57bbc5ec4573e3c75a1716fa4650020c" kindref="member">anchors</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_nearbyAnchorsBuffer.<ref refid="class_leap_1_1_unity_1_1_serializable_hash_set_1a54a8a46ea0b8b525ef10ef18d7e2aba6" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>anchorsToCheck)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((requireAnchorHasSpace<sp/>&amp;&amp;<sp/>(!<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ad0581637844a848f9e8948a48abfc77d" kindref="member">allowMultipleObjects</ref><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a33e0bc00ec1ff195fac8f709abe72cbc" kindref="member">anchoredObjects</ref>.Count<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(requireAnchorActiveAndEnabled<sp/>&amp;&amp;<sp/>!<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.isActiveAndEnabled))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform.position<sp/>-<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.transform.position).sqrMagnitude<sp/>&lt;=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref><sp/>*<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref>)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nearbyAnchorsBuffer.Add(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_nearbyAnchorsBuffer;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a34daac6bf30d498a6df3c847124dd219" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a34daac6bf30d498a6df3c847124dd219" kindref="member">GetNearestValidAnchor</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>requireWithinRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>requireAnchorHasSpace<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>requireAnchorActiveAndEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HashSet&lt;Anchor&gt;<sp/>anchorsToCheck;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a493657fd562e747009c5536592f30e7a" kindref="member">anchorGroup</ref><sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorsToCheck<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac55ba01abd9142448ba2ec9dc1f66baa" kindref="member">allAnchors</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchorsToCheck<sp/>=<sp/>this.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a493657fd562e747009c5536592f30e7a" kindref="member">anchorGroup</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_group_1a57bbc5ec4573e3c75a1716fa4650020c" kindref="member">anchors</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/>closestAnchor<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>closestDistSqrd<sp/>=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.PositiveInfinity;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>testAnchor<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>anchorsToCheck)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requireAnchorHasSpace)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anchorHasSpace<sp/>=<sp/>testAnchor.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a33e0bc00ec1ff195fac8f709abe72cbc" kindref="member">anchoredObjects</ref>.Count<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>testAnchor.allowMultipleObjects;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!anchorHasSpace)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>the<sp/>anchor<sp/>for<sp/>consideration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requireAnchorActiveAndEnabled<sp/>&amp;&amp;<sp/>!testAnchor.isActiveAndEnabled)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>the<sp/>anchor<sp/>for<sp/>consideration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>testDistanceSqrd<sp/>=<sp/>(testAnchor.transform.position<sp/>-<sp/>this.transform.position).sqrMagnitude;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(testDistanceSqrd<sp/>&lt;<sp/>closestDistSqrd)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestAnchor<sp/>=<sp/>testAnchor;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestDistSqrd<sp/>=<sp/>testDistanceSqrd;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!requireWithinRange<sp/>||<sp/>closestDistSqrd<sp/>&lt;<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref><sp/>*<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref>)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>closestAnchor;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acf8928aca2c223daa30c8650564b9ab0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acf8928aca2c223daa30c8650564b9ab0" kindref="member">TryAttach</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignoreRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(ignoreRange<sp/>||<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a93ce5813c3ce4805451e93d5c5050d4e" kindref="member">IsWithinRange</ref>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" kindref="member">isAttached</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a526fd155d1bfdb640231bb0f5b26f159" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a526fd155d1bfdb640231bb0f5b26f159" kindref="member">TryAttachToNearestAnchor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab82e05ed50e6b2de8cad02a53efec6d4" kindref="member">preferredAnchor</ref><sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a1ec7edef87a35f76a8ffc601ce1b615a" kindref="member">FindPreferredAnchor</ref>();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab82e05ed50e6b2de8cad02a53efec6d4" kindref="member">preferredAnchor</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_preferredAnchor<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab82e05ed50e6b2de8cad02a53efec6d4" kindref="member">preferredAnchor</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref><sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ab82e05ed50e6b2de8cad02a53efec6d4" kindref="member">preferredAnchor</ref>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" kindref="member">isAttached</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getAnchorScore(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a72020fda147a7ba0a31c30e4b8d03b7f" kindref="member">GetAnchorScore</ref>(this.interactionBehaviour.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c" kindref="member">rigidbody</ref>.position,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.interactionBehaviour.rigidbody.velocity,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform.position,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a894d0a63d373fe4cebaf382daef1c940" kindref="member">maxAnchorRange</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_maxMotionlessRange,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_minAttachmentDotProduct,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_alwaysAttachDistance);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a72020fda147a7ba0a31c30e4b8d03b7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a72020fda147a7ba0a31c30e4b8d03b7f" kindref="member">GetAnchorScore</ref>(Vector3<sp/>anchObjPos,<sp/>Vector3<sp/>anchObjVel,<sp/>Vector3<sp/>anchorPos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxDistance,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nonDirectedMaxDistance,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minAngleProduct,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alwaysAttachDistance<sp/>=<sp/>0f)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculated<sp/>a<sp/>&quot;directedness&quot;<sp/>heuristic<sp/>for<sp/>determining<sp/>whether<sp/>the<sp/>user<sp/>is<sp/>throwing<sp/>or<sp/>releasing<sp/>without<sp/>directed<sp/>motion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>directedness<sp/>=<sp/>anchObjVel.magnitude.Map(0.20F,<sp/>1F,<sp/>0F,<sp/>1F);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>effMaxDistance<sp/>=<sp/>directedness.Map(0F,<sp/>1F,<sp/>nonDirectedMaxDistance,<sp/>maxDistance);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>effPos<sp/>=<sp/>Utils.Map(Mathf.Sqrt(Mathf.Sqrt(directedness)),<sp/>0f,<sp/>1f,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchObjPos,<sp/>(anchObjPos<sp/>-<sp/>anchObjVel.normalized<sp/>*<sp/>effMaxDistance<sp/>*<sp/>0.30f));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distanceSqrd<sp/>=<sp/>(anchorPos<sp/>-<sp/>effPos).sqrMagnitude;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distanceScore;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distanceSqrd<sp/>&gt;<sp/>effMaxDistance<sp/>*<sp/>effMaxDistance)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceScore<sp/>=<sp/>0F;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceScore<sp/>=<sp/>distanceSqrd.Map(0F,<sp/>effMaxDistance<sp/>*<sp/>effMaxDistance,<sp/>1F,<sp/>0F);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angleScore;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dotProduct<sp/>=<sp/>Vector3.Dot(anchObjVel.normalized,<sp/>(anchorPos<sp/>-<sp/>effPos).normalized);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Angular<sp/>score<sp/>only<sp/>factors<sp/>in<sp/>based<sp/>on<sp/>how<sp/>directed<sp/>the<sp/>motion<sp/>of<sp/>the<sp/>object<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dotProduct<sp/>=<sp/>Mathf.Lerp(1F,<sp/>dotProduct,<sp/>directedness);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>angleScore<sp/>=<sp/>dotProduct.Map(minAngleProduct,<sp/>1f,<sp/>0f,<sp/>1f);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>angleScore<sp/>*=<sp/>angleScore;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Support<sp/>an<sp/>&quot;always-attach<sp/>distance&quot;<sp/>within<sp/>which<sp/>only<sp/>distanceScore<sp/>matters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>semiDistanceSqrd<sp/>=<sp/>(anchorPos<sp/>-<sp/>Vector3.Lerp(anchObjPos,<sp/>effPos,<sp/>0.5f)).sqrMagnitude;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>useAlwaysAttachDistanceAmount<sp/>=<sp/>semiDistanceSqrd.Map(0f,<sp/>Mathf.Max(0.0001f,<sp/>(0.25f<sp/>*<sp/>alwaysAttachDistance<sp/>*<sp/>alwaysAttachDistance)),</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1f,<sp/>0f);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>angleScore<sp/>=<sp/>useAlwaysAttachDistanceAmount.Map(0f,<sp/>1f,<sp/>angleScore,<sp/>1f);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distanceScore<sp/>*<sp/>angleScore;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAttractionToHand()<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>||<sp/>!<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a85262d2cae0fd2ab5291d18406868c48" kindref="member">isAttractedByHand</ref>)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_offsetTowardsHand<sp/>!=<sp/>Vector3.zero)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_offsetTowardsHand<sp/>=<sp/>Vector3.Lerp(_offsetTowardsHand,<sp/>Vector3.zero,<sp/>5F<sp/>*<sp/>Time.deltaTime);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reachTargetAmount<sp/>=<sp/>0F;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>towardsHand<sp/>=<sp/>Vector3.zero;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1ae8875ff423f6183c256101320ff28fa7" kindref="member">isHovered</ref>)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref><sp/>hoveringHand<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1aeee4285667a660b5d1f8c49268eee4a5" kindref="member">closestHoveringHand</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reachTargetAmount<sp/>=<sp/>Mathf.Clamp01(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a8ff2f11921e25a9a278de2cf09f8499f" kindref="member">attractionReachByDistance</ref>.Evaluate(</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3.Distance(hoveringHand.<ref refid="class_leap_1_1_hand_1aaf0940b9108e92c22e33b9c6cd32921a" kindref="member">PalmPosition</ref>.ToVector3(),<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform.position)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>towardsHand<sp/>=<sp/>hoveringHand.<ref refid="class_leap_1_1_hand_1aaf0940b9108e92c22e33b9c6cd32921a" kindref="member">PalmPosition</ref>.ToVector3()<sp/>-<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform.position;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>targetOffsetTowardsHand<sp/>=<sp/>towardsHand<sp/>*<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a71b2fb0a2dba4935795a00a88f15bf1a" kindref="member">maxAttractionReach</ref><sp/>*<sp/>reachTargetAmount;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_offsetTowardsHand<sp/>=<sp/>Vector3.Lerp(_offsetTowardsHand,<sp/>targetOffsetTowardsHand,<sp/>5<sp/>*<sp/>Time.deltaTime);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAnchorAttachment()<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>finalPosition;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c" kindref="member">rigidbody</ref>.position;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition<sp/>=<sp/>this.transform.position;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>position<sp/>based<sp/>on<sp/>anchor<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>targetPosition<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform.position;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a639dc5b718626a5ab76777eb8d2a24a2" kindref="member">lockToAnchor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>state,<sp/>we<sp/>are<sp/>simply<sp/>locked<sp/>directly<sp/>to<sp/>the<sp/>anchor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition<sp/>=<sp/>targetPosition<sp/>+<sp/>_offsetTowardsHand;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>anchor<sp/>position<sp/>storage;<sp/>it<sp/>can&apos;t<sp/>be<sp/>updated<sp/>from<sp/>this<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetPositionLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a06a27a8ca63c701cfea9f99ee512d293" kindref="member">lockWhenAttached</ref>)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_isLockedToAnchor)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>state,<sp/>we<sp/>are<sp/>already<sp/>attached<sp/>to<sp/>the<sp/>anchor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition<sp/>=<sp/>targetPosition<sp/>+<sp/>_offsetTowardsHand;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>anchor<sp/>position<sp/>storage;<sp/>it<sp/>can&apos;t<sp/>be<sp/>updated<sp/>from<sp/>this<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetPositionLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Undo<sp/>any<sp/>&quot;reach<sp/>towards<sp/>hand&quot;<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition<sp/>-=<sp/>_offsetTowardsHand;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>desired,<sp/>automatically<sp/>correct<sp/>for<sp/>the<sp/>anchor<sp/>itself<sp/>moving<sp/>while<sp/>attempting<sp/>to<sp/>return<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae08e06de9abe0fe650acd8f1f1c31f74" kindref="member">matchAnchorMotionWhileAttaching</ref><sp/>&amp;&amp;<sp/>this.transform.parent<sp/>!=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_hasTargetPositionLastUpdate)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition<sp/>+=<sp/>(targetPosition<sp/>-<sp/>_targetPositionLastUpdate);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_targetPositionLastUpdate<sp/>=<sp/>targetPosition;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetPositionLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lerp<sp/>towards<sp/>the<sp/>anchor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition<sp/>=<sp/>Vector3.Lerp(finalPosition,<sp/>targetPosition,<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a4f5df5a27d79d1ffcbbcdfb80da57274" kindref="member">anchorLerpCoeffPerSec</ref><sp/>*<sp/>Time.deltaTime);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Vector3.Distance(finalPosition,<sp/>targetPosition)<sp/>&lt;<sp/>0.001F)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isLockedToAnchor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Redo<sp/>any<sp/>&quot;reach<sp/>toward<sp/>hand&quot;<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalPosition<sp/>+=<sp/>_offsetTowardsHand;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>final<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c" kindref="member">rigidbody</ref>.position<sp/>=<sp/>finalPosition;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.transform.position<sp/>=<sp/>finalPosition;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.transform.position<sp/>=<sp/>finalPosition;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAnchorAttachmentRotation()<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>finalRotation;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalRotation<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c" kindref="member">rigidbody</ref>.rotation;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalRotation<sp/>=<sp/>this.transform.rotation;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>rotation<sp/>based<sp/>on<sp/>anchor<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>targetRotation<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform.rotation;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a639dc5b718626a5ab76777eb8d2a24a2" kindref="member">lockToAnchor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>state,<sp/>we<sp/>are<sp/>simply<sp/>locked<sp/>directly<sp/>to<sp/>the<sp/>anchor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalRotation<sp/>=<sp/>targetRotation;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>anchor<sp/>rotation<sp/>storage;<sp/>it<sp/>can&apos;t<sp/>be<sp/>updated<sp/>from<sp/>this<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetPositionLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a06a27a8ca63c701cfea9f99ee512d293" kindref="member">lockWhenAttached</ref>)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_isRotationLockedToAnchor)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>state,<sp/>we<sp/>are<sp/>already<sp/>attached<sp/>to<sp/>the<sp/>anchor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalRotation<sp/>=<sp/>targetRotation;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>anchor<sp/>rotation<sp/>storage;<sp/>it<sp/>can&apos;t<sp/>be<sp/>updated<sp/>from<sp/>this<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetRotationLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>desired,<sp/>automatically<sp/>correct<sp/>for<sp/>the<sp/>anchor<sp/>itself<sp/>moving<sp/>while<sp/>attempting<sp/>to<sp/>return<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae08e06de9abe0fe650acd8f1f1c31f74" kindref="member">matchAnchorMotionWhileAttaching</ref><sp/>&amp;&amp;<sp/>this.transform.parent<sp/>!=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1acc535c0d9a79d1ddcaab2dd0587ba9bb" kindref="member">anchor</ref>.transform)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_hasTargetRotationLastUpdate)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalRotation<sp/>=<sp/>(Quaternion.Inverse(_targetRotationLastUpdate)<sp/>*<sp/>targetRotation)<sp/>*<sp/>finalRotation;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_targetRotationLastUpdate<sp/>=<sp/>targetRotation;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasTargetRotationLastUpdate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slerp<sp/>towards<sp/>the<sp/>anchor<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalRotation<sp/>=<sp/>Quaternion.Slerp(finalRotation,<sp/>targetRotation,<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a4f5df5a27d79d1ffcbbcdfb80da57274" kindref="member">anchorLerpCoeffPerSec</ref><sp/>*<sp/>0.8F<sp/>*<sp/>Time.deltaTime);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Quaternion.Angle(targetRotation,<sp/>finalRotation)<sp/>&lt;<sp/>2F)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isRotationLockedToAnchor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>final<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aa067c979e2602b16f03103c18de20a92" kindref="member">interactionBehaviour</ref>.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c" kindref="member">rigidbody</ref>.rotation<sp/>=<sp/>finalRotation;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.transform.rotation<sp/>=<sp/>finalRotation;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.transform.rotation<sp/>=<sp/>finalRotation;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateAnchorPreference()<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor" kindref="compound">Anchor</ref><sp/>newPreferredAnchor;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ad44eb15001e88b33e46f06e1b2501e59" kindref="member">isAttached</ref>)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newPreferredAnchor<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a1ec7edef87a35f76a8ffc601ce1b615a" kindref="member">FindPreferredAnchor</ref>();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newPreferredAnchor<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_preferredAnchor<sp/>!=<sp/>newPreferredAnchor)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_preferredAnchor<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_preferredAnchor.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af120f6521d455d9aa99f6e4bef45b692" kindref="member">NotifyEndAnchorPreference</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_preferredAnchor<sp/>=<sp/>newPreferredAnchor;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_preferredAnchor<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_preferredAnchor.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac796b1e8a66df11300cf9766543fbe31" kindref="member">NotifyAnchorPreference</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>endAnchorPreference()<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_preferredAnchor<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_preferredAnchor.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af120f6521d455d9aa99f6e4bef45b692" kindref="member">NotifyEndAnchorPreference</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_preferredAnchor<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>detachAnchorOnGraspBegin()<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1afdba1fc31f7d6a20af66bdac91bf5d72" kindref="member">Detach</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tryToAnchorOnGraspEnd()<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a526fd155d1bfdb640231bb0f5b26f159" kindref="member">TryAttachToNearestAnchor</ref>();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a29a27e344ab1105d4fa8657de3fe5dab" kindref="member">OnPostTryAnchorOnGraspEnd</ref>();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>Unity<sp/>Events<sp/>(Internal)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>EnumEventTable<sp/>_eventTable;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" kindref="member">EventType</ref><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6fbe787555ba1bcbae45f715777e0b7d" kindref="member">OnAttachedToAnchor</ref><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a03147adbeb35c85e8bded5c70a266f5d" kindref="member">OnLockedToAnchor</ref><sp/>=<sp/>105,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a61aec444eb2b020981d37d7a15c1b280" kindref="member">OnDetachedFromAnchor</ref><sp/>=<sp/>110,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaf482a8b7ddc06ccae2435b20e211c32" kindref="member">WhileAttachedToAnchor</ref><sp/>=<sp/>120,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae28b784351149af7a30d9079820c1a35" kindref="member">WhileLockedToAnchor</ref><sp/>=<sp/>125,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a29a27e344ab1105d4fa8657de3fe5dab" kindref="member">OnPostTryAnchorOnGraspEnd</ref><sp/>=<sp/>130</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initUnityEvents()<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setupCallback(ref<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a6fbe787555ba1bcbae45f715777e0b7d" kindref="member">OnAttachedToAnchor</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" kindref="member">EventType</ref>.OnAttachedToAnchor);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setupCallback(ref<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a03147adbeb35c85e8bded5c70a266f5d" kindref="member">OnLockedToAnchor</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" kindref="member">EventType</ref>.OnLockedToAnchor);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setupCallback(ref<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a61aec444eb2b020981d37d7a15c1b280" kindref="member">OnDetachedFromAnchor</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" kindref="member">EventType</ref>.OnDetachedFromAnchor);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setupCallback(ref<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaf482a8b7ddc06ccae2435b20e211c32" kindref="member">WhileAttachedToAnchor</ref>,<sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" kindref="member">EventType</ref>.WhileAttachedToAnchor);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setupCallback(ref<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1ae28b784351149af7a30d9079820c1a35" kindref="member">WhileLockedToAnchor</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" kindref="member">EventType</ref>.WhileLockedToAnchor);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setupCallback(ref<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1a29a27e344ab1105d4fa8657de3fe5dab" kindref="member">OnPostTryAnchorOnGraspEnd</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" kindref="member">EventType</ref>.OnPostTryAnchorOnGraspEnd);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setupCallback(ref<sp/>Action<sp/>action,<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47" kindref="member">EventType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_eventTable.HasUnityEvent((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)type))<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>+=<sp/>()<sp/>=&gt;<sp/>_eventTable.Invoke((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)type);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Scripts/UI/Anchors/AnchorableBehaviour.cs"/>
  </compounddef>
</doxygen>
