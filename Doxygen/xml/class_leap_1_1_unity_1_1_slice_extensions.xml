<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_slice_extensions" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::SliceExtensions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_slice_extensions_1a3530c09430fcb3f8aae0901c5c884ac7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_slice" kindref="compound">Slice</ref>&lt; T &gt;</type>
        <definition>static Slice&lt;T&gt; Leap.Unity.SliceExtensions.Slice&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int beginIdx=-1, int endIdx=-1)</argsstring>
        <name>Slice&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>beginIdx</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>endIdx</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Creates a slice into the List with an inclusive beginIdx and an <emphasis>exclusive</emphasis> endIdx. A slice with identical begin and end indices would be an empty slice. </para>
        </briefdescription>
        <detaileddescription>
<para>A slice whose endIdx is smaller than its beginIdx will index backwards along the underlying List.</para>
<para>Not providing either index argument will simply refer to the beginning of the list (for beginIdx) or to the end of the list (for endIdx).</para>
<para>Slices do not allocate, and they provide an enumerator definition so they can be used in a <computeroutput>foreach</computeroutput> statement. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Slice.cs" line="31" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Slice.cs" bodystart="31" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_slice_extensions_1a56ada72c9edea327cb8f952311878c70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_slice" kindref="compound">Slice</ref>&lt; T &gt;</type>
        <definition>static Slice&lt;T&gt; Leap.Unity.SliceExtensions.FromIndex&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int fromIdx)</argsstring>
        <name>FromIndex&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fromIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Slice.cs" line="46" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Slice.cs" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Slice.cs" line="16" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Slice.cs" bodystart="16" bodyend="50"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_slice_extensions_1a56ada72c9edea327cb8f952311878c70" prot="public" virt="non-virtual"><scope>Leap::Unity::SliceExtensions</scope><name>FromIndex&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_slice_extensions_1a3530c09430fcb3f8aae0901c5c884ac7" prot="public" virt="non-virtual"><scope>Leap::Unity::SliceExtensions</scope><name>Slice&lt; T &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
