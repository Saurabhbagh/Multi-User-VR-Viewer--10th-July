<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator" kind="class" language="C#" prot="public" abstract="yes">
    <compoundname>Leap::Unity::Tests::FrameValidator</compoundname>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left" prot="public" virt="non-virtual">Leap.Unity.Tests.HandFactoryLeft</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right" prot="public" virt="non-virtual">Leap.Unity.Tests.HandFactoryRight</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands" prot="public" virt="non-virtual">Leap.Unity.Tests.HandFactoryTwoHands</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_tests_1_1_transform_copy_identity" prot="public" virt="non-virtual">Leap.Unity.Tests.TransformCopyIdentity</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_tests_1_1_transform_copy_translation" prot="public" virt="non-virtual">Leap.Unity.Tests.TransformCopyTranslation</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1aa8c9adab76646f9e1d8fefa1d909102d" prot="protected" static="no" mutable="no">
        <type>const float</type>
        <definition>const float Leap.Unity.Tests.FrameValidator.TOLERANCE</definition>
        <argsstring></argsstring>
        <name>TOLERANCE</name>
        <initializer>= 0.0001f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="16" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab0fd118aae62aad4db938a4e919f237b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>Frame Leap.Unity.Tests.FrameValidator._frame</definition>
        <argsstring></argsstring>
        <name>_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="32" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1aa3a5c6d3225a94d925a57a2c4f332107" prot="protected" static="yes" mutable="no">
        <type><ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">Finger.FingerType</ref> []</type>
        <definition>Finger.FingerType [] Leap.Unity.Tests.FrameValidator._fingers</definition>
        <argsstring></argsstring>
        <name>_fingers</name>
        <initializer>= {
      <ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baae935a2bcf041187b5d3530f6084c5914" kindref="member">Finger.FingerType.TYPE_INDEX</ref>,
      <ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baa965f716c4f07774bf9ac423d8806e43f" kindref="member">Finger.FingerType.TYPE_MIDDLE</ref>,
      <ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baab9f37692a6cb1524fc97cedc5bac23a5" kindref="member">Finger.FingerType.TYPE_PINKY</ref>,
      <ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baa713f93a2e06469cbe78206cf744b9966" kindref="member">Finger.FingerType.TYPE_RING</ref>,
      <ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baa80b1befb870616449c53c8e69bc07216" kindref="member">Finger.FingerType.TYPE_THUMB</ref>
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a841c73eaa5d5f6c83bfafb4ee87351b8" prot="protected" static="yes" mutable="no">
        <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">Bone.BoneType</ref> []</type>
        <definition>Bone.BoneType [] Leap.Unity.Tests.FrameValidator._bones</definition>
        <argsstring></argsstring>
        <name>_bones</name>
        <initializer>= {
      <ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1bac2d342e17f0c97e224c258a3ba1f7e0c" kindref="member">Bone.BoneType.TYPE_DISTAL</ref>,
      <ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1ba8d41e97ce589f9fae8052d4c604bf6a7" kindref="member">Bone.BoneType.TYPE_INTERMEDIATE</ref>,
      <ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1ba711438f98489249610b9a4af0fd4c684" kindref="member">Bone.BoneType.TYPE_METACARPAL</ref>,
      <ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1ba703123d4643846a00cc1fa9918555ea3" kindref="member">Bone.BoneType.TYPE_PROXIMAL</ref>
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="25" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1acd752e5e046ca556db0336d60df08941" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Leap.Unity.Tests.FrameValidator.Setup</definition>
        <argsstring>()</argsstring>
        <name>Setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="35" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1af7d4444c63569def2bd38930563238ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Leap.Unity.Tests.FrameValidator.Teardown</definition>
        <argsstring>()</argsstring>
        <name>Teardown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="40" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ac68295024dab243f9b07c3dde5b6ef83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.HandsAreUnique</definition>
        <argsstring>()</argsstring>
        <name>HandsAreUnique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="47" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab5dccd3893a86f0942bbabfb598c8617" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.HandsHaveFiveFingers</definition>
        <argsstring>()</argsstring>
        <name>HandsHaveFiveFingers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="53" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a918c59aec010758d457bc76c841bb2ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.FingersHaveFourBones</definition>
        <argsstring>([ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)] Finger.FingerType fingerType, [ValueSource(typeof(FrameValidator), &quot;_bones&quot;)] Bone.BoneType boneType)</argsstring>
        <name>FingersHaveFourBones</name>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">Finger.FingerType</ref></type>
          <declname>fingerType</declname>
        </param>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_bones&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">Bone.BoneType</ref></type>
          <declname>boneType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="60" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a7938771f1e92c2be05903222ad872182" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.BoneLength</definition>
        <argsstring>([ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)] Finger.FingerType fingerType, [ValueSource(typeof(FrameValidator), &quot;_bones&quot;)] Bone.BoneType boneType)</argsstring>
        <name>BoneLength</name>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">Finger.FingerType</ref></type>
          <declname>fingerType</declname>
        </param>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_bones&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">Bone.BoneType</ref></type>
          <declname>boneType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="69" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="69" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1afa4f4cab5e0011f2b69b2d7f4f361fb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.JointsMatch</definition>
        <argsstring>([ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)] Finger.FingerType fingerType, [ValueSource(typeof(FrameValidator), &quot;_bones&quot;)] Bone.BoneType boneType)</argsstring>
        <name>JointsMatch</name>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">Finger.FingerType</ref></type>
          <declname>fingerType</declname>
        </param>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_bones&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">Bone.BoneType</ref></type>
          <declname>boneType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="80" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="80" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a3c1a4a5978be1544fc8b0570f4b31218" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.CenterIsBetweenJoints</definition>
        <argsstring>([ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)] Finger.FingerType fingerType, [ValueSource(typeof(FrameValidator), &quot;_bones&quot;)] Bone.BoneType boneType)</argsstring>
        <name>CenterIsBetweenJoints</name>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">Finger.FingerType</ref></type>
          <declname>fingerType</declname>
        </param>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_bones&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">Bone.BoneType</ref></type>
          <declname>boneType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="98" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="98" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ad4790f2f0631567aaced9032c3bd5f4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.DirectionMatchesJoints</definition>
        <argsstring>([ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)] Finger.FingerType fingerType, [ValueSource(typeof(FrameValidator), &quot;_bones&quot;)] Bone.BoneType boneType)</argsstring>
        <name>DirectionMatchesJoints</name>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_fingers&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">Finger.FingerType</ref></type>
          <declname>fingerType</declname>
        </param>
        <param>
          <attributes>[ValueSource(typeof(FrameValidator), &quot;_bones&quot;)]</attributes>
          <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">Bone.BoneType</ref></type>
          <declname>boneType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="109" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="109" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a5c9a107fa1376dbb6eeb458330e35fcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.RotationIsValid</definition>
        <argsstring>()</argsstring>
        <name>RotationIsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="125" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="125" bodyend="129"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ae397067480c6fd2183160f048094e466" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract <ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref></type>
        <definition>abstract Frame Leap.Unity.Tests.FrameValidator.createFrame</definition>
        <argsstring>()</argsstring>
        <name>createFrame</name>
        <reimplementedby refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1ab929744527e15f0ad07ff17d0e867355">createFrame</reimplementedby>
        <reimplementedby refid="class_leap_1_1_unity_1_1_tests_1_1_transform_copy_identity_1aaad557351863e9bcb612237c4a47821f">createFrame</reimplementedby>
        <reimplementedby refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1aee2926151ba99102d58cbefb2a029b06">createFrame</reimplementedby>
        <reimplementedby refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a78c8a9a73c6c7e18c0eb8890e39d64b5">createFrame</reimplementedby>
        <reimplementedby refid="class_leap_1_1_unity_1_1_tests_1_1_transform_copy_translation_1abaa9e440cd40e50c4d4e46ab6eb3fbc4">createFrame</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a829eb479c186cf2791b4983128f460b7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref></type>
        <definition>Bone Leap.Unity.Tests.FrameValidator.getBone</definition>
        <argsstring>(Hand hand, Finger.FingerType fingerType, Bone.BoneType boneType)</argsstring>
        <name>getBone</name>
        <param>
          <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <param>
          <type><ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">Finger.FingerType</ref></type>
          <declname>fingerType</declname>
        </param>
        <param>
          <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">Bone.BoneType</ref></type>
          <declname>boneType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="131" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="131" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ad7ea32888c180b40f2c0a01bbbb97a82" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Tests.FrameValidator.assertVectorsEqual</definition>
        <argsstring>(Vector a, Vector b, string vectorName=&quot;Vector&quot;)</argsstring>
        <name>assertVectorsEqual</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>string</type>
          <declname>vectorName</declname>
          <defval>&quot;Vector&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="146" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="146" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1365">
        <label>Leap.Unity.Tests.TransformCopyIdentity</label>
        <link refid="class_leap_1_1_unity_1_1_tests_1_1_transform_copy_identity"/>
        <childnode refid="1361" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1362">
        <label>Leap.Unity.Tests.HandFactoryLeft</label>
        <link refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left"/>
        <childnode refid="1361" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1363">
        <label>Leap.Unity.Tests.HandFactoryRight</label>
        <link refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right"/>
        <childnode refid="1361" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1366">
        <label>Leap.Unity.Tests.TransformCopyTranslation</label>
        <link refid="class_leap_1_1_unity_1_1_tests_1_1_transform_copy_translation"/>
        <childnode refid="1361" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1361">
        <label>Leap.Unity.Tests.FrameValidator</label>
        <link refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator"/>
      </node>
      <node id="1364">
        <label>Leap.Unity.Tests.HandFactoryTwoHands</label>
        <link refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands"/>
        <childnode refid="1361" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1371">
        <label>Leap.Vector</label>
        <link refid="struct_leap_1_1_vector"/>
        <childnode refid="1372" relation="public-inheritance">
        </childnode>
        <childnode refid="1371" relation="usage">
          <edgelabel>Down</edgelabel>
          <edgelabel>XAxis</edgelabel>
          <edgelabel>YAxis</edgelabel>
          <edgelabel>Backward</edgelabel>
          <edgelabel>ZAxis</edgelabel>
          <edgelabel>Forward</edgelabel>
          <edgelabel>Left</edgelabel>
          <edgelabel>Right</edgelabel>
          <edgelabel>Zero</edgelabel>
          <edgelabel>Up</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="1373">
        <label>Leap.Bone</label>
        <link refid="class_leap_1_1_bone"/>
        <childnode refid="1374" relation="public-inheritance">
        </childnode>
        <childnode refid="1375" relation="usage">
          <edgelabel>Rotation</edgelabel>
        </childnode>
        <childnode refid="1371" relation="usage">
          <edgelabel>Center</edgelabel>
          <edgelabel>PrevJoint</edgelabel>
          <edgelabel>Direction</edgelabel>
          <edgelabel>NextJoint</edgelabel>
        </childnode>
      </node>
      <node id="1374">
        <label>IEquatable&lt; Bone &gt;</label>
      </node>
      <node id="1372">
        <label>IEquatable&lt; Vector &gt;</label>
      </node>
      <node id="1376">
        <label>IEquatable&lt; LeapQuaternion &gt;</label>
      </node>
      <node id="1369">
        <label>IEquatable&lt; Frame &gt;</label>
      </node>
      <node id="1367">
        <label>Leap.Unity.Tests.FrameValidator</label>
        <link refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator"/>
        <childnode refid="1368" relation="usage">
          <edgelabel>_frame</edgelabel>
        </childnode>
        <childnode refid="1370" relation="usage">
          <edgelabel>_fingers</edgelabel>
        </childnode>
        <childnode refid="1373" relation="usage">
          <edgelabel>_bones</edgelabel>
        </childnode>
      </node>
      <node id="1368">
        <label>Leap.Frame</label>
        <link refid="class_leap_1_1_frame"/>
        <childnode refid="1369" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1375">
        <label>Leap.LeapQuaternion</label>
        <link refid="struct_leap_1_1_leap_quaternion"/>
        <childnode refid="1376" relation="public-inheritance">
        </childnode>
        <childnode refid="1375" relation="usage">
          <edgelabel>Identity</edgelabel>
        </childnode>
      </node>
      <node id="1370">
        <label>Leap.Finger</label>
        <link refid="class_leap_1_1_finger"/>
        <childnode refid="1370" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="1371" relation="usage">
          <edgelabel>TipPosition</edgelabel>
          <edgelabel>Direction</edgelabel>
        </childnode>
        <childnode refid="1373" relation="usage">
          <edgelabel>bones</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" line="15" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/FrameValidator.cs" bodystart="15" bodyend="151"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a841c73eaa5d5f6c83bfafb4ee87351b8" prot="protected" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>_bones</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1aa3a5c6d3225a94d925a57a2c4f332107" prot="protected" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>_fingers</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab0fd118aae62aad4db938a4e919f237b" prot="protected" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>_frame</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ad7ea32888c180b40f2c0a01bbbb97a82" prot="protected" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>assertVectorsEqual</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a7938771f1e92c2be05903222ad872182" prot="public" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>BoneLength</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a3c1a4a5978be1544fc8b0570f4b31218" prot="public" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>CenterIsBetweenJoints</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ae397067480c6fd2183160f048094e466" prot="protected" virt="pure-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>createFrame</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ad4790f2f0631567aaced9032c3bd5f4f" prot="public" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>DirectionMatchesJoints</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a918c59aec010758d457bc76c841bb2ea" prot="public" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>FingersHaveFourBones</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a829eb479c186cf2791b4983128f460b7" prot="protected" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>getBone</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ac68295024dab243f9b07c3dde5b6ef83" prot="public" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>HandsAreUnique</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab5dccd3893a86f0942bbabfb598c8617" prot="public" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>HandsHaveFiveFingers</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1afa4f4cab5e0011f2b69b2d7f4f361fb0" prot="public" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>JointsMatch</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1a5c9a107fa1376dbb6eeb458330e35fcf" prot="public" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>RotationIsValid</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1acd752e5e046ca556db0336d60df08941" prot="public" virt="virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>Setup</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1af7d4444c63569def2bd38930563238ee" prot="public" virt="virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>Teardown</name></member>
      <member refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1aa8c9adab76646f9e1d8fefa1d909102d" prot="protected" virt="non-virtual"><scope>Leap::Unity::Tests::FrameValidator</scope><name>TOLERANCE</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
