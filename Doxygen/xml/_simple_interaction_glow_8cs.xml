<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_simple_interaction_glow_8cs" kind="file" language="C#">
    <compoundname>SimpleInteractionGlow.cs</compoundname>
    <innerclass refid="class_simple_interaction_glow" prot="public">SimpleInteractionGlow</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>.<ref refid="namespace_leap_1_1_unity_1_1_interaction" kindref="compound">Interaction</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">[AddComponentMenu(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="22"><highlight class="normal">[RequireComponent(typeof(<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour" kindref="compound">InteractionBehaviour</ref>))]</highlight></codeline>
<codeline lineno="23" refid="class_simple_interaction_glow" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_simple_interaction_glow" kindref="compound">SimpleInteractionGlow</ref><sp/>:<sp/>MonoBehaviour<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;If<sp/>enabled,<sp/>the<sp/>object<sp/>will<sp/>lerp<sp/>to<sp/>its<sp/>hoverColor<sp/>when<sp/>a<sp/>hand<sp/>is<sp/>nearby.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="26" refid="class_simple_interaction_glow_1a346b18ca3d0426fbfc5079e02c515e71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_simple_interaction_glow_1a346b18ca3d0426fbfc5079e02c515e71" kindref="member">useHover</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;If<sp/>enabled,<sp/>the<sp/>object<sp/>will<sp/>use<sp/>its<sp/>primaryHoverColor<sp/>when<sp/>the<sp/>primary<sp/>hover<sp/>of<sp/>an<sp/>InteractionHand.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="29" refid="class_simple_interaction_glow_1a5c714fc869447c5e0d485b0122188055" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_simple_interaction_glow_1a5c714fc869447c5e0d485b0122188055" kindref="member">usePrimaryHover</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;InteractionBehaviour<sp/>Colors&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="32" refid="class_simple_interaction_glow_1a00cd6d0367cc6ad0f3fc84d5de82bdc0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Color<sp/><ref refid="class_simple_interaction_glow_1a00cd6d0367cc6ad0f3fc84d5de82bdc0" kindref="member">defaultColor</ref><sp/>=<sp/>Color.Lerp(Color.black,<sp/>Color.white,<sp/>0.1F);</highlight></codeline>
<codeline lineno="33" refid="class_simple_interaction_glow_1a2c27dd04abd3d432865df53f2abe562c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Color<sp/><ref refid="class_simple_interaction_glow_1a2c27dd04abd3d432865df53f2abe562c" kindref="member">suspendedColor</ref><sp/>=<sp/>Color.red;</highlight></codeline>
<codeline lineno="34" refid="class_simple_interaction_glow_1aa12a1f2aa05a0b0a0c421b2c93c17674" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Color<sp/><ref refid="class_simple_interaction_glow_1aa12a1f2aa05a0b0a0c421b2c93c17674" kindref="member">hoverColor</ref><sp/>=<sp/>Color.Lerp(Color.black,<sp/>Color.white,<sp/>0.7F);</highlight></codeline>
<codeline lineno="35" refid="class_simple_interaction_glow_1a758d68c986bc34965a5a6aebf8f6e1f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Color<sp/><ref refid="class_simple_interaction_glow_1a758d68c986bc34965a5a6aebf8f6e1f2" kindref="member">primaryHoverColor</ref><sp/>=<sp/>Color.Lerp(Color.black,<sp/>Color.white,<sp/>0.8F);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;InteractionButton<sp/>Colors&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;This<sp/>color<sp/>only<sp/>applies<sp/>if<sp/>the<sp/>object<sp/>is<sp/>an<sp/>InteractionButton<sp/>or<sp/>InteractionSlider.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="39" refid="class_simple_interaction_glow_1a09bef1794224eada8c49258bb4ab0b04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Color<sp/><ref refid="class_simple_interaction_glow_1a09bef1794224eada8c49258bb4ab0b04" kindref="member">pressedColor</ref><sp/>=<sp/>Color.white;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Material<sp/>_material;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour" kindref="compound">InteractionBehaviour</ref><sp/>_intObj;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start()<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>_intObj<sp/>=<sp/>GetComponent&lt;InteractionBehaviour&gt;();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>Renderer<sp/>renderer<sp/>=<sp/>GetComponent&lt;Renderer&gt;();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(renderer<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>renderer<sp/>=<sp/>GetComponentInChildren&lt;Renderer&gt;();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(renderer<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_material<sp/>=<sp/>renderer.material;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_material<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>target<sp/>color<sp/>for<sp/>the<sp/>Interaction<sp/>object<sp/>will<sp/>be<sp/>determined<sp/>by<sp/>various<sp/>simple<sp/>state<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>targetColor<sp/>=<sp/><ref refid="class_simple_interaction_glow_1a00cd6d0367cc6ad0f3fc84d5de82bdc0" kindref="member">defaultColor</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;Primary<sp/>hover&quot;<sp/>is<sp/>a<sp/>special<sp/>kind<sp/>of<sp/>hover<sp/>state<sp/>that<sp/>an<sp/>InteractionBehaviour<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>have<sp/>if<sp/>an<sp/>InteractionHand&apos;s<sp/>thumb,<sp/>index,<sp/>or<sp/>middle<sp/>finger<sp/>is<sp/>closer<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>any<sp/>other<sp/>interaction<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_intObj.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a6648c4fe010dec0193cc5ce80a8907fb" kindref="member">isPrimaryHovered</ref><sp/>&amp;&amp;<sp/><ref refid="class_simple_interaction_glow_1a5c714fc869447c5e0d485b0122188055" kindref="member">usePrimaryHover</ref>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetColor<sp/>=<sp/><ref refid="class_simple_interaction_glow_1a758d68c986bc34965a5a6aebf8f6e1f2" kindref="member">primaryHoverColor</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Of<sp/>course,<sp/>any<sp/>number<sp/>of<sp/>objects<sp/>can<sp/>be<sp/>hovered<sp/>by<sp/>any<sp/>number<sp/>of<sp/>InteractionHands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InteractionBehaviour<sp/>provides<sp/>an<sp/>API<sp/>for<sp/>accessing<sp/>various<sp/>interaction-related</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state<sp/>information<sp/>such<sp/>as<sp/>the<sp/>closest<sp/>hand<sp/>that<sp/>is<sp/>hovering<sp/>nearby,<sp/>if<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>hovered<sp/>at<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_intObj.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1ae8875ff423f6183c256101320ff28fa7" kindref="member">isHovered</ref><sp/>&amp;&amp;<sp/><ref refid="class_simple_interaction_glow_1a346b18ca3d0426fbfc5079e02c515e71" kindref="member">useHover</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>glow<sp/>=<sp/>_intObj.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1aefe390893dcb760876ebf2ad2da4ccb2" kindref="member">closestHoveringControllerDistance</ref>.Map(0F,<sp/>0.2F,<sp/>1F,<sp/>0.0F);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetColor<sp/>=<sp/>Color.Lerp(<ref refid="class_simple_interaction_glow_1a00cd6d0367cc6ad0f3fc84d5de82bdc0" kindref="member">defaultColor</ref>,<sp/><ref refid="class_simple_interaction_glow_1aa12a1f2aa05a0b0a0c421b2c93c17674" kindref="member">hoverColor</ref>,<sp/>glow);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_intObj.<ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1abd55576df7341d169cbe23eebacc35c5" kindref="member">isSuspended</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>object<sp/>is<sp/>held<sp/>by<sp/>only<sp/>one<sp/>hand<sp/>and<sp/>that<sp/>holding<sp/>hand<sp/>stops<sp/>tracking,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>is<sp/>&quot;suspended.&quot;<sp/>InteractionBehaviour<sp/>provides<sp/>suspension<sp/>callbacks<sp/>if<sp/>you&apos;d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>the<sp/>object<sp/>to,<sp/>for<sp/>example,<sp/>disappear,<sp/>when<sp/>the<sp/>object<sp/>is<sp/>suspended.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alternatively<sp/>you<sp/>can<sp/>check<sp/>&quot;isSuspended&quot;<sp/>at<sp/>any<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetColor<sp/>=<sp/><ref refid="class_simple_interaction_glow_1a2c27dd04abd3d432865df53f2abe562c" kindref="member">suspendedColor</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>check<sp/>the<sp/>depressed-or-not-depressed<sp/>state<sp/>of<sp/>InteractionButton<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>assign<sp/>them<sp/>a<sp/>unique<sp/>color<sp/>in<sp/>that<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_intObj<sp/>is<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_button" kindref="compound">InteractionButton</ref><sp/>&amp;&amp;<sp/>(_intObj<sp/>as<sp/><ref refid="class_leap_1_1_unity_1_1_interaction_1_1_interaction_button" kindref="compound">InteractionButton</ref>).isPressed)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetColor<sp/>=<sp/><ref refid="class_simple_interaction_glow_1a09bef1794224eada8c49258bb4ab0b04" kindref="member">pressedColor</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lerp<sp/>actual<sp/>material<sp/>color<sp/>to<sp/>the<sp/>target<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_material.color<sp/>=<sp/>Color.Lerp(_material.color,<sp/>targetColor,<sp/>30F<sp/>*<sp/>Time.deltaTime);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Examples/Common Example Assets/Scripts/SimpleInteractionGlow.cs"/>
  </compounddef>
</doxygen>
