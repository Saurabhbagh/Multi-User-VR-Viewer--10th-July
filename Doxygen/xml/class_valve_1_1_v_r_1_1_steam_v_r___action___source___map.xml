<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map" kind="class" language="C#" prot="public" abstract="yes">
    <compoundname>Valve::VR::SteamVR_Action_Source_Map</compoundname>
    <basecompoundref prot="public" virt="non-virtual">SteamVR_Action_Source_Map</basecompoundref>
    <derivedcompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>SourceElement</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a71b9fc1c80b8d185d7f07833f18cadc5" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>SourceElement</type>
        <definition>SourceElement Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.this[SteamVR_Input_Sources inputSource]</definition>
        <argsstring></argsstring>
        <name>this[SteamVR_Input_Sources inputSource]</name>
        <briefdescription>
<para>Gets a reference to the action restricted to a certain input source. LeftHand or RightHand for example. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like data from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="549" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="550" bodyend="555"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a720b5bdedf05f98826a8a9e12b8b9364" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.fullPath</definition>
        <argsstring></argsstring>
        <name>fullPath</name>
        <briefdescription>
<para>The full string path for this action (from the action manifest) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="593" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="593" bodyend="593"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a6bc926f32341c260d49d8f270993adf0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>ulong</type>
        <definition>ulong Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
<para>The underlying handle for this action used for native <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> Input calls. Retrieved on Initialization from <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="596" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="596" bodyend="596"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a8a4f51dad7abd9b5b646ab3dc05f50ac" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
        <definition>SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.actionSet</definition>
        <argsstring></argsstring>
        <name>actionSet</name>
        <briefdescription>
<para>The ActionSet this action is contained within </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="599" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="599" bodyend="599"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a905ff9619f4ff10696ac1ebff4d5d574" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type><ref refid="namespace_valve_1_1_v_r_1a1e6192cb5ddaf204afab87ccb5728780" kindref="member">SteamVR_ActionDirections</ref></type>
        <definition>SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <briefdescription>
<para>The action direction of this action (in for input - most actions, out for output - haptics) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="602" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="602" bodyend="602"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a7a426e28fb44538575b06892049cd122" prot="protected" static="no" mutable="no">
        <type>Dictionary&lt; <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>, SourceElement &gt;</type>
        <definition>Dictionary&lt;SteamVR_Input_Sources, SourceElement&gt; Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.sources</definition>
        <argsstring></argsstring>
        <name>sources</name>
        <initializer>= new Dictionary&lt;<ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>, SourceElement&gt;(new <ref refid="struct_valve_1_1_v_r_1_1_steam_v_r___input___sources___comparer" kindref="compound">SteamVR_Input_Sources_Comparer</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="559" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="559" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a7ddefadc173dfeee8e2c423552283d80" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
        <definition>SteamVR_Action Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.action</definition>
        <argsstring></argsstring>
        <name>action</name>
        <briefdescription>
<para>The base <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref> this map corresponds to </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="605" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="605" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a2a6c76774adb5719065c870202c4f29a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.OnAccessSource</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>OnAccessSource</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1aacbc05f0647705e1268c2bda304481a9">OnAccessSource</reimplementedby>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="557" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="557" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1ace2286a1aca371f6229a7f15c82f6329" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.PreinitializeMap</definition>
        <argsstring>(SteamVR_Input_Sources inputSource, SteamVR_Action wrappingAction)</argsstring>
        <name>PreinitializeMap</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
          <declname>wrappingAction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="576" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="576" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a31d4929590d0a63ae7693b87424e9990" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>SourceElement</type>
        <definition>virtual SourceElement Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.GetSourceElementForIndexer</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetSourceElementForIndexer</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="583" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="583" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1adae017d1a61bcde0a40806b6e2251029" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>abstract void</type>
        <definition>abstract void Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.PreinitializeMap</definition>
        <argsstring>(SteamVR_Input_Sources inputSource, SteamVR_Action wrappingAction)</argsstring>
        <name>PreinitializeMap</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
          <declname>wrappingAction</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Sets up the internals of the action source before <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="626" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1af035d2609891383f3735ced3cfa1b9ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Initializes the individual sources as well as the base map itself. Gets the handle for the action from <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> and does any other <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> related setup that needs to be done </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="564" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="564" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a8c5843be007a5e7a7bb2a5ad9a4451d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.PreInitialize</definition>
        <argsstring>(SteamVR_Action wrappingAction, string actionPath, bool throwErrors=true)</argsstring>
        <name>PreInitialize</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
          <declname>wrappingAction</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionPath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>throwErrors</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="607" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="607" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1aa673cb451bc9b3fcc7ce8a7b95d407d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Initializes the handle for the action and any other related <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="631" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="631" bodyend="639"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a4841fe13fd57f40f9210dbe92603d701" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.GetActionSetPath</definition>
        <argsstring>()</argsstring>
        <name>GetActionSetPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="641" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="641" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a54c8b23bb2fa8083cf3976bd53ddd5c1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a1e6192cb5ddaf204afab87ccb5728780" kindref="member">SteamVR_ActionDirections</ref></type>
        <definition>SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;.GetActionDirection</definition>
        <argsstring>()</argsstring>
        <name>GetActionDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="651" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="651" bodyend="667"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4935">
        <label>Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map"/>
        <childnode refid="4936" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4936">
        <label>SteamVR_Action_Source_Map</label>
      </node>
      <node id="4937">
        <label>Valve::VR::SteamVR_Action_In_Source_Map&lt; SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map"/>
        <childnode refid="4935" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4943">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4942">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="4943" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4940">
        <label>Valve.VR.SteamVR_Action&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action"/>
        <childnode refid="4941" relation="public-inheritance">
        </childnode>
        <childnode refid="4942" relation="public-inheritance">
        </childnode>
        <childnode refid="4944" relation="public-inheritance">
        </childnode>
        <childnode refid="4942" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4938">
        <label>Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map"/>
        <childnode refid="4939" relation="public-inheritance">
        </childnode>
        <childnode refid="4940" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="4941">
        <label>IEquatable&lt; SteamVR_Action &gt;</label>
      </node>
      <node id="4944">
        <label>SteamVR_Action</label>
      </node>
      <node id="4939">
        <label>SteamVR_Action_Source_Map</label>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" line="544" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action.cs" bodystart="543" bodyend="588"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a7ddefadc173dfeee8e2c423552283d80" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a8a4f51dad7abd9b5b646ab3dc05f50ac" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>actionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a905ff9619f4ff10696ac1ebff4d5d574" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a720b5bdedf05f98826a8a9e12b8b9364" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a54c8b23bb2fa8083cf3976bd53ddd5c1" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>GetActionDirection</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a4841fe13fd57f40f9210dbe92603d701" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>GetActionSetPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a31d4929590d0a63ae7693b87424e9990" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>GetSourceElementForIndexer</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a6bc926f32341c260d49d8f270993adf0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1af035d2609891383f3735ced3cfa1b9ab" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1aa673cb451bc9b3fcc7ce8a7b95d407d6" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a2a6c76774adb5719065c870202c4f29a" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>OnAccessSource</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a8c5843be007a5e7a7bb2a5ad9a4451d7" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>PreInitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1ace2286a1aca371f6229a7f15c82f6329" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>PreinitializeMap</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1adae017d1a61bcde0a40806b6e2251029" prot="protected" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>PreinitializeMap</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a7a426e28fb44538575b06892049cd122" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>sources</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a71b9fc1c80b8d185d7f07833f18cadc5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Source_Map</scope><name>this[SteamVR_Input_Sources inputSource]</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
