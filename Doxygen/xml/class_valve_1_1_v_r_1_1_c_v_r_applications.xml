<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_c_v_r_applications" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::CVRApplications</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1aeb279fec27f5ff7d1aea48f56bfa972f" prot="private" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications" kindref="compound">IVRApplications</ref></type>
        <definition>IVRApplications Valve.VR.CVRApplications.FnTable</definition>
        <argsstring></argsstring>
        <name>FnTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2161" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1ad26e57fadef583bcce16520dd023d3fc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>internal</type>
        <definition>internal Valve.VR.CVRApplications.CVRApplications</definition>
        <argsstring>(IntPtr pInterface)</argsstring>
        <name>CVRApplications</name>
        <param>
          <type>IntPtr</type>
          <declname>pInterface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2162" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2162" bodyend="2165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a227ab31b106e3038d88e51fcfaa9380d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.AddApplicationManifest</definition>
        <argsstring>(string pchApplicationManifestFullPath, bool bTemporary)</argsstring>
        <name>AddApplicationManifest</name>
        <param>
          <type>string</type>
          <declname>pchApplicationManifestFullPath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bTemporary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2166" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2166" bodyend="2170"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a1185bc8e37e263c6963c9c59fd6b0dd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.RemoveApplicationManifest</definition>
        <argsstring>(string pchApplicationManifestFullPath)</argsstring>
        <name>RemoveApplicationManifest</name>
        <param>
          <type>string</type>
          <declname>pchApplicationManifestFullPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2171" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2171" bodyend="2175"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a85a594e9e20b45a193d9145f0243eb00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRApplications.IsApplicationInstalled</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>IsApplicationInstalled</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2176" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2176" bodyend="2180"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a257f814362d6c86e93a3645f689daad5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRApplications.GetApplicationCount</definition>
        <argsstring>()</argsstring>
        <name>GetApplicationCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2181" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2181" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a796a099a422f00861a3c8190494e4b29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.GetApplicationKeyByIndex</definition>
        <argsstring>(uint unApplicationIndex, System.Text.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)</argsstring>
        <name>GetApplicationKeyByIndex</name>
        <param>
          <type>uint</type>
          <declname>unApplicationIndex</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeyBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeyBufferLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2186" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2186" bodyend="2190"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a426c0a54264e05dc34a9e82d8922e451" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.GetApplicationKeyByProcessId</definition>
        <argsstring>(uint unProcessId, System.Text.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)</argsstring>
        <name>GetApplicationKeyByProcessId</name>
        <param>
          <type>uint</type>
          <declname>unProcessId</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeyBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeyBufferLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2191" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2191" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1aa6792921394b584d65f6782cae386469" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.LaunchApplication</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>LaunchApplication</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2196" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2196" bodyend="2200"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a423aa8da44ee6d43044a48592a2fabc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.LaunchTemplateApplication</definition>
        <argsstring>(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t [] pKeys)</argsstring>
        <name>LaunchTemplateApplication</name>
        <param>
          <type>string</type>
          <declname>pchTemplateAppKey</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchNewAppKey</declname>
        </param>
        <param>
          <type><ref refid="struct_valve_1_1_v_r_1_1_app_override_keys__t" kindref="compound">AppOverrideKeys_t</ref> []</type>
          <declname>pKeys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2201" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2201" bodyend="2205"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1ae713c2611618b1e6e45694375fab52b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.LaunchApplicationFromMimeType</definition>
        <argsstring>(string pchMimeType, string pchArgs)</argsstring>
        <name>LaunchApplicationFromMimeType</name>
        <param>
          <type>string</type>
          <declname>pchMimeType</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2206" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2206" bodyend="2210"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a33117092ab66989cc378f6f41f2fc772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.LaunchDashboardOverlay</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>LaunchDashboardOverlay</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2211" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2211" bodyend="2215"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1af537811353d75ea94719196f08fd6729" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRApplications.CancelApplicationLaunch</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>CancelApplicationLaunch</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2216" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2216" bodyend="2220"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a095be14493fca1fabadbec251a216bb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.IdentifyApplication</definition>
        <argsstring>(uint unProcessId, string pchAppKey)</argsstring>
        <name>IdentifyApplication</name>
        <param>
          <type>uint</type>
          <declname>unProcessId</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2221" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2221" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1aa87e0096153994caab063d57a3b7bd0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRApplications.GetApplicationProcessId</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>GetApplicationProcessId</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2226" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2226" bodyend="2230"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1ac5275c11f9ff77cc7a68f11e1ba1ba5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.CVRApplications.GetApplicationsErrorNameFromEnum</definition>
        <argsstring>(EVRApplicationError error)</argsstring>
        <name>GetApplicationsErrorNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2231" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2231" bodyend="2235"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a623fedcbaacfe1e1b7d74ff709a9d869" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRApplications.GetApplicationPropertyString</definition>
        <argsstring>(string pchAppKey, EVRApplicationProperty eProperty, System.Text.StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)</argsstring>
        <name>GetApplicationPropertyString</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a60802f09ad1b4764cd5bc78369d50bf3" kindref="member">EVRApplicationProperty</ref></type>
          <declname>eProperty</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchPropertyValueBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unPropertyValueBufferLen</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2236" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2236" bodyend="2240"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a74331bcd543f67a795e07b5b488ea492" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRApplications.GetApplicationPropertyBool</definition>
        <argsstring>(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)</argsstring>
        <name>GetApplicationPropertyBool</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a60802f09ad1b4764cd5bc78369d50bf3" kindref="member">EVRApplicationProperty</ref></type>
          <declname>eProperty</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2241" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2241" bodyend="2245"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1aaf2b2e7b063089791120ecc1be6653f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ulong</type>
        <definition>ulong Valve.VR.CVRApplications.GetApplicationPropertyUint64</definition>
        <argsstring>(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)</argsstring>
        <name>GetApplicationPropertyUint64</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a60802f09ad1b4764cd5bc78369d50bf3" kindref="member">EVRApplicationProperty</ref></type>
          <declname>eProperty</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2246" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2246" bodyend="2250"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1af7ec150b8228b6af3d2ea930df7cd2a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.SetApplicationAutoLaunch</definition>
        <argsstring>(string pchAppKey, bool bAutoLaunch)</argsstring>
        <name>SetApplicationAutoLaunch</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bAutoLaunch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2251" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2251" bodyend="2255"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a22d741776c2c6ba49488b3f74b1308d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRApplications.GetApplicationAutoLaunch</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>GetApplicationAutoLaunch</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2256" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2256" bodyend="2260"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1afa7ac9cfb351f15a0127e3008f90ae02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.SetDefaultApplicationForMimeType</definition>
        <argsstring>(string pchAppKey, string pchMimeType)</argsstring>
        <name>SetDefaultApplicationForMimeType</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchMimeType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2261" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2261" bodyend="2265"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a528bd8591b4d08aac8cff149c19f0b89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRApplications.GetDefaultApplicationForMimeType</definition>
        <argsstring>(string pchMimeType, System.Text.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)</argsstring>
        <name>GetDefaultApplicationForMimeType</name>
        <param>
          <type>string</type>
          <declname>pchMimeType</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeyBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeyBufferLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2266" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2266" bodyend="2270"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1ae01c2c507726be5dcce1121e7c4ad78a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRApplications.GetApplicationSupportedMimeTypes</definition>
        <argsstring>(string pchAppKey, System.Text.StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)</argsstring>
        <name>GetApplicationSupportedMimeTypes</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchMimeTypesBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unMimeTypesBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2271" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2271" bodyend="2275"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1af02538684a9bf0bbdac9e0e956c3b658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRApplications.GetApplicationsThatSupportMimeType</definition>
        <argsstring>(string pchMimeType, System.Text.StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)</argsstring>
        <name>GetApplicationsThatSupportMimeType</name>
        <param>
          <type>string</type>
          <declname>pchMimeType</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeysThatSupportBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeysThatSupportBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2276" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2276" bodyend="2280"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a611d0f32e55ad2f8efda056a608ac678" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRApplications.GetApplicationLaunchArguments</definition>
        <argsstring>(uint unHandle, System.Text.StringBuilder pchArgs, uint unArgs)</argsstring>
        <name>GetApplicationLaunchArguments</name>
        <param>
          <type>uint</type>
          <declname>unHandle</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchArgs</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2281" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2281" bodyend="2285"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1aa29b29431a7d099a1c81dfdf8b3be280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.GetStartingApplication</definition>
        <argsstring>(System.Text.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)</argsstring>
        <name>GetStartingApplication</name>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeyBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeyBufferLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2286" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2286" bodyend="2290"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a0505122273189cf3ec0dd27a800f9e8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1af00430caae64a19e9ad612ac01a208c0" kindref="member">EVRApplicationTransitionState</ref></type>
        <definition>EVRApplicationTransitionState Valve.VR.CVRApplications.GetTransitionState</definition>
        <argsstring>()</argsstring>
        <name>GetTransitionState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2291" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2291" bodyend="2295"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a0cafe190f23f3170b18c68d3ae758d47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.PerformApplicationPrelaunchCheck</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>PerformApplicationPrelaunchCheck</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2296" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2296" bodyend="2300"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a9992ade2dba2f51d2aa4985bc23ceca6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.CVRApplications.GetApplicationsTransitionStateNameFromEnum</definition>
        <argsstring>(EVRApplicationTransitionState state)</argsstring>
        <name>GetApplicationsTransitionStateNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1af00430caae64a19e9ad612ac01a208c0" kindref="member">EVRApplicationTransitionState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2301" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2301" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1af5244a52dc2ec469c188a3f20479b89e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRApplications.IsQuitUserPromptRequested</definition>
        <argsstring>()</argsstring>
        <name>IsQuitUserPromptRequested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2306" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2306" bodyend="2310"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1aecc547aa078162f39cc95d6eb7191f0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>EVRApplicationError Valve.VR.CVRApplications.LaunchInternalProcess</definition>
        <argsstring>(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)</argsstring>
        <name>LaunchInternalProcess</name>
        <param>
          <type>string</type>
          <declname>pchBinaryPath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchArguments</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchWorkingDirectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2311" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2311" bodyend="2315"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_applications_1a978ad099c27b5b3984395bd42d5d56a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRApplications.GetCurrentSceneProcessId</definition>
        <argsstring>()</argsstring>
        <name>GetCurrentSceneProcessId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2316" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2316" bodyend="2320"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2160" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2159" bodyend="2321"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a227ab31b106e3038d88e51fcfaa9380d" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>AddApplicationManifest</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1af537811353d75ea94719196f08fd6729" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>CancelApplicationLaunch</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1ad26e57fadef583bcce16520dd023d3fc" prot="private" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>CVRApplications</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1aeb279fec27f5ff7d1aea48f56bfa972f" prot="private" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>FnTable</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a22d741776c2c6ba49488b3f74b1308d4" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationAutoLaunch</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a257f814362d6c86e93a3645f689daad5" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationCount</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a796a099a422f00861a3c8190494e4b29" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationKeyByIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a426c0a54264e05dc34a9e82d8922e451" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationKeyByProcessId</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a611d0f32e55ad2f8efda056a608ac678" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationLaunchArguments</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1aa87e0096153994caab063d57a3b7bd0b" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationProcessId</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a74331bcd543f67a795e07b5b488ea492" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationPropertyBool</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a623fedcbaacfe1e1b7d74ff709a9d869" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationPropertyString</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1aaf2b2e7b063089791120ecc1be6653f9" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationPropertyUint64</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1ac5275c11f9ff77cc7a68f11e1ba1ba5c" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationsErrorNameFromEnum</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1af02538684a9bf0bbdac9e0e956c3b658" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationsThatSupportMimeType</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a9992ade2dba2f51d2aa4985bc23ceca6" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationsTransitionStateNameFromEnum</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1ae01c2c507726be5dcce1121e7c4ad78a" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetApplicationSupportedMimeTypes</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a978ad099c27b5b3984395bd42d5d56a4" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetCurrentSceneProcessId</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a528bd8591b4d08aac8cff149c19f0b89" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetDefaultApplicationForMimeType</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1aa29b29431a7d099a1c81dfdf8b3be280" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetStartingApplication</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a0505122273189cf3ec0dd27a800f9e8c" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>GetTransitionState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a095be14493fca1fabadbec251a216bb6" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>IdentifyApplication</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a85a594e9e20b45a193d9145f0243eb00" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>IsApplicationInstalled</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1af5244a52dc2ec469c188a3f20479b89e" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>IsQuitUserPromptRequested</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1aa6792921394b584d65f6782cae386469" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>LaunchApplication</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1ae713c2611618b1e6e45694375fab52b7" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>LaunchApplicationFromMimeType</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a33117092ab66989cc378f6f41f2fc772" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>LaunchDashboardOverlay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1aecc547aa078162f39cc95d6eb7191f0d" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>LaunchInternalProcess</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a423aa8da44ee6d43044a48592a2fabc1" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>LaunchTemplateApplication</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a0cafe190f23f3170b18c68d3ae758d47" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>PerformApplicationPrelaunchCheck</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1a1185bc8e37e263c6963c9c59fd6b0dd9" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>RemoveApplicationManifest</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1af7ec150b8228b6af3d2ea930df7cd2a5" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>SetApplicationAutoLaunch</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_applications_1afa7ac9cfb351f15a0127e3008f90ae02" prot="public" virt="non-virtual"><scope>Valve::VR::CVRApplications</scope><name>SetDefaultApplicationForMimeType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
