<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context" kind="class" language="C#" prot="private">
    <compoundname>Valve::VR::OpenVR::COpenVRContext</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab15d623ac1b00a05b42f9ea0730b9956" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_system" kindref="compound">CVRSystem</ref></type>
        <definition>CVRSystem Valve.VR.OpenVR.COpenVRContext.m_pVRSystem</definition>
        <argsstring></argsstring>
        <name>m_pVRSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6242" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a81e6675f17b5a1a8a1a9b3a77295ff00" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone" kindref="compound">CVRChaperone</ref></type>
        <definition>CVRChaperone Valve.VR.OpenVR.COpenVRContext.m_pVRChaperone</definition>
        <argsstring></argsstring>
        <name>m_pVRChaperone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6243" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1acdb644db911984a03fab5b9cc4780e3e" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup" kindref="compound">CVRChaperoneSetup</ref></type>
        <definition>CVRChaperoneSetup Valve.VR.OpenVR.COpenVRContext.m_pVRChaperoneSetup</definition>
        <argsstring></argsstring>
        <name>m_pVRChaperoneSetup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6244" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a23dee30e99df7e5fc3b518a9a18ee305" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_compositor" kindref="compound">CVRCompositor</ref></type>
        <definition>CVRCompositor Valve.VR.OpenVR.COpenVRContext.m_pVRCompositor</definition>
        <argsstring></argsstring>
        <name>m_pVRCompositor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6245" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a3642e38514eecd8ac95c75b0868f1f8d" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_overlay" kindref="compound">CVROverlay</ref></type>
        <definition>CVROverlay Valve.VR.OpenVR.COpenVRContext.m_pVROverlay</definition>
        <argsstring></argsstring>
        <name>m_pVROverlay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6246" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1aa150c4e90389d3a90b0e44237863c353" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_render_models" kindref="compound">CVRRenderModels</ref></type>
        <definition>CVRRenderModels Valve.VR.OpenVR.COpenVRContext.m_pVRRenderModels</definition>
        <argsstring></argsstring>
        <name>m_pVRRenderModels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6247" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ae6d4a5d7ce462551946491e813170924" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_extended_display" kindref="compound">CVRExtendedDisplay</ref></type>
        <definition>CVRExtendedDisplay Valve.VR.OpenVR.COpenVRContext.m_pVRExtendedDisplay</definition>
        <argsstring></argsstring>
        <name>m_pVRExtendedDisplay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6248" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a6f3fefbbc54ca4be940d8fcf21f31b9f" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_settings" kindref="compound">CVRSettings</ref></type>
        <definition>CVRSettings Valve.VR.OpenVR.COpenVRContext.m_pVRSettings</definition>
        <argsstring></argsstring>
        <name>m_pVRSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6249" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1afd54c2d5fd16a8978eb7a0401f00a711" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_applications" kindref="compound">CVRApplications</ref></type>
        <definition>CVRApplications Valve.VR.OpenVR.COpenVRContext.m_pVRApplications</definition>
        <argsstring></argsstring>
        <name>m_pVRApplications</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6250" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a7c9bf63217a665461dd786aebdd48b13" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_screenshots" kindref="compound">CVRScreenshots</ref></type>
        <definition>CVRScreenshots Valve.VR.OpenVR.COpenVRContext.m_pVRScreenshots</definition>
        <argsstring></argsstring>
        <name>m_pVRScreenshots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6251" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab24137e5e8ec502c6990fd009037c846" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_tracked_camera" kindref="compound">CVRTrackedCamera</ref></type>
        <definition>CVRTrackedCamera Valve.VR.OpenVR.COpenVRContext.m_pVRTrackedCamera</definition>
        <argsstring></argsstring>
        <name>m_pVRTrackedCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6252" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a6e95da32bcc43aaf88cd5b5a66f488b6" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_input" kindref="compound">CVRInput</ref></type>
        <definition>CVRInput Valve.VR.OpenVR.COpenVRContext.m_pVRInput</definition>
        <argsstring></argsstring>
        <name>m_pVRInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6253" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ac009fe26da49de343c2564f3e669551e" prot="private" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_spatial_anchors" kindref="compound">CVRSpatialAnchors</ref></type>
        <definition>CVRSpatialAnchors Valve.VR.OpenVR.COpenVRContext.m_pVRSpatialAnchors</definition>
        <argsstring></argsstring>
        <name>m_pVRSpatialAnchors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6254" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6254" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a542a1d124a437f7562c7d6b302ea7c70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.OpenVR.COpenVRContext.COpenVRContext</definition>
        <argsstring>()</argsstring>
        <name>COpenVRContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6045" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6045" bodyend="6045"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1af8603a04fcfd3658041fa812b8da07da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.OpenVR.COpenVRContext.Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6047" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6047" bodyend="6062"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a2d91917793baf5e7e339b1a051c1db02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_system" kindref="compound">CVRSystem</ref></type>
        <definition>CVRSystem Valve.VR.OpenVR.COpenVRContext.VRSystem</definition>
        <argsstring>()</argsstring>
        <name>VRSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6073" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6073" bodyend="6084"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1af4982d6dc26731e2d62c501f180e336a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone" kindref="compound">CVRChaperone</ref></type>
        <definition>CVRChaperone Valve.VR.OpenVR.COpenVRContext.VRChaperone</definition>
        <argsstring>()</argsstring>
        <name>VRChaperone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6086" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6086" bodyend="6097"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab4a04c04ff1f3fb1735b400ba5452d2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup" kindref="compound">CVRChaperoneSetup</ref></type>
        <definition>CVRChaperoneSetup Valve.VR.OpenVR.COpenVRContext.VRChaperoneSetup</definition>
        <argsstring>()</argsstring>
        <name>VRChaperoneSetup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6099" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6099" bodyend="6110"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a8abf132cbd90a2411375a49eba54e9ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_compositor" kindref="compound">CVRCompositor</ref></type>
        <definition>CVRCompositor Valve.VR.OpenVR.COpenVRContext.VRCompositor</definition>
        <argsstring>()</argsstring>
        <name>VRCompositor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6112" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6112" bodyend="6123"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab6c40100405370b5865990986dace072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_overlay" kindref="compound">CVROverlay</ref></type>
        <definition>CVROverlay Valve.VR.OpenVR.COpenVRContext.VROverlay</definition>
        <argsstring>()</argsstring>
        <name>VROverlay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6125" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6125" bodyend="6136"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab5ff613e4a2585900643b0e35d6e57c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_render_models" kindref="compound">CVRRenderModels</ref></type>
        <definition>CVRRenderModels Valve.VR.OpenVR.COpenVRContext.VRRenderModels</definition>
        <argsstring>()</argsstring>
        <name>VRRenderModels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6138" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6138" bodyend="6149"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ad9af34217fcccbe5704c90801636b97f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_extended_display" kindref="compound">CVRExtendedDisplay</ref></type>
        <definition>CVRExtendedDisplay Valve.VR.OpenVR.COpenVRContext.VRExtendedDisplay</definition>
        <argsstring>()</argsstring>
        <name>VRExtendedDisplay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6151" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6151" bodyend="6162"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1af6cc40c7b950b3cc4c60291ff108529c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_settings" kindref="compound">CVRSettings</ref></type>
        <definition>CVRSettings Valve.VR.OpenVR.COpenVRContext.VRSettings</definition>
        <argsstring>()</argsstring>
        <name>VRSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6164" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6164" bodyend="6175"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ac6e53df8bd8e90474b61e87be6df2305" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_applications" kindref="compound">CVRApplications</ref></type>
        <definition>CVRApplications Valve.VR.OpenVR.COpenVRContext.VRApplications</definition>
        <argsstring>()</argsstring>
        <name>VRApplications</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6177" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6177" bodyend="6188"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1aa6d9714011c3e74730ca23a295672415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_screenshots" kindref="compound">CVRScreenshots</ref></type>
        <definition>CVRScreenshots Valve.VR.OpenVR.COpenVRContext.VRScreenshots</definition>
        <argsstring>()</argsstring>
        <name>VRScreenshots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6190" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6190" bodyend="6201"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a97132f67cc0f02fab7960b5ebc622ef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_tracked_camera" kindref="compound">CVRTrackedCamera</ref></type>
        <definition>CVRTrackedCamera Valve.VR.OpenVR.COpenVRContext.VRTrackedCamera</definition>
        <argsstring>()</argsstring>
        <name>VRTrackedCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6203" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6203" bodyend="6214"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a37367faa70a6c2399354de1f1116057a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_input" kindref="compound">CVRInput</ref></type>
        <definition>CVRInput Valve.VR.OpenVR.COpenVRContext.VRInput</definition>
        <argsstring>()</argsstring>
        <name>VRInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6216" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6216" bodyend="6227"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1aea2538141cb02dcf4f1cbe9e6350c818" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_c_v_r_spatial_anchors" kindref="compound">CVRSpatialAnchors</ref></type>
        <definition>CVRSpatialAnchors Valve.VR.OpenVR.COpenVRContext.VRSpatialAnchors</definition>
        <argsstring>()</argsstring>
        <name>VRSpatialAnchors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6229" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6229" bodyend="6240"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a2942ad98d4ccd52fb0cf9f78c4e1bad3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.OpenVR.COpenVRContext.CheckClear</definition>
        <argsstring>()</argsstring>
        <name>CheckClear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6064" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6064" bodyend="6071"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="6044" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="6043" bodyend="6255"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a2942ad98d4ccd52fb0cf9f78c4e1bad3" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>CheckClear</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1af8603a04fcfd3658041fa812b8da07da" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>Clear</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a542a1d124a437f7562c7d6b302ea7c70" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>COpenVRContext</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1afd54c2d5fd16a8978eb7a0401f00a711" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRApplications</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a81e6675f17b5a1a8a1a9b3a77295ff00" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRChaperone</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1acdb644db911984a03fab5b9cc4780e3e" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRChaperoneSetup</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a23dee30e99df7e5fc3b518a9a18ee305" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRCompositor</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ae6d4a5d7ce462551946491e813170924" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRExtendedDisplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a6e95da32bcc43aaf88cd5b5a66f488b6" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRInput</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a3642e38514eecd8ac95c75b0868f1f8d" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVROverlay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1aa150c4e90389d3a90b0e44237863c353" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRRenderModels</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a7c9bf63217a665461dd786aebdd48b13" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRScreenshots</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a6f3fefbbc54ca4be940d8fcf21f31b9f" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRSettings</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ac009fe26da49de343c2564f3e669551e" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRSpatialAnchors</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab15d623ac1b00a05b42f9ea0730b9956" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRSystem</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab24137e5e8ec502c6990fd009037c846" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>m_pVRTrackedCamera</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ac6e53df8bd8e90474b61e87be6df2305" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRApplications</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1af4982d6dc26731e2d62c501f180e336a" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRChaperone</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab4a04c04ff1f3fb1735b400ba5452d2a" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRChaperoneSetup</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a8abf132cbd90a2411375a49eba54e9ad" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRCompositor</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ad9af34217fcccbe5704c90801636b97f" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRExtendedDisplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a37367faa70a6c2399354de1f1116057a" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRInput</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab6c40100405370b5865990986dace072" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VROverlay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1ab5ff613e4a2585900643b0e35d6e57c6" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRRenderModels</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1aa6d9714011c3e74730ca23a295672415" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRScreenshots</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1af6cc40c7b950b3cc4c60291ff108529c" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRSettings</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1aea2538141cb02dcf4f1cbe9e6350c818" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRSpatialAnchors</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a2d91917793baf5e7e339b1a051c1db02" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRSystem</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_1_1_c_open_v_r_context_1a97132f67cc0f02fab7960b5ebc622ef0" prot="public" virt="non-virtual"><scope>Valve::VR::OpenVR::COpenVRContext</scope><name>VRTrackedCamera</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
