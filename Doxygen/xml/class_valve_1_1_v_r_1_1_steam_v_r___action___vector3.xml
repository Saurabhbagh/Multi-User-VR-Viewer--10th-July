<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Vector3</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector3" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_Vector3</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ISerializationCallbackReceiver</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a9617101f10185cceb79de772bff1bd9b" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a78943f89733a1c1a8e12cb4896e65907" kindref="member">ChangeHandler</ref></type>
        <definition>ChangeHandler Valve.VR.SteamVR_Action_Vector3.onChange</definition>
        <argsstring></argsstring>
        <name>onChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the axis changes by more than the specified changeTolerance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="24" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1aa852fea6cefb457d963fae362b2a8b42" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a99c0524f104c6d8c94a0e874b0ecc813" kindref="member">UpdateHandler</ref></type>
        <definition>UpdateHandler Valve.VR.SteamVR_Action_Vector3.onUpdate</definition>
        <argsstring></argsstring>
        <name>onUpdate</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="28" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a8bf8b824979af5005bc7d2b379781ee4" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a9b135b663b22c421dc36dbc48d2d35b6" kindref="member">AxisHandler</ref></type>
        <definition>AxisHandler Valve.VR.SteamVR_Action_Vector3.onAxis</definition>
        <argsstring></argsstring>
        <name>onAxis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event will fire whenever the Vector3 value of the action is non-zero </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="32" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a4e3133aec6465e1d5b17bd695ae9a579" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a47d6c1c558fb45841cd626df9ab3dcb9" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Vector3.onActiveChange</definition>
        <argsstring></argsstring>
        <name>onActiveChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> Event fires when the active state (ActionSet active and binding active) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="36" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1adf4506e3d4074903743a4f8e059b3f8a" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a47d6c1c558fb45841cd626df9ab3dcb9" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Vector3.onActiveBindingChange</definition>
        <argsstring></argsstring>
        <name>onActiveBindingChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> Event fires when the active state of the binding changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="40" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a915afdc4075b4df59abf6f9797eadd36" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Vector3.axis</definition>
        <argsstring></argsstring>
        <name>axis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The current Vector3 value of the action. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="46" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a80ebc3715ac17d087f83064081fc5b70" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Vector3.lastAxis</definition>
        <argsstring></argsstring>
        <name>lastAxis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The Vector3 value of the action from the previous update. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="50" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ac9b63c985650849f1c2ac32212ddef3e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Vector3.delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The Vector3 value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="54" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a3cd18f9f22012f93b408132d661340d0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Vector3.lastDelta</definition>
        <argsstring></argsstring>
        <name>lastDelta</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The Vector3 value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="58" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a9b135b663b22c421dc36dbc48d2d35b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Vector3.AxisHandler</definition>
        <argsstring>(SteamVR_Action_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 axis, Vector3 delta)</argsstring>
        <name>AxisHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kindref="compound">SteamVR_Action_Vector3</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a47d6c1c558fb45841cd626df9ab3dcb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Vector3.ActiveChangeHandler</definition>
        <argsstring>(SteamVR_Action_Vector3 fromAction, SteamVR_Input_Sources fromSource, bool active)</argsstring>
        <name>ActiveChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kindref="compound">SteamVR_Action_Vector3</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a78943f89733a1c1a8e12cb4896e65907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Vector3.ChangeHandler</definition>
        <argsstring>(SteamVR_Action_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 axis, Vector3 delta)</argsstring>
        <name>ChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kindref="compound">SteamVR_Action_Vector3</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a99c0524f104c6d8c94a0e874b0ecc813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Vector3.UpdateHandler</definition>
        <argsstring>(SteamVR_Action_Vector3 fromAction, SteamVR_Input_Sources fromSource, Vector3 axis, Vector3 delta)</argsstring>
        <name>UpdateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kindref="compound">SteamVR_Action_Vector3</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ad1151513dd5f37e8d04c7db2ee98590c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.SteamVR_Action_Vector3.SteamVR_Action_Vector3</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_Action_Vector3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="61" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ade2feaacf2acea8cd4baceb3d861fa20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Vector3.GetAxis</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetAxis</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The current Vector3 value of the action </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="66" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ac8df802433c105f70c635dd4919cf433" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Vector3.GetAxisDelta</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetAxisDelta</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The Vector3 value difference between this update and the previous update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="73" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1aa1b08a373d780aa48b52284b65e59434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Vector3.GetLastAxis</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastAxis</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The Vector3 value of the action from the previous update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="80" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a0c287b4a3eb4bffb3da860ae73f28981" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Vector3.GetLastAxisDelta</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastAxisDelta</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The Vector3 value difference between the previous update and update before that. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="87" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a0550e34179c1058ff63dea2e2305133e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.AddOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a47d6c1c558fb45841cd626df9ab3dcb9" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the <emphasis>functional</emphasis> active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s active state changes and the corresponding input source</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="96" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a594c49794c1103f0bb8c2db3c305e577" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.RemoveOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a47d6c1c558fb45841cd626df9ab3dcb9" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing a function when the <emphasis>functional</emphasis> active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="105" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ab615db1dda35e5faadf620c2ecf57c4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.AddOnActiveBindingChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnActiveBindingChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a47d6c1c558fb45841cd626df9ab3dcb9" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s active state changes and the corresponding input source</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="113" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a6df7d004d3dd3667283d6835b5aa6b15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.RemoveOnActiveBindingChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnActiveBindingChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a47d6c1c558fb45841cd626df9ab3dcb9" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="121" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a1a205d38a16267d83ec0e3dcbffa46d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.AddOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a78943f89733a1c1a8e12cb4896e65907" kindref="member">ChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the axis changes by more than the specified changeTolerance </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="129" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a2517009b114133b34c81a4713c308985" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.RemoveOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a78943f89733a1c1a8e12cb4896e65907" kindref="member">ChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive on change events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="137" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a05495244778aff42a6d87709c0aa0d55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.AddOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a99c0524f104c6d8c94a0e874b0ecc813" kindref="member">UpdateHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action (with the specified inputSource) is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="145" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1af7a0e46c8c8c18fddcce78f9bd31cb3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.RemoveOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a99c0524f104c6d8c94a0e874b0ecc813" kindref="member">UpdateHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="153" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a29dcca796420e96a856cff97a7b20924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.AddOnAxisListener</definition>
        <argsstring>(AxisHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnAxisListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a9b135b663b22c421dc36dbc48d2d35b6" kindref="member">AxisHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the Vector3 value of the action is non-zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="161" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1aa83da03bd829262cb3667db3394fdb35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector3.RemoveOnAxisListener</definition>
        <argsstring>(AxisHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnAxisListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a9b135b663b22c421dc36dbc48d2d35b6" kindref="member">AxisHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="169" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="169" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a2f71590f4c48a96be193d67555cae8d3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Vector3.OnBeforeSerialize</definition>
        <argsstring>()</argsstring>
        <name>OnBeforeSerialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="174" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a8bd498221427bd3a333bb5fa1c9715c9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Vector3.OnAfterDeserialize</definition>
        <argsstring>()</argsstring>
        <name>OnAfterDeserialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="178" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="178" bodyend="181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An analog action with three values generally from -1 to 1. Also provides a delta since the last update. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4986">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4983">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
      <node id="4985">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4986" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4987">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4984">
        <label>ISteamVR_Action_Vector3</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector3"/>
        <childnode refid="4985" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4982">
        <label>Valve.VR.SteamVR_Action_Vector3</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3"/>
        <childnode refid="4983" relation="public-inheritance">
        </childnode>
        <childnode refid="4984" relation="public-inheritance">
        </childnode>
        <childnode refid="4987" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4992">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4989">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
      <node id="4991">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4992" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4993">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4990">
        <label>ISteamVR_Action_Vector3</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector3"/>
        <childnode refid="4991" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4988">
        <label>Valve.VR.SteamVR_Action_Vector3</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3"/>
        <childnode refid="4989" relation="public-inheritance">
        </childnode>
        <childnode refid="4990" relation="public-inheritance">
        </childnode>
        <childnode refid="4993" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector3.cs" bodystart="16" bodyend="182"/>
    <listofallmembers>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a85095931b202ff69185fceaf75e5503a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>actionSet</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a529749f5fa62c29a4faac767cd9ece8d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>active</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a304d2c626023c9dea73f4289c57975b3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a47d6c1c558fb45841cd626df9ab3dcb9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>ActiveChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a5bb4f52dca76a5fda6f9977d787c0402" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>activeDevice</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abf4ed89526fde73c6142fbd458bc1eb8" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>activeDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a78f3e5c201024521dd7f575617f58244" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>activeOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a4aabe825dd43d59f2c23677904f93846" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>activeOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ab615db1dda35e5faadf620c2ecf57c4c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>AddOnActiveBindingChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a0550e34179c1058ff63dea2e2305133e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>AddOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a29dcca796420e96a856cff97a7b20924" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>AddOnAxisListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a1a205d38a16267d83ec0e3dcbffa46d7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>AddOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a05495244778aff42a6d87709c0aa0d55" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>AddOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a915afdc4075b4df59abf6f9797eadd36" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>axis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a9b135b663b22c421dc36dbc48d2d35b6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>AxisHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a129bfbee3aa107bc4fcb46716a240d88" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>changed</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a709444689c4ec680077a341f6cd7b984" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>changed</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afccb197dbb5d721e390e60cce83957f4" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>changedTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a761752bb73a29d2ee597e71a61476c79" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>changedTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a78943f89733a1c1a8e12cb4896e65907" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>ChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ac9b63c985650849f1c2ac32212ddef3e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>delta</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1fb56d52a28f0c621007a6b3ea7a71b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af39cd279bc56854ce6cf89402e405a1c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>ForceAddSourceToUpdateList</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1aecfcecacdabb3ca489a137a30f9b1728" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2cf3c55c01761a091db3afb42a3d47f2" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetActiveDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ade2feaacf2acea8cd4baceb3d861fa20" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ac8df802433c105f70c635dd4919cf433" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetAxisDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ab5dff6e847415ea70581fb544443738d" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a21f1b8a683a6950f2e2cd1a2bbe42acc" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1aa1b08a373d780aa48b52284b65e59434" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetLastAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a0c287b4a3eb4bffb3da860ae73f28981" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetLastAxisDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a330a9cf6a0b63e08804318d49e43509e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetLocalizedOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a6ae3b2c4b90917042b1fda3fe54b2d36" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetLocalizedOriginPart</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ad435fe38eac2d62d6ce217644a6586af" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetRenderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1accdc869f6fd50ef15580a271b6de4d30" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>GetTimeLastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a8f32f3e77335f4266e326200072a216c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a648d3f94c79e2ec43ec9846535fbf8ef" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>IsUpdating</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1f350e66dccb7f9124446967e856500" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>lastActive</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1af78f7edb626305afcd4cbccf10e14b0f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a0c9642e77bd7d7889df24be40da84e41" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>lastActiveOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a96b5ca1f6b126ef0b1ddda76abdc3535" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>lastActiveOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a80ebc3715ac17d087f83064081fc5b70" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>lastAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a61423de9edc8a8301e81f2522d635507" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>lastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ad31c92ed9c0df791c4cf8f6907dc6d73" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>lastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a3cd18f9f22012f93b408132d661340d0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>lastDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a400ef60ea3cecf1cd50d8da97a00d13b" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>localizedOriginName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abfb307a430eb5946c905d07bec79b2aa" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>localizedOriginName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1adf4506e3d4074903743a4f8e059b3f8a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>onActiveBindingChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a4e3133aec6465e1d5b17bd695ae9a579" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>onActiveChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a8bd498221427bd3a333bb5fa1c9715c9" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>OnAfterDeserialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a8bf8b824979af5005bc7d2b379781ee4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>onAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a2f71590f4c48a96be193d67555cae8d3" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>OnBeforeSerialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a9617101f10185cceb79de772bff1bd9b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>onChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1aa852fea6cefb457d963fae362b2a8b42" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>onUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a6df7d004d3dd3667283d6835b5aa6b15" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>RemoveOnActiveBindingChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a594c49794c1103f0bb8c2db3c305e577" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>RemoveOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1aa83da03bd829262cb3667db3394fdb35" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>RemoveOnAxisListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a2517009b114133b34c81a4713c308985" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>RemoveOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1af7a0e46c8c8c18fddcce78f9bd31cb3c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>RemoveOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af302f79ecf325f6507a3aca1de536097" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>renderModelComponentName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1aed8fb392a34de9c8840578c4a3f6a9ba" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>renderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1ad1151513dd5f37e8d04c7db2ee98590c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>SteamVR_Action_Vector3</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afd572897e423daf987b7708a6d8dc890" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>trackedDeviceIndex</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a5dbae568b5daf1cfd3b529b00750caae" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>trackedDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3_1a99c0524f104c6d8c94a0e874b0ecc813" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>UpdateHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2b6e25e75c6ebc79eda8b335abedb031" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>updateTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ada770da3da523e6bba5c7b5501a8da9e" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector3."><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>updateTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ac2e658d37dcdb843a0cff2e62cbd84cf" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector3</scope><name>UpdateValues</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
