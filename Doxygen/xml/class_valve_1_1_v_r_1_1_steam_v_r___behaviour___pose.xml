<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Behaviour_Pose</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a7d8dfcf694264e0a7bc878bee6eaa30b" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
        <definition>SteamVR_Action_Pose Valve.VR.SteamVR_Behaviour_Pose.poseAction</definition>
        <argsstring></argsstring>
        <name>poseAction</name>
        <initializer>= SteamVR_Input.GetAction&lt;<ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref>&gt;(&quot;Pose&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a95ff5e8947fe7780543e4c5679cfba52" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
        <definition>SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Pose.inputSource</definition>
        <argsstring></argsstring>
        <name>inputSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="20" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a59ea726c397c04757378717e6bf5a8a7" prot="public" static="no" mutable="no">
        <type>Transform</type>
        <definition>Transform Valve.VR.SteamVR_Behaviour_Pose.origin</definition>
        <argsstring></argsstring>
        <name>origin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="23" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1aa26155c725bb61edaebcf529645c77c4" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_event" kindref="compound">SteamVR_Behaviour_PoseEvent</ref></type>
        <definition>SteamVR_Behaviour_PoseEvent Valve.VR.SteamVR_Behaviour_Pose.onTransformUpdated</definition>
        <argsstring></argsstring>
        <name>onTransformUpdated</name>
        <briefdescription>
<para>This Unity event will fire whenever the position or rotation of this transform is updated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="33" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a1d23c9fc3364bc8d9a2e2047af2e2e92" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_event" kindref="compound">SteamVR_Behaviour_PoseEvent</ref></type>
        <definition>SteamVR_Behaviour_PoseEvent Valve.VR.SteamVR_Behaviour_Pose.onTransformChanged</definition>
        <argsstring></argsstring>
        <name>onTransformChanged</name>
        <briefdescription>
<para>This Unity event will fire whenever the position or rotation of this transform is changed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="36" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a5cb65c8eacdd57472f5c6e3d11302391" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___connected_changed_event" kindref="compound">SteamVR_Behaviour_Pose_ConnectedChangedEvent</ref></type>
        <definition>SteamVR_Behaviour_Pose_ConnectedChangedEvent Valve.VR.SteamVR_Behaviour_Pose.onConnectedChanged</definition>
        <argsstring></argsstring>
        <name>onConnectedChanged</name>
        <briefdescription>
<para>This Unity event will fire whenever the device is connected or disconnected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="39" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ab6c888d7509d753ee3542eac9de67f85" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___tracking_changed_event" kindref="compound">SteamVR_Behaviour_Pose_TrackingChangedEvent</ref></type>
        <definition>SteamVR_Behaviour_Pose_TrackingChangedEvent Valve.VR.SteamVR_Behaviour_Pose.onTrackingChanged</definition>
        <argsstring></argsstring>
        <name>onTrackingChanged</name>
        <briefdescription>
<para>This Unity event will fire whenever the device&apos;s tracking state changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="42" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a99f240404e0a47b614cb20246c395e47" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___device_index_changed_event" kindref="compound">SteamVR_Behaviour_Pose_DeviceIndexChangedEvent</ref></type>
        <definition>SteamVR_Behaviour_Pose_DeviceIndexChangedEvent Valve.VR.SteamVR_Behaviour_Pose.onDeviceIndexChanged</definition>
        <argsstring></argsstring>
        <name>onDeviceIndexChanged</name>
        <briefdescription>
<para>This Unity event will fire whenever the device&apos;s deviceIndex changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="45" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ad30505e3fea17998a4137dd2d987f65f" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1af2fee0ef3ee6fee2917805bb050216c2" kindref="member">UpdateHandler</ref></type>
        <definition>UpdateHandler Valve.VR.SteamVR_Behaviour_Pose.onTransformUpdatedEvent</definition>
        <argsstring></argsstring>
        <name>onTransformUpdatedEvent</name>
        <briefdescription>
<para>This C# event will fire whenever the position or rotation of this transform is updated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="49" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a2118c47de64b77f157864fb337bdee8b" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1abfdfc35f49754198589572579c59bcc2" kindref="member">ChangeHandler</ref></type>
        <definition>ChangeHandler Valve.VR.SteamVR_Behaviour_Pose.onTransformChangedEvent</definition>
        <argsstring></argsstring>
        <name>onTransformChangedEvent</name>
        <briefdescription>
<para>This C# event will fire whenever the position or rotation of this transform is changed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="52" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a6892abf4f394100985f6f0caa4ee0471" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1abb026a5887e19143d6b95452453dc8de" kindref="member">DeviceConnectedChangeHandler</ref></type>
        <definition>DeviceConnectedChangeHandler Valve.VR.SteamVR_Behaviour_Pose.onConnectedChangedEvent</definition>
        <argsstring></argsstring>
        <name>onConnectedChangedEvent</name>
        <briefdescription>
<para>This C# event will fire whenever the device is connected or disconnected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="55" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ae3372c5ebd6a668a5d100243d58a2e45" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a699268c8115abe175fc4cbd41cb99c11" kindref="member">TrackingChangeHandler</ref></type>
        <definition>TrackingChangeHandler Valve.VR.SteamVR_Behaviour_Pose.onTrackingChangedEvent</definition>
        <argsstring></argsstring>
        <name>onTrackingChangedEvent</name>
        <briefdescription>
<para>This C# event will fire whenever the device&apos;s tracking state changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="58" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a9dd0fe73f508419122ed56d737d78123" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ac81003e896ac2766c36b5c7a3438ef7f" kindref="member">DeviceIndexChangedHandler</ref></type>
        <definition>DeviceIndexChangedHandler Valve.VR.SteamVR_Behaviour_Pose.onDeviceIndexChangedEvent</definition>
        <argsstring></argsstring>
        <name>onDeviceIndexChangedEvent</name>
        <briefdescription>
<para>This C# event will fire whenever the device&apos;s deviceIndex changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="61" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a0569eb1ab4a75608b24ffe1adb2c0e03" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Behaviour_Pose.broadcastDeviceChanges</definition>
        <argsstring></argsstring>
        <name>broadcastDeviceChanges</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="65" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a703ee83cb05c779ce0098824374a4fb1" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Behaviour_Pose.isValid</definition>
        <argsstring></argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Returns whether or not the current pose is in a valid state </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="26" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a76fabf036c82c1731feaaa24244bc653" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Behaviour_Pose.isActive</definition>
        <argsstring></argsstring>
        <name>isActive</name>
        <briefdescription>
<para>Returns whether or not the pose action is bound and able to be updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="29" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="29" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a121b91b11f202d7dbca360a8a3b59af8" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Valve.VR.SteamVR_Behaviour_Pose.deviceIndex</definition>
        <argsstring></argsstring>
        <name>deviceIndex</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="67" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a41166eb791fb24922ce00e39c3c906d0" prot="protected" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___history_buffer" kindref="compound">SteamVR_HistoryBuffer</ref></type>
        <definition>SteamVR_HistoryBuffer Valve.VR.SteamVR_Behaviour_Pose.historyBuffer</definition>
        <argsstring></argsstring>
        <name>historyBuffer</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___history_buffer" kindref="compound">SteamVR_HistoryBuffer</ref>(30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="69" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a8eda899639df2ab346fbc027c7e6e8da" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Valve.VR.SteamVR_Behaviour_Pose.lastFrameUpdated</definition>
        <argsstring></argsstring>
        <name>lastFrameUpdated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="226" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a8a71e7617dd2132c4ef9c1ffcad1697b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Pose.Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="72" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="72" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1acab997c4e82da2873b6462214a4ca96f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Pose.OnEnable</definition>
        <argsstring>()</argsstring>
        <name>OnEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="86" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="86" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1afa7656935133f0cc8a07ddcba75eef42" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Pose.OnDisable</definition>
        <argsstring>()</argsstring>
        <name>OnDisable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="99" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="99" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ac02430d88b500c93031ed5b21b2783fe" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Pose.UpdateTransform</definition>
        <argsstring>()</argsstring>
        <name>UpdateTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="123" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a482f66677a5fba6e3f4f78540ea1c449" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Pose.OnDeviceConnectedChanged</definition>
        <argsstring>(SteamVR_Action_Pose changedAction, SteamVR_Input_Sources changedSource, bool connected)</argsstring>
        <name>OnDeviceConnectedChanged</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
          <declname>changedAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>changedSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>connected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="147" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="147" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a5f7af5e04519b2f061b96aaba64035b4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Pose.OnTrackingChanged</definition>
        <argsstring>(SteamVR_Action_Pose changedAction, SteamVR_Input_Sources changedSource, ETrackingResult trackingChanged)</argsstring>
        <name>OnTrackingChanged</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
          <declname>changedAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>changedSource</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
          <declname>trackingChanged</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="157" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1aec903264cd15509cc38de0fc70629472" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Pose.CheckDeviceIndex</definition>
        <argsstring>()</argsstring>
        <name>CheckDeviceIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="165" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="165" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a1e7d5dd9ecc5dedfd163fc0bdc95684d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Pose.UpdateHistoryBuffer</definition>
        <argsstring>()</argsstring>
        <name>UpdateHistoryBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="227" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="227" bodyend="235"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ab759ae3f6afa15b95267afbd412d37e1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Pose.SteamVR_Behaviour_Pose_OnUpdate</definition>
        <argsstring>(SteamVR_Action_Pose fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>SteamVR_Behaviour_Pose_OnUpdate</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="112" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="112" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a2c10c876c02d99adb0bea333cf462b02" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Pose.SteamVR_Behaviour_Pose_OnChange</definition>
        <argsstring>(SteamVR_Action_Pose fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>SteamVR_Behaviour_Pose_OnChange</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="139" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="139" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a045c834f9f876b6eb28c916fe0a4c503" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Valve.VR.SteamVR_Behaviour_Pose.GetDeviceIndex</definition>
        <argsstring>()</argsstring>
        <name>GetDeviceIndex</name>
        <briefdescription>
<para>Returns the device index for the device bound to the pose. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="192" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ac36bf2a333805b149722844bf2994256" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Behaviour_Pose.GetVelocity</definition>
        <argsstring>()</argsstring>
        <name>GetVelocity</name>
        <briefdescription>
<para>Returns the current velocity of the pose (as of the last update) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="201" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1aa89766e6a3e7d4704441f6ccdc0930f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Behaviour_Pose.GetAngularVelocity</definition>
        <argsstring>()</argsstring>
        <name>GetAngularVelocity</name>
        <briefdescription>
<para>Returns the current angular velocity of the pose (as of the last update) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="207" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a5074775b7384f0eb3754b52b4c46df17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Behaviour_Pose.GetVelocitiesAtTimeOffset</definition>
        <argsstring>(float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity)</argsstring>
        <name>GetVelocitiesAtTimeOffset</name>
        <param>
          <type>float</type>
          <declname>secondsFromNow</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>angularVelocity</declname>
        </param>
        <briefdescription>
<para>Returns the velocities of the pose at the time specified. Can predict in the future or return past values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="213" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1aff9156a545cb6722a73421ac20ebeba9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Pose.GetEstimatedPeakVelocities</definition>
        <argsstring>(out Vector3 velocity, out Vector3 angularVelocity)</argsstring>
        <name>GetEstimatedPeakVelocities</name>
        <param>
          <type>out Vector3</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>angularVelocity</declname>
        </param>
        <briefdescription>
<para>Uses previously recorded values to find the peak speed of the pose and returns the corresponding velocity and angular velocity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="219" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="219" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a8ce88c34c63f922b59292680a5c0803a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_Behaviour_Pose.GetLocalizedName</definition>
        <argsstring>(params EVRInputStringBits[] localizedParts)</argsstring>
        <name>GetLocalizedName</name>
        <param>
          <type>params <ref refid="namespace_valve_1_1_v_r_1a05e76187bbc5846b9bfb44f6acf13912" kindref="member">EVRInputStringBits</ref> []</type>
          <declname>localizedParts</declname>
        </param>
        <briefdescription>
<para>Gets the localized name of the device that the action corresponds to. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localizedParts</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem>
<para>VRInputString_Hand - Which hand the origin is in. E.g. &quot;Left Hand&quot; </para>
</listitem>
<listitem>
<para>VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. &quot;Vive Controller&quot; </para>
</listitem>
<listitem>
<para>VRInputString_InputSource - What part of that controller is the origin. E.g. &quot;Trackpad&quot; </para>
</listitem>
<listitem>
<para>VRInputString_All - All of the above. E.g. &quot;Left Hand Vive Controller Trackpad&quot; </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="248" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="248" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a7730a086ee26d198ce89285c305151d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Pose.ActiveChangeHandler</definition>
        <argsstring>(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, bool active)</argsstring>
        <name>ActiveChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kindref="compound">SteamVR_Behaviour_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1abfdfc35f49754198589572579c59bcc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Pose.ChangeHandler</definition>
        <argsstring>(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>ChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kindref="compound">SteamVR_Behaviour_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1af2fee0ef3ee6fee2917805bb050216c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Pose.UpdateHandler</definition>
        <argsstring>(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>UpdateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kindref="compound">SteamVR_Behaviour_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a699268c8115abe175fc4cbd41cb99c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Pose.TrackingChangeHandler</definition>
        <argsstring>(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, ETrackingResult trackingState)</argsstring>
        <name>TrackingChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kindref="compound">SteamVR_Behaviour_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
          <declname>trackingState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1abe1b44cd414dbcb2eff3ce7b0ea7fb94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Pose.ValidPoseChangeHandler</definition>
        <argsstring>(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, bool validPose)</argsstring>
        <name>ValidPoseChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kindref="compound">SteamVR_Behaviour_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validPose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1abb026a5887e19143d6b95452453dc8de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Pose.DeviceConnectedChangeHandler</definition>
        <argsstring>(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, bool deviceConnected)</argsstring>
        <name>DeviceConnectedChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kindref="compound">SteamVR_Behaviour_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deviceConnected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ac81003e896ac2766c36b5c7a3438ef7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Pose.DeviceIndexChangedHandler</definition>
        <argsstring>(SteamVR_Behaviour_Pose fromAction, SteamVR_Input_Sources fromSource, int newDeviceIndex)</argsstring>
        <name>DeviceIndexChangedHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kindref="compound">SteamVR_Behaviour_Pose</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newDeviceIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="261" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This component simplifies the use of Pose actions. Adding it to a gameobject will auto set that transform&apos;s position and rotation every update to match the pose. Advanced velocity estimation is handled through a buffer of the last 30 updates. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5115">
        <label>Valve.VR.SteamVR_Behaviour_Pose</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose"/>
        <childnode refid="5116" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5116">
        <label>MonoBehaviour</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5120">
        <label>UnityEvent&lt; SteamVR_Behaviour_Pose, SteamVR_Input_Sources &gt;</label>
      </node>
      <node id="5119">
        <label>Valve.VR.SteamVR_Behaviour_PoseEvent</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_event"/>
        <childnode refid="5120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5123">
        <label>Valve.VR.SteamVR_HistoryBuffer</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___history_buffer"/>
        <childnode refid="5124" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5121">
        <label>Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___device_index_changed_event"/>
        <childnode refid="5122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5129">
        <label>Valve.VR.SteamVR_Action_Pose</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose"/>
        <childnode refid="5130" relation="public-inheritance">
        </childnode>
        <childnode refid="5131" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5130">
        <label>SteamVR_Action_Pose_Base&lt; SteamVR_Action_Pose_Source_Map&lt; SteamVR_Action_Pose_Source &gt;, SteamVR_Action_Pose_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
      </node>
      <node id="5131">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="5128">
        <label>UnityEvent&lt; SteamVR_Behaviour_Pose, SteamVR_Input_Sources, bool &gt;</label>
      </node>
      <node id="5125">
        <label>Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___tracking_changed_event"/>
        <childnode refid="5126" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5126">
        <label>UnityEvent&lt; SteamVR_Behaviour_Pose, SteamVR_Input_Sources, ETrackingResult &gt;</label>
      </node>
      <node id="5122">
        <label>UnityEvent&lt; SteamVR_Behaviour_Pose, SteamVR_Input_Sources, int &gt;</label>
      </node>
      <node id="5124">
        <label>SteamVR_RingBuffer&lt; SteamVR_HistoryStep &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___ring_buffer"/>
      </node>
      <node id="5117">
        <label>Valve.VR.SteamVR_Behaviour_Pose</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose"/>
        <childnode refid="5118" relation="public-inheritance">
        </childnode>
        <childnode refid="5119" relation="usage">
          <edgelabel>onTransformChanged</edgelabel>
          <edgelabel>onTransformUpdated</edgelabel>
        </childnode>
        <childnode refid="5121" relation="usage">
          <edgelabel>onDeviceIndexChanged</edgelabel>
        </childnode>
        <childnode refid="5123" relation="usage">
          <edgelabel>historyBuffer</edgelabel>
        </childnode>
        <childnode refid="5125" relation="usage">
          <edgelabel>onTrackingChanged</edgelabel>
        </childnode>
        <childnode refid="5127" relation="usage">
          <edgelabel>onConnectedChanged</edgelabel>
        </childnode>
        <childnode refid="5129" relation="usage">
          <edgelabel>poseAction</edgelabel>
        </childnode>
      </node>
      <node id="5118">
        <label>MonoBehaviour</label>
      </node>
      <node id="5127">
        <label>Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___connected_changed_event"/>
        <childnode refid="5128" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" line="16" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Pose.cs" bodystart="15" bodyend="262"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a7730a086ee26d198ce89285c305151d1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>ActiveChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a0569eb1ab4a75608b24ffe1adb2c0e03" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>broadcastDeviceChanges</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1abfdfc35f49754198589572579c59bcc2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>ChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1aec903264cd15509cc38de0fc70629472" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>CheckDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1abb026a5887e19143d6b95452453dc8de" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>DeviceConnectedChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a121b91b11f202d7dbca360a8a3b59af8" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>deviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ac81003e896ac2766c36b5c7a3438ef7f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>DeviceIndexChangedHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1aa89766e6a3e7d4704441f6ccdc0930f3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>GetAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a045c834f9f876b6eb28c916fe0a4c503" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>GetDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1aff9156a545cb6722a73421ac20ebeba9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>GetEstimatedPeakVelocities</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a8ce88c34c63f922b59292680a5c0803a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>GetLocalizedName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a5074775b7384f0eb3754b52b4c46df17" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>GetVelocitiesAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ac36bf2a333805b149722844bf2994256" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>GetVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a41166eb791fb24922ce00e39c3c906d0" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>historyBuffer</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a95ff5e8947fe7780543e4c5679cfba52" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>inputSource</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a76fabf036c82c1731feaaa24244bc653" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>isActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a703ee83cb05c779ce0098824374a4fb1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>isValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a8eda899639df2ab346fbc027c7e6e8da" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>lastFrameUpdated</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a5cb65c8eacdd57472f5c6e3d11302391" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onConnectedChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a6892abf4f394100985f6f0caa4ee0471" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onConnectedChangedEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a482f66677a5fba6e3f4f78540ea1c449" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>OnDeviceConnectedChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a99f240404e0a47b614cb20246c395e47" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onDeviceIndexChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a9dd0fe73f508419122ed56d737d78123" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onDeviceIndexChangedEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1afa7656935133f0cc8a07ddcba75eef42" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>OnDisable</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1acab997c4e82da2873b6462214a4ca96f" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>OnEnable</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a5f7af5e04519b2f061b96aaba64035b4" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>OnTrackingChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ab6c888d7509d753ee3542eac9de67f85" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onTrackingChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ae3372c5ebd6a668a5d100243d58a2e45" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onTrackingChangedEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a1d23c9fc3364bc8d9a2e2047af2e2e92" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onTransformChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a2118c47de64b77f157864fb337bdee8b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onTransformChangedEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1aa26155c725bb61edaebcf529645c77c4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onTransformUpdated</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ad30505e3fea17998a4137dd2d987f65f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>onTransformUpdatedEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a59ea726c397c04757378717e6bf5a8a7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>origin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a7d8dfcf694264e0a7bc878bee6eaa30b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>poseAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a8a71e7617dd2132c4ef9c1ffcad1697b" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>Start</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a2c10c876c02d99adb0bea333cf462b02" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>SteamVR_Behaviour_Pose_OnChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ab759ae3f6afa15b95267afbd412d37e1" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>SteamVR_Behaviour_Pose_OnUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a699268c8115abe175fc4cbd41cb99c11" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>TrackingChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1af2fee0ef3ee6fee2917805bb050216c2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>UpdateHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1a1e7d5dd9ecc5dedfd163fc0bdc95684d" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>UpdateHistoryBuffer</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1ac02430d88b500c93031ed5b21b2783fe" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>UpdateTransform</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_1abe1b44cd414dbcb2eff3ce7b0ea7fb94" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Pose</scope><name>ValidPoseChangeHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
