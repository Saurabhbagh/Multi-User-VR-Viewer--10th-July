<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_hand_factory_test_8cs" kind="file" language="C#">
    <compoundname>HandFactoryTest.cs</compoundname>
    <innerclass refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands" prot="public">Leap::Unity::Tests::HandFactoryTwoHands</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left" prot="public">Leap::Unity::Tests::HandFactoryLeft</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right" prot="public">Leap::Unity::Tests::HandFactoryRight</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity">Leap::Unity</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity_1_1_tests">Leap::Unity::Tests</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>NUnit.Framework;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity_1_1_tests" kindref="compound">Leap.Unity.Tests</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>[TestFixture(Category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestHandFactory&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="16" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands" kindref="compound">HandFactoryTwoHands</ref><sp/>:<sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator" kindref="compound">FrameValidator</ref><sp/>{</highlight></codeline>
<codeline lineno="17" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1ab929744527e15f0ad07ff17d0e867355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref><sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1ab929744527e15f0ad07ff17d0e867355" kindref="member">createFrame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TestHandFactory.MakeTestFrame(0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="22" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1acf5d61eadd85814d90e0dd53b014fd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1acf5d61eadd85814d90e0dd53b014fd6f" kindref="member">CorrectHandCount</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.That(<ref refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab0fd118aae62aad4db938a4e919f237b" kindref="member">_frame</ref>.<ref refid="class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069" kindref="member">Hands</ref>.Count,<sp/>Is.EqualTo(2));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>[TestFixture(Category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestHandFactory&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="28" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left" kindref="compound">HandFactoryLeft</ref><sp/>:<sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator" kindref="compound">FrameValidator</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1aee2926151ba99102d58cbefb2a029b06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref><sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1aee2926151ba99102d58cbefb2a029b06" kindref="member">createFrame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TestHandFactory.MakeTestFrame(0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="34" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1a6783dd99b0fda3636aa43e7512ecf4dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1a6783dd99b0fda3636aa43e7512ecf4dc" kindref="member">CorrectHandCount</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.That(<ref refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab0fd118aae62aad4db938a4e919f237b" kindref="member">_frame</ref>.<ref refid="class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069" kindref="member">Hands</ref>.Count,<sp/>Is.EqualTo(1));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>[TestFixture(Category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestHandFactory&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="40" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right" kindref="compound">HandFactoryRight</ref><sp/>:<sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator" kindref="compound">FrameValidator</ref><sp/>{</highlight></codeline>
<codeline lineno="41" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a78c8a9a73c6c7e18c0eb8890e39d64b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref><sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a78c8a9a73c6c7e18c0eb8890e39d64b5" kindref="member">createFrame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TestHandFactory.MakeTestFrame(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="46" refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a96faa3acb560751fb8c44712666b111a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a96faa3acb560751fb8c44712666b111a" kindref="member">CorrectHandCount</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.That(<ref refid="class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab0fd118aae62aad4db938a4e919f237b" kindref="member">_frame</ref>.<ref refid="class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069" kindref="member">Hands</ref>.Count,<sp/>Is.EqualTo(1));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/HandFactoryTest.cs"/>
  </compounddef>
</doxygen>
