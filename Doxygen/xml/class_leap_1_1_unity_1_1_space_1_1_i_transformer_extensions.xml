<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_space_1_1_i_transformer_extensions" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::Space::ITransformerExtensions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_space_1_1_i_transformer_extensions_1a7263ff2eb061f023a6271d2a0750d52d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Space.ITransformerExtensions.WorldSpaceUnwarp</definition>
        <argsstring>(this ITransformer transformer, Vector3 worldWarpedPosition, Quaternion worldWarpedRotation, out Vector3 worldRectilinearPosition, out Quaternion worldRectilinearRotation)</argsstring>
        <name>WorldSpaceUnwarp</name>
        <param>
          <type>this <ref refid="interface_leap_1_1_unity_1_1_space_1_1_i_transformer" kindref="compound">ITransformer</ref></type>
          <declname>transformer</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>worldWarpedPosition</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>worldWarpedRotation</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>worldRectilinearPosition</declname>
        </param>
        <param>
          <type>out Quaternion</type>
          <declname>worldRectilinearRotation</declname>
        </param>
        <briefdescription>
<para>Given a transformer and a world-space position and rotation, this method interprets that position and rotation as being within the transformers &quot;warped&quot; space (e.g. cylindrical space for <ref refid="class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space" kindref="compound">LeapCylindricalSpace</ref>) and outputs the world-space position and rotation that would result if the space was no longer warped, i.e., standard <ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref> rectilinear space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Space/ITransformer.cs" line="101" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Space/ITransformer.cs" bodystart="101" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Space/ITransformer.cs" line="93" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Space/ITransformer.cs" bodystart="93" bodyend="116"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_space_1_1_i_transformer_extensions_1a7263ff2eb061f023a6271d2a0750d52d" prot="public" virt="non-virtual"><scope>Leap::Unity::Space::ITransformerExtensions</scope><name>WorldSpaceUnwarp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
