<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_produce_consume_buffer" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::ProduceConsumeBuffer</compoundname>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a9081a46c0f85b70b343f5735c9c7c1d0" prot="private" static="no" mutable="no">
        <type>T []</type>
        <definition>T [] Leap.Unity.ProduceConsumeBuffer&lt; T &gt;._buffer</definition>
        <argsstring></argsstring>
        <name>_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="16" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a22e6d3526aab5b8886a656e974316b0e" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint Leap.Unity.ProduceConsumeBuffer&lt; T &gt;._bufferMask</definition>
        <argsstring></argsstring>
        <name>_bufferMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1ad4226c12e9d170a9c2bac24bb36839af" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint Leap.Unity.ProduceConsumeBuffer&lt; T &gt;._head</definition>
        <argsstring></argsstring>
        <name>_head</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="18" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a630a1b316f865c1378d9794ea03367f3" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint Leap.Unity.ProduceConsumeBuffer&lt; T &gt;._tail</definition>
        <argsstring></argsstring>
        <name>_tail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="18" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a04753532a728b38e5cc0226c797fbef1" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.Capacity</definition>
        <argsstring></argsstring>
        <name>Capacity</name>
        <briefdescription>
<para>Returns the maximum number of elements that the buffer can hold. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="56" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1ab7a378bf347d928035288ae0e790b938" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.Count</definition>
        <argsstring></argsstring>
        <name>Count</name>
        <briefdescription>
<para>Returns the current number of elements that are held inside the buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="65" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="65" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1abb2dd45e9fdf9542e1392a16b5a19a9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.ProduceConsumeBuffer</definition>
        <argsstring>(int minCapacity)</argsstring>
        <name>ProduceConsumeBuffer</name>
        <param>
          <type>int</type>
          <declname>minCapacity</declname>
        </param>
        <briefdescription>
<para>Constructs a new produce consumer buffer of at least a certain capacity. Once the buffer is created, the capacity cannot be modified. </para>
        </briefdescription>
        <detaileddescription>
<para>If the minimum capacity is a power of two, it will be used as the actual capacity. If the minimum capacity is not a power of two, the next highest power of two will be used as the capacity. This behavior is an optimization, Internally this class uses a bitwise AND operation instead of a slower modulus operation for indexing, which only is possible if the array length is a power of two. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="30" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="30" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a2c3eaa1d8aafc68cf6d8d020ae47e4de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.TryEnqueue</definition>
        <argsstring>(ref T t)</argsstring>
        <name>TryEnqueue</name>
        <param>
          <type>ref T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Tries to enqueue a value into the buffer. If the buffer is already full, this method will perform no action and return false. This method is only safe to be called from a single producer thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="83" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="83" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1ae80a5be8a8e07eb8b922fdfca764f1da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.TryEnqueue</definition>
        <argsstring>(T t)</argsstring>
        <name>TryEnqueue</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Tries to enqueue a value into the buffer. If the buffer is already full, this method will perform no action and return false. This method is only safe to be called from a single producer thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="97" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a4884c0e9c693c92439a2bc7fe99275e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.TryPeek</definition>
        <argsstring>(out T t)</argsstring>
        <name>TryPeek</name>
        <param>
          <type>out T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Tries to get the next element that would be dequeued from this buffer. If there is no element yet, this method will return false. If there is an element ready to be dequeued, it will be copied to the out param and this method will return true. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is only safe to be called from a single consumer thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="109" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="109" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a8974fa947fcc940620300c54d3de6f1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.TryDequeue</definition>
        <argsstring>(out T t)</argsstring>
        <name>TryDequeue</name>
        <param>
          <type>out T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Tries to dequeue a value off of the buffer. If the buffer is empty this method will perform no action and return false. This method is only safe to be called from a single consumer thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="127" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="127" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a0a756b193a73f2ab9dd21a89dce33b65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.TryDequeue</definition>
        <argsstring>()</argsstring>
        <name>TryDequeue</name>
        <briefdescription>
<para>Tries to dequeue a value off of the buffer. If the buffer is empty this method will perform no action and return false. This method is only safe to be called from a single consumer thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="143" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_produce_consume_buffer_1a72a0d4ce3f8ec48ed46fa80f5944f988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Unity.ProduceConsumeBuffer&lt; T &gt;.TryDequeueAll</definition>
        <argsstring>(out T mostRecent)</argsstring>
        <name>TryDequeueAll</name>
        <param>
          <type>out T</type>
          <declname>mostRecent</declname>
        </param>
        <briefdescription>
<para>Tries to dequeue all values off of the buffer, returning the most recently added element. If there was an element found, this method will return true, else it will return false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="157" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="157" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" line="15" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ProduceConsumeBuffer.cs" bodystart="15" bodyend="169"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a9081a46c0f85b70b343f5735c9c7c1d0" prot="private" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>_buffer</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a22e6d3526aab5b8886a656e974316b0e" prot="private" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>_bufferMask</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1ad4226c12e9d170a9c2bac24bb36839af" prot="private" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>_head</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a630a1b316f865c1378d9794ea03367f3" prot="private" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>_tail</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a04753532a728b38e5cc0226c797fbef1" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>Capacity</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1ab7a378bf347d928035288ae0e790b938" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>Count</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1abb2dd45e9fdf9542e1392a16b5a19a9e" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>ProduceConsumeBuffer</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a8974fa947fcc940620300c54d3de6f1b" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>TryDequeue</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a0a756b193a73f2ab9dd21a89dce33b65" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>TryDequeue</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a72a0d4ce3f8ec48ed46fa80f5944f988" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>TryDequeueAll</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a2c3eaa1d8aafc68cf6d8d020ae47e4de" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>TryEnqueue</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1ae80a5be8a8e07eb8b922fdfca764f1da" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>TryEnqueue</name></member>
      <member refid="class_leap_1_1_unity_1_1_produce_consume_buffer_1a4884c0e9c693c92439a2bc7fe99275e9" prot="public" virt="non-virtual"><scope>Leap::Unity::ProduceConsumeBuffer</scope><name>TryPeek</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
