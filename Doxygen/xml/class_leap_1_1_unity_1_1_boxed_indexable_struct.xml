<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_boxed_indexable_struct" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::BoxedIndexableStruct</compoundname>
    <basecompoundref refid="interface_leap_1_1_unity_1_1_i_indexable" prot="public" virt="non-virtual">Leap.Unity.IIndexable&lt; Element &gt;</basecompoundref>
    <basecompoundref refid="interface_leap_1_1_unity_1_1_i_poolable" prot="public" virt="non-virtual">Leap.Unity.IPoolable</basecompoundref>
    <templateparamlist>
      <param>
        <type>Element</type>
      </param>
      <param>
        <type>IndexableStruct</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_boxed_indexable_struct_1a84590ff61c55ba6fd94bf40eb47e38f1" prot="public" static="no" mutable="no">
        <type>IndexableStruct?</type>
        <definition>IndexableStruct? Leap.Unity.BoxedIndexableStruct&lt; Element, IndexableStruct &gt;.maybeIndexableStruct</definition>
        <argsstring></argsstring>
        <name>maybeIndexableStruct</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>The wrapped indexable struct, or null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="57" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_boxed_indexable_struct_1a36e9c859805dc125dbb8c0a37416a208" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Element?</type>
        <definition>Element? Leap.Unity.BoxedIndexableStruct&lt; Element, IndexableStruct &gt;.this[int idx]</definition>
        <argsstring></argsstring>
        <name>this[int idx]</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="59" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_boxed_indexable_struct_1a55644e94415a39429a33cb34a94fc673" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Leap.Unity.BoxedIndexableStruct&lt; Element, IndexableStruct &gt;.Count</definition>
        <argsstring></argsstring>
        <name>Count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="71" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="71" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_boxed_indexable_struct_1a3742788d7d9267dbb858f26da1129702" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.BoxedIndexableStruct&lt; Element, IndexableStruct &gt;.OnSpawn</definition>
        <argsstring>()</argsstring>
        <name>OnSpawn</name>
        <reimplements refid="interface_leap_1_1_unity_1_1_i_poolable_1af2e9cf2345aeddf586f7e86fa8301442">OnSpawn</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="78" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_boxed_indexable_struct_1aa8fe681e5cd7eb74d91af8fb2d950fe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.BoxedIndexableStruct&lt; Element, IndexableStruct &gt;.OnRecycle</definition>
        <argsstring>()</argsstring>
        <name>OnRecycle</name>
        <reimplements refid="interface_leap_1_1_unity_1_1_i_poolable_1ad509738b2480f85d435b41d05d172bfe">OnRecycle</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="80" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="80" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Explicit boxing class for IIndexableStructs that implements <ref refid="interface_leap_1_1_unity_1_1_i_indexable" kindref="compound">IIndexable</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>This is useful when you need to pass an <ref refid="interface_leap_1_1_unity_1_1_i_indexable_struct" kindref="compound">IIndexableStruct</ref> into a context that requires an <ref refid="interface_leap_1_1_unity_1_1_i_indexable" kindref="compound">IIndexable</ref> and you also need to avoid allocating any garbage. To avoid allocation, you can use the generic Pool to pool instances of this class and pass it around as an <ref refid="interface_leap_1_1_unity_1_1_i_indexable" kindref="compound">IIndexable</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="372">
        <label>IPoolable</label>
        <link refid="interface_leap_1_1_unity_1_1_i_poolable"/>
      </node>
      <node id="371">
        <label>IIndexable&lt; Element &gt;</label>
        <link refid="interface_leap_1_1_unity_1_1_i_indexable"/>
      </node>
      <node id="370">
        <label>Leap.Unity.BoxedIndexableStruct&lt; Element, IndexableStruct &gt;</label>
        <link refid="class_leap_1_1_unity_1_1_boxed_indexable_struct"/>
        <childnode refid="371" relation="public-inheritance">
        </childnode>
        <childnode refid="372" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="375">
        <label>IPoolable</label>
        <link refid="interface_leap_1_1_unity_1_1_i_poolable"/>
      </node>
      <node id="374">
        <label>IIndexable&lt; Element &gt;</label>
        <link refid="interface_leap_1_1_unity_1_1_i_indexable"/>
      </node>
      <node id="373">
        <label>Leap.Unity.BoxedIndexableStruct&lt; Element, IndexableStruct &gt;</label>
        <link refid="class_leap_1_1_unity_1_1_boxed_indexable_struct"/>
        <childnode refid="374" relation="public-inheritance">
        </childnode>
        <childnode refid="375" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="52" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="48" bodyend="83"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_boxed_indexable_struct_1a55644e94415a39429a33cb34a94fc673" prot="public" virt="non-virtual"><scope>Leap::Unity::BoxedIndexableStruct</scope><name>Count</name></member>
      <member refid="class_leap_1_1_unity_1_1_boxed_indexable_struct_1a84590ff61c55ba6fd94bf40eb47e38f1" prot="public" virt="non-virtual"><scope>Leap::Unity::BoxedIndexableStruct</scope><name>maybeIndexableStruct</name></member>
      <member refid="class_leap_1_1_unity_1_1_boxed_indexable_struct_1aa8fe681e5cd7eb74d91af8fb2d950fe7" prot="public" virt="non-virtual"><scope>Leap::Unity::BoxedIndexableStruct</scope><name>OnRecycle</name></member>
      <member refid="class_leap_1_1_unity_1_1_boxed_indexable_struct_1a3742788d7d9267dbb858f26da1129702" prot="public" virt="non-virtual"><scope>Leap::Unity::BoxedIndexableStruct</scope><name>OnSpawn</name></member>
      <member refid="class_leap_1_1_unity_1_1_boxed_indexable_struct_1a36e9c859805dc125dbb8c0a37416a208" prot="public" virt="non-virtual"><scope>Leap::Unity::BoxedIndexableStruct</scope><name>this[int idx]</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
