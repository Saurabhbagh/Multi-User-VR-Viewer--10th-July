<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_leap_1_1_unity_1_1_hash" kind="struct" language="C#" prot="public">
    <compoundname>Leap::Unity::Hash</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IEnumerable</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">IEquatable&lt; Hash &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_leap_1_1_unity_1_1_hash_1a7a0964b85057a7e4619244f953255fa8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Leap.Unity.Hash._hash</definition>
        <argsstring></argsstring>
        <name>_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="struct_leap_1_1_unity_1_1_hash_1a1aad964d11acc504ebc0e2769a122e78" prot="private" static="yes" mutable="no">
        <type>List&lt; Behaviour &gt;</type>
        <definition>List&lt;Behaviour&gt; Leap.Unity.Hash._behaviourCache</definition>
        <argsstring></argsstring>
        <name>_behaviourCache</name>
        <initializer>= new List&lt;Behaviour&gt;()</initializer>
        <briefdescription>
<para>Returns a hash code of the entire transform hierarchy, changing any of the following should result in a different hash code: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>position/rotation/scale of any transform</para>
</listitem><listitem><para>creation/deletion/reordering of any transform</para>
</listitem><listitem><para>turning a transform into a rect transform or back</para>
</listitem><listitem><para>enabling or disabling ANY behavior </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="44" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1afaa1c83436400dc4f74450e95d278689" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Unity.Hash.Hash</definition>
        <argsstring>(int hash)</argsstring>
        <name>Hash</name>
        <param>
          <type>int</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="21" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1a0bfae32cff62bebe9947c6aabea3d04f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Hash.Add&lt; T &gt;</definition>
        <argsstring>(T t)</argsstring>
        <name>Add&lt; T &gt;</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="25" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1a3858e9f1fe271cbde1c5d223409187bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Hash.AddRange&lt; T &gt;</definition>
        <argsstring>(List&lt; T &gt; sequence)</argsstring>
        <name>AddRange&lt; T &gt;</name>
        <param>
          <type>List&lt; T &gt;</type>
          <declname>sequence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="30" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1acbae9a5f2f31c33d8f0bc770a3bc60a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerator</type>
        <definition>IEnumerator Leap.Unity.Hash.GetEnumerator</definition>
        <argsstring>()</argsstring>
        <name>GetEnumerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="91" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1aefa4c7403803016313cd689201ee35e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override int</type>
        <definition>override int Leap.Unity.Hash.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="95" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1ab0efc09e8430daada3c57955b9d8a6da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Leap.Unity.Hash.Equals</definition>
        <argsstring>(object obj)</argsstring>
        <name>Equals</name>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="99" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1a1e99f703a48e5e4087b2b284abd2a887" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Unity.Hash.Equals</definition>
        <argsstring>(Hash other)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="struct_leap_1_1_unity_1_1_hash" kindref="compound">Hash</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="107" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="107" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1a02e356e1c90fafe7904d699cb197552d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_hash" kindref="compound">Hash</ref></type>
        <definition>static Hash Leap.Unity.Hash.GetHierarchyHash</definition>
        <argsstring>(Transform root)</argsstring>
        <name>GetHierarchyHash</name>
        <param>
          <type>Transform</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="45" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="45" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1a041d41aae91527057d3731f07c41a29b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_hash" kindref="compound">Hash</ref></type>
        <definition>static Hash Leap.Unity.Hash.GetDataHash</definition>
        <argsstring>(Transform transform)</argsstring>
        <name>GetDataHash</name>
        <param>
          <type>Transform</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Returns a hash of the Transform in addition to it&apos;s data. Changing either the position, rotation, or scale of a transform will result in a different hash. Two transforms with the same position rotation and scale will not have the same hash! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="74" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="74" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1a038bce1286e011a879e995b1e094d138" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Leap.Unity.Hash.operator Hash</definition>
        <argsstring>(int hash)</argsstring>
        <name>operator Hash</name>
        <param>
          <type>int</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="111" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_hash_1a85fa52543cbef6d3ee6e5cbd58e05da9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Leap.Unity.Hash.operator int</definition>
        <argsstring>(Hash hash)</argsstring>
        <name>operator int</name>
        <param>
          <type><ref refid="struct_leap_1_1_unity_1_1_hash" kindref="compound">Hash</ref></type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="115" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="115" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1622">
        <label>IEquatable&lt; Hash &gt;</label>
      </node>
      <node id="1620">
        <label>Leap.Unity.Hash</label>
        <link refid="struct_leap_1_1_unity_1_1_hash"/>
        <childnode refid="1621" relation="public-inheritance">
        </childnode>
        <childnode refid="1622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1621">
        <label>IEnumerable</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1625">
        <label>IEquatable&lt; Hash &gt;</label>
      </node>
      <node id="1623">
        <label>Leap.Unity.Hash</label>
        <link refid="struct_leap_1_1_unity_1_1_hash"/>
        <childnode refid="1624" relation="public-inheritance">
        </childnode>
        <childnode refid="1625" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1624">
        <label>IEnumerable</label>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" line="18" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Hash.cs" bodystart="18" bodyend="118"/>
    <listofallmembers>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a1aad964d11acc504ebc0e2769a122e78" prot="private" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>_behaviourCache</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a7a0964b85057a7e4619244f953255fa8" prot="private" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>_hash</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a0bfae32cff62bebe9947c6aabea3d04f" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>Add&lt; T &gt;</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a3858e9f1fe271cbde1c5d223409187bb" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>AddRange&lt; T &gt;</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1ab0efc09e8430daada3c57955b9d8a6da" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>Equals</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a1e99f703a48e5e4087b2b284abd2a887" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>Equals</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a041d41aae91527057d3731f07c41a29b" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>GetDataHash</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1acbae9a5f2f31c33d8f0bc770a3bc60a1" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>GetEnumerator</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1aefa4c7403803016313cd689201ee35e1" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>GetHashCode</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a02e356e1c90fafe7904d699cb197552d" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>GetHierarchyHash</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1afaa1c83436400dc4f74450e95d278689" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>Hash</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a038bce1286e011a879e995b1e094d138" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>operator Hash</name></member>
      <member refid="struct_leap_1_1_unity_1_1_hash_1a85fa52543cbef6d3ee6e5cbd58e05da9" prot="public" virt="non-virtual"><scope>Leap::Unity::Hash</scope><name>operator int</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
