<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_c_v_r_chaperone" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::CVRChaperone</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a853b0a88f5e3b04ef35e5393740b4fc8" prot="private" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_i_v_r_chaperone" kindref="compound">IVRChaperone</ref></type>
        <definition>IVRChaperone Valve.VR.CVRChaperone.FnTable</definition>
        <argsstring></argsstring>
        <name>FnTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2326" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1af123d26ba5f7e4756726970cea50ff25" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>internal</type>
        <definition>internal Valve.VR.CVRChaperone.CVRChaperone</definition>
        <argsstring>(IntPtr pInterface)</argsstring>
        <name>CVRChaperone</name>
        <param>
          <type>IntPtr</type>
          <declname>pInterface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2327" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2327" bodyend="2330"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a7607e48967a20187b75d52b0b1b04070" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1ab893e8e2bf198a8cb4d2a2cd9c545c32" kindref="member">ChaperoneCalibrationState</ref></type>
        <definition>ChaperoneCalibrationState Valve.VR.CVRChaperone.GetCalibrationState</definition>
        <argsstring>()</argsstring>
        <name>GetCalibrationState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2331" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2331" bodyend="2335"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a9f3098d79daba1782c0fa532b9332c27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperone.GetPlayAreaSize</definition>
        <argsstring>(ref float pSizeX, ref float pSizeZ)</argsstring>
        <name>GetPlayAreaSize</name>
        <param>
          <type>ref float</type>
          <declname>pSizeX</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>pSizeZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2336" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2336" bodyend="2342"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a2cddb4abd411e2f7a63ac0312464adfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperone.GetPlayAreaRect</definition>
        <argsstring>(ref HmdQuad_t rect)</argsstring>
        <name>GetPlayAreaRect</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_quad__t" kindref="compound">HmdQuad_t</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2343" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2343" bodyend="2347"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1afdb36eb8bc9ea53762ee6917b25f3c9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperone.ReloadInfo</definition>
        <argsstring>()</argsstring>
        <name>ReloadInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2348" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2348" bodyend="2351"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1ad3bb6c0d59497f0cb7d2d6073b977480" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperone.SetSceneColor</definition>
        <argsstring>(HmdColor_t color)</argsstring>
        <name>SetSceneColor</name>
        <param>
          <type><ref refid="struct_valve_1_1_v_r_1_1_hmd_color__t" kindref="compound">HmdColor_t</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2352" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2352" bodyend="2355"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a48e1cb9faace640582ef65e9e2414330" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperone.GetBoundsColor</definition>
        <argsstring>(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)</argsstring>
        <name>GetBoundsColor</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_color__t" kindref="compound">HmdColor_t</ref></type>
          <declname>pOutputColorArray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNumOutputColors</declname>
        </param>
        <param>
          <type>float</type>
          <declname>flCollisionBoundsFadeDistance</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_color__t" kindref="compound">HmdColor_t</ref></type>
          <declname>pOutputCameraColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2356" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2356" bodyend="2359"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a4330cb2ee583a6a60b828e219198b531" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperone.AreBoundsVisible</definition>
        <argsstring>()</argsstring>
        <name>AreBoundsVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2360" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2360" bodyend="2364"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a02d54b6cb624de54d0766e1cf9a0d44f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperone.ForceBoundsVisible</definition>
        <argsstring>(bool bForce)</argsstring>
        <name>ForceBoundsVisible</name>
        <param>
          <type>bool</type>
          <declname>bForce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2365" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2365" bodyend="2368"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2325" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2324" bodyend="2369"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a4330cb2ee583a6a60b828e219198b531" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>AreBoundsVisible</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1af123d26ba5f7e4756726970cea50ff25" prot="private" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>CVRChaperone</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a853b0a88f5e3b04ef35e5393740b4fc8" prot="private" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>FnTable</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a02d54b6cb624de54d0766e1cf9a0d44f" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>ForceBoundsVisible</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a48e1cb9faace640582ef65e9e2414330" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>GetBoundsColor</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a7607e48967a20187b75d52b0b1b04070" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>GetCalibrationState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a2cddb4abd411e2f7a63ac0312464adfc" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>GetPlayAreaRect</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1a9f3098d79daba1782c0fa532b9332c27" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>GetPlayAreaSize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1afdb36eb8bc9ea53762ee6917b25f3c9b" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>ReloadInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_1ad3bb6c0d59497f0cb7d2d6073b977480" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperone</scope><name>SetSceneColor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
