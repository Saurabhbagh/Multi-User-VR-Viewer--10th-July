<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_valve_1_1_v_r_1_1_i_v_r_applications" kind="struct" language="C#" prot="public">
    <compoundname>Valve::VR::IVRApplications</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a396c7e14f70a0d03464fcb8f1cacde02" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a76f61ada24748861c48a7a358a129f02" kindref="member">_AddApplicationManifest</ref></type>
        <definition>internal _AddApplicationManifest Valve.VR.IVRApplications.AddApplicationManifest</definition>
        <argsstring></argsstring>
        <name>AddApplicationManifest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="346" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ac7b0c435cc775f1b86a4d007acf650a5" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1af57c8e14b228aa90c1de06e488d188e1" kindref="member">_RemoveApplicationManifest</ref></type>
        <definition>internal _RemoveApplicationManifest Valve.VR.IVRApplications.RemoveApplicationManifest</definition>
        <argsstring></argsstring>
        <name>RemoveApplicationManifest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="351" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a41b0bcd67ef15c7da42974931df2f6ad" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a55c08f26570b4ebbcc12d975a0580058" kindref="member">_IsApplicationInstalled</ref></type>
        <definition>internal _IsApplicationInstalled Valve.VR.IVRApplications.IsApplicationInstalled</definition>
        <argsstring></argsstring>
        <name>IsApplicationInstalled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="356" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a22aee0bcc514fa894b599b58ee72e4da" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ad5a465e75026a5c1bf8e787a8613132b" kindref="member">_GetApplicationCount</ref></type>
        <definition>internal _GetApplicationCount Valve.VR.IVRApplications.GetApplicationCount</definition>
        <argsstring></argsstring>
        <name>GetApplicationCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="361" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae3a1cf0df983ee26ce4300144aff769d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a63e1092a4592ad95064f4948b5bc743f" kindref="member">_GetApplicationKeyByIndex</ref></type>
        <definition>internal _GetApplicationKeyByIndex Valve.VR.IVRApplications.GetApplicationKeyByIndex</definition>
        <argsstring></argsstring>
        <name>GetApplicationKeyByIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="366" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a3f25f2146ae2e2a30555ea5d2c54885d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aeadcd6cb5dd134f4d83e9d34d05a6318" kindref="member">_GetApplicationKeyByProcessId</ref></type>
        <definition>internal _GetApplicationKeyByProcessId Valve.VR.IVRApplications.GetApplicationKeyByProcessId</definition>
        <argsstring></argsstring>
        <name>GetApplicationKeyByProcessId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="371" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a122f2eda209a9f552f234cd62cf583e0" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1acc906c27dba9c0fbc2398ae17e058352" kindref="member">_LaunchApplication</ref></type>
        <definition>internal _LaunchApplication Valve.VR.IVRApplications.LaunchApplication</definition>
        <argsstring></argsstring>
        <name>LaunchApplication</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="376" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1add86c723c6748931bb8e74f6ee158a24" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aeefde1c2d898ac0a0c855e15945f2bf3" kindref="member">_LaunchTemplateApplication</ref></type>
        <definition>internal _LaunchTemplateApplication Valve.VR.IVRApplications.LaunchTemplateApplication</definition>
        <argsstring></argsstring>
        <name>LaunchTemplateApplication</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="381" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5116017937c5b14018c4ae439e6f0961" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1afcb2effe091e7d38b37d3eaac945c8ef" kindref="member">_LaunchApplicationFromMimeType</ref></type>
        <definition>internal _LaunchApplicationFromMimeType Valve.VR.IVRApplications.LaunchApplicationFromMimeType</definition>
        <argsstring></argsstring>
        <name>LaunchApplicationFromMimeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="386" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aabe60133be581a63b813e20a79c0403f" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ac221f4e68eefcfe2a8401a4fe5411d32" kindref="member">_LaunchDashboardOverlay</ref></type>
        <definition>internal _LaunchDashboardOverlay Valve.VR.IVRApplications.LaunchDashboardOverlay</definition>
        <argsstring></argsstring>
        <name>LaunchDashboardOverlay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="391" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a245e12d7f137c03224a6b307cda15edd" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a6717c85896fa77981281c2ad3694d5a5" kindref="member">_CancelApplicationLaunch</ref></type>
        <definition>internal _CancelApplicationLaunch Valve.VR.IVRApplications.CancelApplicationLaunch</definition>
        <argsstring></argsstring>
        <name>CancelApplicationLaunch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="396" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5f943da628af5c0193325edde764cc6a" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a461680d41f9d889cd818446eb65c113b" kindref="member">_IdentifyApplication</ref></type>
        <definition>internal _IdentifyApplication Valve.VR.IVRApplications.IdentifyApplication</definition>
        <argsstring></argsstring>
        <name>IdentifyApplication</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="401" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a218daf4956d886a5f521a2e39b5ac2bb" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a1ee4e4ced406991223199be10cee99af" kindref="member">_GetApplicationProcessId</ref></type>
        <definition>internal _GetApplicationProcessId Valve.VR.IVRApplications.GetApplicationProcessId</definition>
        <argsstring></argsstring>
        <name>GetApplicationProcessId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="406" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a8be8b2e9d0e661feb907a480498bfd6e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aa203c7e060702643487820541bdca380" kindref="member">_GetApplicationsErrorNameFromEnum</ref></type>
        <definition>internal _GetApplicationsErrorNameFromEnum Valve.VR.IVRApplications.GetApplicationsErrorNameFromEnum</definition>
        <argsstring></argsstring>
        <name>GetApplicationsErrorNameFromEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="411" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ab230508fb654fcdb64ab56fdc133dd91" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a29be5eea80ac523877cbc8596f8b6f34" kindref="member">_GetApplicationPropertyString</ref></type>
        <definition>internal _GetApplicationPropertyString Valve.VR.IVRApplications.GetApplicationPropertyString</definition>
        <argsstring></argsstring>
        <name>GetApplicationPropertyString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="416" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a44ba301b27c76a75708cd14e9f98c83c" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae970669423f2d1c534e4268eb4421841" kindref="member">_GetApplicationPropertyBool</ref></type>
        <definition>internal _GetApplicationPropertyBool Valve.VR.IVRApplications.GetApplicationPropertyBool</definition>
        <argsstring></argsstring>
        <name>GetApplicationPropertyBool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="421" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a2b6a2bd196e2f98f585775e8cf01ee96" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ac05c82e30b4622cc0e53e7ab75688677" kindref="member">_GetApplicationPropertyUint64</ref></type>
        <definition>internal _GetApplicationPropertyUint64 Valve.VR.IVRApplications.GetApplicationPropertyUint64</definition>
        <argsstring></argsstring>
        <name>GetApplicationPropertyUint64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="426" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a28401a95a7de5943fff6474b1435ada3" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1acc22946329e6d33fc826a928d1087dfc" kindref="member">_SetApplicationAutoLaunch</ref></type>
        <definition>internal _SetApplicationAutoLaunch Valve.VR.IVRApplications.SetApplicationAutoLaunch</definition>
        <argsstring></argsstring>
        <name>SetApplicationAutoLaunch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="431" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5e0fb4c7d3b8861efcbe184994c22ed1" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae7b3dd42def4887d70c2856b79679c8a" kindref="member">_GetApplicationAutoLaunch</ref></type>
        <definition>internal _GetApplicationAutoLaunch Valve.VR.IVRApplications.GetApplicationAutoLaunch</definition>
        <argsstring></argsstring>
        <name>GetApplicationAutoLaunch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="436" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1add339ed75c0ec865019a696d0d1b6d4b" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aa326d8a6ab208fa726df73e9b0fd9351" kindref="member">_SetDefaultApplicationForMimeType</ref></type>
        <definition>internal _SetDefaultApplicationForMimeType Valve.VR.IVRApplications.SetDefaultApplicationForMimeType</definition>
        <argsstring></argsstring>
        <name>SetDefaultApplicationForMimeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="441" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5f20bbebe2e64d0708ab71b157bc1823" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ab4fbef52ef861cd328df9296e83073b5" kindref="member">_GetDefaultApplicationForMimeType</ref></type>
        <definition>internal _GetDefaultApplicationForMimeType Valve.VR.IVRApplications.GetDefaultApplicationForMimeType</definition>
        <argsstring></argsstring>
        <name>GetDefaultApplicationForMimeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="446" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae283807d74221cb190c96b05508ad842" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a0c1a0f078e0bd30ada05dccc30aaa3b9" kindref="member">_GetApplicationSupportedMimeTypes</ref></type>
        <definition>internal _GetApplicationSupportedMimeTypes Valve.VR.IVRApplications.GetApplicationSupportedMimeTypes</definition>
        <argsstring></argsstring>
        <name>GetApplicationSupportedMimeTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="451" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1adb1c22d761558e6fee174e6ee23da4df" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a69203996ca75bee54e6ff4b68d774618" kindref="member">_GetApplicationsThatSupportMimeType</ref></type>
        <definition>internal _GetApplicationsThatSupportMimeType Valve.VR.IVRApplications.GetApplicationsThatSupportMimeType</definition>
        <argsstring></argsstring>
        <name>GetApplicationsThatSupportMimeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="456" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5e26851d3d3db6c0318c03533c9c78f6" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ad9370206e2fdcbc78913aa7e21ec53fa" kindref="member">_GetApplicationLaunchArguments</ref></type>
        <definition>internal _GetApplicationLaunchArguments Valve.VR.IVRApplications.GetApplicationLaunchArguments</definition>
        <argsstring></argsstring>
        <name>GetApplicationLaunchArguments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="461" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1abd5f05be0ae3fb969f56ed2c054de4d8" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a1eb7aeb6422c2a09ecf379532597cb05" kindref="member">_GetStartingApplication</ref></type>
        <definition>internal _GetStartingApplication Valve.VR.IVRApplications.GetStartingApplication</definition>
        <argsstring></argsstring>
        <name>GetStartingApplication</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="466" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a05945f77ee67816eac9b62a4eba9a200" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a047619f84dbe4e1fc9faadd800669ac3" kindref="member">_GetTransitionState</ref></type>
        <definition>internal _GetTransitionState Valve.VR.IVRApplications.GetTransitionState</definition>
        <argsstring></argsstring>
        <name>GetTransitionState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="471" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a6692ff62e31050e0e639aedca5dfb342" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1af8f1a196897ce93933338eca85476b37" kindref="member">_PerformApplicationPrelaunchCheck</ref></type>
        <definition>internal _PerformApplicationPrelaunchCheck Valve.VR.IVRApplications.PerformApplicationPrelaunchCheck</definition>
        <argsstring></argsstring>
        <name>PerformApplicationPrelaunchCheck</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="476" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a7e6256dba191f4e0b7aa81093bffbff4" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a84090171964167a37149043d7834077b" kindref="member">_GetApplicationsTransitionStateNameFromEnum</ref></type>
        <definition>internal _GetApplicationsTransitionStateNameFromEnum Valve.VR.IVRApplications.GetApplicationsTransitionStateNameFromEnum</definition>
        <argsstring></argsstring>
        <name>GetApplicationsTransitionStateNameFromEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="481" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae0ffc02e21a7703c65e6c0d0483bd236" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a76f4a8aeee6300e437459098141890b3" kindref="member">_IsQuitUserPromptRequested</ref></type>
        <definition>internal _IsQuitUserPromptRequested Valve.VR.IVRApplications.IsQuitUserPromptRequested</definition>
        <argsstring></argsstring>
        <name>IsQuitUserPromptRequested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="486" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1adddcaf2d617dbfd32439bb3c2fc3c3f1" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a298a348612023308adffef70f09fba4d" kindref="member">_LaunchInternalProcess</ref></type>
        <definition>internal _LaunchInternalProcess Valve.VR.IVRApplications.LaunchInternalProcess</definition>
        <argsstring></argsstring>
        <name>LaunchInternalProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="491" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a0c5c557e5237c19ae592c67bbff10fd0" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a2d37b2fc76a95f568513ca91e7baf553" kindref="member">_GetCurrentSceneProcessId</ref></type>
        <definition>internal _GetCurrentSceneProcessId Valve.VR.IVRApplications.GetCurrentSceneProcessId</definition>
        <argsstring></argsstring>
        <name>GetCurrentSceneProcessId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="496" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="496" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a76f61ada24748861c48a7a358a129f02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._AddApplicationManifest</definition>
        <argsstring>(string pchApplicationManifestFullPath, bool bTemporary)</argsstring>
        <name>_AddApplicationManifest</name>
        <param>
          <type>string</type>
          <declname>pchApplicationManifestFullPath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bTemporary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1af57c8e14b228aa90c1de06e488d188e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._RemoveApplicationManifest</definition>
        <argsstring>(string pchApplicationManifestFullPath)</argsstring>
        <name>_RemoveApplicationManifest</name>
        <param>
          <type>string</type>
          <declname>pchApplicationManifestFullPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a55c08f26570b4ebbcc12d975a0580058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRApplications._IsApplicationInstalled</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>_IsApplicationInstalled</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ad5a465e75026a5c1bf8e787a8613132b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRApplications._GetApplicationCount</definition>
        <argsstring>()</argsstring>
        <name>_GetApplicationCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a63e1092a4592ad95064f4948b5bc743f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._GetApplicationKeyByIndex</definition>
        <argsstring>(uint unApplicationIndex, System.Text.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)</argsstring>
        <name>_GetApplicationKeyByIndex</name>
        <param>
          <type>uint</type>
          <declname>unApplicationIndex</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeyBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeyBufferLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aeadcd6cb5dd134f4d83e9d34d05a6318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._GetApplicationKeyByProcessId</definition>
        <argsstring>(uint unProcessId, System.Text.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)</argsstring>
        <name>_GetApplicationKeyByProcessId</name>
        <param>
          <type>uint</type>
          <declname>unProcessId</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeyBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeyBufferLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1acc906c27dba9c0fbc2398ae17e058352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._LaunchApplication</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>_LaunchApplication</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aeefde1c2d898ac0a0c855e15945f2bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._LaunchTemplateApplication</definition>
        <argsstring>(string pchTemplateAppKey, string pchNewAppKey, [In, Out] AppOverrideKeys_t[] pKeys, uint unKeys)</argsstring>
        <name>_LaunchTemplateApplication</name>
        <param>
          <type>string</type>
          <declname>pchTemplateAppKey</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchNewAppKey</declname>
        </param>
        <param>
          <attributes>[In, Out]</attributes>
          <type><ref refid="struct_valve_1_1_v_r_1_1_app_override_keys__t" kindref="compound">AppOverrideKeys_t</ref> []</type>
          <declname>pKeys</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unKeys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1afcb2effe091e7d38b37d3eaac945c8ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._LaunchApplicationFromMimeType</definition>
        <argsstring>(string pchMimeType, string pchArgs)</argsstring>
        <name>_LaunchApplicationFromMimeType</name>
        <param>
          <type>string</type>
          <declname>pchMimeType</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ac221f4e68eefcfe2a8401a4fe5411d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._LaunchDashboardOverlay</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>_LaunchDashboardOverlay</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a6717c85896fa77981281c2ad3694d5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRApplications._CancelApplicationLaunch</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>_CancelApplicationLaunch</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a461680d41f9d889cd818446eb65c113b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._IdentifyApplication</definition>
        <argsstring>(uint unProcessId, string pchAppKey)</argsstring>
        <name>_IdentifyApplication</name>
        <param>
          <type>uint</type>
          <declname>unProcessId</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a1ee4e4ced406991223199be10cee99af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRApplications._GetApplicationProcessId</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>_GetApplicationProcessId</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aa203c7e060702643487820541bdca380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate IntPtr</type>
        <definition>internal delegate IntPtr Valve.VR.IVRApplications._GetApplicationsErrorNameFromEnum</definition>
        <argsstring>(EVRApplicationError error)</argsstring>
        <name>_GetApplicationsErrorNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a29be5eea80ac523877cbc8596f8b6f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRApplications._GetApplicationPropertyString</definition>
        <argsstring>(string pchAppKey, EVRApplicationProperty eProperty, System.Text.StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)</argsstring>
        <name>_GetApplicationPropertyString</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a60802f09ad1b4764cd5bc78369d50bf3" kindref="member">EVRApplicationProperty</ref></type>
          <declname>eProperty</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchPropertyValueBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unPropertyValueBufferLen</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae970669423f2d1c534e4268eb4421841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRApplications._GetApplicationPropertyBool</definition>
        <argsstring>(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)</argsstring>
        <name>_GetApplicationPropertyBool</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a60802f09ad1b4764cd5bc78369d50bf3" kindref="member">EVRApplicationProperty</ref></type>
          <declname>eProperty</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ac05c82e30b4622cc0e53e7ab75688677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate ulong</type>
        <definition>internal delegate ulong Valve.VR.IVRApplications._GetApplicationPropertyUint64</definition>
        <argsstring>(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)</argsstring>
        <name>_GetApplicationPropertyUint64</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a60802f09ad1b4764cd5bc78369d50bf3" kindref="member">EVRApplicationProperty</ref></type>
          <declname>eProperty</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1acc22946329e6d33fc826a928d1087dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._SetApplicationAutoLaunch</definition>
        <argsstring>(string pchAppKey, bool bAutoLaunch)</argsstring>
        <name>_SetApplicationAutoLaunch</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bAutoLaunch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae7b3dd42def4887d70c2856b79679c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRApplications._GetApplicationAutoLaunch</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>_GetApplicationAutoLaunch</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aa326d8a6ab208fa726df73e9b0fd9351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._SetDefaultApplicationForMimeType</definition>
        <argsstring>(string pchAppKey, string pchMimeType)</argsstring>
        <name>_SetDefaultApplicationForMimeType</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchMimeType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ab4fbef52ef861cd328df9296e83073b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRApplications._GetDefaultApplicationForMimeType</definition>
        <argsstring>(string pchMimeType, System.Text.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)</argsstring>
        <name>_GetDefaultApplicationForMimeType</name>
        <param>
          <type>string</type>
          <declname>pchMimeType</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeyBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeyBufferLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a0c1a0f078e0bd30ada05dccc30aaa3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRApplications._GetApplicationSupportedMimeTypes</definition>
        <argsstring>(string pchAppKey, System.Text.StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)</argsstring>
        <name>_GetApplicationSupportedMimeTypes</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchMimeTypesBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unMimeTypesBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a69203996ca75bee54e6ff4b68d774618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRApplications._GetApplicationsThatSupportMimeType</definition>
        <argsstring>(string pchMimeType, System.Text.StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)</argsstring>
        <name>_GetApplicationsThatSupportMimeType</name>
        <param>
          <type>string</type>
          <declname>pchMimeType</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeysThatSupportBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeysThatSupportBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="454" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ad9370206e2fdcbc78913aa7e21ec53fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRApplications._GetApplicationLaunchArguments</definition>
        <argsstring>(uint unHandle, System.Text.StringBuilder pchArgs, uint unArgs)</argsstring>
        <name>_GetApplicationLaunchArguments</name>
        <param>
          <type>uint</type>
          <declname>unHandle</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchArgs</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a1eb7aeb6422c2a09ecf379532597cb05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._GetStartingApplication</definition>
        <argsstring>(System.Text.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)</argsstring>
        <name>_GetStartingApplication</name>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchAppKeyBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAppKeyBufferLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="464" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a047619f84dbe4e1fc9faadd800669ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1af00430caae64a19e9ad612ac01a208c0" kindref="member">EVRApplicationTransitionState</ref></type>
        <definition>internal delegate EVRApplicationTransitionState Valve.VR.IVRApplications._GetTransitionState</definition>
        <argsstring>()</argsstring>
        <name>_GetTransitionState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="469" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1af8f1a196897ce93933338eca85476b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._PerformApplicationPrelaunchCheck</definition>
        <argsstring>(string pchAppKey)</argsstring>
        <name>_PerformApplicationPrelaunchCheck</name>
        <param>
          <type>string</type>
          <declname>pchAppKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a84090171964167a37149043d7834077b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate IntPtr</type>
        <definition>internal delegate IntPtr Valve.VR.IVRApplications._GetApplicationsTransitionStateNameFromEnum</definition>
        <argsstring>(EVRApplicationTransitionState state)</argsstring>
        <name>_GetApplicationsTransitionStateNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1af00430caae64a19e9ad612ac01a208c0" kindref="member">EVRApplicationTransitionState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a76f4a8aeee6300e437459098141890b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRApplications._IsQuitUserPromptRequested</definition>
        <argsstring>()</argsstring>
        <name>_IsQuitUserPromptRequested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a298a348612023308adffef70f09fba4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a3488adab8a219b579fcee50f4e63a8b6" kindref="member">EVRApplicationError</ref></type>
        <definition>internal delegate EVRApplicationError Valve.VR.IVRApplications._LaunchInternalProcess</definition>
        <argsstring>(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)</argsstring>
        <name>_LaunchInternalProcess</name>
        <param>
          <type>string</type>
          <declname>pchBinaryPath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchArguments</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchWorkingDirectory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a2d37b2fc76a95f568513ca91e7baf553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRApplications._GetCurrentSceneProcessId</definition>
        <argsstring>()</argsstring>
        <name>_GetCurrentSceneProcessId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="494" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="342" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="341" bodyend="498"/>
    <listofallmembers>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a76f61ada24748861c48a7a358a129f02" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_AddApplicationManifest</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a6717c85896fa77981281c2ad3694d5a5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_CancelApplicationLaunch</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae7b3dd42def4887d70c2856b79679c8a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationAutoLaunch</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ad5a465e75026a5c1bf8e787a8613132b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationCount</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a63e1092a4592ad95064f4948b5bc743f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationKeyByIndex</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aeadcd6cb5dd134f4d83e9d34d05a6318" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationKeyByProcessId</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ad9370206e2fdcbc78913aa7e21ec53fa" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationLaunchArguments</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a1ee4e4ced406991223199be10cee99af" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationProcessId</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae970669423f2d1c534e4268eb4421841" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationPropertyBool</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a29be5eea80ac523877cbc8596f8b6f34" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationPropertyString</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ac05c82e30b4622cc0e53e7ab75688677" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationPropertyUint64</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aa203c7e060702643487820541bdca380" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationsErrorNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a69203996ca75bee54e6ff4b68d774618" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationsThatSupportMimeType</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a84090171964167a37149043d7834077b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationsTransitionStateNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a0c1a0f078e0bd30ada05dccc30aaa3b9" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetApplicationSupportedMimeTypes</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a2d37b2fc76a95f568513ca91e7baf553" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetCurrentSceneProcessId</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ab4fbef52ef861cd328df9296e83073b5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetDefaultApplicationForMimeType</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a1eb7aeb6422c2a09ecf379532597cb05" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetStartingApplication</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a047619f84dbe4e1fc9faadd800669ac3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_GetTransitionState</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a461680d41f9d889cd818446eb65c113b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_IdentifyApplication</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a55c08f26570b4ebbcc12d975a0580058" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_IsApplicationInstalled</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a76f4a8aeee6300e437459098141890b3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_IsQuitUserPromptRequested</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1acc906c27dba9c0fbc2398ae17e058352" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_LaunchApplication</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1afcb2effe091e7d38b37d3eaac945c8ef" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_LaunchApplicationFromMimeType</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ac221f4e68eefcfe2a8401a4fe5411d32" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_LaunchDashboardOverlay</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a298a348612023308adffef70f09fba4d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_LaunchInternalProcess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aeefde1c2d898ac0a0c855e15945f2bf3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_LaunchTemplateApplication</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1af8f1a196897ce93933338eca85476b37" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_PerformApplicationPrelaunchCheck</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1af57c8e14b228aa90c1de06e488d188e1" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_RemoveApplicationManifest</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1acc22946329e6d33fc826a928d1087dfc" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_SetApplicationAutoLaunch</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aa326d8a6ab208fa726df73e9b0fd9351" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>_SetDefaultApplicationForMimeType</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a396c7e14f70a0d03464fcb8f1cacde02" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>AddApplicationManifest</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a245e12d7f137c03224a6b307cda15edd" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>CancelApplicationLaunch</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5e0fb4c7d3b8861efcbe184994c22ed1" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationAutoLaunch</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a22aee0bcc514fa894b599b58ee72e4da" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationCount</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae3a1cf0df983ee26ce4300144aff769d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationKeyByIndex</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a3f25f2146ae2e2a30555ea5d2c54885d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationKeyByProcessId</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5e26851d3d3db6c0318c03533c9c78f6" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationLaunchArguments</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a218daf4956d886a5f521a2e39b5ac2bb" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationProcessId</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a44ba301b27c76a75708cd14e9f98c83c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationPropertyBool</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ab230508fb654fcdb64ab56fdc133dd91" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationPropertyString</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a2b6a2bd196e2f98f585775e8cf01ee96" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationPropertyUint64</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a8be8b2e9d0e661feb907a480498bfd6e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationsErrorNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1adb1c22d761558e6fee174e6ee23da4df" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationsThatSupportMimeType</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a7e6256dba191f4e0b7aa81093bffbff4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationsTransitionStateNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae283807d74221cb190c96b05508ad842" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetApplicationSupportedMimeTypes</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a0c5c557e5237c19ae592c67bbff10fd0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetCurrentSceneProcessId</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5f20bbebe2e64d0708ab71b157bc1823" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetDefaultApplicationForMimeType</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1abd5f05be0ae3fb969f56ed2c054de4d8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetStartingApplication</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a05945f77ee67816eac9b62a4eba9a200" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>GetTransitionState</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5f943da628af5c0193325edde764cc6a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>IdentifyApplication</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a41b0bcd67ef15c7da42974931df2f6ad" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>IsApplicationInstalled</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ae0ffc02e21a7703c65e6c0d0483bd236" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>IsQuitUserPromptRequested</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a122f2eda209a9f552f234cd62cf583e0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>LaunchApplication</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a5116017937c5b14018c4ae439e6f0961" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>LaunchApplicationFromMimeType</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1aabe60133be581a63b813e20a79c0403f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>LaunchDashboardOverlay</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1adddcaf2d617dbfd32439bb3c2fc3c3f1" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>LaunchInternalProcess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1add86c723c6748931bb8e74f6ee158a24" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>LaunchTemplateApplication</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a6692ff62e31050e0e639aedca5dfb342" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>PerformApplicationPrelaunchCheck</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1ac7b0c435cc775f1b86a4d007acf650a5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>RemoveApplicationManifest</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1a28401a95a7de5943fff6474b1435ada3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>SetApplicationAutoLaunch</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_applications_1add339ed75c0ec865019a696d0d1b6d4b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRApplications</scope><name>SetDefaultApplicationForMimeType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
