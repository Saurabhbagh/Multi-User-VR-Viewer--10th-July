<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_steam_v_r___test_throw_8cs" kind="file" language="C#">
    <compoundname>SteamVR_TestThrow.cs</compoundname>
    <innerclass refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw" prot="public">Valve::VR::Extras::SteamVR_TestThrow</innerclass>
    <innernamespace refid="namespace_valve">Valve</innernamespace>
    <innernamespace refid="namespace_valve_1_1_v_r">Valve::VR</innernamespace>
    <innernamespace refid="namespace_valve_1_1_v_r_1_1_extras">Valve::VR::Extras</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=======<sp/>Copyright<sp/>(c)<sp/>Valve<sp/>Corporation,<sp/>All<sp/>rights<sp/>reserved.<sp/>===============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_valve_1_1_v_r_1_1_extras" kindref="compound">Valve.VR.Extras</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>[RequireComponent(typeof(SteamVR_TrackedObject))]</highlight></codeline>
<codeline lineno="8" refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw" kindref="compound">SteamVR_TestThrow</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10" refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1a7c18e05c94ca48194ceba72faf8107e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1a7c18e05c94ca48194ceba72faf8107e7" kindref="member">prefab</ref>;</highlight></codeline>
<codeline lineno="11" refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1acc9402353f3d39517b0b4a9bd4a01bb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Rigidbody<sp/><ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1acc9402353f3d39517b0b4a9bd4a01bb0" kindref="member">attachPoint</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13" refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1ad42383e28568def64bda4ac349af0e09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref><sp/><ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1ad42383e28568def64bda4ac349af0e09" kindref="member">spawn</ref><sp/>=<sp/><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___input" kindref="compound">SteamVR_Input</ref>.GetAction&lt;<ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref>&gt;(</highlight><highlight class="stringliteral">&quot;InteractUI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose" kindref="compound">SteamVR_Behaviour_Pose</ref><sp/>trackedObj;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FixedJoint<sp/>joint;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Awake()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trackedObj<sp/>=<sp/>GetComponent&lt;SteamVR_Behaviour_Pose&gt;();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FixedUpdate()</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(joint<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1ad42383e28568def64bda4ac349af0e09" kindref="member">spawn</ref>.<ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aa0a7eb5f7e02e35fd6922dd30b087f77" kindref="member">GetStateDown</ref>(trackedObj.inputSource))</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>go<sp/>=<sp/>GameObject.Instantiate(<ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1a7c18e05c94ca48194ceba72faf8107e7" kindref="member">prefab</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>go.transform.position<sp/>=<sp/><ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1acc9402353f3d39517b0b4a9bd4a01bb0" kindref="member">attachPoint</ref>.transform.position;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint<sp/>=<sp/>go.AddComponent&lt;FixedJoint&gt;();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint.connectedBody<sp/>=<sp/><ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1acc9402353f3d39517b0b4a9bd4a01bb0" kindref="member">attachPoint</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(joint<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1ad42383e28568def64bda4ac349af0e09" kindref="member">spawn</ref>.<ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a4b582272fb4f9c529e519246332e9922" kindref="member">GetStateUp</ref>(trackedObj.inputSource))</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>go<sp/>=<sp/>joint.gameObject;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rigidbody<sp/>rigidbody<sp/>=<sp/>go.GetComponent&lt;Rigidbody&gt;();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref>.DestroyImmediate(joint);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref>.Destroy(go,<sp/>15.0f);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>probably<sp/>apply<sp/>the<sp/>offset<sp/>between<sp/>trackedObj.transform.position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>device.transform.pos<sp/>to<sp/>insert<sp/>into<sp/>the<sp/>physics<sp/>sim<sp/>at<sp/>the<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>location,<sp/>however,<sp/>we<sp/>would<sp/>then<sp/>want<sp/>to<sp/>predict<sp/>ahead<sp/>the<sp/>visual<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>same<sp/>amount<sp/>we<sp/>are<sp/>predicting<sp/>our<sp/>render<sp/>poses.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/>origin<sp/>=<sp/>trackedObj.origin<sp/>?<sp/>trackedObj.origin<sp/>:<sp/>trackedObj.transform.parent;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(origin<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rigidbody.velocity<sp/>=<sp/>origin.TransformVector(trackedObj.GetVelocity());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rigidbody.angularVelocity<sp/>=<sp/>origin.TransformVector(trackedObj.GetAngularVelocity());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rigidbody.velocity<sp/>=<sp/>trackedObj.GetVelocity();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rigidbody.angularVelocity<sp/>=<sp/>trackedObj.GetAngularVelocity();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rigidbody.maxAngularVelocity<sp/>=<sp/>rigidbody.angularVelocity.magnitude;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Extras/SteamVR_TestThrow.cs"/>
  </compounddef>
</doxygen>
