<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_rigged_hand_8cs" kind="file" language="C#">
    <compoundname>RiggedHand.cs</compoundname>
    <innerclass refid="class_leap_1_1_unity_1_1_rigged_hand" prot="public">Leap::Unity::RiggedHand</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity">Leap::Unity</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>.<ref refid="namespace_leap_1_1_unity_1_1_attributes" kindref="compound">Attributes</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity" kindref="compound">Leap.Unity</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="class_leap_1_1_unity_1_1_rigged_hand" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_unity_1_1_rigged_hand" kindref="compound">RiggedHand</ref><sp/>:<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model" kindref="compound">HandModel</ref><sp/>{</highlight></codeline>
<codeline lineno="20" refid="class_leap_1_1_unity_1_1_rigged_hand_1aafa1ebadbf7fb5901f22f5834bac4dba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0" kindref="member">ModelType</ref><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aafa1ebadbf7fb5901f22f5834bac4dba" kindref="member">HandModelType</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0" kindref="member">ModelType</ref>.Graphics;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25" refid="class_leap_1_1_unity_1_1_rigged_hand_1aa44bd1ae715125809d5803b293eb1bee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aa44bd1ae715125809d5803b293eb1bee" kindref="member">SupportsEditorPersistence</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ab8de11dc599037ace3a7bce66cdb8b94" kindref="member">SetEditorLeapPose</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;When<sp/>True,<sp/>hands<sp/>will<sp/>be<sp/>put<sp/>into<sp/>a<sp/>Leap<sp/>editor<sp/>pose<sp/>near<sp/>the<sp/>LeapServiceProvider&apos;s<sp/>transform.<sp/><sp/>When<sp/>False,<sp/>the<sp/>hands<sp/>will<sp/>be<sp/>returned<sp/>to<sp/>their<sp/>Start<sp/>Pose<sp/>if<sp/>it<sp/>has<sp/>been<sp/>saved.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setEditorLeapPose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32" refid="class_leap_1_1_unity_1_1_rigged_hand_1ab8de11dc599037ace3a7bce66cdb8b94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ab8de11dc599037ace3a7bce66cdb8b94" kindref="member">SetEditorLeapPose</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setEditorLeapPose;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d" kindref="member">RestoreJointsStartPose</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setEditorLeapPose<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="42" refid="class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf" kindref="member">DeformPositionsInFingers</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;When<sp/>True,<sp/>hands<sp/>will<sp/>be<sp/>put<sp/>into<sp/>a<sp/>Leap<sp/>editor<sp/>pose<sp/>near<sp/>the<sp/>LeapServiceProvider&apos;s<sp/>transform.<sp/><sp/>When<sp/>False,<sp/>the<sp/>hands<sp/>will<sp/>be<sp/>returned<sp/>to<sp/>their<sp/>Start<sp/>Pose<sp/>if<sp/>it<sp/>has<sp/>been<sp/>saved.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>[HideInInspector]</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deformPositionsState<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Hands<sp/>are<sp/>typically<sp/>rigged<sp/>in<sp/>3D<sp/>packages<sp/>with<sp/>the<sp/>palm<sp/>transform<sp/>near<sp/>the<sp/>wrist.<sp/>Uncheck<sp/>this<sp/>is<sp/>your<sp/>model&apos;s<sp/>palm<sp/>transform<sp/>is<sp/>at<sp/>the<sp/>center<sp/>of<sp/>the<sp/>palm<sp/>similar<sp/>to<sp/>Leap&apos;s<sp/>API<sp/>drives&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="49" refid="class_leap_1_1_unity_1_1_rigged_hand_1aba36c91e04e41858d120462170cf7902" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aba36c91e04e41858d120462170cf7902" kindref="member">ModelPalmAtLeapWrist</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Set<sp/>to<sp/>True<sp/>if<sp/>each<sp/>finger<sp/>has<sp/>an<sp/>extra<sp/>trasform<sp/>between<sp/>palm<sp/>and<sp/>base<sp/>of<sp/>the<sp/>finger.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="52" refid="class_leap_1_1_unity_1_1_rigged_hand_1ad02235db6045a120093cdca16b1e61bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ad02235db6045a120093cdca16b1e61bf" kindref="member">UseMetaCarpals</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Because<sp/>bones<sp/>only<sp/>exist<sp/>at<sp/>their<sp/>roots<sp/>in<sp/>model<sp/>rigs,<sp/>the<sp/>length<sp/>of<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;last<sp/>fingertip<sp/>bone<sp/>is<sp/>lost<sp/>when<sp/>placing<sp/>bones<sp/>at<sp/>positions<sp/>in<sp/>the<sp/>tracked<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;hand.<sp/>This<sp/>option<sp/>scales<sp/>the<sp/>last<sp/>bone<sp/>along<sp/>its<sp/>X<sp/>axis<sp/>(length<sp/>axis)<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;match<sp/>its<sp/>bone<sp/>length<sp/>to<sp/>the<sp/>tracked<sp/>bone<sp/>length.<sp/>This<sp/>option<sp/>only<sp/>has<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;an<sp/>effect<sp/>if<sp/>Deform<sp/>Positions<sp/>In<sp/>Fingers<sp/>is<sp/>enabled.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_disable_if" kindref="compound">DisableIf</ref>(</highlight><highlight class="stringliteral">&quot;DeformPositionsInFingers&quot;</highlight><highlight class="normal">,<sp/>isEqualTo:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>[OnEditorChange(</highlight><highlight class="stringliteral">&quot;scaleLastFingerBones&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_scaleLastFingerBones<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63" refid="class_leap_1_1_unity_1_1_rigged_hand_1a5b746af2657245a3e8cad12b081d1fe0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a5b746af2657245a3e8cad12b081d1fe0" kindref="member">scaleLastFingerBones</ref><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_scaleLastFingerBones;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_scaleLastFingerBones<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setScaleLastFingerBoneInFingers(_scaleLastFingerBones);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" kindref="member">modelFingerPointing</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="72" refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" kindref="member">modelPalmFacing</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Values<sp/>for<sp/>Stored<sp/>Start<sp/>Pose&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Transform&gt;<sp/>jointList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Transform&gt;();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Quaternion&gt;<sp/>localRotations<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Quaternion&gt;();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>[SerializeField]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Vector3&gt;<sp/>localPositions<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Vector3&gt;();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_leap_1_1_unity_1_1_rigged_hand_1a588b2f58a5ffbbfc451ddf8432228507" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a588b2f58a5ffbbfc451ddf8432228507" kindref="member">InitHand</ref>()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac4e41fd3965e2d0d56379d3fc6011128" kindref="member">UpdateHand</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setDeformPositionsInFingers(deformPositionsState);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setScaleLastFingerBoneInFingers(<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a5b746af2657245a3e8cad12b081d1fe0" kindref="member">scaleLastFingerBones</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_leap_1_1_unity_1_1_rigged_hand_1aa4056b463cf5f441e96e1805a609cd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Quaternion<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aa4056b463cf5f441e96e1805a609cd6f" kindref="member">Reorientation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" kindref="member">modelFingerPointing</ref><sp/>==<sp/>Vector3.zero<sp/>||<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" kindref="member">modelPalmFacing</ref><sp/>==<sp/>Vector3.zero)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.identity;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.Inverse(Quaternion.LookRotation(<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" kindref="member">modelFingerPointing</ref>,<sp/>-<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" kindref="member">modelPalmFacing</ref>));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_leap_1_1_unity_1_1_rigged_hand_1ac4e41fd3965e2d0d56379d3fc6011128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac4e41fd3965e2d0d56379d3fc6011128" kindref="member">UpdateHand</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aba36c91e04e41858d120462170cf7902" kindref="member">ModelPalmAtLeapWrist</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.position<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a095aedb3f03a32b782abaf1a22861588" kindref="member">GetWristPosition</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.position<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a17386cdea4e2d9bfdc9fbf88e5eafd37" kindref="member">GetPalmPosition</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a5dd72502f20abe5fcddbeabe6bf0bfc9" kindref="member">wristJoint</ref>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a5dd72502f20abe5fcddbeabe6bf0bfc9" kindref="member">wristJoint</ref>.position<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a095aedb3f03a32b782abaf1a22861588" kindref="member">GetWristPosition</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.rotation<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aeeb6a629e804a4047ff01562cde17371" kindref="member">GetRiggedPalmRotation</ref>()<sp/>*<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aa4056b463cf5f441e96e1805a609cd6f" kindref="member">Reorientation</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0" kindref="member">forearm</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0" kindref="member">forearm</ref>.rotation<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a2bea9f9359bb0eb9f2a66a1e2a7c889f" kindref="member">GetArmRotation</ref>()<sp/>*<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aa4056b463cf5f441e96e1805a609cd6f" kindref="member">Reorientation</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>.Length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>[i]<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>[i].<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref><sp/>=<sp/>(<ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>)i;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>[i].<ref refid="class_leap_1_1_unity_1_1_finger_model_1a9103f063172a8f99a9aa083407ada2a2" kindref="member">UpdateFinger</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//These<sp/>versions<sp/>of<sp/>GetPalmRotation<sp/>&amp;<sp/>CalculateRotation<sp/>return<sp/>the<sp/>opposite<sp/>vector<sp/>compared<sp/>to<sp/>LeapUnityExtension.CalculateRotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>will<sp/>be<sp/>deprecated<sp/>once<sp/>LeapUnityExtension.CalculateRotation<sp/>is<sp/>flipped<sp/>in<sp/>the<sp/>next<sp/>release<sp/>of<sp/>LeapMotion<sp/>Core<sp/>Assets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_leap_1_1_unity_1_1_rigged_hand_1aeeb6a629e804a4047ff01562cde17371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Quaternion<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aeeb6a629e804a4047ff01562cde17371" kindref="member">GetRiggedPalmRotation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a5021ce9e2077ee8616ac608409133d5c" kindref="member">hand_</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref><sp/>trs<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a5021ce9e2077ee8616ac608409133d5c" kindref="member">hand_</ref>.<ref refid="class_leap_1_1_hand_1a31cd466c474963af5727269c7c9d6b5a" kindref="member">Basis</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CalculateRotation(trs);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.rotation;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.identity;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Quaternion<sp/>CalculateRotation(<ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref><sp/>trs)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>up<sp/>=<sp/>trs.<ref refid="struct_leap_1_1_leap_transform_1ac46874ef78036f1bc2d2bf76dd9a62a2" kindref="member">yBasis</ref>.ToVector3();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>forward<sp/>=<sp/>trs.<ref refid="struct_leap_1_1_leap_transform_1a59e5ecf307c5938bf9e04902b8395f8a" kindref="member">zBasis</ref>.ToVector3();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.LookRotation(forward,<sp/>up);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>[ContextMenu(</highlight><highlight class="stringliteral">&quot;Setup<sp/>Rigged<sp/>Hand&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="141" refid="class_leap_1_1_unity_1_1_rigged_hand_1a5a1c018bad50c06259998bdccbc2c513" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a5a1c018bad50c06259998bdccbc2c513" kindref="member">SetupRiggedHand</ref>()<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;Using<sp/>transform<sp/>naming<sp/>to<sp/>setup<sp/>RiggedHand<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>transform.name);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" kindref="member">modelFingerPointing</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" kindref="member">modelPalmFacing</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assignRiggedFingersByName();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetupRiggedFingers();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" kindref="member">modelPalmFacing</ref><sp/>=<sp/>calculateModelPalmFacing(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>[2].transform,<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>[1].transform);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" kindref="member">modelFingerPointing</ref><sp/>=<sp/>calculateModelFingerPointing();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setFingerPalmFacing();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152" refid="class_leap_1_1_unity_1_1_rigged_hand_1a919b4e3b967a79eb3bcce6d838a7ef4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a919b4e3b967a79eb3bcce6d838a7ef4c" kindref="member">AutoRigRiggedHand</ref>(Transform<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>,<sp/>Transform<sp/>finger1,<sp/>Transform<sp/>finger2)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;Using<sp/>Mecanim<sp/>mapping<sp/>to<sp/>setup<sp/>RiggedHand<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>transform.name);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" kindref="member">modelFingerPointing</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" kindref="member">modelPalmFacing</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetupRiggedFingers();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" kindref="member">modelPalmFacing</ref><sp/>=<sp/>calculateModelPalmFacing(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>,<sp/>finger1,<sp/>finger2);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" kindref="member">modelFingerPointing</ref><sp/>=<sp/>calculateModelFingerPointing();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setFingerPalmFacing();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignRiggedFingersByName(){</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;string&gt;<sp/>palmStrings<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;palm&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;string&gt;<sp/>thumbStrings<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;thumb&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tmb&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;string&gt;<sp/>indexStrings<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;idx&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;string&gt;<sp/>middleStrings<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;middle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mid&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;string&gt;<sp/>ringStrings<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;ring&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;string&gt;<sp/>pinkyStrings<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;pinky&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pin&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>palm<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Transform<sp/>palm<sp/>=<sp/>null;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67af12105146129696d6a7e0ed521db2e48" kindref="member">thumb</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a6a992d5529f459a44fee58c733255e86" kindref="member">index</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a4a548addbfb239bbd12f5afe11a4b6dc" kindref="member">middle</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a1a5df958e0f29d35594c7cf057fe4bd1" kindref="member">ring</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67adaea4d0b55ef6c16f04b8997a51e7e6a" kindref="member">pinky</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Transform[]<sp/>children<sp/>=<sp/>transform.GetComponentsInChildren&lt;Transform&gt;();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(palmStrings.Any(w<sp/>=&gt;<sp/>transform.name.ToLower().Contains(w))){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.palm<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Transform<sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>children)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(palmStrings.Any(w<sp/>=&gt;<sp/>t.name.ToLower().Contains(w))<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.palm<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref><sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Transform<sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>children)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref><sp/>preExistingRiggedFinger;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preExistingRiggedFinger<sp/>=<sp/>t.GetComponent&lt;<ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>&gt;();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>lowercaseName<sp/>=<sp/>t.name.ToLower();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!preExistingRiggedFinger)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thumbStrings.Any(w<sp/>=&gt;<sp/>lowercaseName.Contains(w))<sp/>&amp;&amp;<sp/>t.parent<sp/>==<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67af12105146129696d6a7e0ed521db2e48" kindref="member">thumb</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref><sp/>newRiggedFinger<sp/>=<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67af12105146129696d6a7e0ed521db2e48" kindref="member">thumb</ref>.gameObject.AddComponent&lt;<ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>&gt;();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRiggedFinger.<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref><sp/>=<sp/><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_THUMB;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexStrings.Any(w<sp/>=&gt;<sp/>lowercaseName.Contains(w))<sp/>&amp;&amp;<sp/>t.parent<sp/>==<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a6a992d5529f459a44fee58c733255e86" kindref="member">index</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref><sp/>newRiggedFinger<sp/>=<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a6a992d5529f459a44fee58c733255e86" kindref="member">index</ref>.gameObject.AddComponent&lt;<ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>&gt;();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRiggedFinger.<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref><sp/>=<sp/><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_INDEX;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(middleStrings.Any(w<sp/>=&gt;<sp/>lowercaseName.Contains(w))<sp/>&amp;&amp;<sp/>t.parent<sp/>==<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a4a548addbfb239bbd12f5afe11a4b6dc" kindref="member">middle</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref><sp/>newRiggedFinger<sp/>=<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a4a548addbfb239bbd12f5afe11a4b6dc" kindref="member">middle</ref>.gameObject.AddComponent&lt;<ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>&gt;();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRiggedFinger.<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref><sp/>=<sp/><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_MIDDLE;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ringStrings.Any(w<sp/>=&gt;<sp/>lowercaseName.Contains(w))<sp/>&amp;&amp;<sp/>t.parent<sp/>==<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a1a5df958e0f29d35594c7cf057fe4bd1" kindref="member">ring</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref><sp/>newRiggedFinger<sp/>=<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a1a5df958e0f29d35594c7cf057fe4bd1" kindref="member">ring</ref>.gameObject.AddComponent&lt;<ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>&gt;();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRiggedFinger.<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref><sp/>=<sp/><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_RING;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pinkyStrings.Any(w<sp/>=&gt;<sp/>lowercaseName.Contains(w))<sp/>&amp;&amp;<sp/>t.parent<sp/>==<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67adaea4d0b55ef6c16f04b8997a51e7e6a" kindref="member">pinky</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref><sp/>newRiggedFinger<sp/>=<sp/><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67adaea4d0b55ef6c16f04b8997a51e7e6a" kindref="member">pinky</ref>.gameObject.AddComponent&lt;<ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>&gt;();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRiggedFinger.<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref><sp/>=<sp/><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_PINKY;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetupRiggedFingers()<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>[]<sp/>fingerModelList<sp/>=<sp/>GetComponentsInChildren&lt;RiggedFinger&gt;();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingersIndex<sp/>=<sp/>fingerModelList[i].<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref>.indexOf();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>[fingersIndex]<sp/>=<sp/>fingerModelList[i];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fingerModelList[i].<ref refid="class_leap_1_1_unity_1_1_rigged_finger_1aaea2955085d8c4ec4d97a709ee8732e7" kindref="member">SetupRiggedFinger</ref>(<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ad02235db6045a120093cdca16b1e61bf" kindref="member">UseMetaCarpals</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFingerPalmFacing()<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>[]<sp/>fingerModelList<sp/>=<sp/>GetComponentsInChildren&lt;RiggedFinger&gt;();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fingersIndex<sp/>=<sp/>fingerModelList[i].<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref>.indexOf();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>[fingersIndex]<sp/>=<sp/>fingerModelList[i];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fingerModelList[i].<ref refid="class_leap_1_1_unity_1_1_rigged_finger_1ab8d09b7fb7d2390e19d7f44505dd8dec" kindref="member">modelPalmFacing</ref><sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" kindref="member">modelPalmFacing</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/>calculateModelPalmFacing(Transform<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>,<sp/>Transform<sp/>finger1,<sp/>Transform<sp/>finger2)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>a<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.transform.InverseTransformPoint(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.position);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>b<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.transform.InverseTransformPoint(finger1.position);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>c<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.transform.InverseTransformPoint(finger2.position);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>side1<sp/>=<sp/>b<sp/>-<sp/>a;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>side2<sp/>=<sp/>c<sp/>-<sp/>a;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>perpendicular;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_hand_model_1adc0cdab6a0de6c0520a100bfff19a6cd" kindref="member">Handedness</ref><sp/>==<sp/><ref refid="namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606f" kindref="member">Chirality</ref>.Left)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpendicular<sp/>=<sp/>Vector3.Cross(side1,<sp/>side2);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>perpendicular<sp/>=<sp/>Vector3.Cross(side2,<sp/>side1);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//flip<sp/>perpendicular<sp/>if<sp/>it<sp/>is<sp/>above<sp/>palm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>calculatedPalmFacing<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b" kindref="member">CalculateZeroedVector</ref>(perpendicular);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculatedPalmFacing;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/>calculateModelFingerPointing()<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>distance<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.transform.InverseTransformPoint(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" kindref="member">fingers</ref>[2].transform.GetChild(0).transform.position)<sp/>-<sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.transform.InverseTransformPoint(<ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.position);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>calculatedFingerPointing<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b" kindref="member">CalculateZeroedVector</ref>(distance);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculatedFingerPointing<sp/>*<sp/>-1f;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269" refid="class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b" kindref="member">CalculateZeroedVector</ref>(Vector3<sp/>vectorToZero)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>zeroed<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>Mathf.Max(Mathf.Abs(vectorToZero.x),<sp/>Mathf.Abs(vectorToZero.y),<sp/>Mathf.Abs(vectorToZero.z));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mathf.Abs(vectorToZero.x)<sp/>==<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zeroed<sp/>=<sp/>(vectorToZero.x<sp/>&lt;<sp/>0)<sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(1,<sp/>0,<sp/>0)<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(-1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mathf.Abs(vectorToZero.y)<sp/>==<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zeroed<sp/>=<sp/>(vectorToZero.y<sp/>&lt;<sp/>0)<sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>1,<sp/>0)<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mathf.Abs(vectorToZero.z)<sp/>==<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zeroed<sp/>=<sp/>(vectorToZero.z<sp/>&lt;<sp/>0)<sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>1)<sp/>:<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>zeroed;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>[ContextMenu(</highlight><highlight class="stringliteral">&quot;StoreJointsStartPose&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="285" refid="class_leap_1_1_unity_1_1_rigged_hand_1ae59cd89a5a3b39f56be3b8db74030fa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1ae59cd89a5a3b39f56be3b8db74030fa5" kindref="member">StoreJointsStartPose</ref>()<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(Transform<sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" kindref="member">palm</ref>.parent.GetComponentsInChildren&lt;Transform&gt;())<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jointList.Add(t);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localRotations.Add(t.localRotation);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPositions.Add(t.localPosition);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>[ContextMenu(</highlight><highlight class="stringliteral">&quot;RestoreJointsStartPose&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="294" refid="class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d" kindref="member">RestoreJointsStartPose</ref>()<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight><highlight class="stringliteral">&quot;RestoreJointsStartPose()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>jointList.Count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/>jointTrans<sp/>=<sp/>jointList[i];</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jointTrans.localRotation<sp/>=<sp/>localRotations[i];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jointTrans.localPosition<sp/>=<sp/>localPositions[i];</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDeformPositionsInFingers(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onOff)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>riggedFingers<sp/>=<sp/>GetComponentsInChildren&lt;RiggedFinger&gt;();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>finger<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>riggedFingers){</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finger.deformPosition<sp/>=<sp/>onOff;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setScaleLastFingerBoneInFingers(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldScale)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>riggedFingers<sp/>=<sp/>GetComponentsInChildren&lt;RiggedFinger&gt;();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>finger<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>riggedFingers)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finger.scaleLastFingerBone<sp/>=<sp/>shouldScale;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="class_leap_1_1_unity_1_1_rigged_hand_1a375204e4916d600d49dcd6812d08f56e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a375204e4916d600d49dcd6812d08f56e" kindref="member">OnValidate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf" kindref="member">DeformPositionsInFingers</ref><sp/>!=<sp/>deformPositionsState)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d" kindref="member">RestoreJointsStartPose</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDeformPositionsInFingers(<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf" kindref="member">DeformPositionsInFingers</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deformPositionsState<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf" kindref="member">DeformPositionsInFingers</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setEditorLeapPose<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d" kindref="member">RestoreJointsStartPose</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs"/>
  </compounddef>
</doxygen>
