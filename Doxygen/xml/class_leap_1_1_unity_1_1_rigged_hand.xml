<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_rigged_hand" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::RiggedHand</compoundname>
    <basecompoundref refid="class_leap_1_1_unity_1_1_hand_model" prot="public" virt="non-virtual">Leap.Unity.HandModel</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_rigged_hand_1aafa1ebadbf7fb5901f22f5834bac4dba" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override <ref refid="namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0" kindref="member">ModelType</ref></type>
        <definition>override ModelType Leap.Unity.RiggedHand.HandModelType</definition>
        <argsstring></argsstring>
        <name>HandModelType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="20" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_rigged_hand_1ab8de11dc599037ace3a7bce66cdb8b94" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.RiggedHand.SetEditorLeapPose</definition>
        <argsstring></argsstring>
        <name>SetEditorLeapPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="32" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="32" bodyend="40"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_rigged_hand_1a5b746af2657245a3e8cad12b081d1fe0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.RiggedHand.scaleLastFingerBones</definition>
        <argsstring></argsstring>
        <name>scaleLastFingerBones</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="63" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="63" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1af68f4607b342b0e48eaab34cdbf657b4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.RiggedHand.setEditorLeapPose</definition>
        <argsstring></argsstring>
        <name>setEditorLeapPose</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="30" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1ae073b1ac57b2cfbabd44151c8089bc64" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.RiggedHand.deformPositionsState</definition>
        <argsstring></argsstring>
        <name>deformPositionsState</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="46" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1a661ca6edeeeefdd93828963197a9d18e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.RiggedHand._scaleLastFingerBones</definition>
        <argsstring></argsstring>
        <name>_scaleLastFingerBones</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="62" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1a500c3b8709c80062a7af5bd336b3188d" prot="private" static="no" mutable="no">
        <type>List&lt; Transform &gt;</type>
        <definition>List&lt;Transform&gt; Leap.Unity.RiggedHand.jointList</definition>
        <argsstring></argsstring>
        <name>jointList</name>
        <initializer>= new List&lt;Transform&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="76" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1a6c7818e5703fe87ae4fb089b38187794" prot="private" static="no" mutable="no">
        <type>List&lt; Quaternion &gt;</type>
        <definition>List&lt;Quaternion&gt; Leap.Unity.RiggedHand.localRotations</definition>
        <argsstring></argsstring>
        <name>localRotations</name>
        <initializer>= new List&lt;Quaternion&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="78" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1a7c0f95f477fc825e7f34a04d477a515d" prot="private" static="no" mutable="no">
        <type>List&lt; Vector3 &gt;</type>
        <definition>List&lt;Vector3&gt; Leap.Unity.RiggedHand.localPositions</definition>
        <argsstring></argsstring>
        <name>localPositions</name>
        <initializer>= new List&lt;Vector3&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="80" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.RiggedHand.DeformPositionsInFingers</definition>
        <argsstring></argsstring>
        <name>DeformPositionsInFingers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="42" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1aba36c91e04e41858d120462170cf7902" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.RiggedHand.ModelPalmAtLeapWrist</definition>
        <argsstring></argsstring>
        <name>ModelPalmAtLeapWrist</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="49" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1ad02235db6045a120093cdca16b1e61bf" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.RiggedHand.UseMetaCarpals</definition>
        <argsstring></argsstring>
        <name>UseMetaCarpals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="52" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" prot="public" static="no" mutable="no">
        <type>Vector3</type>
        <definition>Vector3 Leap.Unity.RiggedHand.modelFingerPointing</definition>
        <argsstring></argsstring>
        <name>modelFingerPointing</name>
        <initializer>= new Vector3(0, 0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="71" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" prot="public" static="no" mutable="no">
        <type>Vector3</type>
        <definition>Vector3 Leap.Unity.RiggedHand.modelPalmFacing</definition>
        <argsstring></argsstring>
        <name>modelPalmFacing</name>
        <initializer>= new Vector3(0, 0, 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="72" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1aa44bd1ae715125809d5803b293eb1bee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override bool</type>
        <definition>override bool Leap.Unity.RiggedHand.SupportsEditorPersistence</definition>
        <argsstring>()</argsstring>
        <name>SupportsEditorPersistence</name>
        <reimplements refid="class_leap_1_1_unity_1_1_hand_model_base_1acd4789523584dd7d240e1d426b4d321c">SupportsEditorPersistence</reimplements>
        <briefdescription>
<para>Returns whether or not this hand model supports editor persistence. This is false by default and must be opt-in by a developer making their own hand model script if they want editor persistence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="25" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a588b2f58a5ffbbfc451ddf8432228507" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Leap.Unity.RiggedHand.InitHand</definition>
        <argsstring>()</argsstring>
        <name>InitHand</name>
        <reimplements refid="class_leap_1_1_unity_1_1_hand_model_1a67f1a6887e0803c96095a376fc1e6031">InitHand</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement this function to initialise this hand after it is created. This function is called by the HandController during the <ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref> Update() phase when a new hand is detected by the <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> Motion device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="82" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1aa4056b463cf5f441e96e1805a609cd6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion Leap.Unity.RiggedHand.Reorientation</definition>
        <argsstring>()</argsstring>
        <name>Reorientation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="88" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1ac4e41fd3965e2d0d56379d3fc6011128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Leap.Unity.RiggedHand.UpdateHand</definition>
        <argsstring>()</argsstring>
        <name>UpdateHand</name>
        <reimplements refid="class_leap_1_1_unity_1_1_hand_model_1acbb96fd18f28d01a74c1e0ac709b1977">UpdateHand</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement this function to update this hand once every game loop. For <ref refid="class_leap_1_1_unity_1_1_hand_model" kindref="compound">HandModel</ref> instances assigned to the HandController graphics hand list, the HandController calls this function during the <ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref> Update() phase. For <ref refid="class_leap_1_1_unity_1_1_hand_model" kindref="compound">HandModel</ref> instances in the physics hand list, the HandController calls this function in the FixedUpdate() phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="95" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="95" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1aeeb6a629e804a4047ff01562cde17371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion Leap.Unity.RiggedHand.GetRiggedPalmRotation</definition>
        <argsstring>()</argsstring>
        <name>GetRiggedPalmRotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="123" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="123" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a5a1c018bad50c06259998bdccbc2c513" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.SetupRiggedHand</definition>
        <argsstring>()</argsstring>
        <name>SetupRiggedHand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets up the rigged hand by finding base of each finger by name </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="141" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="141" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a919b4e3b967a79eb3bcce6d838a7ef4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.AutoRigRiggedHand</definition>
        <argsstring>(Transform palm, Transform finger1, Transform finger2)</argsstring>
        <name>AutoRigRiggedHand</name>
        <param>
          <type>Transform</type>
          <declname>palm</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>finger1</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>finger2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets up the rigged hand if <ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref> scripts have already been assigned using Mecanim values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="152" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="152" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1ae59cd89a5a3b39f56be3b8db74030fa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.StoreJointsStartPose</definition>
        <argsstring>()</argsstring>
        <name>StoreJointsStartPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stores a snapshot of original joint positions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="285" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="285" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.RestoreJointsStartPose</definition>
        <argsstring>()</argsstring>
        <name>RestoreJointsStartPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restores original joint positions, particularly after model has been placed in <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref>&apos;s editor pose </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="294" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="294" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a375204e4916d600d49dcd6812d08f56e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.OnValidate</definition>
        <argsstring>()</argsstring>
        <name>OnValidate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="317" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="317" bodyend="326"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a76efda09b94b86f6ed990453ac88f68b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion Leap.Unity.RiggedHand.CalculateRotation</definition>
        <argsstring>(LeapTransform trs)</argsstring>
        <name>CalculateRotation</name>
        <param>
          <type><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref></type>
          <declname>trs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="134" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="134" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a838743cc1134323ce9ec6145bee29217" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.assignRiggedFingersByName</definition>
        <argsstring>()</argsstring>
        <name>assignRiggedFingersByName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds palm and finds root of each finger by name and assigns <ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref> scripts </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="162" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="162" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1aa53caf6a8046eb89b2e062fa8d3eff46" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.SetupRiggedFingers</definition>
        <argsstring>()</argsstring>
        <name>SetupRiggedFingers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Triggers SetupRiggedFinger() in each <ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref> script for this <ref refid="class_leap_1_1_unity_1_1_rigged_hand" kindref="compound">RiggedHand</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="227" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="227" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1aa26d2fd9022c6df857186b32fb18be79" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.setFingerPalmFacing</definition>
        <argsstring>()</argsstring>
        <name>setFingerPalmFacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the modelPalmFacing vector in each <ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref> to match this <ref refid="class_leap_1_1_unity_1_1_rigged_hand" kindref="compound">RiggedHand</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="236" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="236" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a39819c6ce7eb982b06296e3f932014fe" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Leap.Unity.RiggedHand.calculateModelPalmFacing</definition>
        <argsstring>(Transform palm, Transform finger1, Transform finger2)</argsstring>
        <name>calculateModelPalmFacing</name>
        <param>
          <type>Transform</type>
          <declname>palm</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>finger1</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>finger2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the palm facing direction by finding the vector perpendicular to the palm and two fingers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="245" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="245" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a678a7115876d3e72db04831ddc00d05b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Leap.Unity.RiggedHand.calculateModelFingerPointing</definition>
        <argsstring>()</argsstring>
        <name>calculateModelFingerPointing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find finger direction by finding distance vector from palm to middle finger </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="263" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a6b0c14e2e52c511f68f7d892c3ad6240" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.setDeformPositionsInFingers</definition>
        <argsstring>(bool onOff)</argsstring>
        <name>setDeformPositionsInFingers</name>
        <param>
          <type>bool</type>
          <declname>onOff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="303" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="303" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a355e7b56b51f3636dac2a1a0aaf2a1b3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.RiggedHand.setScaleLastFingerBoneInFingers</definition>
        <argsstring>(bool shouldScale)</argsstring>
        <name>setScaleLastFingerBoneInFingers</name>
        <param>
          <type>bool</type>
          <declname>shouldScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="310" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="310" bodyend="315"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.RiggedHand.CalculateZeroedVector</definition>
        <argsstring>(Vector3 vectorToZero)</argsstring>
        <name>CalculateZeroedVector</name>
        <param>
          <type>Vector3</type>
          <declname>vectorToZero</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds nearest cardinal vector to a vector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="269" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="269" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This version of <ref refid="class_leap_1_1_unity_1_1_hand_model_base" kindref="compound">HandModelBase</ref> supports a hand respresentation based on a skinned and jointed 3D model asset. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4170">
        <label>HandModelBase</label>
        <link refid="class_leap_1_1_unity_1_1_hand_model_base"/>
        <childnode refid="4171" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4169">
        <label>HandModel</label>
        <link refid="class_leap_1_1_unity_1_1_hand_model"/>
        <childnode refid="4170" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4168">
        <label>Leap.Unity.RiggedHand</label>
        <link refid="class_leap_1_1_unity_1_1_rigged_hand"/>
        <childnode refid="4169" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4171">
        <label>MonoBehaviour</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4179">
        <label>Leap.Vector</label>
        <link refid="struct_leap_1_1_vector"/>
        <childnode refid="4180" relation="public-inheritance">
        </childnode>
        <childnode refid="4179" relation="usage">
          <edgelabel>Down</edgelabel>
          <edgelabel>XAxis</edgelabel>
          <edgelabel>YAxis</edgelabel>
          <edgelabel>Backward</edgelabel>
          <edgelabel>ZAxis</edgelabel>
          <edgelabel>Forward</edgelabel>
          <edgelabel>Left</edgelabel>
          <edgelabel>Right</edgelabel>
          <edgelabel>Zero</edgelabel>
          <edgelabel>Up</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="4174">
        <label>HandModelBase</label>
        <link refid="class_leap_1_1_unity_1_1_hand_model_base"/>
        <childnode refid="4175" relation="public-inheritance">
        </childnode>
        <childnode refid="4176" relation="usage">
          <edgelabel>group</edgelabel>
        </childnode>
      </node>
      <node id="4173">
        <label>HandModel</label>
        <link refid="class_leap_1_1_unity_1_1_hand_model"/>
        <childnode refid="4174" relation="public-inheritance">
        </childnode>
        <childnode refid="4177" relation="usage">
          <edgelabel>fingers</edgelabel>
        </childnode>
        <childnode refid="4185" relation="usage">
          <edgelabel>hand_</edgelabel>
        </childnode>
      </node>
      <node id="4181">
        <label>Leap.Bone</label>
        <link refid="class_leap_1_1_bone"/>
        <childnode refid="4182" relation="public-inheritance">
        </childnode>
        <childnode refid="4183" relation="usage">
          <edgelabel>Rotation</edgelabel>
        </childnode>
        <childnode refid="4179" relation="usage">
          <edgelabel>Center</edgelabel>
          <edgelabel>PrevJoint</edgelabel>
          <edgelabel>Direction</edgelabel>
          <edgelabel>NextJoint</edgelabel>
        </childnode>
      </node>
      <node id="4182">
        <label>IEquatable&lt; Bone &gt;</label>
      </node>
      <node id="4180">
        <label>IEquatable&lt; Vector &gt;</label>
      </node>
      <node id="4187">
        <label>Leap.Arm</label>
        <link refid="class_leap_1_1_arm"/>
        <childnode refid="4188" relation="public-inheritance">
        </childnode>
        <childnode refid="4189" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4185">
        <label>Leap.Hand</label>
        <link refid="class_leap_1_1_hand"/>
        <childnode refid="4186" relation="public-inheritance">
        </childnode>
        <childnode refid="4183" relation="usage">
          <edgelabel>Rotation</edgelabel>
        </childnode>
        <childnode refid="4187" relation="usage">
          <edgelabel>Arm</edgelabel>
        </childnode>
        <childnode refid="4179" relation="usage">
          <edgelabel>PalmNormal</edgelabel>
          <edgelabel>Direction</edgelabel>
          <edgelabel>WristPosition</edgelabel>
          <edgelabel>PalmPosition</edgelabel>
          <edgelabel>StabilizedPalmPosition</edgelabel>
          <edgelabel>PalmVelocity</edgelabel>
        </childnode>
      </node>
      <node id="4184">
        <label>IEquatable&lt; LeapQuaternion &gt;</label>
      </node>
      <node id="4176">
        <label>Leap.Unity.HandModelManager</label>
        <link refid="class_leap_1_1_unity_1_1_hand_model_manager"/>
        <childnode refid="4175" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4189">
        <label>IEquatable&lt; Arm &gt;</label>
      </node>
      <node id="4186">
        <label>IEquatable&lt; Hand &gt;</label>
      </node>
      <node id="4172">
        <label>Leap.Unity.RiggedHand</label>
        <link refid="class_leap_1_1_unity_1_1_rigged_hand"/>
        <childnode refid="4173" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4177">
        <label>Leap.Unity.FingerModel</label>
        <link refid="class_leap_1_1_unity_1_1_finger_model"/>
        <childnode refid="4175" relation="public-inheritance">
        </childnode>
        <childnode refid="4178" relation="usage">
          <edgelabel>finger_</edgelabel>
          <edgelabel>fingerType</edgelabel>
        </childnode>
        <childnode refid="4185" relation="usage">
          <edgelabel>hand_</edgelabel>
        </childnode>
      </node>
      <node id="4175">
        <label>MonoBehaviour</label>
      </node>
      <node id="4183">
        <label>Leap.LeapQuaternion</label>
        <link refid="struct_leap_1_1_leap_quaternion"/>
        <childnode refid="4184" relation="public-inheritance">
        </childnode>
        <childnode refid="4183" relation="usage">
          <edgelabel>Identity</edgelabel>
        </childnode>
      </node>
      <node id="4178">
        <label>Leap.Finger</label>
        <link refid="class_leap_1_1_finger"/>
        <childnode refid="4178" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
        <childnode refid="4179" relation="usage">
          <edgelabel>TipPosition</edgelabel>
          <edgelabel>Direction</edgelabel>
        </childnode>
        <childnode refid="4181" relation="usage">
          <edgelabel>bones</edgelabel>
        </childnode>
      </node>
      <node id="4188">
        <label>Bone</label>
        <link refid="class_leap_1_1_bone"/>
        <childnode refid="4182" relation="public-inheritance">
        </childnode>
        <childnode refid="4183" relation="usage">
          <edgelabel>Rotation</edgelabel>
        </childnode>
        <childnode refid="4179" relation="usage">
          <edgelabel>Center</edgelabel>
          <edgelabel>PrevJoint</edgelabel>
          <edgelabel>Direction</edgelabel>
          <edgelabel>NextJoint</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedHand.cs" bodystart="19" bodyend="327"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a661ca6edeeeefdd93828963197a9d18e" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>_scaleLastFingerBones</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a838743cc1134323ce9ec6145bee29217" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>assignRiggedFingersByName</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a919b4e3b967a79eb3bcce6d838a7ef4c" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>AutoRigRiggedHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_base_1a3b60b707011fa39db35ca3c902167ade" prot="public" virt="virtual"><scope>Leap::Unity::RiggedHand</scope><name>BeginHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a678a7115876d3e72db04831ddc00d05b" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>calculateModelFingerPointing</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a39819c6ce7eb982b06296e3f932014fe" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>calculateModelPalmFacing</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a76efda09b94b86f6ed990453ac88f68b" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>CalculateRotation</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>CalculateZeroedVector</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>DeformPositionsInFingers</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1ae073b1ac57b2cfbabd44151c8089bc64" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>deformPositionsState</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a171cf7f14613147a8f0dff7dfd3efd91" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>elbowJoint</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>fingers</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_base_1a042b3778ca6a61c7991d1ffaecdf7eed" prot="public" virt="virtual"><scope>Leap::Unity::RiggedHand</scope><name>FinishHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>forearm</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a2b99e4722e90a53601927c31c4ef2954" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetArmCenter</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a1c754fe7a7778b4aa3bb3191f63ac13c" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetArmDirection</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1af2b710f410b9eacd44d9ec1d3e36bad6" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetArmLength</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a2bea9f9359bb0eb9f2a66a1e2a7c889f" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetArmRotation</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1ab6e83399ea1b0940cb8053d8484de6b9" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetArmWidth</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a453ef9c288145200df70ba1781b80329" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetElbowPosition</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a8b8afb06879194f1c63089f0c0202b26" prot="public" virt="virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetLeapHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a36406d60c04839c2ebce7abdf128bda4" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetPalmDirection</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a9208dad95a201d7e6cb8570d325ce993" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetPalmNormal</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a17386cdea4e2d9bfdc9fbf88e5eafd37" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetPalmPosition</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a5aa1271238fe3c0ef203b0150b84cf4c" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetPalmRotation</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1aeeb6a629e804a4047ff01562cde17371" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetRiggedPalmRotation</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a095aedb3f03a32b782abaf1a22861588" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>GetWristPosition</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_base_1a3b68edab1954372052ab9031786dfcfa" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>group</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a5021ce9e2077ee8616ac608409133d5c" prot="protected" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>hand_</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1adc0cdab6a0de6c0520a100bfff19a6cd" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>Handedness</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1ad8d407041200583ebc8e414fb903b87c" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>handModelPalmWidth</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1aafa1ebadbf7fb5901f22f5834bac4dba" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>HandModelType</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a588b2f58a5ffbbfc451ddf8432228507" prot="public" virt="virtual"><scope>Leap::Unity::RiggedHand</scope><name>InitHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>IsTracked</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a500c3b8709c80062a7af5bd336b3188d" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>jointList</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a08cc8a5aa84e23fd16cd8f104e780b34" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>LeapID</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a7c0f95f477fc825e7f34a04d477a515d" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>localPositions</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a6c7818e5703fe87ae4fb089b38187794" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>localRotations</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>modelFingerPointing</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1aba36c91e04e41858d120462170cf7902" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>ModelPalmAtLeapWrist</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>modelPalmFacing</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a251c19cef47a9e349acfaa333219a495" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>NUM_FINGERS</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_base_1a9dc33aeca6f54cdb24efe3798f8274d4" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>OnBegin</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_base_1ac5252ddb5ef8a9e78aa01135d832ede0" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>OnFinish</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a375204e4916d600d49dcd6812d08f56e" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>OnValidate</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>palm</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1aa4056b463cf5f441e96e1805a609cd6f" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>Reorientation</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>RestoreJointsStartPose</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a5b746af2657245a3e8cad12b081d1fe0" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>scaleLastFingerBones</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a6b0c14e2e52c511f68f7d892c3ad6240" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>setDeformPositionsInFingers</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1ab8de11dc599037ace3a7bce66cdb8b94" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>SetEditorLeapPose</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1af68f4607b342b0e48eaab34cdbf657b4" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>setEditorLeapPose</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1aa26d2fd9022c6df857186b32fb18be79" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>setFingerPalmFacing</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a73f417c17d35db37192c164193010ba0" prot="public" virt="virtual"><scope>Leap::Unity::RiggedHand</scope><name>SetLeapHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a355e7b56b51f3636dac2a1a0aaf2a1b3" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>setScaleLastFingerBoneInFingers</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1aa53caf6a8046eb89b2e062fa8d3eff46" prot="private" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>SetupRiggedFingers</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1a5a1c018bad50c06259998bdccbc2c513" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>SetupRiggedHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1ae59cd89a5a3b39f56be3b8db74030fa5" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>StoreJointsStartPose</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1aa44bd1ae715125809d5803b293eb1bee" prot="public" virt="virtual"><scope>Leap::Unity::RiggedHand</scope><name>SupportsEditorPersistence</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1ac4e41fd3965e2d0d56379d3fc6011128" prot="public" virt="virtual"><scope>Leap::Unity::RiggedHand</scope><name>UpdateHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_rigged_hand_1ad02235db6045a120093cdca16b1e61bf" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>UseMetaCarpals</name></member>
      <member refid="class_leap_1_1_unity_1_1_hand_model_1a5dd72502f20abe5fcddbeabe6bf0bfc9" prot="public" virt="non-virtual"><scope>Leap::Unity::RiggedHand</scope><name>wristJoint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
