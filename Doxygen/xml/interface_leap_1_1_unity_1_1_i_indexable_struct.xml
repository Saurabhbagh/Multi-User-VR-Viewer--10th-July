<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="interface_leap_1_1_unity_1_1_i_indexable_struct" kind="interface" language="C#" prot="public">
    <compoundname>Leap::Unity::IIndexableStruct</compoundname>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
      <param>
        <type>ThisIndexableType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="interface_leap_1_1_unity_1_1_i_indexable_struct_1ad7283ee0dd67d3a6c03fd76050ec220b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>T</type>
        <definition>T Leap.Unity.IIndexableStruct&lt; T, ThisIndexableType &gt;.this[int idx]</definition>
        <argsstring></argsstring>
        <name>this[int idx]</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="34" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="property" id="interface_leap_1_1_unity_1_1_i_indexable_struct_1ad6584007443da506772ba213121443d5" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Leap.Unity.IIndexableStruct&lt; T, ThisIndexableType &gt;.Count</definition>
        <argsstring></argsstring>
        <name>Count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="36" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="36" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is a definition-friendly interface that new &quot;indexable&quot; struct definitions can implement to make it a little easier to implement foreach and Query() operations for their struct. (You can use the <ref refid="struct_leap_1_1_unity_1_1_indexable_struct_enumerator" kindref="compound">IndexableStructEnumerator</ref> for this purpose, you just have to pass it type arguments that correspond to your struct type.) </para>
    </briefdescription>
    <detaileddescription>
<para>Unlike <ref refid="interface_leap_1_1_unity_1_1_i_indexable" kindref="compound">IIndexable</ref>, <ref refid="interface_leap_1_1_unity_1_1_i_indexable_struct" kindref="compound">IIndexableStruct</ref> cannot utilize extension methods to automatically give consumers of the interface access to foreach and <ref refid="namespace_leap_1_1_unity_1_1_query" kindref="compound">Query</ref> operations because consumption of a struct via an interface parameter forces the struct to be boxed, which causes allocation. As such, <ref refid="interface_leap_1_1_unity_1_1_i_indexable_struct" kindref="compound">IIndexableStruct</ref> does not directly implement <ref refid="interface_leap_1_1_unity_1_1_i_indexable" kindref="compound">IIndexable</ref>.</para>
<para>(This all may change in C# 8 when we get traits, but <ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref> is still in the C# 4 stone age.) </para>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" line="32" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexableStruct.cs" bodystart="30" bodyend="38"/>
    <listofallmembers>
      <member refid="interface_leap_1_1_unity_1_1_i_indexable_struct_1ad6584007443da506772ba213121443d5" prot="public" virt="non-virtual"><scope>Leap::Unity::IIndexableStruct</scope><name>Count</name></member>
      <member refid="interface_leap_1_1_unity_1_1_i_indexable_struct_1ad7283ee0dd67d3a6c03fd76050ec220b" prot="public" virt="non-virtual"><scope>Leap::Unity::IIndexableStruct</scope><name>this[int idx]</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
