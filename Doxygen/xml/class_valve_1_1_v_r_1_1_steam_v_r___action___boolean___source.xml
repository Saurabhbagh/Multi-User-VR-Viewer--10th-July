<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Boolean_Source</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_In_Source</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_Boolean</basecompoundref>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ab45da73ac3ff33090639d347dbbe12bf" prot="protected" static="yes" mutable="no">
        <type>uint</type>
        <definition>uint Valve.VR.SteamVR_Action_Boolean_Source.actionData_size</definition>
        <argsstring></argsstring>
        <name>actionData_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="232" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="event">
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a047594426551baeff37ca81d6751ad69" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a529f46e4f0459edb2641bbb382d10614" kindref="member">SteamVR_Action_Boolean.StateDownHandler</ref></type>
        <definition>SteamVR_Action_Boolean.StateDownHandler Valve.VR.SteamVR_Action_Boolean_Source.onStateDown</definition>
        <argsstring></argsstring>
        <name>onStateDown</name>
        <briefdescription>
<para>Event fires when the state of the action changes from false to true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="235" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a1b52d5a2bfc5a5f364cd97827b2dd1dc" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a87ebada25dac6016557c3b81e6324b90" kindref="member">SteamVR_Action_Boolean.StateUpHandler</ref></type>
        <definition>SteamVR_Action_Boolean.StateUpHandler Valve.VR.SteamVR_Action_Boolean_Source.onStateUp</definition>
        <argsstring></argsstring>
        <name>onStateUp</name>
        <briefdescription>
<para>Event fires when the state of the action changes from true to false </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="238" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a90421a54054f0660a28d0d6703bdbc7e" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a59bb3ba4454fcebc2f1d2ddd661dd38f" kindref="member">SteamVR_Action_Boolean.StateHandler</ref></type>
        <definition>SteamVR_Action_Boolean.StateHandler Valve.VR.SteamVR_Action_Boolean_Source.onState</definition>
        <argsstring></argsstring>
        <name>onState</name>
        <briefdescription>
<para>Event fires when the state of the action is true and the action gets updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="241" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a89f4c615f6cc510d0bf7326218d85759" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" kindref="member">SteamVR_Action_Boolean.ActiveChangeHandler</ref></type>
        <definition>SteamVR_Action_Boolean.ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source.onActiveChange</definition>
        <argsstring></argsstring>
        <name>onActiveChange</name>
        <briefdescription>
<para>Event fires when the active state (ActionSet active and binding active) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="244" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a39d21e4fc6f670f9289b2acd0c2c2bf3" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" kindref="member">SteamVR_Action_Boolean.ActiveChangeHandler</ref></type>
        <definition>SteamVR_Action_Boolean.ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source.onActiveBindingChange</definition>
        <argsstring></argsstring>
        <name>onActiveBindingChange</name>
        <briefdescription>
<para>Event fires when the active state of the binding changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="247" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a3499c4f9a10e45562c36d84f2cd0f834" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9dbdff089d05d822688005fa19fef120" kindref="member">SteamVR_Action_Boolean.ChangeHandler</ref></type>
        <definition>SteamVR_Action_Boolean.ChangeHandler Valve.VR.SteamVR_Action_Boolean_Source.onChange</definition>
        <argsstring></argsstring>
        <name>onChange</name>
        <briefdescription>
<para>Event fires when the state of the action changes from false to true or true to false </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="250" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a415211a4f88a14bcd67b25bf9daff709" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ab9ee21a88a5d5d23603465c55796fcf5" kindref="member">SteamVR_Action_Boolean.UpdateHandler</ref></type>
        <definition>SteamVR_Action_Boolean.UpdateHandler Valve.VR.SteamVR_Action_Boolean_Source.onUpdate</definition>
        <argsstring></argsstring>
        <name>onUpdate</name>
        <briefdescription>
<para>Event fires when the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="253" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a63563619aa24bc698e0291a332ee68ae" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean_Source.state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
<para>The current value of the boolean action. Note: Will only return true if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="256" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1aee3c0e3480c1837b3455229733a2d58c" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean_Source.stateDown</definition>
        <argsstring></argsstring>
        <name>stateDown</name>
        <briefdescription>
<para>True when the action&apos;s state changes from false to true. Note: Will only return true if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
<para>Will only return true if the action is also active.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="260" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a1fc319a221f4ca4f89c35b0836bd6d81" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean_Source.stateUp</definition>
        <argsstring></argsstring>
        <name>stateUp</name>
        <briefdescription>
<para>True when the action&apos;s state changes from true to false. Note: Will only return true if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
<para>Will only return true if the action is also active.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="264" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a2dce0c19bb9d547f63dc1d8432df2c95" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Boolean_Source.changed</definition>
        <argsstring></argsstring>
        <name>changed</name>
        <briefdescription>
<para>True when the action&apos;s state changed during the most recent update. Note: Will only return true if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
<para>ActionSet is ignored since get is coming from the native struct.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="268" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="268" bodyend="268"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ab00750875aeedfa74cd7ce19ecae2bac" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean_Source.lastState</definition>
        <argsstring></argsstring>
        <name>lastState</name>
        <briefdescription>
<para>The value of the action&apos;s &apos;state&apos; during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para>Always returns the previous update state</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="273" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ae8ca6561a610cd2484229b1a8ff99911" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean_Source.lastStateDown</definition>
        <argsstring></argsstring>
        <name>lastStateDown</name>
        <briefdescription>
<para>The value of the action&apos;s &apos;stateDown&apos; during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para>Always returns the previous update state</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="277" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1aabdbb44ebb825ceb88524a655f4bbdd9" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean_Source.lastStateUp</definition>
        <argsstring></argsstring>
        <name>lastStateUp</name>
        <briefdescription>
<para>The value of the action&apos;s &apos;stateUp&apos; during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para>Always returns the previous update state</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="281" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a0d4b059215ef754084e98c6b342cfdfd" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Boolean_Source.lastChanged</definition>
        <argsstring></argsstring>
        <name>lastChanged</name>
        <briefdescription>
<para>The value of the action&apos;s &apos;changed&apos; during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para>Always returns the previous update state. Set is ignored since get is coming from the native struct.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="285" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a182735fc4bd6d69000885ea290c95124" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override ulong</type>
        <definition>override ulong Valve.VR.SteamVR_Action_Boolean_Source.activeOrigin</definition>
        <argsstring></argsstring>
        <name>activeOrigin</name>
        <briefdescription>
<para>The handle to the origin of the component that was used to update the value for this action </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="288" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="289" bodyend="297"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ad73216cbbb3caf2c1f42d736e86b7474" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override ulong</type>
        <definition>override ulong Valve.VR.SteamVR_Action_Boolean_Source.lastActiveOrigin</definition>
        <argsstring></argsstring>
        <name>lastActiveOrigin</name>
        <briefdescription>
<para>The handle to the origin of the component that was used to update the value for this action (for the previous update) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="300" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="300" bodyend="300"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ae7f38ff0c9baf560ab3df37206ea19db" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Boolean_Source.active</definition>
        <argsstring></argsstring>
        <name>active</name>
        <briefdescription>
<para>Returns true if this action is bound and the ActionSet is active </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="303" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1aa5560617c43d44a46ed2b9bc2740e6a3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Boolean_Source.activeBinding</definition>
        <argsstring></argsstring>
        <name>activeBinding</name>
        <briefdescription>
<para>Returns true if the action is bound </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="306" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a797a1d5c573add8358c04e40de6151e6" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Boolean_Source.lastActive</definition>
        <argsstring></argsstring>
        <name>lastActive</name>
        <briefdescription>
<para>Returns true if the action was bound and the ActionSet was active during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="310" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a818becad695a366d83859d897240c88d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Boolean_Source.lastActiveBinding</definition>
        <argsstring></argsstring>
        <name>lastActiveBinding</name>
        <briefdescription>
<para>Returns true if the action was bound during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="313" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="313" bodyend="313"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a548a08fed0cbd805a41b5c8fb6781ec7" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_input_digital_action_data__t" kindref="compound">InputDigitalActionData_t</ref></type>
        <definition>InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source.actionData</definition>
        <argsstring></argsstring>
        <name>actionData</name>
        <initializer>= new <ref refid="struct_valve_1_1_v_r_1_1_input_digital_action_data__t" kindref="compound">InputDigitalActionData_t</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="316" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a8da087502c6d74720661c51b921ebb3b" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_input_digital_action_data__t" kindref="compound">InputDigitalActionData_t</ref></type>
        <definition>InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source.lastActionData</definition>
        <argsstring></argsstring>
        <name>lastActionData</name>
        <initializer>= new <ref refid="struct_valve_1_1_v_r_1_1_input_digital_action_data__t" kindref="compound">InputDigitalActionData_t</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="317" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ab06d75d32615dfe0b2028e3e3b4d978d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
        <definition>SteamVR_Action_Boolean Valve.VR.SteamVR_Action_Boolean_Source.booleanAction</definition>
        <argsstring></argsstring>
        <name>booleanAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="319" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="319" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a35bf3460bf62e92bc67e371b16125c39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Boolean_Source.Preinitialize</definition>
        <argsstring>(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource)</argsstring>
        <name>Preinitialize</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa2bec7f32b37595de01f1456a3fa5bfe">Preinitialize</reimplements>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
          <declname>wrappingAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>forInputSource</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Sets up the internals of the action source before <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="324" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="324" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1abf7892da581c5adc54514e02df609b4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Boolean_Source.Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa4784c092cc0a4372812834bfcceab6d">Initialize</reimplements>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Initializes the handle for the inputSource, the action data size, and any other related <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="334" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="334" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a3a48e22c9912f24ad65e3b64a21cc54c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Boolean_Source.UpdateValue</definition>
        <argsstring>()</argsstring>
        <name>UpdateValue</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a800b521715c6cbfe32e9b0b6db7e0a16">UpdateValue</reimplements>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Updates the data for this action and this input source. Sends related events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="346" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="346" bodyend="383"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4681">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4678">
        <label>Valve.VR.SteamVR_Action_Boolean_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source"/>
        <childnode refid="4679" relation="public-inheritance">
        </childnode>
        <childnode refid="4683" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4682">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4681" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4680">
        <label>SteamVR_Action_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source"/>
        <childnode refid="4681" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4683">
        <label>ISteamVR_Action_Boolean</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean"/>
        <childnode refid="4682" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4679">
        <label>SteamVR_Action_In_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source"/>
        <childnode refid="4680" relation="public-inheritance">
        </childnode>
        <childnode refid="4682" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4693">
        <label>Valve.VR.InputOriginInfo_t</label>
        <link refid="struct_valve_1_1_v_r_1_1_input_origin_info__t"/>
      </node>
      <node id="4687">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4684">
        <label>Valve.VR.SteamVR_Action_Boolean_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source"/>
        <childnode refid="4685" relation="public-inheritance">
        </childnode>
        <childnode refid="4694" relation="public-inheritance">
        </childnode>
        <childnode refid="4695" relation="usage">
          <edgelabel>booleanAction</edgelabel>
        </childnode>
        <childnode refid="4698" relation="usage">
          <edgelabel>actionData</edgelabel>
          <edgelabel>lastActionData</edgelabel>
        </childnode>
      </node>
      <node id="4695">
        <label>Valve.VR.SteamVR_Action_Boolean</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean"/>
        <childnode refid="4696" relation="public-inheritance">
        </childnode>
        <childnode refid="4694" relation="public-inheritance">
        </childnode>
        <childnode refid="4697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4692">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4687" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4697">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4690">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="4687" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4686">
        <label>SteamVR_Action_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source"/>
        <childnode refid="4687" relation="public-inheritance">
        </childnode>
        <childnode refid="4688" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="4688">
        <label>Valve.VR.SteamVR_Action&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action"/>
        <childnode refid="4689" relation="public-inheritance">
        </childnode>
        <childnode refid="4690" relation="public-inheritance">
        </childnode>
        <childnode refid="4691" relation="public-inheritance">
        </childnode>
        <childnode refid="4690" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4694">
        <label>ISteamVR_Action_Boolean</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean"/>
        <childnode refid="4692" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4689">
        <label>IEquatable&lt; SteamVR_Action &gt;</label>
      </node>
      <node id="4691">
        <label>SteamVR_Action</label>
      </node>
      <node id="4685">
        <label>SteamVR_Action_In_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source"/>
        <childnode refid="4686" relation="public-inheritance">
        </childnode>
        <childnode refid="4692" relation="public-inheritance">
        </childnode>
        <childnode refid="4693" relation="usage">
          <edgelabel>lastInputOriginInfo</edgelabel>
          <edgelabel>inputOriginInfo</edgelabel>
        </childnode>
      </node>
      <node id="4698">
        <label>Valve.VR.InputDigitalActionData_t</label>
        <link refid="struct_valve_1_1_v_r_1_1_input_digital_action_data__t"/>
      </node>
      <node id="4696">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="231" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="230" bodyend="384"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa38bfb4ea2779a73aa3285f861e2462e" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a548a08fed0cbd805a41b5c8fb6781ec7" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>actionData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ab45da73ac3ff33090639d347dbbe12bf" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>actionData_size</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa26748aead4336e028834777336636bb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>actionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ae7f38ff0c9baf560ab3df37206ea19db" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>active</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1aa5560617c43d44a46ed2b9bc2740e6a3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1acc6d38cc8824491cc45e809fa92922dc" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>activeDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a182735fc4bd6d69000885ea290c95124" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>activeOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ab06d75d32615dfe0b2028e3e3b4d978d" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>booleanAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a2dce0c19bb9d547f63dc1d8432df2c95" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>changed</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1abc08aab34cfed3310ff9dd315c93faaa" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>changedTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a67903c42bb717287d4a1a4a0f972537a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1acc5b9a83a017ceda67f3454bb6cefe25" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a8bd382c6351dc8d36b6ee63703e2c368" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>GetLocalizedOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a3144a785d52f3a15cbdb72aa571c852b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>GetLocalizedOriginPart</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a3b11b02fd911ae14ceac84478c5fe986" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1abf7892da581c5adc54514e02df609b4c" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1aa4f8d3bdc1f308d2687e52f56b4c4dfe" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>inputOriginInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a192b33ca9612e42e4180374bdfba5c14" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>inputOriginInfo_size</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a8610e78de0430e918d74119fe0913697" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>inputSource</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a427286fbd3c70da9333dc3f513e30e1c" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>inputSourceHandle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a385091591417e7c45289f89365c7a43e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>isUpdating</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a8da087502c6d74720661c51b921ebb3b" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastActionData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a797a1d5c573add8358c04e40de6151e6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a818becad695a366d83859d897240c88d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ad73216cbbb3caf2c1f42d736e86b7474" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastActiveOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a0d4b059215ef754084e98c6b342cfdfd" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a307619ed4e0665f3996d46e3eab92c7c" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastInputOriginInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1abf8faf86eba30e693269881582e81875" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastOriginGetFrame</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ab00750875aeedfa74cd7ce19ecae2bac" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1ae8ca6561a610cd2484229b1a8ff99911" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1aabdbb44ebb825ceb88524a655f4bbdd9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>lastStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a7c08a0c1332f4168e4b0e628772ac4fe" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>localizedOriginName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a39d21e4fc6f670f9289b2acd0c2c2bf3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>onActiveBindingChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a89f4c615f6cc510d0bf7326218d85759" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>onActiveChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a3499c4f9a10e45562c36d84f2cd0f834" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>onChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a90421a54054f0660a28d0d6703bdbc7e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>onState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a047594426551baeff37ca81d6751ad69" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>onStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a1b52d5a2bfc5a5f364cd97827b2dd1dc" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>onStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a415211a4f88a14bcd67b25bf9daff709" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>onUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a35bf3460bf62e92bc67e371b16125c39" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>Preinitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1af15b7b53084c8385e25203b4d8ccc986" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>renderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aafaed73b850687ab90ecbb2398df57e2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>setActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a63563619aa24bc698e0291a332ee68ae" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>state</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1aee3c0e3480c1837b3455229733a2d58c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>stateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a1fc319a221f4ca4f89c35b0836bd6d81" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>stateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1afe35f80548857d2da588f8a0c036e3e3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>SteamVR_Action_Source</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1ac20f6924626847c3957ad5b9092e5243" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>trackedDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a2f6dd3258b69ad2d7907dd35460ed4d9" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>UpdateOriginTrackedDeviceInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a2d300fd44241f60b98cd73088d120c24" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>updateTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source_1a3a48e22c9912f24ad65e3b64a21cc54c" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Boolean_Source</scope><name>UpdateValue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
