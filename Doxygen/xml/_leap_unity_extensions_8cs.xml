<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_leap_unity_extensions_8cs" kind="file" language="C#">
    <compoundname>LeapUnityExtensions.cs</compoundname>
    <innerclass refid="class_leap_1_1_unity_1_1_unity_vector_extension" prot="public">Leap::Unity::UnityVectorExtension</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_unity_quaternion_extension" prot="public">Leap::Unity::UnityQuaternionExtension</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_unity_matrix_extension" prot="public">Leap::Unity::UnityMatrixExtension</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity">Leap::Unity</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal" kindref="compound">LeapInternal</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity" kindref="compound">Leap.Unity</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnityVectorExtension<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3<sp/>ToVector3(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(vector.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/>vector.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>,<sp/>vector.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector3<sp/>ToVector3(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref><sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(vector.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1a5a641abc075b71fc0a9f3bed31a2d0f0" kindref="member">x</ref>,<sp/>vector.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1a590c426ffd4e8ade9475dba1e85433dd" kindref="member">y</ref>,<sp/>vector.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1af1fc4bf9c27138af9d077175709c68ef" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vector4<sp/>ToVector4(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector4(vector.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/>vector.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>,<sp/>vector.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>,<sp/>0.0f);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>ToVector(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Vector3<sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(vector.x,<sp/>vector.y,<sp/>vector.z);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref><sp/>ToCVector(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Vector3<sp/>vector)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref><sp/>cVector<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cVector.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1a5a641abc075b71fc0a9f3bed31a2d0f0" kindref="member">x</ref><sp/>=<sp/>vector.x;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cVector.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1a590c426ffd4e8ade9475dba1e85433dd" kindref="member">y</ref><sp/>=<sp/>vector.y;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cVector.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1af1fc4bf9c27138af9d077175709c68ef" kindref="member">z</ref><sp/>=<sp/>vector.z;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cVector;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnityQuaternionExtension<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Quaternion<sp/>ToQuaternion(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_leap_quaternion" kindref="compound">LeapQuaternion</ref><sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Quaternion(q.<ref refid="struct_leap_1_1_leap_quaternion_1a59fb70e8250b55c3a1ceb17f3ecfc4ff" kindref="member">x</ref>,<sp/>q.<ref refid="struct_leap_1_1_leap_quaternion_1abbf57cb8408118a670c43e4713bf86ff" kindref="member">y</ref>,<sp/>q.<ref refid="struct_leap_1_1_leap_quaternion_1a518972acd244231b413504c2d441445f" kindref="member">z</ref>,<sp/>q.<ref refid="struct_leap_1_1_leap_quaternion_1a81a812c8073171912309baabca03146f" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Quaternion<sp/>ToQuaternion(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n" kindref="compound">LEAP_QUATERNION</ref><sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Quaternion(q.<ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n_1a587fe9e9da4dad4c6e37cef603b12d0d" kindref="member">x</ref>,<sp/>q.<ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n_1a0b7822710cf1629a7b9c17cc2c88f11a" kindref="member">y</ref>,<sp/>q.<ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n_1a929a6fe22258fab61778eba9bc2390af" kindref="member">z</ref>,<sp/>q.<ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n_1a6957a5fe7e79e94a9b79288a1c5b02f5" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_leap_quaternion" kindref="compound">LeapQuaternion</ref><sp/>ToLeapQuaternion(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Quaternion<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_leap_quaternion" kindref="compound">LeapQuaternion</ref>(q.x,<sp/>q.y,<sp/>q.z,<sp/>q.w);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n" kindref="compound">LEAP_QUATERNION</ref><sp/>ToCQuaternion(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Quaternion<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n" kindref="compound">LEAP_QUATERNION</ref><sp/>cQuaternion<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n" kindref="compound">LEAP_QUATERNION</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cQuaternion.<ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n_1a587fe9e9da4dad4c6e37cef603b12d0d" kindref="member">x</ref><sp/>=<sp/>q.x;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cQuaternion.<ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n_1a0b7822710cf1629a7b9c17cc2c88f11a" kindref="member">y</ref><sp/>=<sp/>q.y;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cQuaternion.<ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n_1a929a6fe22258fab61778eba9bc2390af" kindref="member">z</ref><sp/>=<sp/>q.z;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cQuaternion.<ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n_1a6957a5fe7e79e94a9b79288a1c5b02f5" kindref="member">w</ref><sp/>=<sp/>q.w;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cQuaternion;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnityMatrixExtension<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>LEAP_UP<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>LEAP_FORWARD<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>LEAP_ORIGIN<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MM_TO_M<sp/>=<sp/>1e-3f;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Quaternion<sp/>CalculateRotation(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref><sp/>trs)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>up<sp/>=<sp/>trs.<ref refid="struct_leap_1_1_leap_transform_1ac46874ef78036f1bc2d2bf76dd9a62a2" kindref="member">yBasis</ref>.ToVector3();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>forward<sp/>=<sp/>-trs.<ref refid="struct_leap_1_1_leap_transform_1a59e5ecf307c5938bf9e04902b8395f8a" kindref="member">zBasis</ref>.ToVector3();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.LookRotation(forward,<sp/>up);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref><sp/>GetLeapMatrix(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Transform<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>scale<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(t.lossyScale.x<sp/>*<sp/>MM_TO_M,<sp/>t.lossyScale.y<sp/>*<sp/>MM_TO_M,<sp/>t.lossyScale.z<sp/>*<sp/>MM_TO_M);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref><sp/>transform<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref>(t.position.ToVector(),<sp/>t.rotation.ToLeapQuaternion(),<sp/>scale);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transform.<ref refid="struct_leap_1_1_leap_transform_1a699bd459e338da85f1ee7c2de9e466de" kindref="member">MirrorZ</ref>();<sp/></highlight><highlight class="comment">//<sp/>Unity<sp/>is<sp/>left<sp/>handed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transform;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/LeapUnityExtensions.cs"/>
  </compounddef>
</doxygen>
