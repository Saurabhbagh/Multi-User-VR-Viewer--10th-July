<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_leap_1_1_unity_1_1_readonly_hash_set" kind="struct" language="C#" prot="public">
    <compoundname>Leap::Unity::ReadonlyHashSet</compoundname>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_leap_1_1_unity_1_1_readonly_hash_set_1af89897b22a4b6880090595d5855e867c" prot="private" static="no" mutable="no">
        <type>readonly HashSet&lt; T &gt;</type>
        <definition>readonly HashSet&lt;T&gt; Leap.Unity.ReadonlyHashSet&lt; T &gt;._set</definition>
        <argsstring></argsstring>
        <name>_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="21" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="struct_leap_1_1_unity_1_1_readonly_hash_set_1a3b33c3913042d04cc2bef0c7fd8ee919" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Leap.Unity.ReadonlyHashSet&lt; T &gt;.Count</definition>
        <argsstring></argsstring>
        <name>Count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="27" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="27" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_readonly_hash_set_1a6333253382bb5c531d714107afdfc39b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Unity.ReadonlyHashSet&lt; T &gt;.ReadonlyHashSet</definition>
        <argsstring>(HashSet&lt; T &gt; set)</argsstring>
        <name>ReadonlyHashSet</name>
        <param>
          <type>HashSet&lt; T &gt;</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="23" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_readonly_hash_set_1aa52e65079c59c9661f18768d9b0c3187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HashSet&lt; T &gt;.Enumerator</type>
        <definition>HashSet&lt;T&gt;.Enumerator Leap.Unity.ReadonlyHashSet&lt; T &gt;.GetEnumerator</definition>
        <argsstring>()</argsstring>
        <name>GetEnumerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="33" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_readonly_hash_set_1a6830c4b8286125be121ec758483a6524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Unity.ReadonlyHashSet&lt; T &gt;.Contains</definition>
        <argsstring>(T obj)</argsstring>
        <name>Contains</name>
        <param>
          <type>T</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="37" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_readonly_hash_set_1a83284baa667b7e1e17703b869947f7df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_query_1_1_query" kindref="compound">Query</ref>&lt; T &gt;</type>
        <definition>Query&lt;T&gt; Leap.Unity.ReadonlyHashSet&lt; T &gt;.Query</definition>
        <argsstring>()</argsstring>
        <name>Query</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="41" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="41" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_readonly_hash_set_1aca24867a8671d5068905f1c38641fd5d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Leap.Unity.ReadonlyHashSet&lt; T &gt;.operator ReadonlyHashSet&lt; T &gt;</definition>
        <argsstring>(HashSet&lt; T &gt; set)</argsstring>
        <name>operator ReadonlyHashSet&lt; T &gt;</name>
        <param>
          <type>HashSet&lt; T &gt;</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="45" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_readonly_hash_set_1ac61ad56b6aaddcc9b9ac924e4e1bb737" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Leap.Unity.ReadonlyHashSet&lt; T &gt;.operator ReadonlyHashSet&lt; T &gt;</definition>
        <argsstring>(SerializableHashSet&lt; T &gt; set)</argsstring>
        <name>operator ReadonlyHashSet&lt; T &gt;</name>
        <param>
          <type><ref refid="class_leap_1_1_unity_1_1_serializable_hash_set" kindref="compound">SerializableHashSet</ref>&lt; T &gt;</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="49" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="49" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple wrapper around HashSet to provide readonly access. Useful when you want to return a HashSet to someone but you want to make sure they don&apos;t muck it up! </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" line="20" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlyHashSet.cs" bodystart="20" bodyend="52"/>
    <listofallmembers>
      <member refid="struct_leap_1_1_unity_1_1_readonly_hash_set_1af89897b22a4b6880090595d5855e867c" prot="private" virt="non-virtual"><scope>Leap::Unity::ReadonlyHashSet</scope><name>_set</name></member>
      <member refid="struct_leap_1_1_unity_1_1_readonly_hash_set_1a6830c4b8286125be121ec758483a6524" prot="public" virt="non-virtual"><scope>Leap::Unity::ReadonlyHashSet</scope><name>Contains</name></member>
      <member refid="struct_leap_1_1_unity_1_1_readonly_hash_set_1a3b33c3913042d04cc2bef0c7fd8ee919" prot="public" virt="non-virtual"><scope>Leap::Unity::ReadonlyHashSet</scope><name>Count</name></member>
      <member refid="struct_leap_1_1_unity_1_1_readonly_hash_set_1aa52e65079c59c9661f18768d9b0c3187" prot="public" virt="non-virtual"><scope>Leap::Unity::ReadonlyHashSet</scope><name>GetEnumerator</name></member>
      <member refid="struct_leap_1_1_unity_1_1_readonly_hash_set_1aca24867a8671d5068905f1c38641fd5d" prot="public" virt="non-virtual"><scope>Leap::Unity::ReadonlyHashSet</scope><name>operator ReadonlyHashSet&lt; T &gt;</name></member>
      <member refid="struct_leap_1_1_unity_1_1_readonly_hash_set_1ac61ad56b6aaddcc9b9ac924e4e1bb737" prot="public" virt="non-virtual"><scope>Leap::Unity::ReadonlyHashSet</scope><name>operator ReadonlyHashSet&lt; T &gt;</name></member>
      <member refid="struct_leap_1_1_unity_1_1_readonly_hash_set_1a83284baa667b7e1e17703b869947f7df" prot="public" virt="non-virtual"><scope>Leap::Unity::ReadonlyHashSet</scope><name>Query</name></member>
      <member refid="struct_leap_1_1_unity_1_1_readonly_hash_set_1a6333253382bb5c531d714107afdfc39b" prot="public" virt="non-virtual"><scope>Leap::Unity::ReadonlyHashSet</scope><name>ReadonlyHashSet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
