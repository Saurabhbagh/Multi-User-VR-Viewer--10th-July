<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_valve_1_1_v_r_1_1_i_v_r_render_models" kind="struct" language="C#" prot="public">
    <compoundname>Valve::VR::IVRRenderModels</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a5f14a839ffa684d80b4d567c024f7c2e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aaf7ab82d1e0d29b1f2c7c23444deaa11" kindref="member">_LoadRenderModel_Async</ref></type>
        <definition>internal _LoadRenderModel_Async Valve.VR.IVRRenderModels.LoadRenderModel_Async</definition>
        <argsstring></argsstring>
        <name>LoadRenderModel_Async</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1291" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ad09b53c1abe23e37e1ae6b75349ccfd8" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a4fa1104771d8555a178db0ff8c817849" kindref="member">_FreeRenderModel</ref></type>
        <definition>internal _FreeRenderModel Valve.VR.IVRRenderModels.FreeRenderModel</definition>
        <argsstring></argsstring>
        <name>FreeRenderModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1296" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a828f7c091584a7a023e0c2a1acf9d28e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a5c61ffd1a998ea69d3c9551c22524886" kindref="member">_LoadTexture_Async</ref></type>
        <definition>internal _LoadTexture_Async Valve.VR.IVRRenderModels.LoadTexture_Async</definition>
        <argsstring></argsstring>
        <name>LoadTexture_Async</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1301" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a0b8315d6a5b3731b76a76a791769e989" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ac4a47c1b699bbc29965d6ebd54895fe0" kindref="member">_FreeTexture</ref></type>
        <definition>internal _FreeTexture Valve.VR.IVRRenderModels.FreeTexture</definition>
        <argsstring></argsstring>
        <name>FreeTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1306" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a8baea7d71d96ab003e8c552187ad4652" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ab99d05c13fa1b637219e1b307adbf13f" kindref="member">_LoadTextureD3D11_Async</ref></type>
        <definition>internal _LoadTextureD3D11_Async Valve.VR.IVRRenderModels.LoadTextureD3D11_Async</definition>
        <argsstring></argsstring>
        <name>LoadTextureD3D11_Async</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1311" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a1f79607150d419aba923b85209d1ea24" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a819d498723194d075a7e114272dce441" kindref="member">_LoadIntoTextureD3D11_Async</ref></type>
        <definition>internal _LoadIntoTextureD3D11_Async Valve.VR.IVRRenderModels.LoadIntoTextureD3D11_Async</definition>
        <argsstring></argsstring>
        <name>LoadIntoTextureD3D11_Async</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1316" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a447587837a0cfe26138e71f7e55ff016" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a64addc40cba89770ceaf1e258ab4d793" kindref="member">_FreeTextureD3D11</ref></type>
        <definition>internal _FreeTextureD3D11 Valve.VR.IVRRenderModels.FreeTextureD3D11</definition>
        <argsstring></argsstring>
        <name>FreeTextureD3D11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1321" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ac3a3651484bad309acb66e2229d255d2" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a82dc27ff6d6b45e1ef3957429bf65c1e" kindref="member">_GetRenderModelName</ref></type>
        <definition>internal _GetRenderModelName Valve.VR.IVRRenderModels.GetRenderModelName</definition>
        <argsstring></argsstring>
        <name>GetRenderModelName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1326" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aba17e8a856f5a780979f2c6d9227025d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a4957e84d66519ffebc626ccf121a607c" kindref="member">_GetRenderModelCount</ref></type>
        <definition>internal _GetRenderModelCount Valve.VR.IVRRenderModels.GetRenderModelCount</definition>
        <argsstring></argsstring>
        <name>GetRenderModelCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1331" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a1a8516b7e5c898a1653e5c7ace101558" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ad3a86004136474baa0217ed18c5b8af1" kindref="member">_GetComponentCount</ref></type>
        <definition>internal _GetComponentCount Valve.VR.IVRRenderModels.GetComponentCount</definition>
        <argsstring></argsstring>
        <name>GetComponentCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1336" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a7cc186fe1abfbb36dcb43515df428ce5" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aa62f5cca131966eaf77e1278e686d131" kindref="member">_GetComponentName</ref></type>
        <definition>internal _GetComponentName Valve.VR.IVRRenderModels.GetComponentName</definition>
        <argsstring></argsstring>
        <name>GetComponentName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1341" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a60dc144e8e593e6bec5830409089c238" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a5a1b0a485a820f88672d43c1ab53cf09" kindref="member">_GetComponentButtonMask</ref></type>
        <definition>internal _GetComponentButtonMask Valve.VR.IVRRenderModels.GetComponentButtonMask</definition>
        <argsstring></argsstring>
        <name>GetComponentButtonMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1346" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1af8eff8d00cb37e245ab3e4de06e4c20a" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1adda4a057b8145c45eb98857d941973dc" kindref="member">_GetComponentRenderModelName</ref></type>
        <definition>internal _GetComponentRenderModelName Valve.VR.IVRRenderModels.GetComponentRenderModelName</definition>
        <argsstring></argsstring>
        <name>GetComponentRenderModelName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1351" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1afe0feb2b6c3d9c5a4c1fe4961c925a6b" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a3ad1b8d8db45befef29127e2c1072741" kindref="member">_GetComponentStateForDevicePath</ref></type>
        <definition>internal _GetComponentStateForDevicePath Valve.VR.IVRRenderModels.GetComponentStateForDevicePath</definition>
        <argsstring></argsstring>
        <name>GetComponentStateForDevicePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1356" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a6a379a1430d19540fde2e149e5fe11d6" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1af79285d56f002d4aee1bfc4ad0b1bb78" kindref="member">_GetComponentState</ref></type>
        <definition>internal _GetComponentState Valve.VR.IVRRenderModels.GetComponentState</definition>
        <argsstring></argsstring>
        <name>GetComponentState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1361" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a7add3a8bd0c882490fa75b3053444137" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ae4724e8f8a0a8d43df490e731a70307c" kindref="member">_RenderModelHasComponent</ref></type>
        <definition>internal _RenderModelHasComponent Valve.VR.IVRRenderModels.RenderModelHasComponent</definition>
        <argsstring></argsstring>
        <name>RenderModelHasComponent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1366" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ac9fd279f8bdc7f4b2d9bd27d0157b231" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1afd1ebaace88f5874dc31699503bba86e" kindref="member">_GetRenderModelThumbnailURL</ref></type>
        <definition>internal _GetRenderModelThumbnailURL Valve.VR.IVRRenderModels.GetRenderModelThumbnailURL</definition>
        <argsstring></argsstring>
        <name>GetRenderModelThumbnailURL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1371" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a55e005c3f3137031d618b3120591fd84" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a894340b0300b94e37c1080e084555301" kindref="member">_GetRenderModelOriginalPath</ref></type>
        <definition>internal _GetRenderModelOriginalPath Valve.VR.IVRRenderModels.GetRenderModelOriginalPath</definition>
        <argsstring></argsstring>
        <name>GetRenderModelOriginalPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1376" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aa01437af440f55c1e94754fd35c78cf5" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1afbb07d42a16772bf58407406e41e9aac" kindref="member">_GetRenderModelErrorNameFromEnum</ref></type>
        <definition>internal _GetRenderModelErrorNameFromEnum Valve.VR.IVRRenderModels.GetRenderModelErrorNameFromEnum</definition>
        <argsstring></argsstring>
        <name>GetRenderModelErrorNameFromEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1381" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1381" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aaf7ab82d1e0d29b1f2c7c23444deaa11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
        <definition>internal delegate EVRRenderModelError Valve.VR.IVRRenderModels._LoadRenderModel_Async</definition>
        <argsstring>(string pchRenderModelName, ref IntPtr ppRenderModel)</argsstring>
        <name>_LoadRenderModel_Async</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>ref IntPtr</type>
          <declname>ppRenderModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a4fa1104771d8555a178db0ff8c817849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRRenderModels._FreeRenderModel</definition>
        <argsstring>(IntPtr pRenderModel)</argsstring>
        <name>_FreeRenderModel</name>
        <param>
          <type>IntPtr</type>
          <declname>pRenderModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a5c61ffd1a998ea69d3c9551c22524886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
        <definition>internal delegate EVRRenderModelError Valve.VR.IVRRenderModels._LoadTexture_Async</definition>
        <argsstring>(int textureId, ref IntPtr ppTexture)</argsstring>
        <name>_LoadTexture_Async</name>
        <param>
          <type>int</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>ref IntPtr</type>
          <declname>ppTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ac4a47c1b699bbc29965d6ebd54895fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRRenderModels._FreeTexture</definition>
        <argsstring>(IntPtr pTexture)</argsstring>
        <name>_FreeTexture</name>
        <param>
          <type>IntPtr</type>
          <declname>pTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ab99d05c13fa1b637219e1b307adbf13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
        <definition>internal delegate EVRRenderModelError Valve.VR.IVRRenderModels._LoadTextureD3D11_Async</definition>
        <argsstring>(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)</argsstring>
        <name>_LoadTextureD3D11_Async</name>
        <param>
          <type>int</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pD3D11Device</declname>
        </param>
        <param>
          <type>ref IntPtr</type>
          <declname>ppD3D11Texture2D</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a819d498723194d075a7e114272dce441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
        <definition>internal delegate EVRRenderModelError Valve.VR.IVRRenderModels._LoadIntoTextureD3D11_Async</definition>
        <argsstring>(int textureId, IntPtr pDstTexture)</argsstring>
        <name>_LoadIntoTextureD3D11_Async</name>
        <param>
          <type>int</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pDstTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a64addc40cba89770ceaf1e258ab4d793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRRenderModels._FreeTextureD3D11</definition>
        <argsstring>(IntPtr pD3D11Texture2D)</argsstring>
        <name>_FreeTextureD3D11</name>
        <param>
          <type>IntPtr</type>
          <declname>pD3D11Texture2D</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a82dc27ff6d6b45e1ef3957429bf65c1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRRenderModels._GetRenderModelName</definition>
        <argsstring>(uint unRenderModelIndex, System.Text.StringBuilder pchRenderModelName, uint unRenderModelNameLen)</argsstring>
        <name>_GetRenderModelName</name>
        <param>
          <type>uint</type>
          <declname>unRenderModelIndex</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unRenderModelNameLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a4957e84d66519ffebc626ccf121a607c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRRenderModels._GetRenderModelCount</definition>
        <argsstring>()</argsstring>
        <name>_GetRenderModelCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ad3a86004136474baa0217ed18c5b8af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRRenderModels._GetComponentCount</definition>
        <argsstring>(string pchRenderModelName)</argsstring>
        <name>_GetComponentCount</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aa62f5cca131966eaf77e1278e686d131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRRenderModels._GetComponentName</definition>
        <argsstring>(string pchRenderModelName, uint unComponentIndex, System.Text.StringBuilder pchComponentName, uint unComponentNameLen)</argsstring>
        <name>_GetComponentName</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unComponentIndex</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unComponentNameLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a5a1b0a485a820f88672d43c1ab53cf09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate ulong</type>
        <definition>internal delegate ulong Valve.VR.IVRRenderModels._GetComponentButtonMask</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName)</argsstring>
        <name>_GetComponentButtonMask</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1adda4a057b8145c45eb98857d941973dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRRenderModels._GetComponentRenderModelName</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName, System.Text.StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)</argsstring>
        <name>_GetComponentRenderModelName</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchComponentRenderModelName</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unComponentRenderModelNameLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a3ad1b8d8db45befef29127e2c1072741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRRenderModels._GetComponentStateForDevicePath</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName, ulong devicePath, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)</argsstring>
        <name>_GetComponentStateForDevicePath</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>devicePath</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___controller_mode___state__t" kindref="compound">RenderModel_ControllerMode_State_t</ref></type>
          <declname>pState</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___component_state__t" kindref="compound">RenderModel_ComponentState_t</ref></type>
          <declname>pComponentState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1af79285d56f002d4aee1bfc4ad0b1bb78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRRenderModels._GetComponentState</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)</argsstring>
        <name>_GetComponentState</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_v_r_controller_state__t" kindref="compound">VRControllerState_t</ref></type>
          <declname>pControllerState</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___controller_mode___state__t" kindref="compound">RenderModel_ControllerMode_State_t</ref></type>
          <declname>pState</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___component_state__t" kindref="compound">RenderModel_ComponentState_t</ref></type>
          <declname>pComponentState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ae4724e8f8a0a8d43df490e731a70307c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRRenderModels._RenderModelHasComponent</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName)</argsstring>
        <name>_RenderModelHasComponent</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1afd1ebaace88f5874dc31699503bba86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRRenderModels._GetRenderModelThumbnailURL</definition>
        <argsstring>(string pchRenderModelName, System.Text.StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)</argsstring>
        <name>_GetRenderModelThumbnailURL</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchThumbnailURL</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unThumbnailURLLen</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a894340b0300b94e37c1080e084555301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRRenderModels._GetRenderModelOriginalPath</definition>
        <argsstring>(string pchRenderModelName, System.Text.StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)</argsstring>
        <name>_GetRenderModelOriginalPath</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchOriginalPath</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unOriginalPathLen</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1afbb07d42a16772bf58407406e41e9aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate IntPtr</type>
        <definition>internal delegate IntPtr Valve.VR.IVRRenderModels._GetRenderModelErrorNameFromEnum</definition>
        <argsstring>(EVRRenderModelError error)</argsstring>
        <name>_GetRenderModelErrorNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1379" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1287" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1286" bodyend="1383"/>
    <listofallmembers>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a4fa1104771d8555a178db0ff8c817849" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_FreeRenderModel</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ac4a47c1b699bbc29965d6ebd54895fe0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_FreeTexture</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a64addc40cba89770ceaf1e258ab4d793" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_FreeTextureD3D11</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a5a1b0a485a820f88672d43c1ab53cf09" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetComponentButtonMask</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ad3a86004136474baa0217ed18c5b8af1" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetComponentCount</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aa62f5cca131966eaf77e1278e686d131" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetComponentName</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1adda4a057b8145c45eb98857d941973dc" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetComponentRenderModelName</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1af79285d56f002d4aee1bfc4ad0b1bb78" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetComponentState</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a3ad1b8d8db45befef29127e2c1072741" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetComponentStateForDevicePath</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a4957e84d66519ffebc626ccf121a607c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetRenderModelCount</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1afbb07d42a16772bf58407406e41e9aac" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetRenderModelErrorNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a82dc27ff6d6b45e1ef3957429bf65c1e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetRenderModelName</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a894340b0300b94e37c1080e084555301" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetRenderModelOriginalPath</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1afd1ebaace88f5874dc31699503bba86e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_GetRenderModelThumbnailURL</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a819d498723194d075a7e114272dce441" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_LoadIntoTextureD3D11_Async</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aaf7ab82d1e0d29b1f2c7c23444deaa11" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_LoadRenderModel_Async</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a5c61ffd1a998ea69d3c9551c22524886" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_LoadTexture_Async</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ab99d05c13fa1b637219e1b307adbf13f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_LoadTextureD3D11_Async</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ae4724e8f8a0a8d43df490e731a70307c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>_RenderModelHasComponent</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ad09b53c1abe23e37e1ae6b75349ccfd8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>FreeRenderModel</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a0b8315d6a5b3731b76a76a791769e989" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>FreeTexture</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a447587837a0cfe26138e71f7e55ff016" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>FreeTextureD3D11</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a60dc144e8e593e6bec5830409089c238" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetComponentButtonMask</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a1a8516b7e5c898a1653e5c7ace101558" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetComponentCount</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a7cc186fe1abfbb36dcb43515df428ce5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetComponentName</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1af8eff8d00cb37e245ab3e4de06e4c20a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetComponentRenderModelName</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a6a379a1430d19540fde2e149e5fe11d6" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetComponentState</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1afe0feb2b6c3d9c5a4c1fe4961c925a6b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetComponentStateForDevicePath</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aba17e8a856f5a780979f2c6d9227025d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetRenderModelCount</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1aa01437af440f55c1e94754fd35c78cf5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetRenderModelErrorNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ac3a3651484bad309acb66e2229d255d2" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetRenderModelName</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a55e005c3f3137031d618b3120591fd84" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetRenderModelOriginalPath</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1ac9fd279f8bdc7f4b2d9bd27d0157b231" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>GetRenderModelThumbnailURL</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a1f79607150d419aba923b85209d1ea24" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>LoadIntoTextureD3D11_Async</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a5f14a839ffa684d80b4d567c024f7c2e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>LoadRenderModel_Async</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a828f7c091584a7a023e0c2a1acf9d28e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>LoadTexture_Async</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a8baea7d71d96ab003e8c552187ad4652" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>LoadTextureD3D11_Async</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models_1a7add3a8bd0c882490fa75b3053444137" prot="public" virt="non-virtual"><scope>Valve::VR::IVRRenderModels</scope><name>RenderModelHasComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
