<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="protocol_unity_ads_delegate-p" kind="protocol" language="Objective-C" prot="public">
    <compoundname>UnityAdsDelegate-p</compoundname>
    <basecompoundref prot="public" virt="non-virtual">&lt;NSObject&gt;</basecompoundref>
    <derivedcompoundref refid="protocol_unity_ads_extended_delegate-p" prot="public" virt="non-virtual">&lt;UnityAdsExtendedDelegate&gt;</derivedcompoundref>
    <derivedcompoundref refid="protocol_unity_ads_unity_delegate-p" prot="public" virt="non-virtual">&lt;UnityAdsUnityDelegate&gt;</derivedcompoundref>
    <includes refid="_unity_ads_8h" local="no">UnityAds.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="protocol_unity_ads_delegate-p_1a8fc6e8a10ffb53dbc8f4c84312e4d544" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void UnityAdsDelegate-p::unityAdsReady:</definition>
        <argsstring>(NSString *placementId)</argsstring>
        <name>unityAdsReady:</name>
        <param>
          <type>NSString *</type>
          <declname>placementId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when <computeroutput><ref refid="interface_unity_ads" kindref="compound">UnityAds</ref></computeroutput> is ready to show an ad. After this callback you can call the <computeroutput><ref refid="interface_unity_ads" kindref="compound">UnityAds</ref></computeroutput> <computeroutput>show:</computeroutput> method for this placement. Note that sometimes placement might no longer be ready due to exceptional reasons. These situations will give no new callbacks.</para>
<para><simplesect kind="warning"><para>To avoid error situations, it is always best to check <computeroutput>isReady</computeroutput> method status before calling show. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>placementId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the placement that is ready to show, as defined in Unity Ads admin tools. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.ads@2.0.8/Editor/Resources/iOS/builds/UnityAds.framework/Headers/UnityAds.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="protocol_unity_ads_delegate-p_1a2272989530c7cd577277d7f17bde3215" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void UnityAdsDelegate-p::unityAdsDidError:withMessage:</definition>
        <argsstring>(UnityAdsError error, [withMessage] NSString *message)</argsstring>
        <name>unityAdsDidError:withMessage:</name>
        <param>
          <type>UnityAdsError</type>
          <declname>error</declname>
        </param>
        <param>
          <attributes>[withMessage]</attributes>
          <type>NSString *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when <computeroutput><ref refid="interface_unity_ads" kindref="compound">UnityAds</ref></computeroutput> encounters an error. All errors will be logged but this method can be used as an additional debugging aid. This callback can also be used for collecting statistics from different error scenarios.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>UnityAdsError</computeroutput> error enum value indicating the type of error encountered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>A human readable string indicating the type of error encountered. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.ads@2.0.8/Editor/Resources/iOS/builds/UnityAds.framework/Headers/UnityAds.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="protocol_unity_ads_delegate-p_1a04f51d2948959482a526886a72a6769b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void UnityAdsDelegate-p::unityAdsDidStart:</definition>
        <argsstring>(NSString *placementId)</argsstring>
        <name>unityAdsDidStart:</name>
        <param>
          <type>NSString *</type>
          <declname>placementId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called on a successful start of advertisement after calling the <computeroutput><ref refid="interface_unity_ads" kindref="compound">UnityAds</ref></computeroutput> <computeroutput>show:</computeroutput> method.</para>
<para><simplesect kind="warning"><para>If there are errors in starting the advertisement, this method may never be called. Unity Ads will directly call <computeroutput>unityAdsDidFinish:withFinishState:</computeroutput> with error status.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>placementId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the placement that has started, as defined in Unity Ads admin tools. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.ads@2.0.8/Editor/Resources/iOS/builds/UnityAds.framework/Headers/UnityAds.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="protocol_unity_ads_delegate-p_1a4b243b4d6d509ce4982bf8416f29dc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void UnityAdsDelegate-p::unityAdsDidFinish:withFinishState:</definition>
        <argsstring>(NSString *placementId, [withFinishState] UnityAdsFinishState state)</argsstring>
        <name>unityAdsDidFinish:withFinishState:</name>
        <param>
          <type>NSString *</type>
          <declname>placementId</declname>
        </param>
        <param>
          <attributes>[withFinishState]</attributes>
          <type>UnityAdsFinishState</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called after the ad has closed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>placementId</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the placement that has finished, as defined in Unity Ads admin tools. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>An enum value indicating the finish state of the ad. Possible values are <computeroutput>Completed</computeroutput>, <computeroutput>Skipped</computeroutput>, and <computeroutput>Error</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.ads@2.0.8/Editor/Resources/iOS/builds/UnityAds.framework/Headers/UnityAds.h" line="255" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput><ref refid="protocol_unity_ads_delegate-p" kindref="compound">UnityAdsDelegate</ref></computeroutput> protocol defines the required methods for receiving messages from <ref refid="interface_unity_ads" kindref="compound">UnityAds</ref>. Must be implemented by the hosting app. The unityAdsReady: method is called when it&apos;s possible to show an ad. All other methods are used to provide notifications of events of the ad lifecycle. <simplesect kind="note"><para>On initialization, there are ready (or error) callbacks for each placement attached to the game identifier. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6890">
        <label>&lt;UnityAdsUnityDelegate&gt;</label>
        <link refid="protocol_unity_ads_unity_delegate-p"/>
        <childnode refid="6887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6887">
        <label>&lt;UnityAdsDelegate&gt;</label>
        <link refid="protocol_unity_ads_delegate-p"/>
        <childnode refid="6888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6888">
        <label>&lt;NSObject&gt;</label>
      </node>
      <node id="6889">
        <label>&lt;UnityAdsExtendedDelegate&gt;</label>
        <link refid="protocol_unity_ads_extended_delegate-p"/>
        <childnode refid="6887" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6891">
        <label>&lt;UnityAdsDelegate&gt;</label>
        <link refid="protocol_unity_ads_delegate-p"/>
        <childnode refid="6892" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6892">
        <label>&lt;NSObject&gt;</label>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.ads@2.0.8/Editor/Resources/iOS/builds/UnityAds.framework/Headers/UnityAds.h" line="107" column="1" bodyfile="O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.ads@2.0.8/Editor/Resources/iOS/builds/UnityAds.framework/Headers/UnityAds.h" bodystart="107" bodyend="-1"/>
    <listofallmembers>
      <member refid="protocol_unity_ads_delegate-p_1a2272989530c7cd577277d7f17bde3215" prot="public" virt="virtual"><scope>UnityAdsDelegate-p</scope><name>unityAdsDidError:withMessage:</name></member>
      <member refid="protocol_unity_ads_delegate-p_1a4b243b4d6d509ce4982bf8416f29dc42" prot="public" virt="virtual"><scope>UnityAdsDelegate-p</scope><name>unityAdsDidFinish:withFinishState:</name></member>
      <member refid="protocol_unity_ads_delegate-p_1a04f51d2948959482a526886a72a6769b" prot="public" virt="virtual"><scope>UnityAdsDelegate-p</scope><name>unityAdsDidStart:</name></member>
      <member refid="protocol_unity_ads_delegate-p_1a8fc6e8a10ffb53dbc8f4c84312e4d544" prot="public" virt="virtual"><scope>UnityAdsDelegate-p</scope><name>unityAdsReady:</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
