<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_connection_8cs" kind="file" language="C#">
    <compoundname>Connection.cs</compoundname>
    <innerclass refid="class_leap_internal_1_1_connection" prot="public">LeapInternal::Connection</innerclass>
    <innernamespace refid="namespace_leap_internal">LeapInternal</innernamespace>
    <innernamespace refid="namespace_system_1_1_runtime_1_1_interop_services">System::Runtime::InteropServices</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_internal" kindref="compound">LeapInternal</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.<ref refid="namespace_system_1_1_collections_1_1_generic" kindref="compound">Generic</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Runtime.InteropServices;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Threading;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_leap_internal_1_1_connection" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_internal_1_1_connection" kindref="compound">Connection</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Dictionary&lt;int,<sp/>Connection&gt;<sp/>connectionDictionary<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;int,<sp/>Connection&gt;();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Left-right<sp/>precalculated<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_handIdOffset;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_handPositionOffset;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_handOrientationOffset;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection" kindref="compound">Connection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_handIdOffset<sp/>=<sp/>Marshal.OffsetOf(typeof(<ref refid="struct_leap_internal_1_1_l_e_a_p___h_a_n_d" kindref="compound">LEAP_HAND</ref>),<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">).ToInt64();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>palmOffset<sp/>=<sp/>Marshal.OffsetOf(typeof(<ref refid="struct_leap_internal_1_1_l_e_a_p___h_a_n_d" kindref="compound">LEAP_HAND</ref>),<sp/></highlight><highlight class="stringliteral">&quot;palm&quot;</highlight><highlight class="normal">).ToInt64();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_handPositionOffset<sp/>=<sp/>Marshal.OffsetOf(typeof(<ref refid="struct_leap_internal_1_1_l_e_a_p___p_a_l_m" kindref="compound">LEAP_PALM</ref>),<sp/></highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">).ToInt64()<sp/>+<sp/>palmOffset;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_handOrientationOffset<sp/>=<sp/>Marshal.OffsetOf(typeof(<ref refid="struct_leap_internal_1_1_l_e_a_p___p_a_l_m" kindref="compound">LEAP_PALM</ref>),<sp/></highlight><highlight class="stringliteral">&quot;orientation&quot;</highlight><highlight class="normal">).ToInt64()<sp/>+<sp/>palmOffset;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_leap_internal_1_1_connection_1a14b814a88c57b2dafafe72077211aa85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection" kindref="compound">Connection</ref><sp/><ref refid="class_leap_internal_1_1_connection_1a14b814a88c57b2dafafe72077211aa85" kindref="member">GetConnection</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionKey<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection" kindref="compound">Connection</ref><sp/>conn;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!connectionDictionary.TryGetValue(connectionKey,<sp/>out<sp/>conn))<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection" kindref="compound">Connection</ref>(connectionKey);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionDictionary.Add(connectionKey,<sp/>conn);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conn;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_leap_internal_1_1_connection_1a57ca44db295ca2da43050d4eb608e23c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a57ca44db295ca2da43050d4eb608e23c" kindref="member">ConnectionKey</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="44" refid="class_leap_internal_1_1_connection_1a96db7c09526d9f356b88c0c9fe2dea25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_circular_object_buffer" kindref="compound">CircularObjectBuffer&lt;LEAP_TRACKING_EVENT&gt;</ref><sp/><ref refid="class_leap_internal_1_1_connection_1a96db7c09526d9f356b88c0c9fe2dea25" kindref="member">Frames</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_device_list" kindref="compound">DeviceList</ref><sp/>_devices<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_device_list" kindref="compound">DeviceList</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_failed_device_list" kindref="compound">FailedDeviceList</ref><sp/>_failedDevices;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_distortion_data" kindref="compound">DistortionData</ref><sp/>_currentLeftDistortionData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_distortion_data" kindref="compound">DistortionData</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_distortion_data" kindref="compound">DistortionData</ref><sp/>_currentRightDistortionData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_distortion_data" kindref="compound">DistortionData</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_frameBufferLength<sp/>=<sp/>60;<sp/></highlight><highlight class="comment">//TODO,<sp/>surface<sp/>this<sp/>value<sp/>in<sp/>LeapC,<sp/>currently<sp/>hardcoded!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IntPtr<sp/>_leapConnection;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isRunning<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Thread<sp/>_polster;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Policy<sp/>and<sp/>enabled<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>UInt64<sp/>_requestedPolicies<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>UInt64<sp/>_activePolicies<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Config<sp/>change<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Dictionary&lt;uint,<sp/>string&gt;<sp/>_configRequests<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;uint,<sp/>string&gt;();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Connection<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SynchronizationContext<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>EventHandler&lt;LeapEventArgs&gt;<sp/>_leapInit;</highlight></codeline>
<codeline lineno="68" refid="class_leap_internal_1_1_connection_1a4ecba08b7b5d52a5d3c9822454cd1633" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>EventHandler&lt;LeapEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a4ecba08b7b5d52a5d3c9822454cd1633" kindref="member">LeapInit</ref><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_leapInit<sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_leapConnection<sp/>!=<sp/>IntPtr.Zero)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_event_args" kindref="compound">LeapEventArgs</ref>(<ref refid="namespace_leap_1a5b8c8df3b9ace307e29863779a4ae85d" kindref="member">LeapEvent</ref>.EVENT_INIT));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal"><sp/>{<sp/>_leapInit<sp/>-=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>EventHandler&lt;ConnectionEventArgs&gt;<sp/>_leapConnectionEvent;</highlight></codeline>
<codeline lineno="78" refid="class_leap_internal_1_1_connection_1a73e39e15e464b1c0b8a5394ecd085986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>EventHandler&lt;ConnectionEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a73e39e15e464b1c0b8a5394ecd085986" kindref="member">LeapConnection</ref><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_leapConnectionEvent<sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a29fc660760e7b7de559f01aa11be1abe" kindref="member">IsServiceConnected</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_connection_event_args" kindref="compound">ConnectionEventArgs</ref>());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal"><sp/>{<sp/>_leapConnectionEvent<sp/>-=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86" refid="class_leap_internal_1_1_connection_1a352433b853a548790c8ad350e948fdd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;ConnectionLostEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a352433b853a548790c8ad350e948fdd6" kindref="member">LeapConnectionLost</ref>;</highlight></codeline>
<codeline lineno="87" refid="class_leap_internal_1_1_connection_1ae1dd18505f75a72eea2abbeab57d7d01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;DeviceEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1ae1dd18505f75a72eea2abbeab57d7d01" kindref="member">LeapDevice</ref>;</highlight></codeline>
<codeline lineno="88" refid="class_leap_internal_1_1_connection_1a3c55a469e21efe1ceb92b90c636f9f67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;DeviceEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a3c55a469e21efe1ceb92b90c636f9f67" kindref="member">LeapDeviceLost</ref>;</highlight></codeline>
<codeline lineno="89" refid="class_leap_internal_1_1_connection_1a8f5dd0ee804342d59a2a28046a2c0e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;DeviceFailureEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a8f5dd0ee804342d59a2a28046a2c0e44" kindref="member">LeapDeviceFailure</ref>;</highlight></codeline>
<codeline lineno="90" refid="class_leap_internal_1_1_connection_1ac3d23b7ad9ca1224f70f1718873bb1c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;PolicyEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1ac3d23b7ad9ca1224f70f1718873bb1c2" kindref="member">LeapPolicyChange</ref>;</highlight></codeline>
<codeline lineno="91" refid="class_leap_internal_1_1_connection_1a66f84d7e27d1f9a33028ea0abbc89e6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;FrameEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a66f84d7e27d1f9a33028ea0abbc89e6c" kindref="member">LeapFrame</ref>;</highlight></codeline>
<codeline lineno="92" refid="class_leap_internal_1_1_connection_1acbebf064965d68f74d4e851ee1c22bb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;InternalFrameEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1acbebf064965d68f74d4e851ee1c22bb1" kindref="member">LeapInternalFrame</ref>;</highlight></codeline>
<codeline lineno="93" refid="class_leap_internal_1_1_connection_1a435f5b54b81790b604a4ef1f9b630d5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;LogEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a435f5b54b81790b604a4ef1f9b630d5e" kindref="member">LeapLogEvent</ref>;</highlight></codeline>
<codeline lineno="94" refid="class_leap_internal_1_1_connection_1a87dae2d17dfa76d622d710bf69c08c82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;SetConfigResponseEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a87dae2d17dfa76d622d710bf69c08c82" kindref="member">LeapConfigResponse</ref>;</highlight></codeline>
<codeline lineno="95" refid="class_leap_internal_1_1_connection_1a6f56c66bbecc957ca227d894dcf16e96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;ConfigChangeEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a6f56c66bbecc957ca227d894dcf16e96" kindref="member">LeapConfigChange</ref>;</highlight></codeline>
<codeline lineno="96" refid="class_leap_internal_1_1_connection_1ab1618ad3b9b1ed17ccd43a2461d277d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;DistortionEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1ab1618ad3b9b1ed17ccd43a2461d277d7" kindref="member">LeapDistortionChange</ref>;</highlight></codeline>
<codeline lineno="97" refid="class_leap_internal_1_1_connection_1a7542907a2116216ac90ab2a88599b3a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;DroppedFrameEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a7542907a2116216ac90ab2a88599b3a6" kindref="member">LeapDroppedFrame</ref>;</highlight></codeline>
<codeline lineno="98" refid="class_leap_internal_1_1_connection_1a7ff7e1c77a92cba83e8d59e75f8074db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;ImageEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a7ff7e1c77a92cba83e8d59e75f8074db" kindref="member">LeapImage</ref>;</highlight></codeline>
<codeline lineno="99" refid="class_leap_internal_1_1_connection_1ae000281d4cf2fbced911ff97b31f4035" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;PointMappingChangeEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1ae000281d4cf2fbced911ff97b31f4035" kindref="member">LeapPointMappingChange</ref>;</highlight></codeline>
<codeline lineno="100" refid="class_leap_internal_1_1_connection_1ae8fb7ce09bced652e319aada4a8e3755" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>EventHandler&lt;HeadPoseEventArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1ae8fb7ce09bced652e319aada4a8e3755" kindref="member">LeapHeadPoseChange</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_leap_internal_1_1_connection_1a364051da7b95bc1487dac1d7538510b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action&lt;BeginProfilingForThreadArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a364051da7b95bc1487dac1d7538510b7" kindref="member">LeapBeginProfilingForThread</ref>;</highlight></codeline>
<codeline lineno="103" refid="class_leap_internal_1_1_connection_1a424896b5a35580707284fa570e40138a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action&lt;EndProfilingForThreadArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a424896b5a35580707284fa570e40138a" kindref="member">LeapEndProfilingForThread</ref>;</highlight></codeline>
<codeline lineno="104" refid="class_leap_internal_1_1_connection_1a377465e1fa8fffca68491ba5f52136a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action&lt;BeginProfilingBlockArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a377465e1fa8fffca68491ba5f52136a2" kindref="member">LeapBeginProfilingBlock</ref>;</highlight></codeline>
<codeline lineno="105" refid="class_leap_internal_1_1_connection_1a2983273b0360e53dc42a7d6c6d2e5893" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Action&lt;EndProfilingBlockArgs&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a2983273b0360e53dc42a7d6c6d2e5893" kindref="member">LeapEndProfilingBlock</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_disposed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_leap_internal_1_1_connection_1a6cb6643d7795ebf5be07be51d8150dbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a6cb6643d7795ebf5be07be51d8150dbf" kindref="member">Dispose</ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a6cb6643d7795ebf5be07be51d8150dbf" kindref="member">Dispose</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GC.SuppressFinalize(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Protected<sp/>implementation<sp/>of<sp/>Dispose<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_leap_internal_1_1_connection_1a64cbbc4a16c8719a250dac019872556d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a64cbbc4a16c8719a250dac019872556d" kindref="member">Dispose</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>disposing)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_disposed)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disposing)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1aea1fa03cd6daf0b54561ff2221a8f3be" kindref="member">Stop</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1aa8924a99915ab03a814c211b9a9536c3" kindref="member">DestroyConnection</ref>(_leapConnection);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_leapConnection<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_disposed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_leap_internal_1_1_connection" kindref="compound">Connection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a6cb6643d7795ebf5be07be51d8150dbf" kindref="member">Dispose</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Connection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connectionKey)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a57ca44db295ca2da43050d4eb608e23c" kindref="member">ConnectionKey</ref><sp/>=<sp/>connectionKey;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_leapConnection<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a96db7c09526d9f356b88c0c9fe2dea25" kindref="member">Frames</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CircularObjectBuffer&lt;LEAP_TRACKING_EVENT&gt;(_frameBufferLength);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>LEAP_ALLOCATOR<sp/>_pLeapAllocator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LEAP_ALLOCATOR();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_leap_internal_1_1_connection_1a33962c567068d008ec6779c2641584b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a33962c567068d008ec6779c2641584b0" kindref="member">Start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_isRunning)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_leapConnection<sp/>==<sp/>IntPtr.Zero)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>_leapConnection);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success<sp/>||<sp/>_leapConnection<sp/>==<sp/>IntPtr.Zero)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>CreateConnection<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(_leapConnection);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>OpenConnection<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Allocator<sp/>must<sp/>persist<sp/>the<sp/>lifetime<sp/>of<sp/>the<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_pLeapAllocator.allocate<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pLeapAllocator.allocate<sp/>=<sp/>MemoryManager.Pin;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_pLeapAllocator.deallocate<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_pLeapAllocator.deallocate<sp/>=<sp/>MemoryManager.Unpin;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1affea4fe6155597b63cde13664955920d" kindref="member">SetAllocator</ref>(_leapConnection,<sp/>ref<sp/>_pLeapAllocator);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isRunning<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AppDomain.CurrentDomain.DomainUnload<sp/>+=<sp/>(arg1,<sp/>arg2)<sp/>=&gt;<sp/><ref refid="class_leap_internal_1_1_connection_1a6cb6643d7795ebf5be07be51d8150dbf" kindref="member">Dispose</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_polster<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Thread(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ThreadStart(this.processMessages));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_polster.Name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LeapC<sp/>Worker&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_polster.IsBackground<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_polster.Start();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_leap_internal_1_1_connection_1aea1fa03cd6daf0b54561ff2221a8f3be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1aea1fa03cd6daf0b54561ff2221a8f3be" kindref="member">Stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_isRunning)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isRunning<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Very<sp/>important<sp/>to<sp/>close<sp/>the<sp/>connection<sp/>before<sp/>we<sp/>try<sp/>to<sp/>join<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//worker<sp/>thread!<sp/><sp/>The<sp/>call<sp/>to<sp/>PollConnection<sp/>can<sp/>sometimes<sp/>block,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//despite<sp/>the<sp/>timeout,<sp/>causing<sp/>an<sp/>attempt<sp/>to<sp/>join<sp/>the<sp/>thread<sp/>waiting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//forever<sp/>and<sp/>preventing<sp/>the<sp/>connection<sp/>from<sp/>stopping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>seems<sp/>that<sp/>closing<sp/>the<sp/>connection<sp/>causes<sp/>PollConnection<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unblock<sp/>in<sp/>these<sp/>cases,<sp/>so<sp/>just<sp/>make<sp/>sure<sp/>to<sp/>close<sp/>the<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//before<sp/>trying<sp/>to<sp/>join<sp/>the<sp/>worker<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1af70ec130834b0aa68d9bc8a35d17cc7b" kindref="member">CloseConnection</ref>(_leapConnection);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_polster.Join();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Run<sp/>in<sp/>Polster<sp/>thread,<sp/>fills<sp/>in<sp/>object<sp/>queues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>processMessages()<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Only<sp/>profiling<sp/>block<sp/>currently<sp/>is<sp/>the<sp/>Handle<sp/>Event<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>HANDLE_EVENT_PROFILER_BLOCK<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Handle<sp/>Event&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasBegunProfilingForThread<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_leapInit.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_event_args" kindref="compound">LeapEventArgs</ref>(<ref refid="namespace_leap_1a5b8c8df3b9ace307e29863779a4ae85d" kindref="member">LeapEvent</ref>.EVENT_INIT));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_isRunning)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a364051da7b95bc1487dac1d7538510b7" kindref="member">LeapBeginProfilingForThread</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!hasBegunProfilingForThread)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a364051da7b95bc1487dac1d7538510b7" kindref="member">LeapBeginProfilingForThread</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_begin_profiling_for_thread_args" kindref="compound">BeginProfilingForThreadArgs</ref>(</highlight><highlight class="stringliteral">&quot;Worker<sp/>Thread&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE_EVENT_PROFILER_BLOCK));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasBegunProfilingForThread<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_CONNECTION_MESSAGE<sp/>_msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LEAP_CONNECTION_MESSAGE();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>150;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>LeapC.PollConnection(_leapConnection,<sp/>timeout,<sp/>ref<sp/>_msg);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>PollConnection<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a377465e1fa8fffca68491ba5f52136a2" kindref="member">LeapBeginProfilingBlock</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>hasBegunProfilingForThread)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a377465e1fa8fffca68491ba5f52136a2" kindref="member">LeapBeginProfilingBlock</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BeginProfilingBlockArgs(HANDLE_EVENT_PROFILER_BLOCK));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_msg.type)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_None:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Connection:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_CONNECTION_EVENT<sp/>connection_evt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONNECTION_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>connection_evt);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleConnection(ref<sp/>connection_evt);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConnectionLost:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_CONNECTION_LOST_EVENT<sp/>connection_lost_evt;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONNECTION_LOST_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>connection_lost_evt);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleConnectionLost(ref<sp/>connection_lost_evt);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_DEVICE_EVENT<sp/>device_evt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_DEVICE_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>device_evt);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleDevice(ref<sp/>device_evt);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>unplugging<sp/>a<sp/>device<sp/>generates<sp/>an<sp/>eLeapEventType_DeviceLost<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message,<sp/>not<sp/>a<sp/>failure<sp/>message.<sp/>DeviceLost<sp/>is<sp/>further<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_DeviceFailure:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_DEVICE_FAILURE_EVENT<sp/>device_failure_evt;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_DEVICE_FAILURE_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>device_failure_evt);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleFailedDevice(ref<sp/>device_failure_evt);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Policy:</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_POLICY_EVENT<sp/>policy_evt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_POLICY_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>policy_evt);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handlePolicyChange(ref<sp/>policy_evt);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Tracking:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_TRACKING_EVENT<sp/>tracking_evt;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>tracking_evt);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleTrackingMessage(ref<sp/>tracking_evt);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_LogEvent:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_LOG_EVENT<sp/>log_evt;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_LOG_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>log_evt);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reportLogMessage(ref<sp/>log_evt);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_DeviceLost:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_DEVICE_EVENT<sp/>device_lost_evt;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_DEVICE_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>device_lost_evt);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleLostDevice(ref<sp/>device_lost_evt);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_CONFIG_CHANGE_EVENT<sp/>config_change_evt;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_CHANGE_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>config_change_evt);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleConfigChange(ref<sp/>config_change_evt);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleConfigResponse(ref<sp/>_msg);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_DroppedFrame:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_DROPPED_FRAME_EVENT<sp/>dropped_frame_evt;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_DROPPED_FRAME_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>dropped_frame_evt);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleDroppedFrame(ref<sp/>dropped_frame_evt);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Image:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_IMAGE_EVENT<sp/>image_evt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_IMAGE_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>image_evt);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleImage(ref<sp/>image_evt);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_PointMappingChange:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_POINT_MAPPING_CHANGE_EVENT<sp/>point_mapping_change_evt;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_POINT_MAPPING_CHANGE_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>point_mapping_change_evt);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handlePointMappingChange(ref<sp/>point_mapping_change_evt);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_HeadPose:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_HEAD_POSE_EVENT<sp/>head_pose_event;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_HEAD_POSE_EVENT&gt;.PtrToStruct(_msg.eventStructPtr,<sp/>out<sp/>head_pose_event);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleHeadPoseChange(ref<sp/>head_pose_event);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//switch<sp/>on<sp/>_msg.type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a2983273b0360e53dc42a7d6c6d2e5893" kindref="member">LeapEndProfilingBlock</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>hasBegunProfilingForThread)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a2983273b0360e53dc42a7d6c6d2e5893" kindref="member">LeapEndProfilingBlock</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EndProfilingBlockArgs(HANDLE_EVENT_PROFILER_BLOCK));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//while<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Exception:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>e);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isRunning<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a424896b5a35580707284fa570e40138a" kindref="member">LeapEndProfilingForThread</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>hasBegunProfilingForThread)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a424896b5a35580707284fa570e40138a" kindref="member">LeapEndProfilingForThread</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EndProfilingForThreadArgs());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleTrackingMessage(ref<sp/>LEAP_TRACKING_EVENT<sp/>trackingMsg)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a96db7c09526d9f356b88c0c9fe2dea25" kindref="member">Frames</ref>.Put(ref<sp/>trackingMsg);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a66f84d7e27d1f9a33028ea0abbc89e6c" kindref="member">LeapFrame</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a66f84d7e27d1f9a33028ea0abbc89e6c" kindref="member">LeapFrame</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FrameEventArgs(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Frame().CopyFrom(ref<sp/>trackingMsg)));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="class_leap_internal_1_1_connection_1aa148c941081bf9d79516bdba29f4195a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UInt64<sp/><ref refid="class_leap_internal_1_1_connection_1aa148c941081bf9d79516bdba29f4195a" kindref="member">GetInterpolatedFrameSize</ref>(Int64<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1af4b7756a3307a082b6160d6e06d7f187" kindref="member">GetFrameSize</ref>(_leapConnection,<sp/>time,<sp/>out<sp/>size);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>get<sp/>interpolated<sp/>frame<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="class_leap_internal_1_1_connection_1a6162a9db0b86aec5d517b316136c31c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a6162a9db0b86aec5d517b316136c31c7" kindref="member">GetInterpolatedFrame</ref>(<ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref><sp/>toFill,<sp/>Int64<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>size<sp/>=<sp/><ref refid="class_leap_internal_1_1_connection_1aa148c941081bf9d79516bdba29f4195a" kindref="member">GetInterpolatedFrameSize</ref>(time);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>trackingBuffer<sp/>=<sp/>Marshal.AllocHGlobal((Int32)size);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a37b93d6d332a4fb88714b1a7583c3ce8" kindref="member">InterpolateFrame</ref>(_leapConnection,<sp/>time,<sp/>trackingBuffer,<sp/>size);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>get<sp/>interpolated<sp/>frame<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>tracking_evt;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(trackingBuffer,<sp/>out<sp/>tracking_evt);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toFill.CopyFrom(ref<sp/>tracking_evt);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeHGlobal(trackingBuffer);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="class_leap_internal_1_1_connection_1a810b5d68c8fc21d2080a3cc60ad50520" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a810b5d68c8fc21d2080a3cc60ad50520" kindref="member">GetInterpolatedFrameFromTime</ref>(<ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref><sp/>toFill,<sp/>Int64<sp/>time,<sp/>Int64<sp/>sourceTime)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>size<sp/>=<sp/><ref refid="class_leap_internal_1_1_connection_1aa148c941081bf9d79516bdba29f4195a" kindref="member">GetInterpolatedFrameSize</ref>(time);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>trackingBuffer<sp/>=<sp/>Marshal.AllocHGlobal((Int32)size);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abfff5fb5bc86a2a4ddf10cdda77af006" kindref="member">InterpolateFrameFromTime</ref>(_leapConnection,<sp/>time,<sp/>sourceTime,<sp/>trackingBuffer,<sp/>size);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>get<sp/>interpolated<sp/>frame<sp/>from<sp/>time<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>tracking_evt;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(trackingBuffer,<sp/>out<sp/>tracking_evt);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toFill.CopyFrom(ref<sp/>tracking_evt);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeHGlobal(trackingBuffer);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="class_leap_internal_1_1_connection_1af2f03c0120eeadd2c5c4b394b0991a14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref><sp/><ref refid="class_leap_internal_1_1_connection_1af2f03c0120eeadd2c5c4b394b0991a14" kindref="member">GetInterpolatedFrame</ref>(Int64<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref><sp/>frame<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a6162a9db0b86aec5d517b316136c31c7" kindref="member">GetInterpolatedFrame</ref>(frame,<sp/>time);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="class_leap_internal_1_1_connection_1a96355324ac7bacf3f563a45cebb5f878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a96355324ac7bacf3f563a45cebb5f878" kindref="member">GetInterpolatedHeadPose</ref>(ref<sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t" kindref="compound">LEAP_HEAD_POSE_EVENT</ref><sp/>toFill,<sp/>Int64<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a392940c3224b3a95959cd96789902f4c" kindref="member">InterpolateHeadPose</ref>(_leapConnection,<sp/>time,<sp/>ref<sp/>toFill);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>get<sp/>interpolated<sp/>head<sp/>pose<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="class_leap_internal_1_1_connection_1a996b3f40f20bb45366b2f3b063b720b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t" kindref="compound">LEAP_HEAD_POSE_EVENT</ref><sp/><ref refid="class_leap_internal_1_1_connection_1a996b3f40f20bb45366b2f3b063b720b4" kindref="member">GetInterpolatedHeadPose</ref>(Int64<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t" kindref="compound">LEAP_HEAD_POSE_EVENT</ref><sp/>headPoseEvent<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t" kindref="compound">LEAP_HEAD_POSE_EVENT</ref>();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a96355324ac7bacf3f563a45cebb5f878" kindref="member">GetInterpolatedHeadPose</ref>(ref<sp/>headPoseEvent,<sp/>time);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>headPoseEvent;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="class_leap_internal_1_1_connection_1a038ec58235de9d049bc3a11a07388403" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a038ec58235de9d049bc3a11a07388403" kindref="member">GetInterpolatedLeftRightTransform</ref>(Int64<sp/>time,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int64<sp/>sourceTime,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int64<sp/>leftId,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Int64<sp/>rightId,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref><sp/>leftTransform,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref><sp/>rightTransform)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leftTransform<sp/>=<sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref>.<ref refid="struct_leap_1_1_leap_transform_1a10de68df5cf1afa89c273a33d0629f16" kindref="member">Identity</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rightTransform<sp/>=<sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref>.<ref refid="struct_leap_1_1_leap_transform_1a10de68df5cf1afa89c273a33d0629f16" kindref="member">Identity</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>size<sp/>=<sp/><ref refid="class_leap_internal_1_1_connection_1aa148c941081bf9d79516bdba29f4195a" kindref="member">GetInterpolatedFrameSize</ref>(time);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>trackingBuffer<sp/>=<sp/>Marshal.AllocHGlobal((Int32)size);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abfff5fb5bc86a2a4ddf10cdda77af006" kindref="member">InterpolateFrameFromTime</ref>(_leapConnection,<sp/>time,<sp/>sourceTime,<sp/>trackingBuffer,<sp/>size);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>get<sp/>interpolated<sp/>frame<sp/>from<sp/>time<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>tracking_evt;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(trackingBuffer,<sp/>out<sp/>tracking_evt);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref><sp/>position;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n" kindref="compound">LEAP_QUATERNION</ref><sp/>orientation;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>handPtr<sp/>=<sp/>tracking_evt.pHands.ToInt64();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idPtr<sp/>=<sp/>handPtr<sp/>+<sp/>_handIdOffset;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>posPtr<sp/>=<sp/>handPtr<sp/>+<sp/>_handPositionOffset;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rotPtr<sp/>=<sp/>handPtr<sp/>+<sp/>_handOrientationOffset;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>=<sp/>StructMarshal&lt;LEAP_HAND&gt;.Size;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>tracking_evt.nHands;<sp/>i--<sp/>!=<sp/>0;<sp/>idPtr<sp/>+=<sp/>stride,<sp/>posPtr<sp/>+=<sp/>stride,<sp/>rotPtr<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>Marshal.ReadInt32(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntPtr(idPtr));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_VECTOR&gt;.PtrToStruct(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntPtr(posPtr),<sp/>out<sp/>position);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_QUATERNION&gt;.PtrToStruct(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntPtr(rotPtr),<sp/>out<sp/>orientation);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref><sp/>transform<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref>(position.ToLeapVector(),<sp/>orientation.ToLeapQuaternion());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>leftId)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftTransform<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>rightId)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightTransform<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeHGlobal(trackingBuffer);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleConnection(ref<sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___e_v_e_n_t" kindref="compound">LEAP_CONNECTION_EVENT</ref><sp/>connectionMsg)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_leapConnectionEvent<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_leapConnectionEvent.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_connection_event_args" kindref="compound">ConnectionEventArgs</ref>());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleConnectionLost(ref<sp/>LEAP_CONNECTION_LOST_EVENT<sp/>connectionMsg)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a352433b853a548790c8ad350e948fdd6" kindref="member">LeapConnectionLost</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a352433b853a548790c8ad350e948fdd6" kindref="member">LeapConnectionLost</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ConnectionLostEventArgs());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleDevice(ref<sp/>LEAP_DEVICE_EVENT<sp/>deviceMsg)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>deviceHandle<sp/>=<sp/>deviceMsg.device.handle;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceHandle<sp/>==<sp/>IntPtr.Zero)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_DEVICE_INFO<sp/>deviceInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LEAP_DEVICE_INFO();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>device;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>LeapC.OpenDevice(deviceMsg.device,<sp/>out<sp/>device);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.serial<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.size<sp/>=<sp/>(uint)Marshal.SizeOf(deviceInfo);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>LeapC.GetDeviceInfo(device,<sp/>ref<sp/>deviceInfo);<sp/></highlight><highlight class="comment">//Query<sp/>the<sp/>serial<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.serial<sp/>=<sp/>Marshal.AllocCoTaskMem((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)deviceInfo.serial_length);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>LeapC.GetDeviceInfo(device,<sp/>ref<sp/>deviceInfo);<sp/></highlight><highlight class="comment">//Query<sp/>the<sp/>serial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>apiDevice<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Device(deviceHandle,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.h_fov,<sp/></highlight><highlight class="comment">//radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.v_fov,<sp/></highlight><highlight class="comment">//radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.range<sp/>/<sp/>1000.0f,<sp/></highlight><highlight class="comment">//to<sp/>mm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.baseline<sp/>/<sp/>1000.0f,<sp/></highlight><highlight class="comment">//to<sp/>mm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Device.DeviceType)deviceInfo.type,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(deviceInfo.status<sp/>==<sp/><ref refid="namespace_leap_internal_1a16b28ea79f39b6205c514b3e9b075bed" kindref="member">eLeapDeviceStatus</ref>.eLeapDeviceStatus_Streaming),</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.PtrToStringAnsi(deviceInfo.serial));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeCoTaskMem(deviceInfo.serial);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_devices.<ref refid="class_leap_1_1_device_list_1aaa399a6ea7549f315760300e5f07fa19" kindref="member">AddOrUpdate</ref>(apiDevice);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1ae1dd18505f75a72eea2abbeab57d7d01" kindref="member">LeapDevice</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1ae1dd18505f75a72eea2abbeab57d7d01" kindref="member">LeapDevice</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DeviceEventArgs(apiDevice));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleLostDevice(ref<sp/>LEAP_DEVICE_EVENT<sp/>deviceMsg)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>lost<sp/>=<sp/>_devices.<ref refid="class_leap_1_1_device_list_1a99b8acd4484498cc197520a89f287f78" kindref="member">FindDeviceByHandle</ref>(deviceMsg.device.handle);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lost<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_devices.Remove(lost);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a3c55a469e21efe1ceb92b90c636f9f67" kindref="member">LeapDeviceLost</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a3c55a469e21efe1ceb92b90c636f9f67" kindref="member">LeapDeviceLost</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DeviceEventArgs(lost));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleFailedDevice(ref<sp/>LEAP_DEVICE_FAILURE_EVENT<sp/>deviceMsg)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>failureMessage;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>failedSerialNumber<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unavailable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(deviceMsg.status)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1a16b28ea79f39b6205c514b3e9b075bed" kindref="member">eLeapDeviceStatus</ref>.eLeapDeviceStatus_BadCalibration:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failureMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>Calibration.<sp/>Device<sp/>failed<sp/>because<sp/>of<sp/>a<sp/>bad<sp/>calibration<sp/>record.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1a16b28ea79f39b6205c514b3e9b075bed" kindref="member">eLeapDeviceStatus</ref>.eLeapDeviceStatus_BadControl:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failureMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>Control<sp/>Interface.<sp/>Device<sp/>failed<sp/>because<sp/>of<sp/>a<sp/>USB<sp/>control<sp/>interface<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1a16b28ea79f39b6205c514b3e9b075bed" kindref="member">eLeapDeviceStatus</ref>.eLeapDeviceStatus_BadFirmware:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failureMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>Firmware.<sp/>Device<sp/>failed<sp/>because<sp/>of<sp/>a<sp/>firmware<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1a16b28ea79f39b6205c514b3e9b075bed" kindref="member">eLeapDeviceStatus</ref>.eLeapDeviceStatus_BadTransport:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failureMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>Transport.<sp/>Device<sp/>failed<sp/>because<sp/>of<sp/>a<sp/>USB<sp/>communication<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failureMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>failed<sp/>for<sp/>an<sp/>unknown<sp/>reason&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>failed<sp/>=<sp/>_devices.<ref refid="class_leap_1_1_device_list_1a99b8acd4484498cc197520a89f287f78" kindref="member">FindDeviceByHandle</ref>(deviceMsg.hDevice);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(failed<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_devices.Remove(failed);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a8f5dd0ee804342d59a2a28046a2c0e44" kindref="member">LeapDeviceFailure</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a8f5dd0ee804342d59a2a28046a2c0e44" kindref="member">LeapDeviceFailure</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DeviceFailureEventArgs((uint)deviceMsg.status,<sp/>failureMessage,<sp/>failedSerialNumber));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleConfigChange(ref<sp/>LEAP_CONFIG_CHANGE_EVENT<sp/>configEvent)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>config_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_configRequests.TryGetValue(configEvent.requestId,<sp/>out<sp/>config_key);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_key<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_configRequests.Remove(configEvent.requestId);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a6f56c66bbecc957ca227d894dcf16e96" kindref="member">LeapConfigChange</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a6f56c66bbecc957ca227d894dcf16e96" kindref="member">LeapConfigChange</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ConfigChangeEventArgs(config_key,<sp/>configEvent.status<sp/>!=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>configEvent.requestId));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleConfigResponse(ref<sp/>LEAP_CONNECTION_MESSAGE<sp/>configMsg)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_CONFIG_RESPONSE_EVENT<sp/>config_response_evt;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT&gt;.PtrToStruct(configMsg.eventStructPtr,<sp/>out<sp/>config_response_evt);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>config_key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_configRequests.TryGetValue(config_response_evt.requestId,<sp/>out<sp/>config_key);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_key<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_configRequests.Remove(config_response_evt.requestId);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Config.ValueType<sp/>dataType;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>requestId<sp/>=<sp/>config_response_evt.requestId;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_response_evt.value.type<sp/>!=<sp/><ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_String)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(config_response_evt.value.type)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Boolean:</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataType<sp/>=<sp/>Config.ValueType.TYPE_BOOLEAN;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>config_response_evt.value.boolValue;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Int32:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataType<sp/>=<sp/>Config.ValueType.TYPE_INT32;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>config_response_evt.value.intValue;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Float:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataType<sp/>=<sp/>Config.ValueType.TYPE_FLOAT;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>config_response_evt.value.floatValue;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataType<sp/>=<sp/>Config.ValueType.TYPE_UNKNOWN;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>object();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE<sp/>config_ref_value;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE&gt;.PtrToStruct(configMsg.eventStructPtr,<sp/>out<sp/>config_ref_value);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataType<sp/>=<sp/>Config.ValueType.TYPE_STRING;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>config_ref_value.value.stringValue;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetConfigResponseEventArgs<sp/>args<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SetConfigResponseEventArgs(config_key,<sp/>dataType,<sp/>value,<sp/>requestId);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a87dae2d17dfa76d622d710bf69c08c82" kindref="member">LeapConfigResponse</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a87dae2d17dfa76d622d710bf69c08c82" kindref="member">LeapConfigResponse</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/>args);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reportLogMessage(ref<sp/>LEAP_LOG_EVENT<sp/>logMsg)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a435f5b54b81790b604a4ef1f9b630d5e" kindref="member">LeapLogEvent</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a435f5b54b81790b604a4ef1f9b630d5e" kindref="member">LeapLogEvent</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LogEventArgs(publicSeverity(logMsg.severity),<sp/>logMsg.timestamp,<sp/>Marshal.PtrToStringAnsi(logMsg.message)));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1a4341f6495947222d3a86fcbb0c2b629d" kindref="member">MessageSeverity</ref><sp/>publicSeverity(<ref refid="namespace_leap_internal_1ae47258155c35d1f200b0dd25bd0adb5b" kindref="member">eLeapLogSeverity</ref><sp/>leapCSeverity)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(leapCSeverity)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1ae47258155c35d1f200b0dd25bd0adb5b" kindref="member">eLeapLogSeverity</ref>.eLeapLogSeverity_Unknown:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1a4341f6495947222d3a86fcbb0c2b629d" kindref="member">MessageSeverity</ref>.MESSAGE_UNKNOWN;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1ae47258155c35d1f200b0dd25bd0adb5b" kindref="member">eLeapLogSeverity</ref>.eLeapLogSeverity_Information:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1a4341f6495947222d3a86fcbb0c2b629d" kindref="member">MessageSeverity</ref>.MESSAGE_INFORMATION;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1ae47258155c35d1f200b0dd25bd0adb5b" kindref="member">eLeapLogSeverity</ref>.eLeapLogSeverity_Warning:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1a4341f6495947222d3a86fcbb0c2b629d" kindref="member">MessageSeverity</ref>.MESSAGE_WARNING;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1ae47258155c35d1f200b0dd25bd0adb5b" kindref="member">eLeapLogSeverity</ref>.eLeapLogSeverity_Critical:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1a4341f6495947222d3a86fcbb0c2b629d" kindref="member">MessageSeverity</ref>.MESSAGE_CRITICAL;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1a4341f6495947222d3a86fcbb0c2b629d" kindref="member">MessageSeverity</ref>.MESSAGE_UNKNOWN;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handlePointMappingChange(ref<sp/>LEAP_POINT_MAPPING_CHANGE_EVENT<sp/>pointMapping)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1ae000281d4cf2fbced911ff97b31f4035" kindref="member">LeapPointMappingChange</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1ae000281d4cf2fbced911ff97b31f4035" kindref="member">LeapPointMappingChange</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PointMappingChangeEventArgs(pointMapping.frame_id,<sp/>pointMapping.timestamp,<sp/>pointMapping.nPoints));</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleDroppedFrame(ref<sp/>LEAP_DROPPED_FRAME_EVENT<sp/>droppedFrame)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a7542907a2116216ac90ab2a88599b3a6" kindref="member">LeapDroppedFrame</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a7542907a2116216ac90ab2a88599b3a6" kindref="member">LeapDroppedFrame</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DroppedFrameEventArgs(droppedFrame.frame_id,<sp/>droppedFrame.reason));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleHeadPoseChange(ref<sp/>LEAP_HEAD_POSE_EVENT<sp/>headPose)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1ae8fb7ce09bced652e319aada4a8e3755" kindref="member">LeapHeadPoseChange</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1ae8fb7ce09bced652e319aada4a8e3755" kindref="member">LeapHeadPoseChange</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HeadPoseEventArgs(headPose.head_position,<sp/>headPose.head_orientation));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>DistortionData<sp/>createDistortionData(LEAP_IMAGE<sp/>image,<sp/>Image.CameraType<sp/>camera)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DistortionData<sp/>distortionData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DistortionData();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distortionData.Version<sp/>=<sp/>image.matrix_version;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distortionData.Width<sp/>=<sp/>LeapC.DistortionSize;<sp/></highlight><highlight class="comment">//fixed<sp/>value<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distortionData.Height<sp/>=<sp/>LeapC.DistortionSize;<sp/></highlight><highlight class="comment">//fixed<sp/>value<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Visit<sp/>LeapC.h<sp/>for<sp/>more<sp/>details.<sp/><sp/>We<sp/>need<sp/>to<sp/>marshal<sp/>the<sp/>float<sp/>data<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>the<sp/>distortion<sp/>struct<sp/>cannot<sp/>be<sp/>represented<sp/>safely<sp/>in<sp/>c#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distortionData.Data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[(int)(distortionData.Width<sp/>*<sp/>distortionData.Height<sp/>*<sp/>2)];<sp/></highlight><highlight class="comment">//2<sp/>float<sp/>values<sp/>per<sp/>map<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.Copy(image.distortionMatrix,<sp/>distortionData.Data,<sp/>0,<sp/>distortionData.Data.Length);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1ab1618ad3b9b1ed17ccd43a2461d277d7" kindref="member">LeapDistortionChange</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1ab1618ad3b9b1ed17ccd43a2461d277d7" kindref="member">LeapDistortionChange</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DistortionEventArgs(distortionData,<sp/>camera));</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distortionData;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleImage(ref<sp/>LEAP_IMAGE_EVENT<sp/>imageMsg)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a7ff7e1c77a92cba83e8d59e75f8074db" kindref="member">LeapImage</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>distortion<sp/>data,<sp/>if<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((_currentLeftDistortionData.<ref refid="class_leap_1_1_distortion_data_1a60b1ec4aa610af0fcf89a78df52b9c17" kindref="member">Version</ref><sp/>!=<sp/>imageMsg.leftImage.matrix_version)<sp/>||<sp/>!_currentLeftDistortionData.<ref refid="class_leap_1_1_distortion_data_1aeb36d5a10f923ea3067bce076c69e3fd" kindref="member">IsValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_currentLeftDistortionData<sp/>=<sp/>createDistortionData(imageMsg.leftImage,<sp/>Image.CameraType.LEFT);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((_currentRightDistortionData.<ref refid="class_leap_1_1_distortion_data_1a60b1ec4aa610af0fcf89a78df52b9c17" kindref="member">Version</ref><sp/>!=<sp/>imageMsg.rightImage.matrix_version)<sp/>||<sp/>!_currentRightDistortionData.<ref refid="class_leap_1_1_distortion_data_1aeb36d5a10f923ea3067bce076c69e3fd" kindref="member">IsValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_currentRightDistortionData<sp/>=<sp/>createDistortionData(imageMsg.rightImage,<sp/>Image.CameraType.RIGHT);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageData<sp/>leftImage<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ImageData(Image.CameraType.LEFT,<sp/>imageMsg.leftImage,<sp/>_currentLeftDistortionData);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageData<sp/>rightImage<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ImageData(Image.CameraType.RIGHT,<sp/>imageMsg.rightImage,<sp/>_currentRightDistortionData);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Image<sp/>stereoImage<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Image(imageMsg.info.frame_id,<sp/>imageMsg.info.timestamp,<sp/>leftImage,<sp/>rightImage);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a7ff7e1c77a92cba83e8d59e75f8074db" kindref="member">LeapImage</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ImageEventArgs(stereoImage));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handlePolicyChange(ref<sp/>LEAP_POLICY_EVENT<sp/>policyMsg)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1ac3d23b7ad9ca1224f70f1718873bb1c2" kindref="member">LeapPolicyChange</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1ac3d23b7ad9ca1224f70f1718873bb1c2" kindref="member">LeapPolicyChange</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PolicyEventArgs(policyMsg.current_policy,<sp/>_activePolicies));</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_activePolicies<sp/>=<sp/>policyMsg.current_policy;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_activePolicies<sp/>!=<sp/>_requestedPolicies)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>could<sp/>happen<sp/>when<sp/>config<sp/>is<sp/>turned<sp/>off,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>policy<sp/>change<sp/>event<sp/>from<sp/>the<sp/>last<sp/>SetPolicy,<sp/>after<sp/>that,<sp/>the<sp/>user<sp/>called<sp/>SetPolicy<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>handle<sp/>failure<sp/>to<sp/>set<sp/>desired<sp/>policy<sp/>--<sp/>maybe<sp/>a<sp/>PolicyDenied<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="class_leap_internal_1_1_connection_1a973bcc5a80165662305ca53cc153ffaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a973bcc5a80165662305ca53cc153ffaf" kindref="member">SetPolicy</ref>(<ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref><sp/>policy)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>setFlags<sp/>=<sp/>(ulong)flagForPolicy(policy);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_requestedPolicies<sp/>=<sp/>_requestedPolicies<sp/>|<sp/>setFlags;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setFlags<sp/>=<sp/>_requestedPolicies;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>clearFlags<sp/>=<sp/>~_requestedPolicies;<sp/></highlight><highlight class="comment">//inverse<sp/>of<sp/>desired<sp/>policies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1aeba99ff7b5740de9709a1535ca6d8ae4" kindref="member">SetPolicyFlags</ref>(_leapConnection,<sp/>setFlags,<sp/>clearFlags);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>SetPolicyFlags<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="class_leap_internal_1_1_connection_1add28c0b2f62ef7b394e194989ad3b424" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1add28c0b2f62ef7b394e194989ad3b424" kindref="member">ClearPolicy</ref>(<ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref><sp/>policy)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>clearFlags<sp/>=<sp/>(ulong)flagForPolicy(policy);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_requestedPolicies<sp/>=<sp/>_requestedPolicies<sp/>&amp;<sp/>~clearFlags;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1aeba99ff7b5740de9709a1535ca6d8ae4" kindref="member">SetPolicyFlags</ref>(_leapConnection,<sp/>_requestedPolicies,<sp/>~_requestedPolicies);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>SetPolicyFlags<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1abf43a1780899ea756a686f838b7117be" kindref="member">eLeapPolicyFlag</ref><sp/>flagForPolicy(<ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref><sp/>singlePolicy)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(singlePolicy)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref>.POLICY_BACKGROUND_FRAMES:</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1abf43a1780899ea756a686f838b7117be" kindref="member">eLeapPolicyFlag</ref>.eLeapPolicyFlag_BackgroundFrames;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref>.POLICY_IMAGES:</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1abf43a1780899ea756a686f838b7117be" kindref="member">eLeapPolicyFlag</ref>.eLeapPolicyFlag_Images;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref>.POLICY_OPTIMIZE_HMD:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1abf43a1780899ea756a686f838b7117be" kindref="member">eLeapPolicyFlag</ref>.eLeapPolicyFlag_OptimizeHMD;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref>.POLICY_ALLOW_PAUSE_RESUME:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1abf43a1780899ea756a686f838b7117be" kindref="member">eLeapPolicyFlag</ref>.eLeapPolicyFlag_AllowPauseResume;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref>.POLICY_MAP_POINTS:</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1abf43a1780899ea756a686f838b7117be" kindref="member">eLeapPolicyFlag</ref>.eLeapPolicyFlag_MapPoints;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref>.POLICY_DEFAULT:</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="707" refid="class_leap_internal_1_1_connection_1a6e2e5ee305e33e8d8c3782708e53b95c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a6e2e5ee305e33e8d8c3782708e53b95c" kindref="member">IsPolicySet</ref>(<ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>.<ref refid="class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6" kindref="member">PolicyFlag</ref><sp/>policy)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>policyToCheck<sp/>=<sp/>(ulong)flagForPolicy(policy);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_activePolicies<sp/>&amp;<sp/>policyToCheck)<sp/>==<sp/>policyToCheck;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712" refid="class_leap_internal_1_1_connection_1a3083380baac8141b0d5bdf28a5f0666e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_leap_internal_1_1_connection_1a3083380baac8141b0d5bdf28a5f0666e" kindref="member">GetConfigValue</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>config_key)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>requestId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(_leapConnection,<sp/>config_key,<sp/>out<sp/>requestId);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>RequestConfigValue<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_configRequests[requestId]<sp/>=<sp/>config_key;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>requestId;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="class_leap_internal_1_1_connection_1ae223cb1838efbbe1cb1f65fcd970fe05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>uint<sp/><ref refid="class_leap_internal_1_1_connection_1ae223cb1838efbbe1cb1f65fcd970fe05" kindref="member">SetConfigValue&lt;T&gt;</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>config_key,<sp/>T<sp/>value)<sp/>where<sp/>T<sp/>:<sp/>IConvertible<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>requestId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/>dataType<sp/>=<sp/>value.GetType();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/>typeof(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(_leapConnection,<sp/>config_key,<sp/>Convert.ToBoolean(value),<sp/>out<sp/>requestId);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/>typeof(Int32))<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(_leapConnection,<sp/>config_key,<sp/>Convert.ToInt32(value),<sp/>out<sp/>requestId);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/>typeof(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(_leapConnection,<sp/>config_key,<sp/>Convert.ToSingle(value),<sp/>out<sp/>requestId);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/>typeof(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(_leapConnection,<sp/>config_key,<sp/>Convert.ToString(value),<sp/>out<sp/>requestId);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArgumentException(</highlight><highlight class="stringliteral">&quot;Only<sp/>boolean,<sp/>Int32,<sp/>float,<sp/>and<sp/>string<sp/>types<sp/>are<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>SaveConfigValue<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_configRequests[requestId]<sp/>=<sp/>config_key;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>requestId;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="class_leap_internal_1_1_connection_1a29fc660760e7b7de559f01aa11be1abe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a29fc660760e7b7de559f01aa11be1abe" kindref="member">IsServiceConnected</ref><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_leapConnection<sp/>==<sp/>IntPtr.Zero)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o" kindref="compound">LEAP_CONNECTION_INFO</ref><sp/>pInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o" kindref="compound">LEAP_CONNECTION_INFO</ref>();</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o_1a5428e50901ec7335e8450706a26e180a" kindref="member">size</ref><sp/>=<sp/>(uint)Marshal.SizeOf(pInfo);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abaf56f46dac48027a36aa0c08d94abbf" kindref="member">GetConnectionInfo</ref>(_leapConnection,<sp/>ref<sp/>pInfo);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>GetConnectionInfo<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInfo.status<sp/>==<sp/><ref refid="namespace_leap_internal_1a98a6a4220fcab393d11bf4ec2eecdea6" kindref="member">eLeapConnectionStatus</ref>.eLeapConnectionStatus_Connected)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="class_leap_internal_1_1_connection_1a986b77cb70270ee5d44d1d83db845dfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_device_list" kindref="compound">DeviceList</ref><sp/><ref refid="class_leap_internal_1_1_connection_1a986b77cb70270ee5d44d1d83db845dfe" kindref="member">Devices</ref><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_devices<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_devices<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_device_list" kindref="compound">DeviceList</ref>();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_devices;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="class_leap_internal_1_1_connection_1ae45e28603b9dd28c0c30b8f57f2a3366" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_failed_device_list" kindref="compound">FailedDeviceList</ref><sp/><ref refid="class_leap_internal_1_1_connection_1ae45e28603b9dd28c0c30b8f57f2a3366" kindref="member">FailedDevices</ref><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_failedDevices<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_failedDevices<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_failed_device_list" kindref="compound">FailedDeviceList</ref>();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_failedDevices;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795" refid="class_leap_internal_1_1_connection_1ac5ddffb50ba506fb3465c8a966beca95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="class_leap_internal_1_1_connection_1ac5ddffb50ba506fb3465c8a966beca95" kindref="member">PixelToRectilinear</ref>(<ref refid="class_leap_1_1_image" kindref="compound">Image</ref>.<ref refid="class_leap_1_1_image_1a28310e43e0f2d7f7117e1b45330bdc38" kindref="member">CameraType</ref><sp/>camera,<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>pixel)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref><sp/>pixelStruct<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref>(pixel);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref><sp/>ray<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1ab1e8d614352632f79ca05e23a617ceb3" kindref="member">LeapPixelToRectilinear</ref>(_leapConnection,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(camera<sp/>==<sp/><ref refid="class_leap_1_1_image" kindref="compound">Image</ref>.<ref refid="class_leap_1_1_image_1a28310e43e0f2d7f7117e1b45330bdc38" kindref="member">CameraType</ref>.LEFT<sp/>?</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1af2a2bc35637b8a453ff772a09a0987a1" kindref="member">eLeapPerspectiveType</ref>.eLeapPerspectiveType_stereo_left<sp/>:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1af2a2bc35637b8a453ff772a09a0987a1" kindref="member">eLeapPerspectiveType</ref>.eLeapPerspectiveType_stereo_right),</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixelStruct);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(ray.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1a5a641abc075b71fc0a9f3bed31a2d0f0" kindref="member">x</ref>,<sp/>ray.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1a590c426ffd4e8ade9475dba1e85433dd" kindref="member">y</ref>,<sp/>ray.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1af1fc4bf9c27138af9d077175709c68ef" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="class_leap_internal_1_1_connection_1ac5c43c1a0c01488e8f67935e9d412117" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="class_leap_internal_1_1_connection_1ac5c43c1a0c01488e8f67935e9d412117" kindref="member">RectilinearToPixel</ref>(<ref refid="class_leap_1_1_image" kindref="compound">Image</ref>.<ref refid="class_leap_1_1_image_1a28310e43e0f2d7f7117e1b45330bdc38" kindref="member">CameraType</ref><sp/>camera,<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>ray)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref><sp/>rayStruct<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref>(ray);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r" kindref="compound">LEAP_VECTOR</ref><sp/>pixel<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a5703368f930a99b4f05a475273eb90b9" kindref="member">LeapRectilinearToPixel</ref>(_leapConnection,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(camera<sp/>==<sp/><ref refid="class_leap_1_1_image" kindref="compound">Image</ref>.<ref refid="class_leap_1_1_image_1a28310e43e0f2d7f7117e1b45330bdc38" kindref="member">CameraType</ref>.LEFT<sp/>?</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1af2a2bc35637b8a453ff772a09a0987a1" kindref="member">eLeapPerspectiveType</ref>.eLeapPerspectiveType_stereo_left<sp/>:</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1af2a2bc35637b8a453ff772a09a0987a1" kindref="member">eLeapPerspectiveType</ref>.eLeapPerspectiveType_stereo_right),</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rayStruct);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(pixel.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1a5a641abc075b71fc0a9f3bed31a2d0f0" kindref="member">x</ref>,<sp/>pixel.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1a590c426ffd4e8ade9475dba1e85433dd" kindref="member">y</ref>,<sp/>pixel.<ref refid="struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r_1af1fc4bf9c27138af9d077175709c68ef" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815" refid="class_leap_internal_1_1_connection_1a26d1326d5ad65d3ac3daa5bc65e2d367" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1a26d1326d5ad65d3ac3daa5bc65e2d367" kindref="member">TelemetryProfiling</ref>(ref<sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_e_l_e_m_e_t_r_y___d_a_t_a" kindref="compound">LEAP_TELEMETRY_DATA</ref><sp/>telemetryData)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a8c04b0435063d992e7fba8815547fa5e" kindref="member">LeapTelemetryProfiling</ref>(_leapConnection,<sp/>ref<sp/>telemetryData);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>TelemetryProfiling<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820" refid="class_leap_internal_1_1_connection_1ac5abf5861bb14690a4b6c84ca57c9c6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_internal_1_1_connection_1ac5abf5861bb14690a4b6c84ca57c9c6e" kindref="member">GetPointMapping</ref>(ref<sp/><ref refid="struct_leap_1_1_point_mapping" kindref="compound">PointMapping</ref><sp/>pm)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>buffer<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a39052bbaaa77cce6bf489a8cdc57d12a" kindref="member">GetPointMapping</ref>(_leapConnection,<sp/>buffer,<sp/>ref<sp/>size);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_InsufficientBuffer)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>!=<sp/>IntPtr.Zero)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeHGlobal(buffer);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>Marshal.AllocHGlobal((Int32)size);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reportAbnormalResults(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>get<sp/>point<sp/>mapping<sp/>call<sp/>was<sp/>&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm.points<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm.ids<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___p_o_i_n_t___m_a_p_p_i_n_g" kindref="compound">LEAP_POINT_MAPPING</ref><sp/>pmi;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_POINT_MAPPING&gt;.PtrToStruct(buffer,<sp/>out<sp/>pmi);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int32<sp/>nPoints<sp/>=<sp/>(Int32)pmi.<ref refid="struct_leap_internal_1_1_l_e_a_p___p_o_i_n_t___m_a_p_p_i_n_g_1af98fd422b5a03bbce6185c9cac581e53" kindref="member">nPoints</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pm.frameId<sp/>=<sp/>pmi.frame_id;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pm.timestamp<sp/>=<sp/>pmi.timestamp;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pm.points<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>[nPoints];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pm.ids<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UInt32[nPoints];</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>points<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[3<sp/>*<sp/>nPoints];</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int32[]<sp/>ids<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Int32[nPoints];</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.Copy(pmi.points,<sp/>points,<sp/>0,<sp/>3<sp/>*<sp/>nPoints);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.Copy(pmi.ids,<sp/>ids,<sp/>0,<sp/>nPoints);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nPoints;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm.points[i].<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>=<sp/>points[j++];</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm.points[i].y<sp/>=<sp/>points[j++];</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm.points[i].z<sp/>=<sp/>points[j++];</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm.ids[i]<sp/>=<sp/>unchecked((UInt32)ids[i]);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeHGlobal(buffer);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>_lastResult;<sp/></highlight><highlight class="comment">//Used<sp/>to<sp/>avoid<sp/>repeating<sp/>the<sp/>same<sp/>log<sp/>message,<sp/>ie.<sp/>for<sp/>events<sp/>like<sp/>time<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reportAbnormalResults(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>context,<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>!=<sp/>_lastResult)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/>context<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>result;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_internal_1_1_connection_1a435f5b54b81790b604a4ef1f9b630d5e" kindref="member">LeapLogEvent</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_connection_1a435f5b54b81790b604a4ef1f9b630d5e" kindref="member">LeapLogEvent</ref>.DispatchOnContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="class_leap_internal_1_1_connection_1a0b87a8b7adf1357944915bd206150db3" kindref="member">EventContext</ref>,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_log_event_args" kindref="compound">LogEventArgs</ref>(<ref refid="namespace_leap_1a4341f6495947222d3a86fcbb0c2b629d" kindref="member">MessageSeverity</ref>.MESSAGE_CRITICAL,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a92e9bb730041df4094e328bcf326da47" kindref="member">GetNow</ref>(),</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_lastResult<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Connection.cs"/>
  </compounddef>
</doxygen>
