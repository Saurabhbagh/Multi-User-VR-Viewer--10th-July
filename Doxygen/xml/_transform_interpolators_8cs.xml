<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_transform_interpolators_8cs" kind="file" language="C#">
    <compoundname>TransformInterpolators.cs</compoundname>
    <innerclass refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" prot="public">Leap::Unity::Animation::Tween</innerclass>
    <innerclass refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector" prot="public">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_tr0996b2fe5cec1423b38d2696dbcafb24" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformPositionValueInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_tra22d7729bde4a145af84323dcbc5ba6b" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformPositionReferenceInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_tr5754480d23220402adc5adce1b7b34cf" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformLocalPositionValueInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_trb8a61e093d5c6eaccaec780c4c38daa7" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformLocalPositionReferenceInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_trf1af90fd2c789296200d927b28bb43b6" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformRotationValueInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_tr999054229283806adee5192c748f98e3" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformRotationReferenceInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_tr21d97aef4419fbcb6db9580b4df68077" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformLocalRotationValueInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_tr15436c19bfed0db2f2398f1605956d09" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformLocalRotationReferenceInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_tre117a573c39ea2956f2cc099a4ad574c" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformLocalScaleValueInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1_1_tr6ce0b11f6ea325afc989a74cd298dd96" prot="private">Leap::Unity::Leap::Unity::Animation::Internal::TransformSelector::TransformLocalScaleReferenceInterpolator</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity">Leap::Unity</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity_1_1_animation">Leap::Unity::Animation</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity_1_1_leap">Leap::Unity::Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity_1_1_leap_1_1_unity">Leap::Unity::Leap::Unity</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation">Leap::Unity::Leap::Unity::Animation</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal">Leap::Unity::Leap::Unity::Animation::Internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity_1_1_animation" kindref="compound">Leap.Unity.Animation</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_extensions_8cs_1a9c5bf76bfa43f056e154ec8661c9f586" kindref="member">Internal</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>partial<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tween<sp/>{</highlight></codeline>
<codeline lineno="17" refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1aa7b22a26af26ea28523475885b119dda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TransformSelector<sp/><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1aa7b22a26af26ea28523475885b119dda" kindref="member">Target</ref>(Transform<sp/>transform)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TransformSelector(transform,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity_1_1_animation_1_1_internal" kindref="compound">Leap.Unity.Animation.Internal</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector" kindref="compound">TransformSelector</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Transform<sp/>_target;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Tween<sp/>_tween;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1af004cc1165616369a41a8af27b0bb71e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1af004cc1165616369a41a8af27b0bb71e" kindref="member">TransformSelector</ref>(Transform<sp/>target,<sp/>Tween<sp/>tween)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/>target;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_tween<sp/>=<sp/>tween;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>POSITION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a423b5b8d0bd97e2e3524914cf33b7711" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a423b5b8d0bd97e2e3524914cf33b7711" kindref="member">Position</ref>(Vector3<sp/>a,<sp/>Vector3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformPositionValueInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1ae25c532c31f47365c2e11845cb3949be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1ae25c532c31f47365c2e11845cb3949be" kindref="member">ToPosition</ref>(Vector3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformPositionValueInterpolator&gt;.Spawn().Init(_target.position,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1aa2264ae25a234a675fb2acdf0cf2bd13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1aa2264ae25a234a675fb2acdf0cf2bd13" kindref="member">ByPosition</ref>(Vector3<sp/>delta)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformPositionValueInterpolator&gt;.Spawn().Init(_target.position,<sp/>_target.position<sp/>+<sp/>delta,<sp/>_target));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a0d20e79b487476608bd81202d6294653" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a0d20e79b487476608bd81202d6294653" kindref="member">Position</ref>(Transform<sp/>a,<sp/>Transform<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformPositionReferenceInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1abb435c49672d4d1b934a6be8f7783acf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1abb435c49672d4d1b934a6be8f7783acf" kindref="member">LocalPosition</ref>(Vector3<sp/>a,<sp/>Vector3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalPositionValueInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a7f9074f159aadb0fbe01a4f91d77a8d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a7f9074f159aadb0fbe01a4f91d77a8d5" kindref="member">ToLocalPosition</ref>(Vector3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalPositionValueInterpolator&gt;.Spawn().Init(_target.localPosition,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1aba4dcaa0cd568959b08ff944b9020ab0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1aba4dcaa0cd568959b08ff944b9020ab0" kindref="member">ByLocalPosition</ref>(Vector3<sp/>delta)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalPositionValueInterpolator&gt;.Spawn().Init(_target.localPosition,<sp/>_target.localPosition<sp/>+<sp/>delta,<sp/>_target));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a13cc151a11045d8a16bff858ff9e9569" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a13cc151a11045d8a16bff858ff9e9569" kindref="member">LocalPosition</ref>(Transform<sp/>a,<sp/>Transform<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalPositionReferenceInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformPositionValueInterpolator<sp/>:<sp/>Vector3InterpolatorBase&lt;Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.position<sp/>=<sp/>_a<sp/>+<sp/>_b<sp/>*<sp/>percent;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformPositionValueInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformPositionReferenceInterpolator<sp/>:<sp/>InterpolatorBase&lt;Transform,<sp/>Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>length<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3.Distance(_a.position,<sp/>_b.position);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.position<sp/>=<sp/>Vector3.Lerp(_a.position,<sp/>_b.position,<sp/>percent);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformPositionReferenceInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformLocalPositionValueInterpolator<sp/>:<sp/>Vector3InterpolatorBase&lt;Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.localPosition<sp/>=<sp/>_a<sp/>+<sp/>_b<sp/>*<sp/>percent;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformLocalPositionValueInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformLocalPositionReferenceInterpolator<sp/>:<sp/>InterpolatorBase&lt;Transform,<sp/>Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>length<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector3.Distance(_a.localPosition,<sp/>_b.localPosition);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.localPosition<sp/>=<sp/>Vector3.Lerp(_a.localPosition,<sp/>_b.localPosition,<sp/>percent);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformLocalPositionReferenceInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>ROTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1abecf3284e5a297d6bf198390a854a6b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1abecf3284e5a297d6bf198390a854a6b9" kindref="member">Rotation</ref>(Quaternion<sp/>a,<sp/>Quaternion<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformRotationValueInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a080ea31385ee3af81c273b2263fb3e84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a080ea31385ee3af81c273b2263fb3e84" kindref="member">ToRotation</ref>(Quaternion<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformRotationValueInterpolator&gt;.Spawn().Init(_target.rotation,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a15c9866e2852b34fe479d8d8f6f1cd44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a15c9866e2852b34fe479d8d8f6f1cd44" kindref="member">ByRotation</ref>(Quaternion<sp/>delta)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformRotationValueInterpolator&gt;.Spawn().Init(_target.rotation,<sp/>_target.rotation<sp/>*<sp/>delta,<sp/>_target));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a61d676d656136f211a5f89f537310595" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a61d676d656136f211a5f89f537310595" kindref="member">Rotation</ref>(Transform<sp/>a,<sp/>Transform<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformRotationReferenceInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a9f30f4eb3bd0c6c8e259b68547801f4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a9f30f4eb3bd0c6c8e259b68547801f4b" kindref="member">LocalRotation</ref>(Quaternion<sp/>a,<sp/>Quaternion<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalRotationValueInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a5e663ad6b4a88952de77b6d7f24b66fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a5e663ad6b4a88952de77b6d7f24b66fb" kindref="member">ToLocalRotation</ref>(Quaternion<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalRotationValueInterpolator&gt;.Spawn().Init(_target.localRotation,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a6c57db249ac4b4ff5c925b9dcd7d9e2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a6c57db249ac4b4ff5c925b9dcd7d9e2c" kindref="member">ByLocalRotation</ref>(Quaternion<sp/>delta)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalRotationValueInterpolator&gt;.Spawn().Init(_target.localRotation,<sp/>_target.localRotation<sp/>*<sp/>delta,<sp/>_target));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a8c3e8953af09204d9249f58d682dc645" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a8c3e8953af09204d9249f58d682dc645" kindref="member">LocalRotation</ref>(Transform<sp/>a,<sp/>Transform<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalRotationReferenceInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformRotationValueInterpolator<sp/>:<sp/>QuaternionInterpolatorBase&lt;Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.rotation<sp/>=<sp/>Quaternion.Slerp(_a,<sp/>_b,<sp/>percent);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformRotationValueInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformRotationReferenceInterpolator<sp/>:<sp/>InterpolatorBase&lt;Transform,<sp/>Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>length<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.Angle(_a.rotation,<sp/>_b.rotation);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.rotation<sp/>=<sp/>Quaternion.Slerp(_a.rotation,<sp/>_b.rotation,<sp/>percent);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformRotationReferenceInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformLocalRotationValueInterpolator<sp/>:<sp/>QuaternionInterpolatorBase&lt;Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.localRotation<sp/>=<sp/>Quaternion.Slerp(_a,<sp/>_b,<sp/>percent);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformLocalRotationValueInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformLocalRotationReferenceInterpolator<sp/>:<sp/>InterpolatorBase&lt;Transform,<sp/>Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>length<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.Angle(_a.localRotation,<sp/>_b.localRotation);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.localRotation<sp/>=<sp/>Quaternion.Slerp(_a.localRotation,<sp/>_b.localRotation,<sp/>percent);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformLocalRotationReferenceInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>SCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1af0d3dc5c78138515eb3473b5b7295280" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1af0d3dc5c78138515eb3473b5b7295280" kindref="member">LocalScale</ref>(Vector3<sp/>a,<sp/>Vector3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a9b9b005150669eceafa5964610546e71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a9b9b005150669eceafa5964610546e71" kindref="member">LocalScale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(Vector3.one<sp/>*<sp/>a,<sp/>Vector3.one<sp/>*<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a33d8a7f76cad0ea2e7a54eb5513fda2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a33d8a7f76cad0ea2e7a54eb5513fda2d" kindref="member">ToLocalScale</ref>(Vector3<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(_target.localScale,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a1b6822af20f1f90ace3eebe6095711da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a1b6822af20f1f90ace3eebe6095711da" kindref="member">ToLocalScale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(_target.localScale,<sp/>Vector3.one<sp/>*<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a7f45e638712855dc07b33691f3547a2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a7f45e638712855dc07b33691f3547a2b" kindref="member">ByLocalScale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(_target.localScale,<sp/>_target.localScale<sp/>*<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a4827065abda49368d84a3d5432cfe8aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tween<sp/><ref refid="struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a4827065abda49368d84a3d5432cfe8aa" kindref="member">LocalScale</ref>(Transform<sp/>a,<sp/>Transform<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_tween.AddInterpolator(Pool&lt;TransformLocalScaleReferenceInterpolator&gt;.Spawn().Init(a,<sp/>b,<sp/>_target));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformLocalScaleValueInterpolator<sp/>:<sp/>Vector3InterpolatorBase&lt;Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.localScale<sp/>=<sp/>_a<sp/>+<sp/>_b<sp/>*<sp/>percent;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformLocalScaleValueInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TransformLocalScaleReferenceInterpolator<sp/>:<sp/>InterpolatorBase&lt;Transform,<sp/>Transform&gt;<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>length<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.Angle(_a.localRotation,<sp/>_b.localRotation);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Interpolate(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percent)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target.localScale<sp/>=<sp/>Vector3.Lerp(_a.localScale,<sp/>_b.localScale,<sp/>percent);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dispose()<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_target<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pool&lt;TransformLocalScaleReferenceInterpolator&gt;.Recycle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_target<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/>}<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/TransformInterpolators.cs"/>
  </compounddef>
</doxygen>
