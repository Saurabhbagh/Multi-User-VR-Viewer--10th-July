<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_leap_1_1_vector" kind="struct" language="C#" prot="public">
    <compoundname>Leap::Vector</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IEquatable&lt; Vector &gt;</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="struct_leap_1_1_vector_1af92a9eb06277dd8eebbf3e1cf61360ca" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Leap.Vector.this[uint index]</definition>
        <argsstring></argsstring>
        <name>this[uint index]</name>
        <briefdescription>
<para>Index vector components numerically. Index 0 is x, index 1 is y, and index 2 is z. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="198" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="198" bodyend="217"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_vector_1afd51a6a7664efda2e5dde7a5e6a5313a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Leap.Vector.Magnitude</definition>
        <argsstring></argsstring>
        <name>Magnitude</name>
        <briefdescription>
<para>The magnitude, or length, of this vector. </para>
        </briefdescription>
        <detaileddescription>
<para>The magnitude is the L2 norm, or Euclidean distance between the origin and the point represented by the (x, y, z) components of this <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref> object. <simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="230" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Leap.Vector.MagnitudeSquared</definition>
        <argsstring></argsstring>
        <name>MagnitudeSquared</name>
        <briefdescription>
<para>The square of the magnitude, or length, of this vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="238" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_vector_1acc5105f55edfdc7a3d5cc6cd6cb8dc8f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Leap.Vector.Pitch</definition>
        <argsstring></argsstring>
        <name>Pitch</name>
        <briefdescription>
<para>The pitch angle in radians. </para>
        </briefdescription>
        <detaileddescription>
<para>Pitch is the angle between the negative z-axis and the projection of the vector onto the y-z plane. In other words, pitch represents rotation around the x-axis. If the vector points upward, the returned angle is between 0 and pi radians (180 degrees); if it points downward, the angle is between 0 and -pi radians.</para>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="253" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_vector_1afa775e6c104537383493e027f6a462f7" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Leap.Vector.Roll</definition>
        <argsstring></argsstring>
        <name>Roll</name>
        <briefdescription>
<para>The roll angle in radians. </para>
        </briefdescription>
        <detaileddescription>
<para>Roll is the angle between the y-axis and the projection of the vector onto the x-y plane. In other words, roll represents rotation around the z-axis. If the vector points to the left of the y-axis, then the returned angle is between 0 and pi radians (180 degrees); if it points to the right, the angle is between 0 and -pi radians.</para>
<para>Use this function to get roll angle of the plane to which this vector is a normal. For example, if this vector represents the normal to the palm, then this function returns the tilt or roll of the palm plane compared to the horizontal (x-z) plane.</para>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="273" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_vector_1ac6f5feaf332862e1ebc0d5b219e55eaa" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Leap.Vector.Yaw</definition>
        <argsstring></argsstring>
        <name>Yaw</name>
        <briefdescription>
<para>The yaw angle in radians. </para>
        </briefdescription>
        <detaileddescription>
<para>Yaw is the angle between the negative z-axis and the projection of the vector onto the x-z plane. In other words, yaw represents rotation around the y-axis. If the vector points to the right of the negative z-axis, then the returned angle is between 0 and pi radians (180 degrees); if it points to the left, the angle is between 0 and -pi radians.</para>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="288" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_vector_1a14c14f9559420ad1f1a9e1b8884859c4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Leap.Vector.Normalized</definition>
        <argsstring></argsstring>
        <name>Normalized</name>
        <briefdescription>
<para>A normalized copy of this vector. </para>
        </briefdescription>
        <detaileddescription>
<para>A normalized vector has the same direction as the original vector, but with a length of one.</para>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="300" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="300" bodyend="309"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Leap.Vector.x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="219" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Leap.Vector.y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="220" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Leap.Vector.z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="221" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="221" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.Zero</definition>
        <argsstring></argsstring>
        <name>Zero</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0, 0, 0)</initializer>
        <briefdescription>
<para>The zero vector: (0, 0, 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="314" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.Ones</definition>
        <argsstring></argsstring>
        <name>Ones</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(1, 1, 1)</initializer>
        <briefdescription>
<para>The ones vector: (1, 1, 1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="319" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1ad62a202318bf591b431928859449b19c" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.XAxis</definition>
        <argsstring></argsstring>
        <name>XAxis</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(1, 0, 0)</initializer>
        <briefdescription>
<para>The x-axis unit vector: (1, 0, 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="324" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1abf07de0f419b3de5776e046d35c0843e" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.YAxis</definition>
        <argsstring></argsstring>
        <name>YAxis</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0, 1, 0)</initializer>
        <briefdescription>
<para>The y-axis unit vector: (0, 1, 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="329" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1a2b2f1a3a9334e812e832e3b1b6cd4384" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.ZAxis</definition>
        <argsstring></argsstring>
        <name>ZAxis</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0, 0, 1)</initializer>
        <briefdescription>
<para>The z-axis unit vector: (0, 0, 1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="334" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1a2ec88fe91f8086e18e78ee2dcc078525" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.Forward</definition>
        <argsstring></argsstring>
        <name>Forward</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0, 0, -1)</initializer>
        <briefdescription>
<para>The unit vector pointing forward along the negative z-axis: (0, 0, -1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="339" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1ad8dd1ac8e87611c590c9dcc58f8fdf8c" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.Backward</definition>
        <argsstring></argsstring>
        <name>Backward</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0, 0, 1)</initializer>
        <briefdescription>
<para>The unit vector pointing backward along the positive z-axis: (0, 0, 1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="344" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1a62b9bbd54a4b89f695a106f42fcff881" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.Left</definition>
        <argsstring></argsstring>
        <name>Left</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(-1, 0, 0)</initializer>
        <briefdescription>
<para>The unit vector pointing left along the negative x-axis: (-1, 0, 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="349" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1aa2cefa3d6f93e552fcd95621e82da158" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.Right</definition>
        <argsstring></argsstring>
        <name>Right</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(1, 0, 0)</initializer>
        <briefdescription>
<para>The unit vector pointing right along the positive x-axis: (1, 0, 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="354" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1ad90a5266422b507db81c857829b9a915" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.Up</definition>
        <argsstring></argsstring>
        <name>Up</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0, 1, 0)</initializer>
        <briefdescription>
<para>The unit vector pointing up along the positive y-axis: (0, 1, 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="359" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_vector_1a5f080cc88e908cd5d4c3e593767cdb17" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>readonly Vector Leap.Vector.Down</definition>
        <argsstring></argsstring>
        <name>Down</name>
        <initializer>= new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>(0, -1, 0)</initializer>
        <briefdescription>
<para>The unit vector pointing down along the negative y-axis: (0, -1, 0) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="364" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="364" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_leap_1_1_vector_1af056d6d462839c1e5d3d9fa7d0507f11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector Leap.Vector.operator+</definition>
        <argsstring>(Vector v1, Vector v2)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="39" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1ac35b7560d4ac5acb9217120aa6281f41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector Leap.Vector.operator -</definition>
        <argsstring>(Vector v1, Vector v2)</argsstring>
        <name>operator -</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="43" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a9189471d23ea61609806cbee7b1808bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector Leap.Vector.operator *</definition>
        <argsstring>(Vector v1, float scalar)</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="47" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a7a1839d6ea30d92eb3a7591b73c41a63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector Leap.Vector.operator *</definition>
        <argsstring>(float scalar, Vector v1)</argsstring>
        <name>operator *</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="51" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a8a707fa512d65682a773f87308c6d0e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector Leap.Vector.operator/</definition>
        <argsstring>(Vector v1, float scalar)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="55" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1ab08ec541871ec6fefb7f66331fdb6f0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector Leap.Vector.operator -</definition>
        <argsstring>(Vector v1)</argsstring>
        <name>operator -</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="59" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1ae3811a09e999d99576d40d361d5871fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Vector.operator==</definition>
        <argsstring>(Vector v1, Vector v2)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="63" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a6c834842a05008442e86353a7209d17b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Vector.operator !=</definition>
        <argsstring>(Vector v1, Vector v2)</argsstring>
        <name>operator !=</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="67" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a5732837cc5c84d689d44d9f3836fe639" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector Leap.Vector.Lerp</definition>
        <argsstring>(Vector a, Vector b, float t)</argsstring>
        <name>Lerp</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="367" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="367" bodyend="373"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_leap_1_1_vector_1ac5cd8263402ee3da54d342c65bde2511" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float []</type>
        <definition>float [] Leap.Vector.ToFloatArray</definition>
        <argsstring>()</argsstring>
        <name>ToFloatArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="71" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Vector.Vector</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>Vector</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref> with the specified component values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="79" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a1058e5cc80c4eb8f521f485269f7b614" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Vector.Vector</definition>
        <argsstring>(Vector vector)</argsstring>
        <name>Vector</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Copies the specified <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="90" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a9a192946523c91fc5aec3541cc09b762" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Leap.Vector.DistanceTo</definition>
        <argsstring>(Vector other)</argsstring>
        <name>DistanceTo</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The distance between the point represented by this <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref> object and a point represented by the specified <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="103" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a5833741990af0c182a41c75053d628b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Leap.Vector.AngleTo</definition>
        <argsstring>(Vector other)</argsstring>
        <name>AngleTo</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The angle between this vector and the specified vector in radians. </para>
        </briefdescription>
        <detaileddescription>
<para>The angle is measured in the plane formed by the two vectors. The angle returned is always the smaller of the two conjugate angles. Thus A.angleTo(B) == B.angleTo(A) and is always a positive value less than or equal to pi radians (180 degrees).</para>
<para>If either vector has zero length, then this function returns zero. <simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="121" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="121" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Leap.Vector.Dot</definition>
        <argsstring>(Vector other)</argsstring>
        <name>Dot</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The dot product of this vector with another vector. </para>
        </briefdescription>
        <detaileddescription>
<para>The dot product is the magnitude of the projection of this vector onto the specified vector. <simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="142" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1acdd326aa3bd6ac8eaf4d0c321db129cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Leap.Vector.Cross</definition>
        <argsstring>(Vector other)</argsstring>
        <name>Cross</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The cross product of this vector and the specified vector. </para>
        </briefdescription>
        <detaileddescription>
<para>The cross product is a vector orthogonal to both original vectors. It has a magnitude equal to the area of a parallelogram having the two vectors as sides. The direction of the returned vector is determined by the right-hand rule. Thus A.cross(B) == -B.cross(A).</para>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="156" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a0da414710f7b4d8bab10ed4685750599" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override string</type>
        <definition>override string Leap.Vector.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>Returns a string containing this vector in a human readable format: (x, y, z). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="166" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Vector.Equals</definition>
        <argsstring>(Vector v)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref> equality component-wise. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="174" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1a024719e566f2af651da6494e0f5cd86c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Leap.Vector.Equals</definition>
        <argsstring>(Object obj)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="_t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="178" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1aae57324c0e393fc8f8b799092964efbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Vector.IsValid</definition>
        <argsstring>()</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Returns true if all of the vector&apos;s components are finite. If any component is NaN or infinite, then this returns false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="187" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="187" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_vector_1aa95778cb029f0b2b59e7077eb1c3c980" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override int</type>
        <definition>override int Leap.Vector.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="375" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="375" bodyend="385"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref> struct represents a three-component mathematical vector or point such as a direction or position in three-dimensional space. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="namespace_leap" kindref="compound">Leap</ref> Motion software employs a right-handed Cartesian coordinate system. Values given are in units of real-world millimeters. The origin is centered at the center of the <ref refid="namespace_leap" kindref="compound">Leap</ref> Motion <ref refid="class_leap_1_1_controller" kindref="compound">Controller</ref>. The x- and z-axes lie in the horizontal plane, with the x-axis running parallel to the long edge of the device. The y-axis is vertical, with positive values increasing upwards (in contrast to the downward orientation of most computer graphics coordinate systems). The z-axis has positive values increasing away from the computer screen. <simplesect kind="since"><para>1.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6990">
        <label>Leap.Vector</label>
        <link refid="struct_leap_1_1_vector"/>
        <childnode refid="6991" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6991">
        <label>IEquatable&lt; Vector &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6992">
        <label>Leap.Vector</label>
        <link refid="struct_leap_1_1_vector"/>
        <childnode refid="6993" relation="public-inheritance">
        </childnode>
        <childnode refid="6992" relation="usage">
          <edgelabel>Down</edgelabel>
          <edgelabel>XAxis</edgelabel>
          <edgelabel>YAxis</edgelabel>
          <edgelabel>Backward</edgelabel>
          <edgelabel>ZAxis</edgelabel>
          <edgelabel>Forward</edgelabel>
          <edgelabel>Left</edgelabel>
          <edgelabel>Right</edgelabel>
          <edgelabel>Zero</edgelabel>
          <edgelabel>Up</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="6993">
        <label>IEquatable&lt; Vector &gt;</label>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" line="37" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs" bodystart="37" bodyend="386"/>
    <listofallmembers>
      <member refid="struct_leap_1_1_vector_1a5833741990af0c182a41c75053d628b7" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>AngleTo</name></member>
      <member refid="struct_leap_1_1_vector_1ad8dd1ac8e87611c590c9dcc58f8fdf8c" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Backward</name></member>
      <member refid="struct_leap_1_1_vector_1acdd326aa3bd6ac8eaf4d0c321db129cb" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Cross</name></member>
      <member refid="struct_leap_1_1_vector_1a9a192946523c91fc5aec3541cc09b762" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>DistanceTo</name></member>
      <member refid="struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Dot</name></member>
      <member refid="struct_leap_1_1_vector_1a5f080cc88e908cd5d4c3e593767cdb17" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Down</name></member>
      <member refid="struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Equals</name></member>
      <member refid="struct_leap_1_1_vector_1a024719e566f2af651da6494e0f5cd86c" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Equals</name></member>
      <member refid="struct_leap_1_1_vector_1a2ec88fe91f8086e18e78ee2dcc078525" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Forward</name></member>
      <member refid="struct_leap_1_1_vector_1aa95778cb029f0b2b59e7077eb1c3c980" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>GetHashCode</name></member>
      <member refid="struct_leap_1_1_vector_1aae57324c0e393fc8f8b799092964efbb" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>IsValid</name></member>
      <member refid="struct_leap_1_1_vector_1a62b9bbd54a4b89f695a106f42fcff881" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Left</name></member>
      <member refid="struct_leap_1_1_vector_1a5732837cc5c84d689d44d9f3836fe639" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Lerp</name></member>
      <member refid="struct_leap_1_1_vector_1afd51a6a7664efda2e5dde7a5e6a5313a" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Magnitude</name></member>
      <member refid="struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>MagnitudeSquared</name></member>
      <member refid="struct_leap_1_1_vector_1a14c14f9559420ad1f1a9e1b8884859c4" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Normalized</name></member>
      <member refid="struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Ones</name></member>
      <member refid="struct_leap_1_1_vector_1a6c834842a05008442e86353a7209d17b" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>operator !=</name></member>
      <member refid="struct_leap_1_1_vector_1a9189471d23ea61609806cbee7b1808bf" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>operator *</name></member>
      <member refid="struct_leap_1_1_vector_1a7a1839d6ea30d92eb3a7591b73c41a63" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>operator *</name></member>
      <member refid="struct_leap_1_1_vector_1ac35b7560d4ac5acb9217120aa6281f41" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>operator -</name></member>
      <member refid="struct_leap_1_1_vector_1ab08ec541871ec6fefb7f66331fdb6f0d" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>operator -</name></member>
      <member refid="struct_leap_1_1_vector_1af056d6d462839c1e5d3d9fa7d0507f11" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>operator+</name></member>
      <member refid="struct_leap_1_1_vector_1a8a707fa512d65682a773f87308c6d0e9" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>operator/</name></member>
      <member refid="struct_leap_1_1_vector_1ae3811a09e999d99576d40d361d5871fd" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>operator==</name></member>
      <member refid="struct_leap_1_1_vector_1acc5105f55edfdc7a3d5cc6cd6cb8dc8f" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Pitch</name></member>
      <member refid="struct_leap_1_1_vector_1aa2cefa3d6f93e552fcd95621e82da158" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Right</name></member>
      <member refid="struct_leap_1_1_vector_1afa775e6c104537383493e027f6a462f7" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Roll</name></member>
      <member refid="struct_leap_1_1_vector_1af92a9eb06277dd8eebbf3e1cf61360ca" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>this[uint index]</name></member>
      <member refid="struct_leap_1_1_vector_1ac5cd8263402ee3da54d342c65bde2511" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>ToFloatArray</name></member>
      <member refid="struct_leap_1_1_vector_1a0da414710f7b4d8bab10ed4685750599" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>ToString</name></member>
      <member refid="struct_leap_1_1_vector_1ad90a5266422b507db81c857829b9a915" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Up</name></member>
      <member refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Vector</name></member>
      <member refid="struct_leap_1_1_vector_1a1058e5cc80c4eb8f521f485269f7b614" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Vector</name></member>
      <member refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>x</name></member>
      <member refid="struct_leap_1_1_vector_1ad62a202318bf591b431928859449b19c" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>XAxis</name></member>
      <member refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>y</name></member>
      <member refid="struct_leap_1_1_vector_1ac6f5feaf332862e1ebc0d5b219e55eaa" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Yaw</name></member>
      <member refid="struct_leap_1_1_vector_1abf07de0f419b3de5776e046d35c0843e" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>YAxis</name></member>
      <member refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>z</name></member>
      <member refid="struct_leap_1_1_vector_1a2b2f1a3a9334e812e832e3b1b6cd4384" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>ZAxis</name></member>
      <member refid="struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b" prot="public" virt="non-virtual"><scope>Leap::Vector</scope><name>Zero</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
