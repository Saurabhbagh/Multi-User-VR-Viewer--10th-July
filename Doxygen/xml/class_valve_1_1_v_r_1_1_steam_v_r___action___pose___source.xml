<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Pose_Source</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_In_Source</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___pose" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_Pose</basecompoundref>
    <derivedcompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_Skeleton_Source</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a84921c535f9dbe0abdab0b905b383305" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f" kindref="member">ETrackingUniverseOrigin</ref></type>
        <definition>ETrackingUniverseOrigin Valve.VR.SteamVR_Action_Pose_Source.universeOrigin</definition>
        <argsstring></argsstring>
        <name>universeOrigin</name>
        <initializer>= <ref refid="namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12fa593c08eda033db867fc77728927d5554" kindref="member">ETrackingUniverseOrigin.TrackingUniverseRawAndUncalibrated</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="410" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ac19b14e1ae06d27a39a614cfa444bea8" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Pose_Source.predictedSecondsFromNow</definition>
        <argsstring></argsstring>
        <name>predictedSecondsFromNow</name>
        <initializer>= 0.011f</initializer>
        <briefdescription>
<para>The amount of time in the future (or past!) the input system will predict poses for. Default is one frame forward (at 90hz) to account for render time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="415" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ac24988086bc9a48b2cd2ba3189795588" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Pose_Source.changeTolerance</definition>
        <argsstring></argsstring>
        <name>changeTolerance</name>
        <initializer>= Mathf.Epsilon</initializer>
        <briefdescription>
<para>The distance the pose needs to move/rotate before a change is detected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="418" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="418" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a6797fa10a86039e240ed5e95ba2f739f" prot="protected" static="yes" mutable="no">
        <type>uint</type>
        <definition>uint Valve.VR.SteamVR_Action_Pose_Source.poseActionData_size</definition>
        <argsstring></argsstring>
        <name>poseActionData_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="412" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="412" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="event">
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a18908de6ad641fca30dff7bdf36c44ad" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose_1a3861a4b4b8ce246db2cc77e632a7f999" kindref="member">SteamVR_Action_Pose.ActiveChangeHandler</ref></type>
        <definition>SteamVR_Action_Pose.ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source.onActiveChange</definition>
        <argsstring></argsstring>
        <name>onActiveChange</name>
        <briefdescription>
<para>Event fires when the active state (ActionSet active and binding active) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="421" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a864a6c1c7588f9cb64cf927d0abde8d3" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose_1a3861a4b4b8ce246db2cc77e632a7f999" kindref="member">SteamVR_Action_Pose.ActiveChangeHandler</ref></type>
        <definition>SteamVR_Action_Pose.ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source.onActiveBindingChange</definition>
        <argsstring></argsstring>
        <name>onActiveBindingChange</name>
        <briefdescription>
<para>Event fires when the active state of the binding changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="424" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a471cf17f964e7592d160a27b85cf5102" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose_1ac9415e6ad971e70311f59ff1bfb4ea76" kindref="member">SteamVR_Action_Pose.ChangeHandler</ref></type>
        <definition>SteamVR_Action_Pose.ChangeHandler Valve.VR.SteamVR_Action_Pose_Source.onChange</definition>
        <argsstring></argsstring>
        <name>onChange</name>
        <briefdescription>
<para>Event fires when the orientation of the pose changes more than the changeTolerance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="427" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a0850a14fdf071a66d2c8009254d22855" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose_1a243e7046a430c572e5be3d1b6b322b6d" kindref="member">SteamVR_Action_Pose.UpdateHandler</ref></type>
        <definition>SteamVR_Action_Pose.UpdateHandler Valve.VR.SteamVR_Action_Pose_Source.onUpdate</definition>
        <argsstring></argsstring>
        <name>onUpdate</name>
        <briefdescription>
<para>Event fires when the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="430" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a609ff1f6d20188ba1a0866e7f8ec8735" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose_1a52e352705659c14685cf8a88ef4bafd6" kindref="member">SteamVR_Action_Pose.TrackingChangeHandler</ref></type>
        <definition>SteamVR_Action_Pose.TrackingChangeHandler Valve.VR.SteamVR_Action_Pose_Source.onTrackingChanged</definition>
        <argsstring></argsstring>
        <name>onTrackingChanged</name>
        <briefdescription>
<para>Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="433" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a0fbc1433f2809fe24d2581f5f326a6e2" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose_1a742270a6bddfea2afd7f535378ae7830" kindref="member">SteamVR_Action_Pose.ValidPoseChangeHandler</ref></type>
        <definition>SteamVR_Action_Pose.ValidPoseChangeHandler Valve.VR.SteamVR_Action_Pose_Source.onValidPoseChanged</definition>
        <argsstring></argsstring>
        <name>onValidPoseChanged</name>
        <briefdescription>
<para>Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="436" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ae279d76fd9d0b7ebd1999366897cfc6e" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose_1a40c6d9862680e8c99781b3a109d94b82" kindref="member">SteamVR_Action_Pose.DeviceConnectedChangeHandler</ref></type>
        <definition>SteamVR_Action_Pose.DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Pose_Source.onDeviceConnectedChanged</definition>
        <argsstring></argsstring>
        <name>onDeviceConnectedChanged</name>
        <briefdescription>
<para>Event fires when the device bound to this action is connected or disconnected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="439" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="439" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1abd28927b24762c29fed7b9debcf9bbc4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Pose_Source.changed</definition>
        <argsstring></argsstring>
        <name>changed</name>
        <briefdescription>
<para>True when the orientation of the pose has changhed more than changeTolerance in the last update. Note: Will only return true if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="444" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="444" bodyend="444"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a4761f3b3c89f794376359d900901189e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Pose_Source.lastChanged</definition>
        <argsstring></argsstring>
        <name>lastChanged</name>
        <briefdescription>
<para>The value of the action&apos;s &apos;changed&apos; during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="447" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="447" bodyend="447"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1afd8401aa4cc0b923479e13617bc28159" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override ulong</type>
        <definition>override ulong Valve.VR.SteamVR_Action_Pose_Source.activeOrigin</definition>
        <argsstring></argsstring>
        <name>activeOrigin</name>
        <briefdescription>
<para>The handle to the origin of the component that was used to update this pose </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="450" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="451" bodyend="459"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a0e28c7700a0694b08cf85a4e68ed41e4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override ulong</type>
        <definition>override ulong Valve.VR.SteamVR_Action_Pose_Source.lastActiveOrigin</definition>
        <argsstring></argsstring>
        <name>lastActiveOrigin</name>
        <briefdescription>
<para>The handle to the origin of the component that was used to update the value for this action (for the previous update) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="462" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="462" bodyend="462"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a92f914b4e3978b25338835f695a437e0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Pose_Source.active</definition>
        <argsstring></argsstring>
        <name>active</name>
        <briefdescription>
<para>True if this action is bound and the ActionSet is active </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="465" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="465" bodyend="465"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a4588c87bed6643e492f17d8b0cbb310e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Pose_Source.activeBinding</definition>
        <argsstring></argsstring>
        <name>activeBinding</name>
        <briefdescription>
<para>True if the action is bound </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="468" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="468" bodyend="468"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a120e4ed1bbaf248457fcaade042ce96d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Pose_Source.lastActive</definition>
        <argsstring></argsstring>
        <name>lastActive</name>
        <briefdescription>
<para>If the action was active (ActionSet active and binding active) during the last update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="472" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="472" bodyend="472"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a3b73993862a63aafd1fceba531af6300" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Pose_Source.lastActiveBinding</definition>
        <argsstring></argsstring>
        <name>lastActiveBinding</name>
        <briefdescription>
<para>If the action&apos;s binding was active during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="475" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="475" bodyend="475"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ac34e76b909d5bae5549ef1254aee7334" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
        <definition>ETrackingResult Valve.VR.SteamVR_Action_Pose_Source.trackingState</definition>
        <argsstring></argsstring>
        <name>trackingState</name>
        <briefdescription>
<para>The state of the tracking system that is used to create pose data (position, rotation, etc) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="478" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="478" bodyend="478"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aaceb2ef18d1322c219d3d29c2a74300f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
        <definition>ETrackingResult Valve.VR.SteamVR_Action_Pose_Source.lastTrackingState</definition>
        <argsstring></argsstring>
        <name>lastTrackingState</name>
        <briefdescription>
<para>The tracking state for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="481" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="481" bodyend="481"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aba5be433facceba27f69a1833ab9b2c5" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Source.poseIsValid</definition>
        <argsstring></argsstring>
        <name>poseIsValid</name>
        <briefdescription>
<para>True if the pose retrieved for this action and input source is valid (good data from the tracking source) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="484" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="484" bodyend="484"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a48916d9879663f513d2eaa4328aafc15" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Source.lastPoseIsValid</definition>
        <argsstring></argsstring>
        <name>lastPoseIsValid</name>
        <briefdescription>
<para>True if the pose was valid during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="487" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="487" bodyend="487"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a09c882d2b6f8a42326f275afcaa2f763" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Source.deviceIsConnected</definition>
        <argsstring></argsstring>
        <name>deviceIsConnected</name>
        <briefdescription>
<para>True if the device bound to this action and input source is connected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="490" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="490" bodyend="490"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aeb0b6070720ed154363e6695c1f522e5" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Source.lastDeviceIsConnected</definition>
        <argsstring></argsstring>
        <name>lastDeviceIsConnected</name>
        <briefdescription>
<para>True if the device bound to this action was connected during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="493" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="493" bodyend="493"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1adf0a89fb5f105a09f2e59151bd14e107" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.localPosition</definition>
        <argsstring></argsstring>
        <name>localPosition</name>
        <briefdescription>
<para>The local position of this action relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="497" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="497" bodyend="497"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a2e2f84a6156ae78ba84497a3e4ef69ab" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Pose_Source.localRotation</definition>
        <argsstring></argsstring>
        <name>localRotation</name>
        <briefdescription>
<para>The local rotation of this action relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="500" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="500" bodyend="500"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a30356d9d2fc9e4e03544406a493b36d8" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.lastLocalPosition</definition>
        <argsstring></argsstring>
        <name>lastLocalPosition</name>
        <briefdescription>
<para>The local position for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="503" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="503" bodyend="503"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a28136f6855113693d54c7ffc3f23a2e7" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Pose_Source.lastLocalRotation</definition>
        <argsstring></argsstring>
        <name>lastLocalRotation</name>
        <briefdescription>
<para>The local rotation for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="506" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="506" bodyend="506"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a52549ae6b1ddc04aa27f439314440c5a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.velocity</definition>
        <argsstring></argsstring>
        <name>velocity</name>
        <briefdescription>
<para>The local velocity of this pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="509" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="509" bodyend="509"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a9924e517cd19760a503d0e6e46eec613" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.lastVelocity</definition>
        <argsstring></argsstring>
        <name>lastVelocity</name>
        <briefdescription>
<para>The velocity for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="512" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="512" bodyend="512"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aedacaebd65a9d294c1a54543b3115b5e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.angularVelocity</definition>
        <argsstring></argsstring>
        <name>angularVelocity</name>
        <briefdescription>
<para>The local angular velocity of this pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="515" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="515" bodyend="515"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aad9297276978e92547f6631931ffaa54" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.lastAngularVelocity</definition>
        <argsstring></argsstring>
        <name>lastAngularVelocity</name>
        <briefdescription>
<para>The angular velocity for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="518" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="518" bodyend="518"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a78757cd4edeb5f2e67a57cdb6992574c" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_input_pose_action_data__t" kindref="compound">InputPoseActionData_t</ref></type>
        <definition>InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source.poseActionData</definition>
        <argsstring></argsstring>
        <name>poseActionData</name>
        <initializer>= new <ref refid="struct_valve_1_1_v_r_1_1_input_pose_action_data__t" kindref="compound">InputPoseActionData_t</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="521" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a4b4ba298edd6befd45dd711517820e81" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_input_pose_action_data__t" kindref="compound">InputPoseActionData_t</ref></type>
        <definition>InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source.lastPoseActionData</definition>
        <argsstring></argsstring>
        <name>lastPoseActionData</name>
        <initializer>= new <ref refid="struct_valve_1_1_v_r_1_1_input_pose_action_data__t" kindref="compound">InputPoseActionData_t</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="523" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ac5b188566e843e649476bad50e8d2185" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_input_pose_action_data__t" kindref="compound">InputPoseActionData_t</ref></type>
        <definition>InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source.tempPoseActionData</definition>
        <argsstring></argsstring>
        <name>tempPoseActionData</name>
        <initializer>= new <ref refid="struct_valve_1_1_v_r_1_1_input_pose_action_data__t" kindref="compound">InputPoseActionData_t</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="525" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ae3e16be44c94dc655964dcad0ee73763" prot="protected" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
        <definition>SteamVR_Action_Pose Valve.VR.SteamVR_Action_Pose_Source.poseAction</definition>
        <argsstring></argsstring>
        <name>poseAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="528" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="528" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a2e4aacdbfb9d1a2c5edffcd42e2c3c0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Pose_Source.Preinitialize</definition>
        <argsstring>(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource)</argsstring>
        <name>Preinitialize</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa2bec7f32b37595de01f1456a3fa5bfe">Preinitialize</reimplements>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source_1a8341927740ab2699476e66d08d3124d3">Preinitialize</reimplementedby>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
          <declname>wrappingAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>forInputSource</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Sets up the internals of the action source before <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="533" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="533" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ab25a681f8310683a3c6695973041acc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Pose_Source.Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a15f00851d0666c0f9f1836bf481f4f70">Initialize</reimplements>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source_1af437a90257ecb494eb2c0b77747fe9d4">Initialize</reimplementedby>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Initializes the handle for the inputSource, the pose action data size, and any other related <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="543" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="543" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a2b299c57d8709519f9dfb91da28bde4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Pose_Source.UpdateValue</definition>
        <argsstring>()</argsstring>
        <name>UpdateValue</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a800b521715c6cbfe32e9b0b6db7e0a16">UpdateValue</reimplements>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source_1ab6af87a8b749735903ba744c168f7baa">UpdateValue</reimplementedby>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Updates the data for this action and this input source. Sends related events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="554" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="554" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a0254cddea71deac6f822536c4232a452" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Action_Pose_Source.UpdateValue</definition>
        <argsstring>(bool skipStateAndEventUpdates)</argsstring>
        <name>UpdateValue</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source_1a1b70de6042eb094c05dcd7f905ff3abd">UpdateValue</reimplementedby>
        <param>
          <type>bool</type>
          <declname>skipStateAndEventUpdates</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Updates the data for this action and this input source. Sends related events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="562" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="562" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a303a6f2c6b8f893f0a7776d5edcbd632" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Source.GetVelocitiesAtTimeOffset</definition>
        <argsstring>(float secondsFromNow, out Vector3 velocityAtTime, out Vector3 angularVelocityAtTime)</argsstring>
        <name>GetVelocitiesAtTimeOffset</name>
        <param>
          <type>float</type>
          <declname>secondsFromNow</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>velocityAtTime</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>angularVelocityAtTime</declname>
        </param>
        <briefdescription>
<para><ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsFromNow</parametername>
</parameternamelist>
<parameterdescription>
<para>The time offset in the future (estimated) or in the past (previously recorded) you want to get data from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if we successfully returned a pose</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="615" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="615" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1acac4de6fa4feee04ba8050e11716e97a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Source.GetPoseAtTimeOffset</definition>
        <argsstring>(float secondsFromNow, out Vector3 positionAtTime, out Quaternion rotationAtTime, out Vector3 velocityAtTime, out Vector3 angularVelocityAtTime)</argsstring>
        <name>GetPoseAtTimeOffset</name>
        <param>
          <type>float</type>
          <declname>secondsFromNow</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>positionAtTime</declname>
        </param>
        <param>
          <type>out Quaternion</type>
          <declname>rotationAtTime</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>velocityAtTime</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>angularVelocityAtTime</declname>
        </param>
        <briefdescription>
<para><ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsFromNow</parametername>
</parameternamelist>
<parameterdescription>
<para>The time offset in the future (estimated) or in the past (previously recorded) you want to get data from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if we successfully returned a pose</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="638" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="638" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ae38259c05b8d3c9562e025d9efa18002" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Pose_Source.UpdateTransform</definition>
        <argsstring>(Transform transformToUpdate)</argsstring>
        <name>UpdateTransform</name>
        <param>
          <type>Transform</type>
          <declname>transformToUpdate</declname>
        </param>
        <briefdescription>
<para>Update a transform&apos;s local position and local roation to match the pose. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transformToUpdate</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of the object to be updated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="664" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="664" bodyend="668"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aa488ac2a5021efb184e4b335188944e4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Pose_Source.SetCacheVariables</definition>
        <argsstring>()</argsstring>
        <name>SetCacheVariables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="587" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="587" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1afc0592915bfe736886dad8e8b97cbd7f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Source.GetChanged</definition>
        <argsstring>()</argsstring>
        <name>GetChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="596" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="596" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a3a0883dd58cb29e7cf549199e858c69f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Action_Pose_Source.CheckAndSendEvents</definition>
        <argsstring>()</argsstring>
        <name>CheckAndSendEvents</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source_1a28767b72b6df82708843c477b3740ccb">CheckAndSendEvents</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="670" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="670" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ab1ead535aac907d57cc7e064f34a6ea0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.GetUnityCoordinateVelocity</definition>
        <argsstring>(HmdVector3_t vector)</argsstring>
        <name>GetUnityCoordinateVelocity</name>
        <param>
          <type><ref refid="struct_valve_1_1_v_r_1_1_hmd_vector3__t" kindref="compound">HmdVector3_t</ref></type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="694" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="694" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a836f6fa0ef1c1c8d8bc4334607643f1b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.GetUnityCoordinateAngularVelocity</definition>
        <argsstring>(HmdVector3_t vector)</argsstring>
        <name>GetUnityCoordinateAngularVelocity</name>
        <param>
          <type><ref refid="struct_valve_1_1_v_r_1_1_hmd_vector3__t" kindref="compound">HmdVector3_t</ref></type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="699" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="699" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a368631c6e4ff2b5fb92ef7903e5ef992" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.GetUnityCoordinateVelocity</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>GetUnityCoordinateVelocity</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="704" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="704" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a154bbe58d5e9307ffe84b0bf68c3d79a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Source.GetUnityCoordinateAngularVelocity</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>GetUnityCoordinateAngularVelocity</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="713" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="713" bodyend="720"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4811">
        <label>Valve.VR.SteamVR_Action_Skeleton_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source"/>
        <childnode refid="4805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4808">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4809">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4807">
        <label>SteamVR_Action_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source"/>
        <childnode refid="4808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4805">
        <label>Valve.VR.SteamVR_Action_Pose_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source"/>
        <childnode refid="4806" relation="public-inheritance">
        </childnode>
        <childnode refid="4810" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4810">
        <label>ISteamVR_Action_Pose</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___pose"/>
        <childnode refid="4809" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4806">
        <label>SteamVR_Action_In_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source"/>
        <childnode refid="4807" relation="public-inheritance">
        </childnode>
        <childnode refid="4809" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4821">
        <label>Valve.VR.InputOriginInfo_t</label>
        <link refid="struct_valve_1_1_v_r_1_1_input_origin_info__t"/>
      </node>
      <node id="4815">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4827">
        <label>Valve.VR.SteamVR_Action_Pose</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose"/>
        <childnode refid="4828" relation="public-inheritance">
        </childnode>
        <childnode refid="4829" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4820">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4815" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4828">
        <label>SteamVR_Action_Pose_Base&lt; SteamVR_Action_Pose_Source_Map&lt; SteamVR_Action_Pose_Source &gt;, SteamVR_Action_Pose_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
      </node>
      <node id="4829">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4818">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="4815" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4824">
        <label>Valve.VR.TrackedDevicePose_t</label>
        <link refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t"/>
        <childnode refid="4825" relation="usage">
          <edgelabel>vAngularVelocity</edgelabel>
          <edgelabel>vVelocity</edgelabel>
        </childnode>
        <childnode refid="4826" relation="usage">
          <edgelabel>mDeviceToAbsoluteTracking</edgelabel>
        </childnode>
      </node>
      <node id="4814">
        <label>SteamVR_Action_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source"/>
        <childnode refid="4815" relation="public-inheritance">
        </childnode>
        <childnode refid="4816" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="4812">
        <label>Valve.VR.SteamVR_Action_Pose_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source"/>
        <childnode refid="4813" relation="public-inheritance">
        </childnode>
        <childnode refid="4822" relation="public-inheritance">
        </childnode>
        <childnode refid="4823" relation="usage">
          <edgelabel>lastPoseActionData</edgelabel>
          <edgelabel>tempPoseActionData</edgelabel>
          <edgelabel>poseActionData</edgelabel>
        </childnode>
        <childnode refid="4827" relation="usage">
          <edgelabel>poseAction</edgelabel>
        </childnode>
      </node>
      <node id="4825">
        <label>Valve.VR.HmdVector3_t</label>
        <link refid="struct_valve_1_1_v_r_1_1_hmd_vector3__t"/>
      </node>
      <node id="4816">
        <label>Valve.VR.SteamVR_Action&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action"/>
        <childnode refid="4817" relation="public-inheritance">
        </childnode>
        <childnode refid="4818" relation="public-inheritance">
        </childnode>
        <childnode refid="4819" relation="public-inheritance">
        </childnode>
        <childnode refid="4818" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4823">
        <label>Valve.VR.InputPoseActionData_t</label>
        <link refid="struct_valve_1_1_v_r_1_1_input_pose_action_data__t"/>
        <childnode refid="4824" relation="usage">
          <edgelabel>pose</edgelabel>
        </childnode>
      </node>
      <node id="4826">
        <label>Valve.VR.HmdMatrix34_t</label>
        <link refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t"/>
      </node>
      <node id="4822">
        <label>ISteamVR_Action_Pose</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___pose"/>
        <childnode refid="4820" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4817">
        <label>IEquatable&lt; SteamVR_Action &gt;</label>
      </node>
      <node id="4819">
        <label>SteamVR_Action</label>
      </node>
      <node id="4813">
        <label>SteamVR_Action_In_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source"/>
        <childnode refid="4814" relation="public-inheritance">
        </childnode>
        <childnode refid="4820" relation="public-inheritance">
        </childnode>
        <childnode refid="4821" relation="usage">
          <edgelabel>lastInputOriginInfo</edgelabel>
          <edgelabel>inputOriginInfo</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="409" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="408" bodyend="721"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa38bfb4ea2779a73aa3285f861e2462e" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa26748aead4336e028834777336636bb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>actionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a92f914b4e3978b25338835f695a437e0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>active</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a4588c87bed6643e492f17d8b0cbb310e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1acc6d38cc8824491cc45e809fa92922dc" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>activeDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1afd8401aa4cc0b923479e13617bc28159" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>activeOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aedacaebd65a9d294c1a54543b3115b5e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>angularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1abd28927b24762c29fed7b9debcf9bbc4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>changed</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1abc08aab34cfed3310ff9dd315c93faaa" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>changedTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ac24988086bc9a48b2cd2ba3189795588" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>changeTolerance</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a3a0883dd58cb29e7cf549199e858c69f" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>CheckAndSendEvents</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a09c882d2b6f8a42326f275afcaa2f763" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>deviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a67903c42bb717287d4a1a4a0f972537a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1acc5b9a83a017ceda67f3454bb6cefe25" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1afc0592915bfe736886dad8e8b97cbd7f" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a8bd382c6351dc8d36b6ee63703e2c368" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetLocalizedOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a3144a785d52f3a15cbdb72aa571c852b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetLocalizedOriginPart</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1acac4de6fa4feee04ba8050e11716e97a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetPoseAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a836f6fa0ef1c1c8d8bc4334607643f1b" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetUnityCoordinateAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a154bbe58d5e9307ffe84b0bf68c3d79a" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetUnityCoordinateAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ab1ead535aac907d57cc7e064f34a6ea0" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetUnityCoordinateVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a368631c6e4ff2b5fb92ef7903e5ef992" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetUnityCoordinateVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a303a6f2c6b8f893f0a7776d5edcbd632" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>GetVelocitiesAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a3b11b02fd911ae14ceac84478c5fe986" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ab25a681f8310683a3c6695973041acc0" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1aa4f8d3bdc1f308d2687e52f56b4c4dfe" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>inputOriginInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a192b33ca9612e42e4180374bdfba5c14" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>inputOriginInfo_size</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a8610e78de0430e918d74119fe0913697" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>inputSource</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a427286fbd3c70da9333dc3f513e30e1c" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>inputSourceHandle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a385091591417e7c45289f89365c7a43e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>isUpdating</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a120e4ed1bbaf248457fcaade042ce96d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a3b73993862a63aafd1fceba531af6300" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a0e28c7700a0694b08cf85a4e68ed41e4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastActiveOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aad9297276978e92547f6631931ffaa54" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a4761f3b3c89f794376359d900901189e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aeb0b6070720ed154363e6695c1f522e5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a307619ed4e0665f3996d46e3eab92c7c" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastInputOriginInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a30356d9d2fc9e4e03544406a493b36d8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a28136f6855113693d54c7ffc3f23a2e7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1abf8faf86eba30e693269881582e81875" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastOriginGetFrame</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a4b4ba298edd6befd45dd711517820e81" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastPoseActionData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a48916d9879663f513d2eaa4328aafc15" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aaceb2ef18d1322c219d3d29c2a74300f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastTrackingState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a9924e517cd19760a503d0e6e46eec613" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>lastVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a7c08a0c1332f4168e4b0e628772ac4fe" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>localizedOriginName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1adf0a89fb5f105a09f2e59151bd14e107" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>localPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a2e2f84a6156ae78ba84497a3e4ef69ab" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>localRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a864a6c1c7588f9cb64cf927d0abde8d3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>onActiveBindingChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a18908de6ad641fca30dff7bdf36c44ad" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>onActiveChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a471cf17f964e7592d160a27b85cf5102" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>onChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ae279d76fd9d0b7ebd1999366897cfc6e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>onDeviceConnectedChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a609ff1f6d20188ba1a0866e7f8ec8735" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>onTrackingChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a0850a14fdf071a66d2c8009254d22855" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>onUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a0fbc1433f2809fe24d2581f5f326a6e2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>onValidPoseChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ae3e16be44c94dc655964dcad0ee73763" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>poseAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a78757cd4edeb5f2e67a57cdb6992574c" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>poseActionData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a6797fa10a86039e240ed5e95ba2f739f" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>poseActionData_size</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aba5be433facceba27f69a1833ab9b2c5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>poseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ac19b14e1ae06d27a39a614cfa444bea8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>predictedSecondsFromNow</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a2e4aacdbfb9d1a2c5edffcd42e2c3c0e" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>Preinitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1af15b7b53084c8385e25203b4d8ccc986" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>renderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aafaed73b850687ab90ecbb2398df57e2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>setActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1aa488ac2a5021efb184e4b335188944e4" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>SetCacheVariables</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1afe35f80548857d2da588f8a0c036e3e3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>SteamVR_Action_Source</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ac5b188566e843e649476bad50e8d2185" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>tempPoseActionData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1ac20f6924626847c3957ad5b9092e5243" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>trackedDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ac34e76b909d5bae5549ef1254aee7334" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>trackingState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a84921c535f9dbe0abdab0b905b383305" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>universeOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a2f6dd3258b69ad2d7907dd35460ed4d9" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>UpdateOriginTrackedDeviceInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source_1a2d300fd44241f60b98cd73088d120c24" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>updateTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1ae38259c05b8d3c9562e025d9efa18002" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>UpdateTransform</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a2b299c57d8709519f9dfb91da28bde4e" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>UpdateValue</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a0254cddea71deac6f822536c4232a452" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>UpdateValue</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source_1a52549ae6b1ddc04aa27f439314440c5a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Source</scope><name>velocity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
