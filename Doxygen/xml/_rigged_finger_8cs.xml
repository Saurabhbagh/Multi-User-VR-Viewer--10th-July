<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_rigged_finger_8cs" kind="file" language="C#">
    <compoundname>RiggedFinger.cs</compoundname>
    <innerclass refid="class_leap_1_1_unity_1_1_rigged_finger" prot="public">Leap::Unity::RiggedFinger</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity">Leap::Unity</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity" kindref="compound">Leap.Unity</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_leap_1_1_unity_1_1_rigged_finger" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref><sp/>:<sp/><ref refid="class_leap_1_1_unity_1_1_finger_model" kindref="compound">FingerModel</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>[HideInInspector]</highlight></codeline>
<codeline lineno="30" refid="class_leap_1_1_unity_1_1_rigged_finger_1a50f0aac12192993f685d07c551e40151" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1a50f0aac12192993f685d07c551e40151" kindref="member">deformPosition</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>[HideInInspector]</highlight></codeline>
<codeline lineno="33" refid="class_leap_1_1_unity_1_1_rigged_finger_1af154c9566ec146520ae5ec79b949c0d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1af154c9566ec146520ae5ec79b949c0d0" kindref="member">scaleLastFingerBone</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_leap_1_1_unity_1_1_rigged_finger_1a43e360635499f70bc13722e363599c91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1a43e360635499f70bc13722e363599c91" kindref="member">modelFingerPointing</ref><sp/>=<sp/>Vector3.forward;</highlight></codeline>
<codeline lineno="36" refid="class_leap_1_1_unity_1_1_rigged_finger_1ab8d09b7fb7d2390e19d7f44505dd8dec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1ab8d09b7fb7d2390e19d7f44505dd8dec" kindref="member">modelPalmFacing</ref><sp/>=<sp/>-Vector3.up;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_leap_1_1_unity_1_1_rigged_finger_1a559b350e305e18fc0c8cdcbc652a4ec7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Quaternion<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1a559b350e305e18fc0c8cdcbc652a4ec7" kindref="member">Reorientation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Quaternion.Inverse(Quaternion.LookRotation(<ref refid="class_leap_1_1_unity_1_1_rigged_finger_1a43e360635499f70bc13722e363599c91" kindref="member">modelFingerPointing</ref>,<sp/>-<ref refid="class_leap_1_1_unity_1_1_rigged_finger_1ab8d09b7fb7d2390e19d7f44505dd8dec" kindref="member">modelPalmFacing</ref>));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>s_standardFingertipLengths<sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger" kindref="compound">RiggedFinger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>standard<sp/>fingertip<sp/>lengths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s_standardFingertipLengths<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[5];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>testHand<sp/>=<sp/>TestHandFactory.MakeTestHand(isLeft:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unitType:<sp/>TestHandFactory.UnitType.UnityUnits);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>fingertipBone<sp/>=<sp/>testHand.Fingers[i].<ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[3];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_standardFingertipLengths[i]<sp/>=<sp/>fingertipBone.Length;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_leap_1_1_unity_1_1_rigged_finger_1affc59ee8e673ae2c2cf8c4222749f602" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1affc59ee8e673ae2c2cf8c4222749f602" kindref="member">UpdateFinger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>.Length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[i]<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[i].rotation<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a1d84c11cb9e8a1096225718bcd759ceb" kindref="member">GetBoneRotation</ref>(i)<sp/>*<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1a559b350e305e18fc0c8cdcbc652a4ec7" kindref="member">Reorientation</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_rigged_finger_1a50f0aac12192993f685d07c551e40151" kindref="member">deformPosition</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>boneRootPos<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1acc14a2149a5a1c8d7277f64db41af544" kindref="member">GetJointPosition</ref>(i);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[i].position<sp/>=<sp/>boneRootPos;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>3<sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1af154c9566ec146520ae5ec79b949c0d0" kindref="member">scaleLastFingerBone</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>fingertip<sp/>base<sp/>bone<sp/>scale<sp/>to<sp/>match<sp/>the<sp/>bone<sp/>length<sp/>to<sp/>the<sp/>fingertip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>only<sp/>scale<sp/>correctly<sp/>if<sp/>the<sp/>model<sp/>was<sp/>constructed<sp/>to<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>standard<sp/>&quot;test&quot;<sp/>edit-time<sp/>hand<sp/>model<sp/>from<sp/>the<sp/>TestHandFactory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>boneTipPos<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1acc14a2149a5a1c8d7277f64db41af544" kindref="member">GetJointPosition</ref>(i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>boneVec<sp/>=<sp/>boneTipPos<sp/>-<sp/>boneRootPos;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>boneLen<sp/>=<sp/>boneVec.magnitude;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>standardLen<sp/>=<sp/>s_standardFingertipLengths[(int)this.<ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref>];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>newScale<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[i].transform.localScale;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>lengthComponentIdx<sp/>=<sp/>getLargestComponentIndex(<ref refid="class_leap_1_1_unity_1_1_rigged_finger_1a43e360635499f70bc13722e363599c91" kindref="member">modelFingerPointing</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newScale[lengthComponentIdx]<sp/>=<sp/>boneLen<sp/>/<sp/>standardLen;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[i].transform.localScale<sp/>=<sp/>newScale;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLargestComponentIndex(Vector3<sp/>pointingVector)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>largestValue<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>largestIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>testValue<sp/>=<sp/>pointingVector[i];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mathf.Abs(testValue)<sp/>&gt;<sp/>largestValue)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largestIdx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largestValue<sp/>=<sp/>Mathf.Abs(testValue);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>largestIdx;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_leap_1_1_unity_1_1_rigged_finger_1aaea2955085d8c4ec4d97a709ee8732e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1aaea2955085d8c4ec4d97a709ee8732e7" kindref="member">SetupRiggedFinger</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useMetaCarpals)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>findBoneTransforms(useMetaCarpals);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_rigged_finger_1a43e360635499f70bc13722e363599c91" kindref="member">modelFingerPointing</ref><sp/>=<sp/>calulateModelFingerPointing();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>findBoneTransforms(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useMetaCarpals)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!useMetaCarpals<sp/>||<sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a21c5f56f4dd6fba09212d1738811eecb" kindref="member">fingerType</ref><sp/>==<sp/><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_THUMB)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[1]<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[2]<sp/>=<sp/>transform.GetChild(0).transform;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[3]<sp/>=<sp/>transform.GetChild(0).transform.GetChild(0).transform;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[0]<sp/>=<sp/>transform;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[1]<sp/>=<sp/>transform.GetChild(0).transform;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[2]<sp/>=<sp/>transform.GetChild(0).transform.GetChild(0).transform;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_model_1a9dc2230af982027edd82f9952a1267a6" kindref="member">bones</ref>[3]<sp/>=<sp/>transform.GetChild(0).transform.GetChild(0).transform.GetChild(0).transform;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/>calulateModelFingerPointing()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>distance<sp/>=<sp/>transform.InverseTransformPoint(transform.position)<sp/>-<sp/>transform.InverseTransformPoint(transform.GetChild(0).transform.position);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>zeroed<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_rigged_hand" kindref="compound">RiggedHand</ref>.<ref refid="class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b" kindref="member">CalculateZeroedVector</ref>(distance);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>zeroed;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RiggedFinger.cs"/>
  </compounddef>
</doxygen>
