<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_finger_direction_detector_8cs" kind="file" language="C#">
    <compoundname>FingerDirectionDetector.cs</compoundname>
    <innerclass refid="class_leap_1_1_unity_1_1_finger_direction_detector" prot="public">Leap::Unity::FingerDirectionDetector</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity">Leap::Unity</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>.<ref refid="namespace_leap_1_1_unity_1_1_attributes" kindref="compound">Attributes</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity" kindref="compound">Leap.Unity</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="class_leap_1_1_unity_1_1_finger_direction_detector" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector" kindref="compound">FingerDirectionDetector</ref><sp/>:<sp/><ref refid="class_leap_1_1_unity_1_1_detector" kindref="compound">Detector</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>[Units(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>interval<sp/>in<sp/>seconds<sp/>at<sp/>which<sp/>to<sp/>check<sp/>this<sp/>detector&apos;s<sp/>conditions.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_min_value" kindref="compound">MinValue</ref>(0)]</highlight></codeline>
<codeline lineno="39" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1ab70cf353126c82e1f4fb4a159ad60b50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1ab70cf353126c82e1f4fb4a159ad60b50" kindref="member">Period</ref><sp/>=<sp/>.1f;<sp/></highlight><highlight class="comment">//seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>hand<sp/>model<sp/>to<sp/>watch.<sp/>Set<sp/>automatically<sp/>if<sp/>detector<sp/>is<sp/>on<sp/>a<sp/>hand.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="47" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_base" kindref="compound">HandModelBase</ref><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model" kindref="compound">HandModel</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>finger<sp/>to<sp/>observe.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="54" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a73b21690811ff68505ea419bf1270d1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a73b21690811ff68505ea419bf1270d1f" kindref="member">FingerName</ref><sp/>=<sp/><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_INDEX;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Direction<sp/>Settings&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;How<sp/>to<sp/>treat<sp/>the<sp/>target<sp/>direction.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="74" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2161d1a746e283cce4a95f619fb699c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf" kindref="member">PointingType</ref><sp/><ref refid="namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf" kindref="member">PointingType</ref><sp/>=<sp/><ref refid="namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf" kindref="member">PointingType</ref>.RelativeToHorizon;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>target<sp/>direction.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_disable_if" kindref="compound">DisableIf</ref>(</highlight><highlight class="stringliteral">&quot;PointingType&quot;</highlight><highlight class="normal">,<sp/>isEqualTo:<sp/><ref refid="namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf" kindref="member">PointingType</ref>.AtTarget)]</highlight></codeline>
<codeline lineno="83" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1aeab7a19eb59f898c7d4be2bdf35cf5e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1aeab7a19eb59f898c7d4be2bdf35cf5e5" kindref="member">PointingDirection</ref><sp/>=<sp/>Vector3.forward;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;A<sp/>target<sp/>object(optional).<sp/>Use<sp/>PointingType.AtTarget&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_disable_if" kindref="compound">DisableIf</ref>(</highlight><highlight class="stringliteral">&quot;PointingType&quot;</highlight><highlight class="normal">,<sp/>isNotEqualTo:<sp/><ref refid="namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf" kindref="member">PointingType</ref>.AtTarget)]</highlight></codeline>
<codeline lineno="90" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2f90f8d78d0447b6129b6a43c7ecee09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2f90f8d78d0447b6129b6a43c7ecee09" kindref="member">TargetObject</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>angle<sp/>in<sp/>degrees<sp/>from<sp/>the<sp/>target<sp/>direction<sp/>at<sp/>which<sp/>to<sp/>turn<sp/>on.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0,<sp/>180)]</highlight></codeline>
<codeline lineno="98" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a420e6bdcd701b20b3c6a95003c0b4c44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a420e6bdcd701b20b3c6a95003c0b4c44" kindref="member">OnAngle</ref><sp/>=<sp/>15f;<sp/></highlight><highlight class="comment">//degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>angle<sp/>in<sp/>degrees<sp/>from<sp/>the<sp/>target<sp/>direction<sp/>at<sp/>which<sp/>to<sp/>turn<sp/>off.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0,<sp/>180)]</highlight></codeline>
<codeline lineno="107" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a234c17e715950ba6810e2f3ae86a5d15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a234c17e715950ba6810e2f3ae86a5d15" kindref="member">OffAngle</ref><sp/>=<sp/>25f;<sp/></highlight><highlight class="comment">//degrees</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Draw<sp/>this<sp/>detector&apos;s<sp/>Gizmos,<sp/>if<sp/>any.<sp/>(Gizmos<sp/>must<sp/>be<sp/>on<sp/>in<sp/>Unity<sp/>edtor,<sp/>too.)&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="113" refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a9bbe98671cb2301bb9f6b4eee2e115e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a9bbe98671cb2301bb9f6b4eee2e115e7" kindref="member">ShowGizmos</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IEnumerator<sp/>watcherCoroutine;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnValidate(){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a234c17e715950ba6810e2f3ae86a5d15" kindref="member">OffAngle</ref><sp/>&lt;<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a420e6bdcd701b20b3c6a95003c0b4c44" kindref="member">OnAngle</ref>){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a234c17e715950ba6810e2f3ae86a5d15" kindref="member">OffAngle</ref><sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a420e6bdcd701b20b3c6a95003c0b4c44" kindref="member">OnAngle</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Awake<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>watcherCoroutine<sp/>=<sp/>fingerPointingWatcher();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnable<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StartCoroutine(watcherCoroutine);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDisable<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StopCoroutine(watcherCoroutine);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" kindref="member">Deactivate</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IEnumerator<sp/>fingerPointingWatcher()<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6baa78b1ac16c0cd02168097fc9a9bd7604" kindref="member">Hand</ref><sp/>hand;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>fingerDirection;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>targetDirection;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectedFinger<sp/>=<sp/>selectedFingerOrdinal();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" kindref="member">HandModel</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" kindref="member">IsTracked</ref>){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hand<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1aa24ca02bf4a64ba33b0370ad6da8731f" kindref="member">GetLeapHand</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hand<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetDirection<sp/>=<sp/>selectedDirection(hand.Fingers[selectedFinger].TipPosition.ToVector3());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fingerDirection<sp/>=<sp/>hand.Fingers[selectedFinger].Bone(Bone.BoneType.TYPE_DISTAL).Direction.ToVector3();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angleTo<sp/>=<sp/>Vector3.Angle(fingerDirection,<sp/>targetDirection);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" kindref="member">IsTracked</ref><sp/>&amp;&amp;<sp/>angleTo<sp/>&lt;=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a420e6bdcd701b20b3c6a95003c0b4c44" kindref="member">OnAngle</ref>){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8" kindref="member">Activate</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" kindref="member">IsTracked</ref><sp/>||<sp/>angleTo<sp/>&gt;=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a234c17e715950ba6810e2f3ae86a5d15" kindref="member">OffAngle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" kindref="member">Deactivate</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WaitForSeconds(<ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1ab70cf353126c82e1f4fb4a159ad60b50" kindref="member">Period</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/>selectedDirection(Vector3<sp/>tipPosition){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2161d1a746e283cce4a95f619fb699c1" kindref="member">PointingType</ref>){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2161d1a746e283cce4a95f619fb699c1" kindref="member">PointingType</ref>.RelativeToHorizon:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>cameraRot<sp/>=<sp/><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853fa967d35e40f3f95b1f538bd248640bf3b" kindref="member">Camera</ref>.main.transform.rotation;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cameraYaw<sp/>=<sp/>cameraRot.eulerAngles.y;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>rotator<sp/>=<sp/>Quaternion.AngleAxis(cameraYaw,<sp/>Vector3.up);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rotator<sp/>*<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1aeab7a19eb59f898c7d4be2bdf35cf5e5" kindref="member">PointingDirection</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2161d1a746e283cce4a95f619fb699c1" kindref="member">PointingType</ref>.RelativeToCamera:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853fa967d35e40f3f95b1f538bd248640bf3b" kindref="member">Camera</ref>.main.transform.TransformDirection(<ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1aeab7a19eb59f898c7d4be2bdf35cf5e5" kindref="member">PointingDirection</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2161d1a746e283cce4a95f619fb699c1" kindref="member">PointingType</ref>.RelativeToWorld:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1aeab7a19eb59f898c7d4be2bdf35cf5e5" kindref="member">PointingDirection</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2161d1a746e283cce4a95f619fb699c1" kindref="member">PointingType</ref>.AtTarget:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a2f90f8d78d0447b6129b6a43c7ecee09" kindref="member">TargetObject</ref>.position<sp/>-<sp/>tipPosition;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1aeab7a19eb59f898c7d4be2bdf35cf5e5" kindref="member">PointingDirection</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectedFingerOrdinal(){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a73b21690811ff68505ea419bf1270d1f" kindref="member">FingerName</ref>){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Finger.FingerType.TYPE_INDEX:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Finger.FingerType.TYPE_MIDDLE:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Finger.FingerType.TYPE_PINKY:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Finger.FingerType.TYPE_RING:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Finger.FingerType.TYPE_THUMB:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDrawGizmos<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a9bbe98671cb2301bb9f6b4eee2e115e7" kindref="member">ShowGizmos</ref><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" kindref="member">HandModel</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" kindref="member">IsTracked</ref>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>innerColor;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_detector_1a89e15d17ea95587d9edf49c42473264d" kindref="member">IsActive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerColor<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_detector_1ad922f873e3c07f9128d6438332e7b9c7" kindref="member">OnColor</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerColor<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_detector_1a976fc8d66dd98aaea15196d861df429c" kindref="member">OffColor</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Finger<sp/>finger<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a77aca25282ecbc1decc67ecf44a9561a" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1aa24ca02bf4a64ba33b0370ad6da8731f" kindref="member">GetLeapHand</ref>().<ref refid="class_leap_1_1_hand_1ac9f68349507bfa13e3ac24738382bea6" kindref="member">Fingers</ref>[selectedFingerOrdinal()];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>fingerDirection<sp/>=<sp/>finger.Bone(Bone.BoneType.TYPE_DISTAL).Direction.ToVector3();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Utils.DrawCone(finger.TipPosition.ToVector3(),<sp/>fingerDirection,<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a420e6bdcd701b20b3c6a95003c0b4c44" kindref="member">OnAngle</ref>,<sp/>finger.Length,<sp/>innerColor);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Utils.DrawCone(finger.TipPosition.ToVector3(),<sp/>fingerDirection,<sp/><ref refid="class_leap_1_1_unity_1_1_finger_direction_detector_1a234c17e715950ba6810e2f3ae86a5d15" kindref="member">OffAngle</ref>,<sp/>finger.Length,<sp/><ref refid="class_leap_1_1_unity_1_1_detector_1ad7f8d0e7b913b78e86b2dacaa56287aa" kindref="member">LimitColor</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.color<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_detector_1aae0718ccceffd88a12d63ad718cda346" kindref="member">DirectionColor</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.DrawRay(finger.TipPosition.ToVector3(),<sp/>selectedDirection(finger.TipPosition.ToVector3()));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/FingerDirectionDetector.cs"/>
  </compounddef>
</doxygen>
