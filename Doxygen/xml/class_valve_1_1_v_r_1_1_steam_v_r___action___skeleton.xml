<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Skeleton</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___skeleton___source" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_Skeleton_Source</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ISerializationCallbackReceiver</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab60abde1a0e0993a1a15c03554a5671a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Valve.VR.SteamVR_Action_Skeleton.numBones</definition>
        <argsstring></argsstring>
        <name>numBones</name>
        <initializer>= 31</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="20" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad0281a649602158d0c570073542301c6" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae329ff2582f41c7ec52ecdf3b34b345a" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Skeleton.onActiveChange</definition>
        <argsstring></argsstring>
        <name>onActiveChange</name>
        <briefdescription>
<para>Event fires when the active state (ActionSet active and binding active) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="30" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9dfdb7b338667f73fa18cb69cf386574" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae329ff2582f41c7ec52ecdf3b34b345a" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Skeleton.onActiveBindingChange</definition>
        <argsstring></argsstring>
        <name>onActiveBindingChange</name>
        <briefdescription>
<para>Event fires when the active state of the binding changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="34" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ac8453162e7dbb072e4b3677d82239947" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a41a68545cb313ef9f47600d9e9022177" kindref="member">ChangeHandler</ref></type>
        <definition>ChangeHandler Valve.VR.SteamVR_Action_Skeleton.onChange</definition>
        <argsstring></argsstring>
        <name>onChange</name>
        <briefdescription>
<para>Event fires when the state of the pose or bones moves more than the changeTolerance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="38" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a3c9274e83076910a3b6a797cd53052b3" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9fd666c2f3ccefc435275d85c525337c" kindref="member">UpdateHandler</ref></type>
        <definition>UpdateHandler Valve.VR.SteamVR_Action_Skeleton.onUpdate</definition>
        <argsstring></argsstring>
        <name>onUpdate</name>
        <briefdescription>
<para>Event fires when the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="42" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab2bc1933b34032d38d02e78f641c5e78" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a460bcda41aa359ec14435212bed2b856" kindref="member">TrackingChangeHandler</ref></type>
        <definition>TrackingChangeHandler Valve.VR.SteamVR_Action_Skeleton.onTrackingChanged</definition>
        <argsstring></argsstring>
        <name>onTrackingChanged</name>
        <briefdescription>
<para>Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="46" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae6921e89e087c4183ccf6167ca37cd61" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5ad5e815b7f555aa33ee8b74385e89e" kindref="member">ValidPoseChangeHandler</ref></type>
        <definition>ValidPoseChangeHandler Valve.VR.SteamVR_Action_Skeleton.onValidPoseChanged</definition>
        <argsstring></argsstring>
        <name>onValidPoseChanged</name>
        <briefdescription>
<para>Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="50" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a91459f7239653ba24ef381285c999069" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a737d68e8f67790bf838b4f5bac3ffae1" kindref="member">DeviceConnectedChangeHandler</ref></type>
        <definition>DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Skeleton.onDeviceConnectedChanged</definition>
        <argsstring></argsstring>
        <name>onDeviceConnectedChanged</name>
        <briefdescription>
<para>Event fires when the device bound to this action is connected or disconnected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="54" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a092641b5beefd58f97d6a8c2b7d98d8e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3 []</type>
        <definition>Vector3 [] Valve.VR.SteamVR_Action_Skeleton.bonePositions</definition>
        <argsstring></argsstring>
        <name>bonePositions</name>
        <briefdescription>
<para>An array of the positions of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="88" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a2f7203dd3e199a64b8c14cb0472cfd4e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Quaternion []</type>
        <definition>Quaternion [] Valve.VR.SteamVR_Action_Skeleton.boneRotations</definition>
        <argsstring></argsstring>
        <name>boneRotations</name>
        <briefdescription>
<para>An array of the rotations of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="91" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aff8d8bd91c2273d645d3e15ab40346d3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3 []</type>
        <definition>Vector3 [] Valve.VR.SteamVR_Action_Skeleton.lastBonePositions</definition>
        <argsstring></argsstring>
        <name>lastBonePositions</name>
        <briefdescription>
<para>From the previous update: An array of the positions of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="94" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a58a7bac7e74072d967ac07c936ec58f3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Quaternion []</type>
        <definition>Quaternion [] Valve.VR.SteamVR_Action_Skeleton.lastBoneRotations</definition>
        <argsstring></argsstring>
        <name>lastBoneRotations</name>
        <briefdescription>
<para>From the previous update: An array of the rotations of the bones from the most recent update. Relative to skeletalTransformSpace. See SteamVR_Skeleton_JointIndexes for bone indexes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="97" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a51d29eb0cba3a7b9d50da1b8e1ea4635" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1affc8d18345f8f5d36f1ae7b4ce534500" kindref="member">EVRSkeletalMotionRange</ref></type>
        <definition>EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton.rangeOfMotion</definition>
        <argsstring></argsstring>
        <name>rangeOfMotion</name>
        <briefdescription>
<para>The range of motion the we&apos;re using to get bone data from. With Controller being your hand while holding the controller. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="100" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a11e85fa5ab977aa3a4c4e7e1b6d01c8e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1a916744fb3fc7b8e8ba224fba9bee6de4" kindref="member">EVRSkeletalTransformSpace</ref></type>
        <definition>EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton.skeletalTransformSpace</definition>
        <argsstring></argsstring>
        <name>skeletalTransformSpace</name>
        <briefdescription>
<para>The space to get bone data in. Parent space by default </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="107" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aa9ab0a739929c7ac378974d7f9a71c91" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1a6f46bd50fb65255d6537ab32a6bddc30" kindref="member">EVRSkeletalTrackingLevel</ref></type>
        <definition>EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton.skeletalTrackingLevel</definition>
        <argsstring></argsstring>
        <name>skeletalTrackingLevel</name>
        <briefdescription>
<para>Get the accuracy level of the skeletal tracking data. </para>
<para>* Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads. </para>
<para>* Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl </para>
<para>* Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="119" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a920e47de1024d12f1c866a2894fb2e00" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.thumbCurl</definition>
        <argsstring></argsstring>
        <name>thumbCurl</name>
        <briefdescription>
<para>A 0-1 value representing how curled the thumb is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="125" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2e4283e738877f71330b48a34fdd482" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.indexCurl</definition>
        <argsstring></argsstring>
        <name>indexCurl</name>
        <briefdescription>
<para>A 0-1 value representing how curled the index finger is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="128" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae178489f9bfd0049e7dbbf5b0259553a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.middleCurl</definition>
        <argsstring></argsstring>
        <name>middleCurl</name>
        <briefdescription>
<para>A 0-1 value representing how curled the middle finger is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="131" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aeffa6c5482f34a0a4975d79eb806e218" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.ringCurl</definition>
        <argsstring></argsstring>
        <name>ringCurl</name>
        <briefdescription>
<para>A 0-1 value representing how curled the ring finger is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="134" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a3702b47217fb09774c2404a76194cefe" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.pinkyCurl</definition>
        <argsstring></argsstring>
        <name>pinkyCurl</name>
        <briefdescription>
<para>A 0-1 value representing how curled the pinky finger is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="137" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab7d9b74f2d800ad8cc29e326f01b3b2d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.thumbIndexSplay</definition>
        <argsstring></argsstring>
        <name>thumbIndexSplay</name>
        <briefdescription>
<para>A 0-1 value representing the size of the gap between the thumb and index fingers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="140" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a5fa7a1cda4ef19c596a08702ea2a0171" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.indexMiddleSplay</definition>
        <argsstring></argsstring>
        <name>indexMiddleSplay</name>
        <briefdescription>
<para>A 0-1 value representing the size of the gap between the index and middle fingers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="143" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a3967215eab1247d25c8fda79b678ab43" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.middleRingSplay</definition>
        <argsstring></argsstring>
        <name>middleRingSplay</name>
        <briefdescription>
<para>A 0-1 value representing the size of the gap between the middle and ring fingers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="146" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a467d52a2f9712d65918f79950f68d3be" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.ringPinkySplay</definition>
        <argsstring></argsstring>
        <name>ringPinkySplay</name>
        <briefdescription>
<para>A 0-1 value representing the size of the gap between the ring and pinky fingers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="149" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5079276a5c75672dfeb3ac2b9d340c1" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastThumbCurl</definition>
        <argsstring></argsstring>
        <name>lastThumbCurl</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing how curled the thumb is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="153" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a4b919dd07d6e23badae877e2e9cc1f26" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastIndexCurl</definition>
        <argsstring></argsstring>
        <name>lastIndexCurl</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing how curled the index finger is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="156" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a4abb4a7ed42fb3f1c452e069dead3077" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastMiddleCurl</definition>
        <argsstring></argsstring>
        <name>lastMiddleCurl</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing how curled the middle finger is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="159" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a7d76c5fdea67897391423e6897a7ae5c" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastRingCurl</definition>
        <argsstring></argsstring>
        <name>lastRingCurl</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing how curled the ring finger is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="162" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae5576991cce592c9e92f8ac5cc37dc5f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastPinkyCurl</definition>
        <argsstring></argsstring>
        <name>lastPinkyCurl</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing how curled the pinky finger is. 0 being straight, 1 being fully curled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="165" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ac6fd8dcfc5104e14be27ebfa567d55b4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastThumbIndexSplay</definition>
        <argsstring></argsstring>
        <name>lastThumbIndexSplay</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing the size of the gap between the thumb and index fingers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="168" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a95ef4f48c69955e3fca33c609024be12" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastIndexMiddleSplay</definition>
        <argsstring></argsstring>
        <name>lastIndexMiddleSplay</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing the size of the gap between the index and middle fingers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="171" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aa55bbdea1fced05d7e6cf593ff25d24b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastMiddleRingSplay</definition>
        <argsstring></argsstring>
        <name>lastMiddleRingSplay</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing the size of the gap between the middle and ring fingers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="174" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a511f573a2ff1fc6f6f96255a3716a8f0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.lastRingPinkySplay</definition>
        <argsstring></argsstring>
        <name>lastRingPinkySplay</name>
        <briefdescription>
<para>[Previous Update] A 0-1 value representing the size of the gap between the ring and pinky fingers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="177" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aea32ec100629c38fab02df8ad0c8437e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float []</type>
        <definition>float [] Valve.VR.SteamVR_Action_Skeleton.fingerCurls</definition>
        <argsstring></argsstring>
        <name>fingerCurls</name>
        <briefdescription>
<para>0-1 values representing how curled the specified finger is. 0 being straight, 1 being fully curled. For indexes see: <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___skeleton___finger_indexes" kindref="compound">SteamVR_Skeleton_FingerIndexes</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="180" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ac7eb975e0367698e976957e9f9acd8a1" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float []</type>
        <definition>float [] Valve.VR.SteamVR_Action_Skeleton.fingerSplays</definition>
        <argsstring></argsstring>
        <name>fingerSplays</name>
        <briefdescription>
<para>0-1 values representing how splayed the specified finger and it&apos;s next index&apos;d finger is. For indexes see: <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___skeleton___finger_indexes" kindref="compound">SteamVR_Skeleton_FingerIndexes</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="183" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1abc27a8dd78d0d1a5fb582742c22bab6f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float []</type>
        <definition>float [] Valve.VR.SteamVR_Action_Skeleton.lastFingerCurls</definition>
        <argsstring></argsstring>
        <name>lastFingerCurls</name>
        <briefdescription>
<para>[Previous Update] 0-1 values representing how curled the specified finger is. 0 being straight, 1 being fully curled. For indexes see: <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___skeleton___finger_indexes" kindref="compound">SteamVR_Skeleton_FingerIndexes</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="186" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aae1f7b7aafe12885bc7388e2f7733ff4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float []</type>
        <definition>float [] Valve.VR.SteamVR_Action_Skeleton.lastFingerSplays</definition>
        <argsstring></argsstring>
        <name>lastFingerSplays</name>
        <briefdescription>
<para>[Previous Update] 0-1 values representing how splayed the specified finger and it&apos;s next index&apos;d finger is. For indexes see: <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___skeleton___finger_indexes" kindref="compound">SteamVR_Skeleton_FingerIndexes</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="189" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a2d53125db8f4a6a5e35a4ec80c9ef445" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.poseChanged</definition>
        <argsstring></argsstring>
        <name>poseChanged</name>
        <briefdescription>
<para>Separate from &quot;changed&quot;. If the pose for this skeleton action has changed (root position/rotation) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="192" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aa98e59c1530944c5e570a8de8b430c65" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.predictedSecondsFromNow</definition>
        <argsstring></argsstring>
        <name>predictedSecondsFromNow</name>
        <briefdescription>
<para>The amount of time in the future (or past!) the input system will predict poses for. Default is one frame forward (at 90hz) to account for render time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="198" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1adf5378fc6f19da64c07b852be5d9f1ca" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Valve.VR.SteamVR_Action_Skeleton.boneCount</definition>
        <argsstring></argsstring>
        <name>boneCount</name>
        <briefdescription>
<para>The number of bones in the skeleton for this action </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="326" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="326" bodyend="326"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a225dced4bc63fd5db949d8b9ec44f30e" prot="public" static="yes" mutable="no">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Skeleton.steamVRFixUpRotation</definition>
        <argsstring></argsstring>
        <name>steamVRFixUpRotation</name>
        <initializer>= Quaternion.AngleAxis(Mathf.PI * Mathf.Rad2Deg, Vector3.up)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="686" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="686" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae329ff2582f41c7ec52ecdf3b34b345a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Skeleton.ActiveChangeHandler</definition>
        <argsstring>(SteamVR_Action_Skeleton fromAction, bool active)</argsstring>
        <name>ActiveChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a41a68545cb313ef9f47600d9e9022177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Skeleton.ChangeHandler</definition>
        <argsstring>(SteamVR_Action_Skeleton fromAction)</argsstring>
        <name>ChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
          <declname>fromAction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9fd666c2f3ccefc435275d85c525337c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Skeleton.UpdateHandler</definition>
        <argsstring>(SteamVR_Action_Skeleton fromAction)</argsstring>
        <name>UpdateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
          <declname>fromAction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a460bcda41aa359ec14435212bed2b856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Skeleton.TrackingChangeHandler</definition>
        <argsstring>(SteamVR_Action_Skeleton fromAction, ETrackingResult trackingState)</argsstring>
        <name>TrackingChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
          <declname>trackingState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5ad5e815b7f555aa33ee8b74385e89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Skeleton.ValidPoseChangeHandler</definition>
        <argsstring>(SteamVR_Action_Skeleton fromAction, bool validPose)</argsstring>
        <name>ValidPoseChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validPose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a737d68e8f67790bf838b4f5bac3ffae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Skeleton.DeviceConnectedChangeHandler</definition>
        <argsstring>(SteamVR_Action_Skeleton fromAction, bool deviceConnected)</argsstring>
        <name>DeviceConnectedChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deviceConnected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab6d11fab47009a0f412c17b179749dc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.SteamVR_Action_Skeleton.SteamVR_Action_Skeleton</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_Action_Skeleton</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="57" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad4db27ce0ec44f65857ad24367fb1a27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Action_Skeleton.UpdateValue</definition>
        <argsstring>(bool skipStateAndEventUpdates)</argsstring>
        <name>UpdateValue</name>
        <param>
          <type>bool</type>
          <declname>skipStateAndEventUpdates</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Updates the skeleton action data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="63" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2a0c3bcaea3b4bc17cbf8f3a0d4794f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.UpdateValueWithoutEvents</definition>
        <argsstring>()</argsstring>
        <name>UpdateValueWithoutEvents</name>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Updates the skeleton action data without firing events </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="72" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1abe07333258dac738794a0be1b5b8683b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.UpdateTransform</definition>
        <argsstring>(Transform transformToUpdate)</argsstring>
        <name>UpdateTransform</name>
        <param>
          <type>Transform</type>
          <declname>transformToUpdate</declname>
        </param>
        <briefdescription>
<para>Update a transform&apos;s local position and local roation to match the pose from the most recent update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transformToUpdate</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of the object to be updated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="81" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a8d5cfd8a2361cdc5b268eddbacd05230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.GetActive</definition>
        <argsstring>()</argsstring>
        <name>GetActive</name>
        <briefdescription>
<para>True if this action is bound and the ActionSet is active </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="205" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad21ee279c89b6e30eb8f8de7c5c2c450" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.GetSetActive</definition>
        <argsstring>()</argsstring>
        <name>GetSetActive</name>
        <briefdescription>
<para>True if the ActionSet that contains this action is active </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="211" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a4b4b4dbafdecf7d2d25ecd4db9b4e1b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.GetVelocitiesAtTimeOffset</definition>
        <argsstring>(float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity)</argsstring>
        <name>GetVelocitiesAtTimeOffset</name>
        <param>
          <type>float</type>
          <declname>secondsFromNow</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>angularVelocity</declname>
        </param>
        <briefdescription>
<para><ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsFromNow</parametername>
</parameternamelist>
<parameterdescription>
<para>The time offset in the future (estimated) or in the past (previously recorded) you want to get data from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if we successfully returned a pose</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="221" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a7b58460cbccf9e520d1463a20a7aaf67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.GetPoseAtTimeOffset</definition>
        <argsstring>(float secondsFromNow, out Vector3 position, out Quaternion rotation, out Vector3 velocity, out Vector3 angularVelocity)</argsstring>
        <name>GetPoseAtTimeOffset</name>
        <param>
          <type>float</type>
          <declname>secondsFromNow</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>out Quaternion</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>angularVelocity</declname>
        </param>
        <briefdescription>
<para><ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsFromNow</parametername>
</parameternamelist>
<parameterdescription>
<para>The time offset in the future (estimated) or in the past (previously recorded) you want to get data from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if we successfully returned a pose</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="231" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1abb7252a97f4108bda5915954c10f32a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Skeleton.GetLocalPosition</definition>
        <argsstring>()</argsstring>
        <name>GetLocalPosition</name>
        <briefdescription>
<para>The local position of the pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="237" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a441c342e8cb29b52c7390279832bfdfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Skeleton.GetLocalRotation</definition>
        <argsstring>()</argsstring>
        <name>GetLocalRotation</name>
        <briefdescription>
<para>The local rotation of the pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="243" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a2081399c843bd653b32a04eb0944cb97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Skeleton.GetVelocity</definition>
        <argsstring>()</argsstring>
        <name>GetVelocity</name>
        <briefdescription>
<para>The local velocity of the pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="249" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af165c26390ceb37afdaf3db442d0d1b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Skeleton.GetAngularVelocity</definition>
        <argsstring>()</argsstring>
        <name>GetAngularVelocity</name>
        <briefdescription>
<para>The local angular velocity of the pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="255" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a6d53ade526af866579c3d943ba60e6c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.GetDeviceIsConnected</definition>
        <argsstring>()</argsstring>
        <name>GetDeviceIsConnected</name>
        <briefdescription>
<para>True if the device bound to this action is connected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="261" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a31f87068cc6ae263dce933efbc395cb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.GetPoseIsValid</definition>
        <argsstring>()</argsstring>
        <name>GetPoseIsValid</name>
        <briefdescription>
<para>True if the pose retrieved for this action is valid (good data from the tracking source) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="267" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a83b8c17567b588db367895d688f35df4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
        <definition>ETrackingResult Valve.VR.SteamVR_Action_Skeleton.GetTrackingResult</definition>
        <argsstring>()</argsstring>
        <name>GetTrackingResult</name>
        <briefdescription>
<para>The state of the tracking system that is used to create pose data (position, rotation, etc) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="273" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af004d59f2ca4e023411e645e9d8ea472" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Skeleton.GetLastLocalPosition</definition>
        <argsstring>()</argsstring>
        <name>GetLastLocalPosition</name>
        <briefdescription>
<para>The last local position of the pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="281" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a5b09f26524ff16abff9054915676207d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Skeleton.GetLastLocalRotation</definition>
        <argsstring>()</argsstring>
        <name>GetLastLocalRotation</name>
        <briefdescription>
<para>The last local rotation of the pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="287" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1afb56cc4c7eee341e315587c4407472b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Skeleton.GetLastVelocity</definition>
        <argsstring>()</argsstring>
        <name>GetLastVelocity</name>
        <briefdescription>
<para>The last local velocity of the pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="293" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a5d0fd95a106853daf5b4969a95427c76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Skeleton.GetLastAngularVelocity</definition>
        <argsstring>()</argsstring>
        <name>GetLastAngularVelocity</name>
        <briefdescription>
<para>The last local angular velocity of the pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="299" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2dfd31fde98f66696406d9f78c82e34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.GetLastDeviceIsConnected</definition>
        <argsstring>()</argsstring>
        <name>GetLastDeviceIsConnected</name>
        <briefdescription>
<para>True if the device bound to this action was connected during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="305" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a748a0907d02ce3413edc7e656272aca2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Skeleton.GetLastPoseIsValid</definition>
        <argsstring>()</argsstring>
        <name>GetLastPoseIsValid</name>
        <briefdescription>
<para>True if the pose was valid during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="311" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad84ef6df0708c1397e3168658508d57c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
        <definition>ETrackingResult Valve.VR.SteamVR_Action_Skeleton.GetLastTrackingResult</definition>
        <argsstring>()</argsstring>
        <name>GetLastTrackingResult</name>
        <briefdescription>
<para>The tracking state for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="317" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a60b0e6ad569249120cd0fdfb25086cc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3 []</type>
        <definition>Vector3 [] Valve.VR.SteamVR_Action_Skeleton.GetBonePositions</definition>
        <argsstring>(bool copy=false)</argsstring>
        <name>GetBonePositions</name>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the bone positions in local space. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="332" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="332" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab195a41d6c0787b46d94ed089b42294b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion []</type>
        <definition>Quaternion [] Valve.VR.SteamVR_Action_Skeleton.GetBoneRotations</definition>
        <argsstring>(bool copy=false)</argsstring>
        <name>GetBoneRotations</name>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the bone rotations in local space. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="344" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="344" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae34c92f9b61bc5556917b739bcef0e32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3 []</type>
        <definition>Vector3 [] Valve.VR.SteamVR_Action_Skeleton.GetLastBonePositions</definition>
        <argsstring>(bool copy=false)</argsstring>
        <name>GetLastBonePositions</name>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the bone positions in local space from the previous update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="356" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="356" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a35816d947506cb60a58cd58cf5b49025" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion []</type>
        <definition>Quaternion [] Valve.VR.SteamVR_Action_Skeleton.GetLastBoneRotations</definition>
        <argsstring>(bool copy=false)</argsstring>
        <name>GetLastBoneRotations</name>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the bone rotations in local space from the previous update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="368" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="368" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a41593a6cf089c0c458a710653db92bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.SetRangeOfMotion</definition>
        <argsstring>(EVRSkeletalMotionRange range)</argsstring>
        <name>SetRangeOfMotion</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1affc8d18345f8f5d36f1ae7b4ce534500" kindref="member">EVRSkeletalMotionRange</ref></type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Set the range of the motion of the bones in this skeleton. Options are &quot;With Controller&quot; as if your hand is holding your <ref refid="namespace_valve_1_1_v_r" kindref="compound">VR</ref> controller. Or &quot;Without Controller&quot; as if your hand is empty. This will set the range for the following update. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="380" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a4cc01960830d09746b0b5b6f43dfc8ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.SetSkeletalTransformSpace</definition>
        <argsstring>(EVRSkeletalTransformSpace space)</argsstring>
        <name>SetSkeletalTransformSpace</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a916744fb3fc7b8e8ba224fba9bee6de4" kindref="member">EVRSkeletalTransformSpace</ref></type>
          <declname>space</declname>
        </param>
        <briefdescription>
<para>Sets the space that you&apos;ll get bone data back in. Options are relative to the Model and relative to the Parent bone </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>space</parametername>
</parameternamelist>
<parameterdescription>
<para>the space that you&apos;ll get bone data back in. Options are relative to the Model and relative to the Parent bone.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="389" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="389" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aec0391bff41788a0f69886ac6299e310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.SteamVR_Action_Skeleton.GetBoneCount</definition>
        <argsstring>()</argsstring>
        <name>GetBoneCount</name>
        <briefdescription>
<para>Returns the total number of bones in the skeleton </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="397" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="397" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae0ccc65c036c7bf1685362aa92392c5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int []</type>
        <definition>int [] Valve.VR.SteamVR_Action_Skeleton.GetBoneHierarchy</definition>
        <argsstring>()</argsstring>
        <name>GetBoneHierarchy</name>
        <briefdescription>
<para>Returns the order of bones in the hierarchy </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="405" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a7d77b9fd5ed9b996ebdca5ba40a811a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_Action_Skeleton.GetBoneName</definition>
        <argsstring>(int boneIndex)</argsstring>
        <name>GetBoneName</name>
        <param>
          <type>int</type>
          <declname>boneIndex</declname>
        </param>
        <briefdescription>
<para>Returns the name of the bone </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="413" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a456a63483d7225b1618ccc5d6757bee5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_valve_1_1_v_r_1_1_steam_v_r___utils_1_1_rigid_transform" kindref="compound">SteamVR_Utils.RigidTransform</ref> []</type>
        <definition>SteamVR_Utils.RigidTransform [] Valve.VR.SteamVR_Action_Skeleton.GetReferenceTransforms</definition>
        <argsstring>(EVRSkeletalTransformSpace transformSpace, EVRSkeletalReferencePose referencePose)</argsstring>
        <name>GetReferenceTransforms</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a916744fb3fc7b8e8ba224fba9bee6de4" kindref="member">EVRSkeletalTransformSpace</ref></type>
          <declname>transformSpace</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a299b655881f873256f035349b59da09e" kindref="member">EVRSkeletalReferencePose</ref></type>
          <declname>referencePose</declname>
        </param>
        <briefdescription>
<para>Returns an array of positions/rotations that represent the state of each bone in a reference pose. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transformSpace</parametername>
</parameternamelist>
<parameterdescription>
<para>What to get the position/rotation data relative to, the model, or the bone&apos;s parent</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referencePose</parametername>
</parameternamelist>
<parameterdescription>
<para>Which reference pose to return</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="424" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="424" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af86c841922955baa70deacd0dadb195f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a6f46bd50fb65255d6537ab32a6bddc30" kindref="member">EVRSkeletalTrackingLevel</ref></type>
        <definition>EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton.GetSkeletalTrackingLevel</definition>
        <argsstring>()</argsstring>
        <name>GetSkeletalTrackingLevel</name>
        <briefdescription>
<para>Get the accuracy level of the skeletal tracking data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><itemizedlist>
<listitem>
<para>Estimated: Body part location can’t be directly determined by the device. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors. Examples include the Vive Controller and gamepads.  </para>
</listitem>
<listitem>
<para>Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part.Certain body part positions may be unmeasured by the device and estimated from other input data.Examples include Knuckles or gloves that only measure finger curl </para>
</listitem>
<listitem>
<para>Full: Body part location can be measured directly throughout the entire range of motion of the body part.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment. </para>
</listitem>
</itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="439" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="439" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a268243d4d19a66128eae23d0517a0c24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float []</type>
        <definition>float [] Valve.VR.SteamVR_Action_Skeleton.GetFingerCurls</definition>
        <argsstring>(bool copy=false)</argsstring>
        <name>GetFingerCurls</name>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the finger curl data that we calculate each update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="448" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="448" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9fc637171c152e4dca320020d17548b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float []</type>
        <definition>float [] Valve.VR.SteamVR_Action_Skeleton.GetLastFingerCurls</definition>
        <argsstring>(bool copy=false)</argsstring>
        <name>GetLastFingerCurls</name>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the finger curl data from the previous update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="460" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="460" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2b48ca77472521036964cb48fcb773c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float []</type>
        <definition>float [] Valve.VR.SteamVR_Action_Skeleton.GetFingerSplays</definition>
        <argsstring>(bool copy=false)</argsstring>
        <name>GetFingerSplays</name>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the finger splay data that we calculate each update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="472" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="472" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae9e50b9a7c3151ba215a543692e737dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float []</type>
        <definition>float [] Valve.VR.SteamVR_Action_Skeleton.GetLastFingerSplays</definition>
        <argsstring>(bool copy=false)</argsstring>
        <name>GetLastFingerSplays</name>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the finger splay data from the previous update. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="484" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="484" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a25eafdaeaf33acc144644bf0e35c2384" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.GetFingerCurl</definition>
        <argsstring>(int finger)</argsstring>
        <name>GetFingerCurl</name>
        <param>
          <type>int</type>
          <declname>finger</declname>
        </param>
        <briefdescription>
<para>Returns a value indicating how much the passed in finger is currently curled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>finger</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the finger to return a curl value for. 0-4. thumb, index, middle, ring, pinky</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0-1 value. 0 being straight, 1 being fully curled.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="497" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a773e082038a769ac28aa2b81899de33e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.GetSplay</definition>
        <argsstring>(int fingerGapIndex)</argsstring>
        <name>GetSplay</name>
        <param>
          <type>int</type>
          <declname>fingerGapIndex</declname>
        </param>
        <briefdescription>
<para>Returns a value indicating how the size of the gap between fingers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fingerGapIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the finger gap to return a splay value for. 0 being the gap between thumb and index, 1 being the gap between index and middle, 2 being the gap between middle and ring, and 3 being the gap between ring and pinky.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0-1 value. 0 being no gap, 1 being &quot;full&quot; gap</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="507" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a8263bb3bd140f1c795c7dfa82ed23557" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.GetFingerCurl</definition>
        <argsstring>(SteamVR_Skeleton_FingerIndexEnum finger)</argsstring>
        <name>GetFingerCurl</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67" kindref="member">SteamVR_Skeleton_FingerIndexEnum</ref></type>
          <declname>finger</declname>
        </param>
        <briefdescription>
<para>Returns a value indicating how much the passed in finger is currently curled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>finger</parametername>
</parameternamelist>
<parameterdescription>
<para>The finger to return a curl value for</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0-1 value. 0 being straight, 1 being fully curled.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="517" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="517" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad5a524b798d0f4fcfe29daf558e9b880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.GetSplay</definition>
        <argsstring>(SteamVR_Skeleton_FingerSplayIndexEnum fingerSplay)</argsstring>
        <name>GetSplay</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a43c97e13fe46f0575986b9f74945e0bf" kindref="member">SteamVR_Skeleton_FingerSplayIndexEnum</ref></type>
          <declname>fingerSplay</declname>
        </param>
        <briefdescription>
<para>Returns a value indicating how the size of the gap between fingers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fingerGapIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The finger gap to return a splay value for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0-1 value. 0 being no gap, 1 being &quot;full&quot; gap</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="527" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="527" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aee762f7204379e759e9667fa492eb2ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.GetLastFingerCurl</definition>
        <argsstring>(int finger)</argsstring>
        <name>GetLastFingerCurl</name>
        <param>
          <type>int</type>
          <declname>finger</declname>
        </param>
        <briefdescription>
<para>Returns a value indicating how much the passed in finger was curled during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>finger</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the finger to return a curl value for. 0-4. thumb, index, middle, ring, pinky</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0-1 value. 0 being straight, 1 being fully curled.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="537" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="537" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9887af0901b58344a5188fea945ff082" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.GetLastSplay</definition>
        <argsstring>(int fingerGapIndex)</argsstring>
        <name>GetLastSplay</name>
        <param>
          <type>int</type>
          <declname>fingerGapIndex</declname>
        </param>
        <briefdescription>
<para>Returns a value indicating the size of the gap between fingers during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fingerGapIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the finger gap to return a splay value for. 0 being the gap between thumb and index, 1 being the gap between index and middle, 2 being the gap between middle and ring, and 3 being the gap between ring and pinky.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0-1 value. 0 being no gap, 1 being &quot;full&quot; gap</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="547" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="547" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a6cd3206d20f4e547f1477281341df8b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.GetLastFingerCurl</definition>
        <argsstring>(SteamVR_Skeleton_FingerIndexEnum finger)</argsstring>
        <name>GetLastFingerCurl</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67" kindref="member">SteamVR_Skeleton_FingerIndexEnum</ref></type>
          <declname>finger</declname>
        </param>
        <briefdescription>
<para>Returns a value indicating how much the passed in finger was curled during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>finger</parametername>
</parameternamelist>
<parameterdescription>
<para>The finger to return a curl value for</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0-1 value. 0 being straight, 1 being fully curled.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="557" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="557" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a1c0f4446ac1ae1fdaebc267dbe49bba9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Skeleton.GetLastSplay</definition>
        <argsstring>(SteamVR_Skeleton_FingerSplayIndexEnum fingerSplay)</argsstring>
        <name>GetLastSplay</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a43c97e13fe46f0575986b9f74945e0bf" kindref="member">SteamVR_Skeleton_FingerSplayIndexEnum</ref></type>
          <declname>fingerSplay</declname>
        </param>
        <briefdescription>
<para>Returns a value indicating the size of the gap between fingers during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fingerGapIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The finger gap to return a splay value for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0-1 value. 0 being no gap, 1 being &quot;full&quot; gap</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="567" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="567" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a398ec0f09d88b3047166425dcf8cb33c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_Action_Skeleton.GetLocalizedName</definition>
        <argsstring>(params EVRInputStringBits[] localizedParts)</argsstring>
        <name>GetLocalizedName</name>
        <param>
          <type>params <ref refid="namespace_valve_1_1_v_r_1a05e76187bbc5846b9bfb44f6acf13912" kindref="member">EVRInputStringBits</ref> []</type>
          <declname>localizedParts</declname>
        </param>
        <briefdescription>
<para>Gets the localized name of the device that the action corresponds to. Include as many EVRInputStringBits as you want to add to the localized string </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localizedParts</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem>
<para>VRInputString_Hand - Which hand the origin is in. ex: &quot;Left Hand&quot;.  </para>
</listitem>
<listitem>
<para>VRInputString_ControllerType - What kind of controller the user has in that hand. ex: &quot;Vive Controller&quot;.  </para>
</listitem>
<listitem>
<para>VRInputString_InputSource - What part of that controller is the origin. ex: &quot;Trackpad&quot;.  </para>
</listitem>
<listitem>
<para>VRInputString_All - All of the above. ex: &quot;Left Hand Vive Controller Trackpad&quot;.  </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="584" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="584" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab0eb571e713112bf6695f2a322980522" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.AddOnDeviceConnectedChanged</definition>
        <argsstring>(DeviceConnectedChangeHandler functionToCall)</argsstring>
        <name>AddOnDeviceConnectedChanged</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a737d68e8f67790bf838b4f5bac3ffae1" kindref="member">DeviceConnectedChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <briefdescription>
<para>Fires an event when a device is connected or disconnected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>The method you would like to be called when a device is connected. Should take a <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> as a param</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="593" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a2079e2dfc22a35ec170188e84ef24567" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.RemoveOnDeviceConnectedChanged</definition>
        <argsstring>(DeviceConnectedChangeHandler functionToStopCalling)</argsstring>
        <name>RemoveOnDeviceConnectedChanged</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a737d68e8f67790bf838b4f5bac3ffae1" kindref="member">DeviceConnectedChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The method you would like to stop calling when a device is connected. Should take a <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> as a param</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="600" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="600" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5921e5234ffab73345554d65c335f2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.AddOnTrackingChanged</definition>
        <argsstring>(TrackingChangeHandler functionToCall)</argsstring>
        <name>AddOnTrackingChanged</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a460bcda41aa359ec14435212bed2b856" kindref="member">TrackingChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <briefdescription>
<para>Fires an event when the tracking of the device has changed </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>The method you would like to be called when tracking has changed. Should take a <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> as a param</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="608" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="608" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a3c47b5010ed77fe4d516ac3321778249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.RemoveOnTrackingChanged</definition>
        <argsstring>(TrackingChangeHandler functionToStopCalling)</argsstring>
        <name>RemoveOnTrackingChanged</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a460bcda41aa359ec14435212bed2b856" kindref="member">TrackingChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The method you would like to stop calling when tracking has changed. Should take a <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> as a param</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="615" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="615" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a22c2be947605d84b1eb6f0742a882e4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.AddOnValidPoseChanged</definition>
        <argsstring>(ValidPoseChangeHandler functionToCall)</argsstring>
        <name>AddOnValidPoseChanged</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5ad5e815b7f555aa33ee8b74385e89e" kindref="member">ValidPoseChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <briefdescription>
<para>Fires an event when the device now has a valid pose or no longer has a valid pose </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>The method you would like to be called when the pose has become valid or invalid. Should take a <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> as a param</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="623" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="623" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a13f6b51dc671cd8dcf9b0063a7096ea9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.RemoveOnValidPoseChanged</definition>
        <argsstring>(ValidPoseChangeHandler functionToStopCalling)</argsstring>
        <name>RemoveOnValidPoseChanged</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5ad5e815b7f555aa33ee8b74385e89e" kindref="member">ValidPoseChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The method you would like to stop calling when the pose has become valid or invalid. Should take a <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> as a param</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="630" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="630" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a25ef48bc746787e1432040dc0e2cf0fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.AddOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall)</argsstring>
        <name>AddOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae329ff2582f41c7ec52ecdf3b34b345a" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <briefdescription>
<para>Executes a function when this action&apos;s bound state changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="637" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="637" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aefc772e4655cee6df2ac7794cab5c57b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.RemoveOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling)</argsstring>
        <name>RemoveOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae329ff2582f41c7ec52ecdf3b34b345a" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="644" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="644" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae5b064c4cc4ac0bdfd8677e126896cf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.AddOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToCall)</argsstring>
        <name>AddOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a41a68545cb313ef9f47600d9e9022177" kindref="member">ChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action changes </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="651" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="651" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a766a14c9618f04ba29f2b457fe29f59d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.RemoveOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToStopCalling)</argsstring>
        <name>RemoveOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a41a68545cb313ef9f47600d9e9022177" kindref="member">ChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive on change events</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="658" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="658" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a0016992d8adb267fcdd385487bcde9bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.AddOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToCall)</argsstring>
        <name>AddOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9fd666c2f3ccefc435275d85c525337c" kindref="member">UpdateHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="665" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="665" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae663ccb6de66ea17fa2e21a8c02e78eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Skeleton.RemoveOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToStopCalling)</argsstring>
        <name>RemoveOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9fd666c2f3ccefc435275d85c525337c" kindref="member">UpdateHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="672" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="672" bodyend="675"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a79ae183a879666ce60e8fdc17368d840" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Skeleton.OnBeforeSerialize</definition>
        <argsstring>()</argsstring>
        <name>OnBeforeSerialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="677" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="677" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2de7450c2cc204294ca8b328d8fac84" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Skeleton.OnAfterDeserialize</definition>
        <argsstring>()</argsstring>
        <name>OnAfterDeserialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="681" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="681" bodyend="684"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Skeleton Actions are our best approximation of where your hands are while holding vr controllers and pressing buttons. We give you 31 bones to help you animate hand models. For more information check out this blog post: <ulink url="https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068">https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068</ulink> </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4873">
        <label>ISteamVR_Action_Skeleton_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___skeleton___source"/>
      </node>
      <node id="4874">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4871">
        <label>Valve.VR.SteamVR_Action_Skeleton</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton"/>
        <childnode refid="4872" relation="public-inheritance">
        </childnode>
        <childnode refid="4873" relation="public-inheritance">
        </childnode>
        <childnode refid="4874" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4872">
        <label>SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4877">
        <label>ISteamVR_Action_Skeleton_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___skeleton___source"/>
      </node>
      <node id="4878">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4875">
        <label>Valve.VR.SteamVR_Action_Skeleton</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton"/>
        <childnode refid="4876" relation="public-inheritance">
        </childnode>
        <childnode refid="4877" relation="public-inheritance">
        </childnode>
        <childnode refid="4878" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4876">
        <label>SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Skeleton.cs" bodystart="18" bodyend="687"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae329ff2582f41c7ec52ecdf3b34b345a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>ActiveChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a25ef48bc746787e1432040dc0e2cf0fc" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>AddOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae5b064c4cc4ac0bdfd8677e126896cf4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>AddOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab0eb571e713112bf6695f2a322980522" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>AddOnDeviceConnectedChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5921e5234ffab73345554d65c335f2f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>AddOnTrackingChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a0016992d8adb267fcdd385487bcde9bd" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>AddOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a22c2be947605d84b1eb6f0742a882e4b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>AddOnValidPoseChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a84bf81feaa02463f8151e1ea25e16825" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>angularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1adf5378fc6f19da64c07b852be5d9f1ca" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>boneCount</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a092641b5beefd58f97d6a8c2b7d98d8e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>bonePositions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a2f7203dd3e199a64b8c14cb0472cfd4e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>boneRotations</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a41a68545cb313ef9f47600d9e9022177" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>ChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a737d68e8f67790bf838b4f5bac3ffae1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>DeviceConnectedChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a352107e49074a23f2ece4ec51f7cbc2d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>deviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aea32ec100629c38fab02df8ad0c8437e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>fingerCurls</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ac7eb975e0367698e976957e9f9acd8a1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>fingerSplays</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a8d5cfd8a2361cdc5b268eddbacd05230" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af165c26390ceb37afdaf3db442d0d1b3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a9e11dfd61cb934d7562f7ead82bd3977" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aec0391bff41788a0f69886ac6299e310" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetBoneCount</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae0ccc65c036c7bf1685362aa92392c5b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetBoneHierarchy</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a7d77b9fd5ed9b996ebdca5ba40a811a7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetBoneName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a60b0e6ad569249120cd0fdfb25086cc2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetBonePositions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab195a41d6c0787b46d94ed089b42294b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetBoneRotations</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a6d53ade526af866579c3d943ba60e6c6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a9a48969933cf18a41139748fc3fa1c58" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a25eafdaeaf33acc144644bf0e35c2384" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetFingerCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a8263bb3bd140f1c795c7dfa82ed23557" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetFingerCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a268243d4d19a66128eae23d0517a0c24" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetFingerCurls</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2b48ca77472521036964cb48fcb773c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetFingerSplays</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a5d0fd95a106853daf5b4969a95427c76" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a1c0012123202777151db1e7364ca7abe" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae34c92f9b61bc5556917b739bcef0e32" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastBonePositions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a35816d947506cb60a58cd58cf5b49025" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastBoneRotations</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2dfd31fde98f66696406d9f78c82e34" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a55d19b1a7931ed13d689a7c3acb31581" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aee762f7204379e759e9667fa492eb2ca" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastFingerCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a6cd3206d20f4e547f1477281341df8b9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastFingerCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9fc637171c152e4dca320020d17548b8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastFingerCurls</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae9e50b9a7c3151ba215a543692e737dc" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastFingerSplays</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af004d59f2ca4e023411e645e9d8ea472" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ab2e7b7757252e937fb6c007f36da7f57" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a5b09f26524ff16abff9054915676207d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a39183e3163c2c45a353137b92c9475ce" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a748a0907d02ce3413edc7e656272aca2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a0071aa67fdb7a1f25f261f58236f182d" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9887af0901b58344a5188fea945ff082" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a1c0f4446ac1ae1fdaebc267dbe49bba9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad84ef6df0708c1397e3168658508d57c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastTrackingResult</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a3c4f99bc27df78ccb09f30f20503c20e" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastTrackingResult</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1afb56cc4c7eee341e315587c4407472b3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a21d4d04f961d37630361750444666774" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLastVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a398ec0f09d88b3047166425dcf8cb33c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLocalizedName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1abb7252a97f4108bda5915954c10f32a7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ab007b14bb04c5d6fc1564ac4ffac1772" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a441c342e8cb29b52c7390279832bfdfa" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a4cd01c8865799b4abdb3aa05c9bce7a1" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a7b58460cbccf9e520d1463a20a7aaf67" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetPoseAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a0edda26e08e24b20fe9f1bb2941ba4a6" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetPoseAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a31f87068cc6ae263dce933efbc395cb2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae83ce8dae5f87c106ccbd0860c8f1181" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a456a63483d7225b1618ccc5d6757bee5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetReferenceTransforms</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad21ee279c89b6e30eb8f8de7c5c2c450" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetSetActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af86c841922955baa70deacd0dadb195f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetSkeletalTrackingLevel</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a773e082038a769ac28aa2b81899de33e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad5a524b798d0f4fcfe29daf558e9b880" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a83b8c17567b588db367895d688f35df4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetTrackingResult</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ac4aa642c201073f77df62ff087351ca2" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetTrackingResult</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a4b4b4dbafdecf7d2d25ecd4db9b4e1b3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetVelocitiesAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a078b2d70fcd9796f0872f03c6eb4cd37" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetVelocitiesAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a2081399c843bd653b32a04eb0944cb97" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a827a230f97d4cb064be1b679440a3593" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>GetVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2e4283e738877f71330b48a34fdd482" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>indexCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a5fa7a1cda4ef19c596a08702ea2a0171" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>indexMiddleSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae6b3169314d9d47df2d7346bd3514d88" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aff8d8bd91c2273d645d3e15ab40346d3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastBonePositions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a58a7bac7e74072d967ac07c936ec58f3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastBoneRotations</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a879054dc94cfe2303fd3656be573af3f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1abc27a8dd78d0d1a5fb582742c22bab6f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastFingerCurls</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aae1f7b7aafe12885bc7388e2f7733ff4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastFingerSplays</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a4b919dd07d6e23badae877e2e9cc1f26" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastIndexCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a95ef4f48c69955e3fca33c609024be12" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastIndexMiddleSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ad202da8c9e48c17edb7a9619e51d9628" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae33de6962f9cf4dd2e217f87f21c00db" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a4abb4a7ed42fb3f1c452e069dead3077" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastMiddleCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aa55bbdea1fced05d7e6cf593ff25d24b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastMiddleRingSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae5576991cce592c9e92f8ac5cc37dc5f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastPinkyCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a88389de1985db0b02398dbbf1405eba9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a7d76c5fdea67897391423e6897a7ae5c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastRingCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a511f573a2ff1fc6f6f96255a3716a8f0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastRingPinkySplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5079276a5c75672dfeb3ac2b9d340c1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastThumbCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ac6fd8dcfc5104e14be27ebfa567d55b4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastThumbIndexSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6457af1bdc6f13c61d2171c320d660cb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastTrackingState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a46d9cbd329e828e28127f7af2d470e8c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>lastVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a532487bde5fc10e4f520822eacaf9b6f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>localPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6390b371b472fd2f7f4f501db7dacc96" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>localRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae178489f9bfd0049e7dbbf5b0259553a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>middleCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a3967215eab1247d25c8fda79b678ab43" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>middleRingSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab60abde1a0e0993a1a15c03554a5671a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>numBones</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9dfdb7b338667f73fa18cb69cf386574" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>onActiveBindingChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad0281a649602158d0c570073542301c6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>onActiveChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2de7450c2cc204294ca8b328d8fac84" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>OnAfterDeserialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a79ae183a879666ce60e8fdc17368d840" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>OnBeforeSerialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ac8453162e7dbb072e4b3677d82239947" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>onChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a91459f7239653ba24ef381285c999069" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>onDeviceConnectedChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab2bc1933b34032d38d02e78f641c5e78" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>onTrackingChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a3c9274e83076910a3b6a797cd53052b3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>onUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae6921e89e087c4183ccf6167ca37cd61" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>onValidPoseChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a3702b47217fb09774c2404a76194cefe" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>pinkyCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a2d53125db8f4a6a5e35a4ec80c9ef445" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>poseChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1af6eb7cf17442bd20ab60aad306b49240" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>poseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aa98e59c1530944c5e570a8de8b430c65" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>predictedSecondsFromNow</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a51d29eb0cba3a7b9d50da1b8e1ea4635" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>rangeOfMotion</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aefc772e4655cee6df2ac7794cab5c57b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>RemoveOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a766a14c9618f04ba29f2b457fe29f59d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>RemoveOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a2079e2dfc22a35ec170188e84ef24567" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>RemoveOnDeviceConnectedChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a3c47b5010ed77fe4d516ac3321778249" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>RemoveOnTrackingChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ae663ccb6de66ea17fa2e21a8c02e78eb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>RemoveOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a13f6b51dc671cd8dcf9b0063a7096ea9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>RemoveOnValidPoseChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aeffa6c5482f34a0a4975d79eb806e218" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>ringCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a467d52a2f9712d65918f79950f68d3be" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>ringPinkySplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a41593a6cf089c0c458a710653db92bdc" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>SetRangeOfMotion</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a4cc01960830d09746b0b5b6f43dfc8ab" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>SetSkeletalTransformSpace</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6fed3c51e6941259760bcd88bd17c2dc" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>SetUniverseOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1aa9ab0a739929c7ac378974d7f9a71c91" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>skeletalTrackingLevel</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a11e85fa5ab977aa3a4c4e7e1b6d01c8e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>skeletalTransformSpace</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6d6534444612fba63fc9723f86745168" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>SteamVR_Action_Pose_Base</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab6d11fab47009a0f412c17b179749dc5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>SteamVR_Action_Skeleton</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a225dced4bc63fd5db949d8b9ec44f30e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>steamVRFixUpRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a920e47de1024d12f1c866a2894fb2e00" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>thumbCurl</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ab7d9b74f2d800ad8cc29e326f01b3b2d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>thumbIndexSplay</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a460bcda41aa359ec14435212bed2b856" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>TrackingChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1af04d371ae8e8552385b022d1aa788d32" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>trackingState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1a9fd666c2f3ccefc435275d85c525337c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>UpdateHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1abe07333258dac738794a0be1b5b8683b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>UpdateTransform</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a95ffd5217a271d75ca471c9ccdf36215" prot="public" virt="virtual" ambiguityscope="SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;."><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>UpdateTransform</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1ad4db27ce0ec44f65857ad24367fb1a27" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>UpdateValue</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ad1269e7f3b8399dfe46e7fd85f8ed481" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>UpdateValues</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af2a0c3bcaea3b4bc17cbf8f3a0d4794f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>UpdateValueWithoutEvents</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton_1af5ad5e815b7f555aa33ee8b74385e89e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>ValidPoseChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1aaf2089c742c29110276191454cda9c7a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Skeleton</scope><name>velocity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
