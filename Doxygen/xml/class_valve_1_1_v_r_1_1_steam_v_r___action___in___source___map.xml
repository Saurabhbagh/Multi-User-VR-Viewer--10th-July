<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_In_Source_Map</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map" prot="public" virt="non-virtual">Valve::VR::SteamVR_Action_Source_Map&lt; SourceElement &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>SourceElement</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1a3a2ed7b8eab08eb669d835f676794927" prot="protected" static="no" mutable="no">
        <type>List&lt; <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref> &gt;</type>
        <definition>List&lt;SteamVR_Input_Sources&gt; Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;.updatingSources</definition>
        <argsstring></argsstring>
        <name>updatingSources</name>
        <initializer>= new List&lt;<ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="157" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1a4a43cc63a6c174a32dc8e55fd322c4c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;.IsUpdating</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>IsUpdating</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Returns whether the system has determined this source should be updated (based on code calls) Should only be used if you&apos;ve set <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ae27e9858dec18a4307cca7779ed87ad8" kindref="member">SteamVR_Action.startUpdatingSourceOnAccess</ref> to false. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="165" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" bodystart="165" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1aac97f8b8dacc8bb475ce3d055df94b9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;.ForceAddSourceToUpdateList</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>ForceAddSourceToUpdateList</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Forces the system to start updating the data for this action and the specified input source. Should only be used if you&apos;ve set <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ae27e9858dec18a4307cca7779ed87ad8" kindref="member">SteamVR_Action.startUpdatingSourceOnAccess</ref> to false. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="190" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" bodystart="190" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1a0ab9b659a3dbb75ea0dfd1ef8e925895" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;.UpdateValues</definition>
        <argsstring>()</argsstring>
        <name>UpdateValues</name>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Updates the data for all the input sources the system has detected need to be updated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="206" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" bodystart="206" bodyend="212"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1aacbc05f0647705e1268c2bda304481a9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;.OnAccessSource</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>OnAccessSource</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a2a6c76774adb5719065c870202c4f29a">OnAccessSource</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="176" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" bodystart="176" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4740">
        <label>SteamVR_Action_Source_Map&lt; SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map"/>
        <childnode refid="4741" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4739">
        <label>Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map"/>
        <childnode refid="4740" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4741">
        <label>SteamVR_Action_Source_Map</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4743">
        <label>SteamVR_Action_Source_Map&lt; SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map"/>
        <childnode refid="4744" relation="public-inheritance">
        </childnode>
        <childnode refid="4745" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="4742">
        <label>Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map"/>
        <childnode refid="4743" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4748">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4747">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="4748" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4745">
        <label>Valve.VR.SteamVR_Action&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action"/>
        <childnode refid="4746" relation="public-inheritance">
        </childnode>
        <childnode refid="4747" relation="public-inheritance">
        </childnode>
        <childnode refid="4749" relation="public-inheritance">
        </childnode>
        <childnode refid="4747" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4746">
        <label>IEquatable&lt; SteamVR_Action &gt;</label>
      </node>
      <node id="4749">
        <label>SteamVR_Action</label>
      </node>
      <node id="4744">
        <label>SteamVR_Action_Source_Map</label>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="156" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" bodystart="154" bodyend="213"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a7ddefadc173dfeee8e2c423552283d80" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a8a4f51dad7abd9b5b646ab3dc05f50ac" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>actionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a905ff9619f4ff10696ac1ebff4d5d574" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1aac97f8b8dacc8bb475ce3d055df94b9a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>ForceAddSourceToUpdateList</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a720b5bdedf05f98826a8a9e12b8b9364" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a31d4929590d0a63ae7693b87424e9990" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>GetSourceElementForIndexer</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a6bc926f32341c260d49d8f270993adf0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1af035d2609891383f3735ced3cfa1b9ab" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1aa673cb451bc9b3fcc7ce8a7b95d407d6" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1a4a43cc63a6c174a32dc8e55fd322c4c3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>IsUpdating</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1aacbc05f0647705e1268c2bda304481a9" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>OnAccessSource</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a8c5843be007a5e7a7bb2a5ad9a4451d7" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>PreInitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1ace2286a1aca371f6229a7f15c82f6329" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>PreinitializeMap</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1adae017d1a61bcde0a40806b6e2251029" prot="protected" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>PreinitializeMap</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a7a426e28fb44538575b06892049cd122" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>sources</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source___map_1a71b9fc1c80b8d185d7f07833f18cadc5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>this[SteamVR_Input_Sources inputSource]</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1a0ab9b659a3dbb75ea0dfd1ef8e925895" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>UpdateValues</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map_1a3a2ed7b8eab08eb669d835f676794927" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_In_Source_Map</scope><name>updatingSources</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
