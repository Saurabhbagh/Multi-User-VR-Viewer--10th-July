<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_c_v_r_render_models" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::CVRRenderModels</compoundname>
    <innerclass refid="struct_valve_1_1_v_r_1_1_c_v_r_render_models_1_1_get_component_state_union" prot="private">Valve::VR::CVRRenderModels::GetComponentStateUnion</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a1f75fa088c499d1e218d85fa59cc51e7" prot="private" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_i_v_r_render_models" kindref="compound">IVRRenderModels</ref></type>
        <definition>IVRRenderModels Valve.VR.CVRRenderModels.FnTable</definition>
        <argsstring></argsstring>
        <name>FnTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3158" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a341124bc10d45f24e502ad183d614440" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>internal</type>
        <definition>internal Valve.VR.CVRRenderModels.CVRRenderModels</definition>
        <argsstring>(IntPtr pInterface)</argsstring>
        <name>CVRRenderModels</name>
        <param>
          <type>IntPtr</type>
          <declname>pInterface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3159" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3159" bodyend="3162"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a51db610ee856c5d63b77677d8f22b60c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.CVRRenderModels._GetComponentStatePacked</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)</argsstring>
        <name>_GetComponentStatePacked</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_v_r_controller_state__t___packed" kindref="compound">VRControllerState_t_Packed</ref></type>
          <declname>pControllerState</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___controller_mode___state__t" kindref="compound">RenderModel_ControllerMode_State_t</ref></type>
          <declname>pState</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___component_state__t" kindref="compound">RenderModel_ComponentState_t</ref></type>
          <declname>pComponentState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3233" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a6be099382011169eae6acb8d374ceae9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
        <definition>EVRRenderModelError Valve.VR.CVRRenderModels.LoadRenderModel_Async</definition>
        <argsstring>(string pchRenderModelName, ref IntPtr ppRenderModel)</argsstring>
        <name>LoadRenderModel_Async</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>ref IntPtr</type>
          <declname>ppRenderModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3163" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3163" bodyend="3167"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ad36fe11f2fe3aeac575a5e48daaa12e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRRenderModels.FreeRenderModel</definition>
        <argsstring>(IntPtr pRenderModel)</argsstring>
        <name>FreeRenderModel</name>
        <param>
          <type>IntPtr</type>
          <declname>pRenderModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3168" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3168" bodyend="3171"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1af399586b6d1e2baffab9c62e3f5e0a6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
        <definition>EVRRenderModelError Valve.VR.CVRRenderModels.LoadTexture_Async</definition>
        <argsstring>(int textureId, ref IntPtr ppTexture)</argsstring>
        <name>LoadTexture_Async</name>
        <param>
          <type>int</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>ref IntPtr</type>
          <declname>ppTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3172" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3172" bodyend="3176"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ae2431db2c9cb3de9c208315c71b974e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRRenderModels.FreeTexture</definition>
        <argsstring>(IntPtr pTexture)</argsstring>
        <name>FreeTexture</name>
        <param>
          <type>IntPtr</type>
          <declname>pTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3177" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3177" bodyend="3180"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ab3a742c51f8ca3f667b99d8cdbadd366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
        <definition>EVRRenderModelError Valve.VR.CVRRenderModels.LoadTextureD3D11_Async</definition>
        <argsstring>(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)</argsstring>
        <name>LoadTextureD3D11_Async</name>
        <param>
          <type>int</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pD3D11Device</declname>
        </param>
        <param>
          <type>ref IntPtr</type>
          <declname>ppD3D11Texture2D</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3181" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3181" bodyend="3185"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ac30a0d95adaa26064a9e52ca97241bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
        <definition>EVRRenderModelError Valve.VR.CVRRenderModels.LoadIntoTextureD3D11_Async</definition>
        <argsstring>(int textureId, IntPtr pDstTexture)</argsstring>
        <name>LoadIntoTextureD3D11_Async</name>
        <param>
          <type>int</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pDstTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3186" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3186" bodyend="3190"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a3c553e473aea38d521f81ca755f3ee38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRRenderModels.FreeTextureD3D11</definition>
        <argsstring>(IntPtr pD3D11Texture2D)</argsstring>
        <name>FreeTextureD3D11</name>
        <param>
          <type>IntPtr</type>
          <declname>pD3D11Texture2D</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3191" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3191" bodyend="3194"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1aa45f9059f410da9f6946d41dad29561c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRRenderModels.GetRenderModelName</definition>
        <argsstring>(uint unRenderModelIndex, System.Text.StringBuilder pchRenderModelName, uint unRenderModelNameLen)</argsstring>
        <name>GetRenderModelName</name>
        <param>
          <type>uint</type>
          <declname>unRenderModelIndex</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unRenderModelNameLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3195" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3195" bodyend="3199"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ae327ea4ed3891f4dc5dfadc349d099ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRRenderModels.GetRenderModelCount</definition>
        <argsstring>()</argsstring>
        <name>GetRenderModelCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3200" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3200" bodyend="3204"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a568ad8302d430ae46af582059489a5dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRRenderModels.GetComponentCount</definition>
        <argsstring>(string pchRenderModelName)</argsstring>
        <name>GetComponentCount</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3205" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3205" bodyend="3209"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1aff8d40ef614d7ecfaadac708a7d4f04d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRRenderModels.GetComponentName</definition>
        <argsstring>(string pchRenderModelName, uint unComponentIndex, System.Text.StringBuilder pchComponentName, uint unComponentNameLen)</argsstring>
        <name>GetComponentName</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unComponentIndex</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unComponentNameLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3210" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3210" bodyend="3214"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1af4d1ca37dde0f9fcd1d5d155cb128f84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ulong</type>
        <definition>ulong Valve.VR.CVRRenderModels.GetComponentButtonMask</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName)</argsstring>
        <name>GetComponentButtonMask</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3215" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3215" bodyend="3219"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a1fb89266de3f332bc3c51b623943eb2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRRenderModels.GetComponentRenderModelName</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName, System.Text.StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)</argsstring>
        <name>GetComponentRenderModelName</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchComponentRenderModelName</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unComponentRenderModelNameLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3220" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3220" bodyend="3224"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ad8b4389985fb3dad9cfb1c4525f25ad5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRRenderModels.GetComponentStateForDevicePath</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName, ulong devicePath, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)</argsstring>
        <name>GetComponentStateForDevicePath</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>devicePath</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___controller_mode___state__t" kindref="compound">RenderModel_ControllerMode_State_t</ref></type>
          <declname>pState</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___component_state__t" kindref="compound">RenderModel_ComponentState_t</ref></type>
          <declname>pComponentState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3225" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3225" bodyend="3229"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1afda07fd17044f2e257525df29febea5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRRenderModels.GetComponentState</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)</argsstring>
        <name>GetComponentState</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_v_r_controller_state__t" kindref="compound">VRControllerState_t</ref></type>
          <declname>pControllerState</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___controller_mode___state__t" kindref="compound">RenderModel_ControllerMode_State_t</ref></type>
          <declname>pState</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_render_model___component_state__t" kindref="compound">RenderModel_ComponentState_t</ref></type>
          <declname>pComponentState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3242" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3242" bodyend="3260"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1accd21964d7bf57ddddee33251dd38701" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRRenderModels.RenderModelHasComponent</definition>
        <argsstring>(string pchRenderModelName, string pchComponentName)</argsstring>
        <name>RenderModelHasComponent</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchComponentName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3261" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3261" bodyend="3265"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a3b4303443fb1a0ab9b5688f6cf1811b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRRenderModels.GetRenderModelThumbnailURL</definition>
        <argsstring>(string pchRenderModelName, System.Text.StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)</argsstring>
        <name>GetRenderModelThumbnailURL</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchThumbnailURL</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unThumbnailURLLen</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3266" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3266" bodyend="3270"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a5a20531712ff8070bb1bbc02ae7b36fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.CVRRenderModels.GetRenderModelOriginalPath</definition>
        <argsstring>(string pchRenderModelName, System.Text.StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)</argsstring>
        <name>GetRenderModelOriginalPath</name>
        <param>
          <type>string</type>
          <declname>pchRenderModelName</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchOriginalPath</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unOriginalPathLen</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3271" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3271" bodyend="3275"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_render_models_1aa930abc30e6fdb3f7dbc438cda44b6b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.CVRRenderModels.GetRenderModelErrorNameFromEnum</definition>
        <argsstring>(EVRRenderModelError error)</argsstring>
        <name>GetRenderModelErrorNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ac95dda09bbb588fd83a8ac0ba3c82266" kindref="member">EVRRenderModelError</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3276" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3276" bodyend="3280"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3157" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3156" bodyend="3281"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a51db610ee856c5d63b77677d8f22b60c" prot="private" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>_GetComponentStatePacked</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a341124bc10d45f24e502ad183d614440" prot="private" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>CVRRenderModels</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a1f75fa088c499d1e218d85fa59cc51e7" prot="private" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>FnTable</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ad36fe11f2fe3aeac575a5e48daaa12e1" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>FreeRenderModel</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ae2431db2c9cb3de9c208315c71b974e0" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>FreeTexture</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a3c553e473aea38d521f81ca755f3ee38" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>FreeTextureD3D11</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1af4d1ca37dde0f9fcd1d5d155cb128f84" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetComponentButtonMask</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a568ad8302d430ae46af582059489a5dd" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetComponentCount</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1aff8d40ef614d7ecfaadac708a7d4f04d" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a1fb89266de3f332bc3c51b623943eb2d" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetComponentRenderModelName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1afda07fd17044f2e257525df29febea5a" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetComponentState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ad8b4389985fb3dad9cfb1c4525f25ad5" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetComponentStateForDevicePath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ae327ea4ed3891f4dc5dfadc349d099ac" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetRenderModelCount</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1aa930abc30e6fdb3f7dbc438cda44b6b1" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetRenderModelErrorNameFromEnum</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1aa45f9059f410da9f6946d41dad29561c" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetRenderModelName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a5a20531712ff8070bb1bbc02ae7b36fd" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetRenderModelOriginalPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a3b4303443fb1a0ab9b5688f6cf1811b8" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>GetRenderModelThumbnailURL</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ac30a0d95adaa26064a9e52ca97241bdc" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>LoadIntoTextureD3D11_Async</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1a6be099382011169eae6acb8d374ceae9" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>LoadRenderModel_Async</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1af399586b6d1e2baffab9c62e3f5e0a6f" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>LoadTexture_Async</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1ab3a742c51f8ca3f667b99d8cdbadd366" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>LoadTextureD3D11_Async</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_render_models_1accd21964d7bf57ddddee33251dd38701" prot="public" virt="non-virtual"><scope>Valve::VR::CVRRenderModels</scope><name>RenderModelHasComponent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
