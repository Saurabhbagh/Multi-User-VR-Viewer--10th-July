<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Pose_Base</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in" prot="public" virt="non-virtual">Valve::VR::SteamVR_Action_In&lt; SourceMap, SourceElement &gt;</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___pose" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_Pose</basecompoundref>
    <templateparamlist>
      <param>
        <type>SourceMap</type>
      </param>
      <param>
        <type>SourceElement</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a532487bde5fc10e4f520822eacaf9b6f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.localPosition</definition>
        <argsstring></argsstring>
        <name>localPosition</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The local position of this action relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="194" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6390b371b472fd2f7f4f501db7dacc96" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.localRotation</definition>
        <argsstring></argsstring>
        <name>localRotation</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The local rotation of this action relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="197" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1af04d371ae8e8552385b022d1aa788d32" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
        <definition>ETrackingResult Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.trackingState</definition>
        <argsstring></argsstring>
        <name>trackingState</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The state of the tracking system that is used to create pose data (position, rotation, etc) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="200" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1aaf2089c742c29110276191454cda9c7a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.velocity</definition>
        <argsstring></argsstring>
        <name>velocity</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The local velocity of this pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="203" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a84bf81feaa02463f8151e1ea25e16825" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.angularVelocity</definition>
        <argsstring></argsstring>
        <name>angularVelocity</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The local angular velocity of this pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="206" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1af6eb7cf17442bd20ab60aad306b49240" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.poseIsValid</definition>
        <argsstring></argsstring>
        <name>poseIsValid</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> True if the pose retrieved for this action and input source is valid (good data from the tracking source) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="209" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a352107e49074a23f2ece4ec51f7cbc2d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.deviceIsConnected</definition>
        <argsstring></argsstring>
        <name>deviceIsConnected</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> True if the device bound to this action and input source is connected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="212" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ad202da8c9e48c17edb7a9619e51d9628" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.lastLocalPosition</definition>
        <argsstring></argsstring>
        <name>lastLocalPosition</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The local position for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="215" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae33de6962f9cf4dd2e217f87f21c00db" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.lastLocalRotation</definition>
        <argsstring></argsstring>
        <name>lastLocalRotation</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The local rotation for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="218" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6457af1bdc6f13c61d2171c320d660cb" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
        <definition>ETrackingResult Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.lastTrackingState</definition>
        <argsstring></argsstring>
        <name>lastTrackingState</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The tracking state for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="221" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a46d9cbd329e828e28127f7af2d470e8c" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.lastVelocity</definition>
        <argsstring></argsstring>
        <name>lastVelocity</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The velocity for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="224" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae6b3169314d9d47df2d7346bd3514d88" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.lastAngularVelocity</definition>
        <argsstring></argsstring>
        <name>lastAngularVelocity</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The angular velocity for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="227" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a88389de1985db0b02398dbbf1405eba9" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.lastPoseIsValid</definition>
        <argsstring></argsstring>
        <name>lastPoseIsValid</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> True if the pose was valid during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="230" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a879054dc94cfe2303fd3656be573af3f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.lastDeviceIsConnected</definition>
        <argsstring></argsstring>
        <name>lastDeviceIsConnected</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> True if the device bound to this action was connected during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="233" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="233" bodyend="233"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6fed3c51e6941259760bcd88bd17c2dc" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.SetUniverseOrigin</definition>
        <argsstring>(ETrackingUniverseOrigin newOrigin)</argsstring>
        <name>SetUniverseOrigin</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f" kindref="member">ETrackingUniverseOrigin</ref></type>
          <declname>newOrigin</declname>
        </param>
        <briefdescription>
<para>Sets all pose (and skeleton) actions to use the specified universe origin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="180" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="180" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6d6534444612fba63fc9723f86745168" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.SteamVR_Action_Pose_Base</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_Action_Pose_Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="236" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ad1269e7f3b8399dfe46e7fd85f8ed481" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.UpdateValues</definition>
        <argsstring>(bool skipStateAndEventUpdates)</argsstring>
        <name>UpdateValues</name>
        <param>
          <type>bool</type>
          <declname>skipStateAndEventUpdates</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Updates the data for all the input sources the system has detected need to be updated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="242" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a078b2d70fcd9796f0872f03c6eb4cd37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetVelocitiesAtTimeOffset</definition>
        <argsstring>(SteamVR_Input_Sources inputSource, float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity)</argsstring>
        <name>GetVelocitiesAtTimeOffset</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>float</type>
          <declname>secondsFromNow</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>angularVelocity</declname>
        </param>
        <briefdescription>
<para><ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondsFromNow</parametername>
</parameternamelist>
<parameterdescription>
<para>The time offset in the future (estimated) or in the past (previously recorded) you want to get data from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the call succeeded</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="253" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a0edda26e08e24b20fe9f1bb2941ba4a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetPoseAtTimeOffset</definition>
        <argsstring>(SteamVR_Input_Sources inputSource, float secondsFromNow, out Vector3 localPosition, out Quaternion localRotation, out Vector3 velocity, out Vector3 angularVelocity)</argsstring>
        <name>GetPoseAtTimeOffset</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>float</type>
          <declname>secondsFromNow</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>localPosition</declname>
        </param>
        <param>
          <type>out Quaternion</type>
          <declname>localRotation</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>angularVelocity</declname>
        </param>
        <briefdescription>
<para><ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondsFromNow</parametername>
</parameternamelist>
<parameterdescription>
<para>The time offset in the future (estimated) or in the past (previously recorded) you want to get data from</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the call succeeded</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="264" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a95ffd5217a271d75ca471c9ccdf36215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.UpdateTransform</definition>
        <argsstring>(SteamVR_Input_Sources inputSource, Transform transformToUpdate)</argsstring>
        <name>UpdateTransform</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>transformToUpdate</declname>
        </param>
        <briefdescription>
<para>Update a transform&apos;s local position and local roation to match the pose from the most recent update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transformToUpdate</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of the object to be updated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="274" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ab007b14bb04c5d6fc1564ac4ffac1772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLocalPosition</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLocalPosition</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The local position of this action relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="281" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a4cd01c8865799b4abdb3aa05c9bce7a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLocalRotation</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLocalRotation</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The local rotation of this action relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="288" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a827a230f97d4cb064be1b679440a3593" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetVelocity</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetVelocity</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The local velocity of this pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="295" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a9e11dfd61cb934d7562f7ead82bd3977" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetAngularVelocity</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetAngularVelocity</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The local angular velocity of this pose relative to the universe origin </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="302" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a9a48969933cf18a41139748fc3fa1c58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetDeviceIsConnected</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetDeviceIsConnected</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>True if the device bound to this action and input source is connected </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="309" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae83ce8dae5f87c106ccbd0860c8f1181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetPoseIsValid</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetPoseIsValid</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>True if the pose retrieved for this action and input source is valid (good data from the tracking source) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="316" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ac4aa642c201073f77df62ff087351ca2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
        <definition>ETrackingResult Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetTrackingResult</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetTrackingResult</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The state of the tracking system that is used to create pose data (position, rotation, etc) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="323" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ab2e7b7757252e937fb6c007f36da7f57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLastLocalPosition</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastLocalPosition</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The local position for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="332" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a39183e3163c2c45a353137b92c9475ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>Quaternion Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLastLocalRotation</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastLocalRotation</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The local rotation for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="339" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a21d4d04f961d37630361750444666774" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLastVelocity</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastVelocity</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The velocity for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="346" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a1c0012123202777151db1e7364ca7abe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLastAngularVelocity</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastAngularVelocity</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The angular velocity for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="353" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a55d19b1a7931ed13d689a7c3acb31581" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLastDeviceIsConnected</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastDeviceIsConnected</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>True if the device bound to this action was connected during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="360" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a0071aa67fdb7a1f25f261f58236f182d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLastPoseIsValid</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastPoseIsValid</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>True if the pose was valid during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="367" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a3c4f99bc27df78ccb09f30f20503c20e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1abe6feab98f33191b7c27b4292012e90a" kindref="member">ETrackingResult</ref></type>
        <definition>ETrackingResult Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;.GetLastTrackingResult</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastTrackingResult</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The tracking state for this pose during the previous update </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="374" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="374" bodyend="377"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base pose action (pose and skeleton inherit from this) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4790">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4787">
        <label>SteamVR_Action&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action"/>
        <childnode refid="4788" relation="public-inheritance">
        </childnode>
        <childnode refid="4789" relation="public-inheritance">
        </childnode>
        <childnode refid="4791" relation="public-inheritance">
        </childnode>
        <childnode refid="4789" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4785">
        <label>Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
        <childnode refid="4786" relation="public-inheritance">
        </childnode>
        <childnode refid="4794" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4793">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4790" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4792">
        <label>ISteamVR_Action_In</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in"/>
        <childnode refid="4789" relation="public-inheritance">
        </childnode>
        <childnode refid="4793" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4789">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="4790" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4794">
        <label>ISteamVR_Action_Pose</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___pose"/>
        <childnode refid="4793" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4788">
        <label>IEquatable&lt; SteamVR_Action &gt;</label>
      </node>
      <node id="4786">
        <label>SteamVR_Action_In&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
        <childnode refid="4787" relation="public-inheritance">
        </childnode>
        <childnode refid="4792" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4791">
        <label>SteamVR_Action</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4800">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4797">
        <label>SteamVR_Action&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action"/>
        <childnode refid="4798" relation="public-inheritance">
        </childnode>
        <childnode refid="4799" relation="public-inheritance">
        </childnode>
        <childnode refid="4801" relation="public-inheritance">
        </childnode>
        <childnode refid="4799" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4795">
        <label>Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
        <childnode refid="4796" relation="public-inheritance">
        </childnode>
        <childnode refid="4804" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4803">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4800" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4802">
        <label>ISteamVR_Action_In</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in"/>
        <childnode refid="4799" relation="public-inheritance">
        </childnode>
        <childnode refid="4803" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4799">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="4800" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4804">
        <label>ISteamVR_Action_Pose</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___pose"/>
        <childnode refid="4803" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4798">
        <label>IEquatable&lt; SteamVR_Action &gt;</label>
      </node>
      <node id="4796">
        <label>SteamVR_Action_In&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
        <childnode refid="4797" relation="public-inheritance">
        </childnode>
        <childnode refid="4802" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4801">
        <label>SteamVR_Action</label>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" line="176" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Pose.cs" bodystart="173" bodyend="378"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a75a8c6b9641982a47e32039b131e3eca" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>actionPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ad4b01239b68cfa6a4b0daa1c91e2f134" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>actionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a136c44b47df0a9380c4488059b125fd3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>actionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a4737fe5382afbd927eb06bdcadbbbbf4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>active</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a0fd56f7ca6074a8320738f50c8d43844" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>active</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ad275cb288073b48f2b0e92a4cc797014" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a66107ca9c11bd18775b0e1bf794d3568" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a5bb4f52dca76a5fda6f9977d787c0402" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>activeDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a78f3e5c201024521dd7f575617f58244" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>activeOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a84bf81feaa02463f8151e1ea25e16825" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>angularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a129bfbee3aa107bc4fcb46716a240d88" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>changed</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afccb197dbb5d721e390e60cce83957f4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>changedTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a75746fdff4c10e89c9e43bd598a106f0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>Create&lt; CreateType &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1af69bed4c4b5b9640c2cac9e118743df3" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>CreateUninitialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a3ef78876da16318e17896536ae380e0a" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>CreateUninitialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a973b707bcccec103ca220f9e06df8662" prot="protected" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>CreateUninitialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ad2c8fc63857c6a6c9c551ec858797202" prot="protected" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>CreateUninitialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a22efd6a86141fef284c6de86ba31f75e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>CreateUninitialized&lt; CreateType &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ad9e9c7d4a4f472f28dfa9d787919384a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>CreateUninitialized&lt; CreateType &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a352107e49074a23f2ece4ec51f7cbc2d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>deviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1aee8591fed8be32dde8c11ab75b830323" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1aa47ba3da1a7fa07d5f4d70fcae84f778" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a47cd704e2eab7d9ea4ac09fb257ba4cb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>Equals</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ac09cc52154a6418bb9782117f519c3b5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>Equals</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1aa10a1be562d9c134f16601b579ec6e65" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>FindExistingActionForPartialPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af39cd279bc56854ce6cf89402e405a1c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>ForceAddSourceToUpdateList</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a765a5c4c2de688392f4968fa3dcf2703" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a7e982d8e80fc65827cce3b141e360413" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a76c9b93e06e87e5fa861423bd4102c4c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a22690e2467a2d5b78b495f7fcdd5666b" prot="public" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1adb510f6f020a3023d6bbfa59110edf58" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a86d2eae9b5b28ea8eec464abf7ea53bb" prot="public" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2cf3c55c01761a091db3afb42a3d47f2" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetActiveDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a9e11dfd61cb934d7562f7ead82bd3977" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ab5dff6e847415ea70581fb544443738d" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a641a73a51f3dc9509bbaf48667c47b71" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetCopy&lt; CreateType &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a21f1b8a683a6950f2e2cd1a2bbe42acc" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a9a48969933cf18a41139748fc3fa1c58" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ae10204d3c1c0f5e01fee7e22c8d56a15" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetHashCode</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a24bb49705ffd97a432add0cb2233ff91" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a33092fe773f3dd669be8cb019a1dffa4" prot="public" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a9f6a753a369e7932e99aebd540bdf886" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ab3f5864e5b4baaf02de9ab7eb77ba4d0" prot="public" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a1c0012123202777151db1e7364ca7abe" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a55d19b1a7931ed13d689a7c3acb31581" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ab2e7b7757252e937fb6c007f36da7f57" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a39183e3163c2c45a353137b92c9475ce" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a0071aa67fdb7a1f25f261f58236f182d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a3c4f99bc27df78ccb09f30f20503c20e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastTrackingResult</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a21d4d04f961d37630361750444666774" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLastVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a330a9cf6a0b63e08804318d49e43509e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLocalizedOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a6ae3b2c4b90917042b1fda3fe54b2d36" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLocalizedOriginPart</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ab007b14bb04c5d6fc1564ac4ffac1772" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a4cd01c8865799b4abdb3aa05c9bce7a1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1aa6babacca9654f7d8184b281b99fa004" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a0edda26e08e24b20fe9f1bb2941ba4a6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetPoseAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae83ce8dae5f87c106ccbd0860c8f1181" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ad435fe38eac2d62d6ce217644a6586af" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetRenderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a78c588d2687e397766adb5f004e3597d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetSetActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a94911ac96600a93ce23790166435b593" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetShortName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a948d9db18a20fde79dd442cd0e119fa6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetSourceMap</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a59d2546a9c1a9097e2243e1537f1bfe3" prot="public" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetSourceMap</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1accdc869f6fd50ef15580a271b6de4d30" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetTimeLastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ac4aa642c201073f77df62ff087351ca2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetTrackingResult</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a078b2d70fcd9796f0872f03c6eb4cd37" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetVelocitiesAtTimeOffset</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a827a230f97d4cb064be1b679440a3593" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>GetVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1abb2ae18798c46b03be6c44872f3da084" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1abfacc5556f01d13474d68dff1b649b64" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ac3195ebfd368a3ee5673d792b9e08eba" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>InitAfterDeserialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a5f4858a566f91219d4896161c346f9f3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a29bea2023c1139d9bd612b82d02f8d61" prot="public" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1af28d577bb913087c833873e4a66e9b2f" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>InitializeCopy</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1aee6486f13a4e850779f50c95725b30d0" prot="protected" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>InitializeCopy</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ab8b674e7217eb047723b26597088c703" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>initialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a648d3f94c79e2ec43ec9846535fbf8ef" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>IsUpdating</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a99ec33a591be6c792dff8c13b32fe675" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a38ff81951fad828a51df2bdd1f3f50f6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ad45e21db94737a22efd0efcab6401fec" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a679b7a902fc8c53b9bf421c6e96bc26a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a0c9642e77bd7d7889df24be40da84e41" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastActiveOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae6b3169314d9d47df2d7346bd3514d88" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastAngularVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a61423de9edc8a8301e81f2522d635507" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a879054dc94cfe2303fd3656be573af3f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastDeviceIsConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ad202da8c9e48c17edb7a9619e51d9628" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastLocalPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ae33de6962f9cf4dd2e217f87f21c00db" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastLocalRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a88389de1985db0b02398dbbf1405eba9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastPoseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6457af1bdc6f13c61d2171c320d660cb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastTrackingState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a46d9cbd329e828e28127f7af2d470e8c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>lastVelocity</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a400ef60ea3cecf1cd50d8da97a00d13b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>localizedOriginName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a532487bde5fc10e4f520822eacaf9b6f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>localPosition</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6390b371b472fd2f7f4f501db7dacc96" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>localRotation</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a361379ce58b79d870a16b3a07cabcdbf" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>needsReinit</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ad7b81277f914a527971510f8c1b3f38d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>operator !=</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a58a25d1d89f51b0ddcc65ebf6c1e8e54" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>operator==</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1af6eb7cf17442bd20ab60aad306b49240" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>poseIsValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ae3ab26df1e48bd668134f71845cf727a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>PreInitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a8ead085a816500f060b6cfbc96b8da87" prot="public" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>PreInitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af302f79ecf325f6507a3aca1de536097" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>renderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ad92856584dc24071f25b610fe237e4ee" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>setActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6fed3c51e6941259760bcd88bd17c2dc" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>SetUniverseOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1a70a7f08d07c54c294f26441619352401" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>sourceMap</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1ae27e9858dec18a4307cca7779ed87ad8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>startUpdatingSourceOnAccess</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1af433e8fb310a9f16c274341055fe025f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>SteamVR_Action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a6d6534444612fba63fc9723f86745168" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>SteamVR_Action_Pose_Base</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1abdb54a9331f280213d28abe5ef78ec07" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>this[SteamVR_Input_Sources inputSource]</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afd572897e423daf987b7708a6d8dc890" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>trackedDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1af04d371ae8e8552385b022d1aa788d32" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>trackingState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1aab211e4315d3a39b4db1e033ae1e353b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>TryNeedsInitData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_1af53dc99944ee543c7570e6defc55aa48" prot="public" virt="pure-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>TryNeedsInitData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2b6e25e75c6ebc79eda8b335abedb031" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>updateTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1a95ffd5217a271d75ca471c9ccdf36215" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>UpdateTransform</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1ad1269e7f3b8399dfe46e7fd85f8ed481" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>UpdateValues</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ac2e658d37dcdb843a0cff2e62cbd84cf" prot="public" virt="virtual" ambiguityscope="Valve::VR::SteamVR_Action_In."><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>UpdateValues</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base_1aaf2089c742c29110276191454cda9c7a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Pose_Base</scope><name>velocity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
