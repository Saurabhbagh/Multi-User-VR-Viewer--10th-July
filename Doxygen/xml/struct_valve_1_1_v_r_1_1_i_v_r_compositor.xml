<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_valve_1_1_v_r_1_1_i_v_r_compositor" kind="struct" language="C#" prot="public">
    <compoundname>Valve::VR::IVRCompositor</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a7d12544c3a7ff539b520c1ff4941aba5" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a8f3a63140b76c144825aef005d57b9a7" kindref="member">_SetTrackingSpace</ref></type>
        <definition>internal _SetTrackingSpace Valve.VR.IVRCompositor.SetTrackingSpace</definition>
        <argsstring></argsstring>
        <name>SetTrackingSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="651" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="651" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a66d7b3f8b2d98b50b94a7b6723593ab0" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a4a4568c4dfcd60444a4ab3b7bf47a019" kindref="member">_GetTrackingSpace</ref></type>
        <definition>internal _GetTrackingSpace Valve.VR.IVRCompositor.GetTrackingSpace</definition>
        <argsstring></argsstring>
        <name>GetTrackingSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="656" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6506c136d5242a72d1cab500c8e81edb" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a526e58af311d731d5802cb0d3736f7de" kindref="member">_WaitGetPoses</ref></type>
        <definition>internal _WaitGetPoses Valve.VR.IVRCompositor.WaitGetPoses</definition>
        <argsstring></argsstring>
        <name>WaitGetPoses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="661" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="661" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a42be7eeaea139f04df7260a6f74791a3" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab8dca04ae79b8aa27b29fb0a87260240" kindref="member">_GetLastPoses</ref></type>
        <definition>internal _GetLastPoses Valve.VR.IVRCompositor.GetLastPoses</definition>
        <argsstring></argsstring>
        <name>GetLastPoses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="666" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6fbed9f7ac57e65727afe7d867883c12" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a707d9c738e4eb3162086a2b14bca3c70" kindref="member">_GetLastPoseForTrackedDeviceIndex</ref></type>
        <definition>internal _GetLastPoseForTrackedDeviceIndex Valve.VR.IVRCompositor.GetLastPoseForTrackedDeviceIndex</definition>
        <argsstring></argsstring>
        <name>GetLastPoseForTrackedDeviceIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="671" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1abe6d8cca56250c7520eb5680b59726e0" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1422994a772786e464dde9703ca9bd7f" kindref="member">_Submit</ref></type>
        <definition>internal _Submit Valve.VR.IVRCompositor.Submit</definition>
        <argsstring></argsstring>
        <name>Submit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="676" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a4ccb6191c65b45e6f39671ec913a5620" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a24bbc59100ce60397cba42d396d7b51c" kindref="member">_ClearLastSubmittedFrame</ref></type>
        <definition>internal _ClearLastSubmittedFrame Valve.VR.IVRCompositor.ClearLastSubmittedFrame</definition>
        <argsstring></argsstring>
        <name>ClearLastSubmittedFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="681" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aac1c3ee99b666cd9f38872f510d45161" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1897063eebdbc1ee4d4ae821a6d584cc" kindref="member">_PostPresentHandoff</ref></type>
        <definition>internal _PostPresentHandoff Valve.VR.IVRCompositor.PostPresentHandoff</definition>
        <argsstring></argsstring>
        <name>PostPresentHandoff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="686" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad2cdd4bf978eeda19961df5c88e424ce" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6346b53c57bb41157b6fa9946537b334" kindref="member">_GetFrameTiming</ref></type>
        <definition>internal _GetFrameTiming Valve.VR.IVRCompositor.GetFrameTiming</definition>
        <argsstring></argsstring>
        <name>GetFrameTiming</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="691" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1acbcbbcee7076791f10d650af68a95328" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a136355380a2308c5dc9f690b1ca77c60" kindref="member">_GetFrameTimings</ref></type>
        <definition>internal _GetFrameTimings Valve.VR.IVRCompositor.GetFrameTimings</definition>
        <argsstring></argsstring>
        <name>GetFrameTimings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="696" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a16e7269af018b0589ede9e3d7d618487" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a946f8645a1cf6d6380064532df33d6d0" kindref="member">_GetFrameTimeRemaining</ref></type>
        <definition>internal _GetFrameTimeRemaining Valve.VR.IVRCompositor.GetFrameTimeRemaining</definition>
        <argsstring></argsstring>
        <name>GetFrameTimeRemaining</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="701" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa3cf0b9048bdc0ee3e1c0a9a431bebe1" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5b17db2366df6ea7d74ca5b03c9037d4" kindref="member">_GetCumulativeStats</ref></type>
        <definition>internal _GetCumulativeStats Valve.VR.IVRCompositor.GetCumulativeStats</definition>
        <argsstring></argsstring>
        <name>GetCumulativeStats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="706" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a09cc2ac11d93021e5f9e6530fab0757b" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab967ee4e10a9344a4790c20786ed21c6" kindref="member">_FadeToColor</ref></type>
        <definition>internal _FadeToColor Valve.VR.IVRCompositor.FadeToColor</definition>
        <argsstring></argsstring>
        <name>FadeToColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="711" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a628fbabf5a244406d5112eced13c63dc" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae7afb03647118e23520b2b59de4c5ec4" kindref="member">_GetCurrentFadeColor</ref></type>
        <definition>internal _GetCurrentFadeColor Valve.VR.IVRCompositor.GetCurrentFadeColor</definition>
        <argsstring></argsstring>
        <name>GetCurrentFadeColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="716" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a8db3c38a395e7352920379547c8071a0" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a24abe64d80aceed84bdeabb788a8b683" kindref="member">_FadeGrid</ref></type>
        <definition>internal _FadeGrid Valve.VR.IVRCompositor.FadeGrid</definition>
        <argsstring></argsstring>
        <name>FadeGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="721" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a391e74f059c4716270e2e8d168662850" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1af32ee4004d4955894735f00e6d4dfbe3" kindref="member">_GetCurrentGridAlpha</ref></type>
        <definition>internal _GetCurrentGridAlpha Valve.VR.IVRCompositor.GetCurrentGridAlpha</definition>
        <argsstring></argsstring>
        <name>GetCurrentGridAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="726" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a484354e0ace511b6b47aa7a25157882a" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6d4862a15d14c6786ea787b59a6d08c1" kindref="member">_SetSkyboxOverride</ref></type>
        <definition>internal _SetSkyboxOverride Valve.VR.IVRCompositor.SetSkyboxOverride</definition>
        <argsstring></argsstring>
        <name>SetSkyboxOverride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="731" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a804bbc949f333e29b412119c82a3b713" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aed1353bac615b802be6754380e30fbf1" kindref="member">_ClearSkyboxOverride</ref></type>
        <definition>internal _ClearSkyboxOverride Valve.VR.IVRCompositor.ClearSkyboxOverride</definition>
        <argsstring></argsstring>
        <name>ClearSkyboxOverride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="736" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="736" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae584ac5635dcc4a157efdf90e5c04662" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a0a02f8e41398d3129dea3bf9ba3a8a25" kindref="member">_CompositorBringToFront</ref></type>
        <definition>internal _CompositorBringToFront Valve.VR.IVRCompositor.CompositorBringToFront</definition>
        <argsstring></argsstring>
        <name>CompositorBringToFront</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="741" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa88d54da01f8620a3c0c53c031c0025d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad0df5d7509e71103e962c8b331d6cfd5" kindref="member">_CompositorGoToBack</ref></type>
        <definition>internal _CompositorGoToBack Valve.VR.IVRCompositor.CompositorGoToBack</definition>
        <argsstring></argsstring>
        <name>CompositorGoToBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="746" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a3fa5673221b03129290c0fd5dd9401ed" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a06ecd250e5b6b1b461d10582eb94e16c" kindref="member">_CompositorQuit</ref></type>
        <definition>internal _CompositorQuit Valve.VR.IVRCompositor.CompositorQuit</definition>
        <argsstring></argsstring>
        <name>CompositorQuit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="751" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a7cae2a894784dd0fb2302e20d60e7ff8" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a860925c25ba19ea99a70ab8b080fc57e" kindref="member">_IsFullscreen</ref></type>
        <definition>internal _IsFullscreen Valve.VR.IVRCompositor.IsFullscreen</definition>
        <argsstring></argsstring>
        <name>IsFullscreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="756" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a7e7b837ace250e8312b5fe1d3353f964" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5ae9bface8b9a771d2d7240a2b425a7e" kindref="member">_GetCurrentSceneFocusProcess</ref></type>
        <definition>internal _GetCurrentSceneFocusProcess Valve.VR.IVRCompositor.GetCurrentSceneFocusProcess</definition>
        <argsstring></argsstring>
        <name>GetCurrentSceneFocusProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="761" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad5c9c07736931cc1663a766dfcfa13b0" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a907be4acb4579b5ee85ba1c6b455f1ea" kindref="member">_GetLastFrameRenderer</ref></type>
        <definition>internal _GetLastFrameRenderer Valve.VR.IVRCompositor.GetLastFrameRenderer</definition>
        <argsstring></argsstring>
        <name>GetLastFrameRenderer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="766" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a2b36be4ce964cca2b015912751c4ae15" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9987f397d90497cfb7dec1feeeab53e4" kindref="member">_CanRenderScene</ref></type>
        <definition>internal _CanRenderScene Valve.VR.IVRCompositor.CanRenderScene</definition>
        <argsstring></argsstring>
        <name>CanRenderScene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="771" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9c2ff7d65d34419d7160d678f8b57e0a" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a752ed27fd9773cc53b3be5e0d7cd2556" kindref="member">_ShowMirrorWindow</ref></type>
        <definition>internal _ShowMirrorWindow Valve.VR.IVRCompositor.ShowMirrorWindow</definition>
        <argsstring></argsstring>
        <name>ShowMirrorWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="776" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9682d6250bef4cba9b16528818ca241d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae7894fcd457855bc576170f3ef45a658" kindref="member">_HideMirrorWindow</ref></type>
        <definition>internal _HideMirrorWindow Valve.VR.IVRCompositor.HideMirrorWindow</definition>
        <argsstring></argsstring>
        <name>HideMirrorWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="781" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6fc49d73e29d2dead001115ec3a6e8cc" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a709b0f249fd12044c3c24298e0794585" kindref="member">_IsMirrorWindowVisible</ref></type>
        <definition>internal _IsMirrorWindowVisible Valve.VR.IVRCompositor.IsMirrorWindowVisible</definition>
        <argsstring></argsstring>
        <name>IsMirrorWindowVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="786" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a3fead654c9ee024f9b7becf3150f5214" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a351b398aced3747ea129a949a86c5293" kindref="member">_CompositorDumpImages</ref></type>
        <definition>internal _CompositorDumpImages Valve.VR.IVRCompositor.CompositorDumpImages</definition>
        <argsstring></argsstring>
        <name>CompositorDumpImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="791" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aacc73748f1dfc0e1fdcfeb5129525a66" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa6f4f906ffd776b1d99a73db6224e3dd" kindref="member">_ShouldAppRenderWithLowResources</ref></type>
        <definition>internal _ShouldAppRenderWithLowResources Valve.VR.IVRCompositor.ShouldAppRenderWithLowResources</definition>
        <argsstring></argsstring>
        <name>ShouldAppRenderWithLowResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="796" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="796" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ac8929e7619ebe2ffa6a379f5ff7e29cd" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a36094af51a8c04b9a3e162457ce669b9" kindref="member">_ForceInterleavedReprojectionOn</ref></type>
        <definition>internal _ForceInterleavedReprojectionOn Valve.VR.IVRCompositor.ForceInterleavedReprojectionOn</definition>
        <argsstring></argsstring>
        <name>ForceInterleavedReprojectionOn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="801" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae9c9a863909027b2a1abb60d474010fe" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a41854e10b434af0c1747fdb05b91098f" kindref="member">_ForceReconnectProcess</ref></type>
        <definition>internal _ForceReconnectProcess Valve.VR.IVRCompositor.ForceReconnectProcess</definition>
        <argsstring></argsstring>
        <name>ForceReconnectProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="806" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9a65d3f0ab17d11d1771dcd4167d9092" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a52c4de7b702770e872b7ef001d8c6b32" kindref="member">_SuspendRendering</ref></type>
        <definition>internal _SuspendRendering Valve.VR.IVRCompositor.SuspendRendering</definition>
        <argsstring></argsstring>
        <name>SuspendRendering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="811" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9a72d670b1de214f0d2d6d8fd5ae46b4" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9046a6da4f9d12e76f42e8476d698cc5" kindref="member">_GetMirrorTextureD3D11</ref></type>
        <definition>internal _GetMirrorTextureD3D11 Valve.VR.IVRCompositor.GetMirrorTextureD3D11</definition>
        <argsstring></argsstring>
        <name>GetMirrorTextureD3D11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="816" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa8f5713024670c41ee1018e6692b371d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a79364707bc336637d4790df0a5949c2f" kindref="member">_ReleaseMirrorTextureD3D11</ref></type>
        <definition>internal _ReleaseMirrorTextureD3D11 Valve.VR.IVRCompositor.ReleaseMirrorTextureD3D11</definition>
        <argsstring></argsstring>
        <name>ReleaseMirrorTextureD3D11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="821" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5519fa0d05576c6021df19c08c2e350f" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a99ed37ffd770d7a7e9f1cd1c843b0f91" kindref="member">_GetMirrorTextureGL</ref></type>
        <definition>internal _GetMirrorTextureGL Valve.VR.IVRCompositor.GetMirrorTextureGL</definition>
        <argsstring></argsstring>
        <name>GetMirrorTextureGL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="826" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="826" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a484fee3e3816dd0734ac90ee12773abc" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a8007bc81c8368208327b657a2d9d70b5" kindref="member">_ReleaseSharedGLTexture</ref></type>
        <definition>internal _ReleaseSharedGLTexture Valve.VR.IVRCompositor.ReleaseSharedGLTexture</definition>
        <argsstring></argsstring>
        <name>ReleaseSharedGLTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="831" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1fe3254db89bea4506082adb62200cf3" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1af32b455cb8d7467ceaed3018cc163bfe" kindref="member">_LockGLSharedTextureForAccess</ref></type>
        <definition>internal _LockGLSharedTextureForAccess Valve.VR.IVRCompositor.LockGLSharedTextureForAccess</definition>
        <argsstring></argsstring>
        <name>LockGLSharedTextureForAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="836" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="836" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1afee8c0932af2f5331c01b76b5023df45" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad503ea42a467e1498243ff87b76188f0" kindref="member">_UnlockGLSharedTextureForAccess</ref></type>
        <definition>internal _UnlockGLSharedTextureForAccess Valve.VR.IVRCompositor.UnlockGLSharedTextureForAccess</definition>
        <argsstring></argsstring>
        <name>UnlockGLSharedTextureForAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="841" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="841" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad734c406ba294357c6a9d992154774e1" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab79e60bb33523a61ea4347c37827535f" kindref="member">_GetVulkanInstanceExtensionsRequired</ref></type>
        <definition>internal _GetVulkanInstanceExtensionsRequired Valve.VR.IVRCompositor.GetVulkanInstanceExtensionsRequired</definition>
        <argsstring></argsstring>
        <name>GetVulkanInstanceExtensionsRequired</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="846" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a601861efee1846fb7ffe71b6405f231a" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab2e36a8e0528d7f4d66abc820366dba4" kindref="member">_GetVulkanDeviceExtensionsRequired</ref></type>
        <definition>internal _GetVulkanDeviceExtensionsRequired Valve.VR.IVRCompositor.GetVulkanDeviceExtensionsRequired</definition>
        <argsstring></argsstring>
        <name>GetVulkanDeviceExtensionsRequired</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="851" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="851" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa68aa9770c77aebb53902c7b2418af99" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1acec020845b093a0661c4f86e03fb4390" kindref="member">_SetExplicitTimingMode</ref></type>
        <definition>internal _SetExplicitTimingMode Valve.VR.IVRCompositor.SetExplicitTimingMode</definition>
        <argsstring></argsstring>
        <name>SetExplicitTimingMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="856" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1af9a37b27e8eaea8c44e974cfe051086b" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5db66fc4dafe46e41c5cf85bf8d1c719" kindref="member">_SubmitExplicitTimingData</ref></type>
        <definition>internal _SubmitExplicitTimingData Valve.VR.IVRCompositor.SubmitExplicitTimingData</definition>
        <argsstring></argsstring>
        <name>SubmitExplicitTimingData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="861" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae7d87c497e0e72e63a8240ba48b3398b" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1a133e0381c30b872f74b12228080e87" kindref="member">_IsMotionSmoothingEnabled</ref></type>
        <definition>internal _IsMotionSmoothingEnabled Valve.VR.IVRCompositor.IsMotionSmoothingEnabled</definition>
        <argsstring></argsstring>
        <name>IsMotionSmoothingEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="866" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="866" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a8f3a63140b76c144825aef005d57b9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._SetTrackingSpace</definition>
        <argsstring>(ETrackingUniverseOrigin eOrigin)</argsstring>
        <name>_SetTrackingSpace</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f" kindref="member">ETrackingUniverseOrigin</ref></type>
          <declname>eOrigin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="649" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a4a4568c4dfcd60444a4ab3b7bf47a019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f" kindref="member">ETrackingUniverseOrigin</ref></type>
        <definition>internal delegate ETrackingUniverseOrigin Valve.VR.IVRCompositor._GetTrackingSpace</definition>
        <argsstring>()</argsstring>
        <name>_GetTrackingSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="654" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a526e58af311d731d5802cb0d3736f7de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac34ee1034fda668ccd45f57676ded81b" kindref="member">EVRCompositorError</ref></type>
        <definition>internal delegate EVRCompositorError Valve.VR.IVRCompositor._WaitGetPoses</definition>
        <argsstring>([In, Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In, Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount)</argsstring>
        <name>_WaitGetPoses</name>
        <param>
          <attributes>[In, Out]</attributes>
          <type><ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref> []</type>
          <declname>pRenderPoseArray</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unRenderPoseArrayCount</declname>
        </param>
        <param>
          <attributes>[In, Out]</attributes>
          <type><ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref> []</type>
          <declname>pGamePoseArray</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unGamePoseArrayCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="659" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab8dca04ae79b8aa27b29fb0a87260240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac34ee1034fda668ccd45f57676ded81b" kindref="member">EVRCompositorError</ref></type>
        <definition>internal delegate EVRCompositorError Valve.VR.IVRCompositor._GetLastPoses</definition>
        <argsstring>([In, Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In, Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount)</argsstring>
        <name>_GetLastPoses</name>
        <param>
          <attributes>[In, Out]</attributes>
          <type><ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref> []</type>
          <declname>pRenderPoseArray</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unRenderPoseArrayCount</declname>
        </param>
        <param>
          <attributes>[In, Out]</attributes>
          <type><ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref> []</type>
          <declname>pGamePoseArray</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unGamePoseArrayCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a707d9c738e4eb3162086a2b14bca3c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac34ee1034fda668ccd45f57676ded81b" kindref="member">EVRCompositorError</ref></type>
        <definition>internal delegate EVRCompositorError Valve.VR.IVRCompositor._GetLastPoseForTrackedDeviceIndex</definition>
        <argsstring>(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)</argsstring>
        <name>_GetLastPoseForTrackedDeviceIndex</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref></type>
          <declname>pOutputPose</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref></type>
          <declname>pOutputGamePose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="669" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1422994a772786e464dde9703ca9bd7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac34ee1034fda668ccd45f57676ded81b" kindref="member">EVRCompositorError</ref></type>
        <definition>internal delegate EVRCompositorError Valve.VR.IVRCompositor._Submit</definition>
        <argsstring>(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)</argsstring>
        <name>_Submit</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880" kindref="member">EVREye</ref></type>
          <declname>eEye</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_texture__t" kindref="compound">Texture_t</ref></type>
          <declname>pTexture</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_v_r_texture_bounds__t" kindref="compound">VRTextureBounds_t</ref></type>
          <declname>pBounds</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ad103abad1c8abaa4b384eccf2605265f" kindref="member">EVRSubmitFlags</ref></type>
          <declname>nSubmitFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="674" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a24bbc59100ce60397cba42d396d7b51c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._ClearLastSubmittedFrame</definition>
        <argsstring>()</argsstring>
        <name>_ClearLastSubmittedFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="679" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1897063eebdbc1ee4d4ae821a6d584cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._PostPresentHandoff</definition>
        <argsstring>()</argsstring>
        <name>_PostPresentHandoff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6346b53c57bb41157b6fa9946537b334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRCompositor._GetFrameTiming</definition>
        <argsstring>(ref Compositor_FrameTiming pTiming, uint unFramesAgo)</argsstring>
        <name>_GetFrameTiming</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_compositor___frame_timing" kindref="compound">Compositor_FrameTiming</ref></type>
          <declname>pTiming</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unFramesAgo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a136355380a2308c5dc9f690b1ca77c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRCompositor._GetFrameTimings</definition>
        <argsstring>([In, Out] Compositor_FrameTiming[] pTiming, uint nFrames)</argsstring>
        <name>_GetFrameTimings</name>
        <param>
          <attributes>[In, Out]</attributes>
          <type><ref refid="struct_valve_1_1_v_r_1_1_compositor___frame_timing" kindref="compound">Compositor_FrameTiming</ref> []</type>
          <declname>pTiming</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a946f8645a1cf6d6380064532df33d6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate float</type>
        <definition>internal delegate float Valve.VR.IVRCompositor._GetFrameTimeRemaining</definition>
        <argsstring>()</argsstring>
        <name>_GetFrameTimeRemaining</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5b17db2366df6ea7d74ca5b03c9037d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._GetCumulativeStats</definition>
        <argsstring>(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)</argsstring>
        <name>_GetCumulativeStats</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_compositor___cumulative_stats" kindref="compound">Compositor_CumulativeStats</ref></type>
          <declname>pStats</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nStatsSizeInBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="704" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab967ee4e10a9344a4790c20786ed21c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._FadeToColor</definition>
        <argsstring>(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)</argsstring>
        <name>_FadeToColor</name>
        <param>
          <type>float</type>
          <declname>fSeconds</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fRed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fGreen</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fBlue</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fAlpha</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bBackground</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="709" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae7afb03647118e23520b2b59de4c5ec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="struct_valve_1_1_v_r_1_1_hmd_color__t" kindref="compound">HmdColor_t</ref></type>
        <definition>internal delegate HmdColor_t Valve.VR.IVRCompositor._GetCurrentFadeColor</definition>
        <argsstring>(bool bBackground)</argsstring>
        <name>_GetCurrentFadeColor</name>
        <param>
          <type>bool</type>
          <declname>bBackground</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="714" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a24abe64d80aceed84bdeabb788a8b683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._FadeGrid</definition>
        <argsstring>(float fSeconds, bool bFadeIn)</argsstring>
        <name>_FadeGrid</name>
        <param>
          <type>float</type>
          <declname>fSeconds</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bFadeIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1af32ee4004d4955894735f00e6d4dfbe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate float</type>
        <definition>internal delegate float Valve.VR.IVRCompositor._GetCurrentGridAlpha</definition>
        <argsstring>()</argsstring>
        <name>_GetCurrentGridAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6d4862a15d14c6786ea787b59a6d08c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac34ee1034fda668ccd45f57676ded81b" kindref="member">EVRCompositorError</ref></type>
        <definition>internal delegate EVRCompositorError Valve.VR.IVRCompositor._SetSkyboxOverride</definition>
        <argsstring>([In, Out] Texture_t[] pTextures, uint unTextureCount)</argsstring>
        <name>_SetSkyboxOverride</name>
        <param>
          <attributes>[In, Out]</attributes>
          <type><ref refid="struct_valve_1_1_v_r_1_1_texture__t" kindref="compound">Texture_t</ref> []</type>
          <declname>pTextures</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unTextureCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="729" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aed1353bac615b802be6754380e30fbf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._ClearSkyboxOverride</definition>
        <argsstring>()</argsstring>
        <name>_ClearSkyboxOverride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="734" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a0a02f8e41398d3129dea3bf9ba3a8a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._CompositorBringToFront</definition>
        <argsstring>()</argsstring>
        <name>_CompositorBringToFront</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad0df5d7509e71103e962c8b331d6cfd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._CompositorGoToBack</definition>
        <argsstring>()</argsstring>
        <name>_CompositorGoToBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="744" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a06ecd250e5b6b1b461d10582eb94e16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._CompositorQuit</definition>
        <argsstring>()</argsstring>
        <name>_CompositorQuit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="749" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a860925c25ba19ea99a70ab8b080fc57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRCompositor._IsFullscreen</definition>
        <argsstring>()</argsstring>
        <name>_IsFullscreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="754" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5ae9bface8b9a771d2d7240a2b425a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRCompositor._GetCurrentSceneFocusProcess</definition>
        <argsstring>()</argsstring>
        <name>_GetCurrentSceneFocusProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="759" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a907be4acb4579b5ee85ba1c6b455f1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRCompositor._GetLastFrameRenderer</definition>
        <argsstring>()</argsstring>
        <name>_GetLastFrameRenderer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="764" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9987f397d90497cfb7dec1feeeab53e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRCompositor._CanRenderScene</definition>
        <argsstring>()</argsstring>
        <name>_CanRenderScene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="769" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a752ed27fd9773cc53b3be5e0d7cd2556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._ShowMirrorWindow</definition>
        <argsstring>()</argsstring>
        <name>_ShowMirrorWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="774" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae7894fcd457855bc576170f3ef45a658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._HideMirrorWindow</definition>
        <argsstring>()</argsstring>
        <name>_HideMirrorWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="779" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a709b0f249fd12044c3c24298e0794585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRCompositor._IsMirrorWindowVisible</definition>
        <argsstring>()</argsstring>
        <name>_IsMirrorWindowVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a351b398aced3747ea129a949a86c5293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._CompositorDumpImages</definition>
        <argsstring>()</argsstring>
        <name>_CompositorDumpImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa6f4f906ffd776b1d99a73db6224e3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRCompositor._ShouldAppRenderWithLowResources</definition>
        <argsstring>()</argsstring>
        <name>_ShouldAppRenderWithLowResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="794" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a36094af51a8c04b9a3e162457ce669b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._ForceInterleavedReprojectionOn</definition>
        <argsstring>(bool bOverride)</argsstring>
        <name>_ForceInterleavedReprojectionOn</name>
        <param>
          <type>bool</type>
          <declname>bOverride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="799" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a41854e10b434af0c1747fdb05b91098f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._ForceReconnectProcess</definition>
        <argsstring>()</argsstring>
        <name>_ForceReconnectProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="804" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a52c4de7b702770e872b7ef001d8c6b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._SuspendRendering</definition>
        <argsstring>(bool bSuspend)</argsstring>
        <name>_SuspendRendering</name>
        <param>
          <type>bool</type>
          <declname>bSuspend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="809" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9046a6da4f9d12e76f42e8476d698cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac34ee1034fda668ccd45f57676ded81b" kindref="member">EVRCompositorError</ref></type>
        <definition>internal delegate EVRCompositorError Valve.VR.IVRCompositor._GetMirrorTextureD3D11</definition>
        <argsstring>(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)</argsstring>
        <name>_GetMirrorTextureD3D11</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880" kindref="member">EVREye</ref></type>
          <declname>eEye</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pD3D11DeviceOrResource</declname>
        </param>
        <param>
          <type>ref IntPtr</type>
          <declname>ppD3D11ShaderResourceView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="814" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a79364707bc336637d4790df0a5949c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._ReleaseMirrorTextureD3D11</definition>
        <argsstring>(IntPtr pD3D11ShaderResourceView)</argsstring>
        <name>_ReleaseMirrorTextureD3D11</name>
        <param>
          <type>IntPtr</type>
          <declname>pD3D11ShaderResourceView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="819" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a99ed37ffd770d7a7e9f1cd1c843b0f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac34ee1034fda668ccd45f57676ded81b" kindref="member">EVRCompositorError</ref></type>
        <definition>internal delegate EVRCompositorError Valve.VR.IVRCompositor._GetMirrorTextureGL</definition>
        <argsstring>(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)</argsstring>
        <name>_GetMirrorTextureGL</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880" kindref="member">EVREye</ref></type>
          <declname>eEye</declname>
        </param>
        <param>
          <type>ref uint</type>
          <declname>pglTextureId</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pglSharedTextureHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="824" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a8007bc81c8368208327b657a2d9d70b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRCompositor._ReleaseSharedGLTexture</definition>
        <argsstring>(uint glTextureId, IntPtr glSharedTextureHandle)</argsstring>
        <name>_ReleaseSharedGLTexture</name>
        <param>
          <type>uint</type>
          <declname>glTextureId</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>glSharedTextureHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="829" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1af32b455cb8d7467ceaed3018cc163bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._LockGLSharedTextureForAccess</definition>
        <argsstring>(IntPtr glSharedTextureHandle)</argsstring>
        <name>_LockGLSharedTextureForAccess</name>
        <param>
          <type>IntPtr</type>
          <declname>glSharedTextureHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="834" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad503ea42a467e1498243ff87b76188f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._UnlockGLSharedTextureForAccess</definition>
        <argsstring>(IntPtr glSharedTextureHandle)</argsstring>
        <name>_UnlockGLSharedTextureForAccess</name>
        <param>
          <type>IntPtr</type>
          <declname>glSharedTextureHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="839" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab79e60bb33523a61ea4347c37827535f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRCompositor._GetVulkanInstanceExtensionsRequired</definition>
        <argsstring>(System.Text.StringBuilder pchValue, uint unBufferSize)</argsstring>
        <name>_GetVulkanInstanceExtensionsRequired</name>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchValue</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unBufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="844" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab2e36a8e0528d7f4d66abc820366dba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRCompositor._GetVulkanDeviceExtensionsRequired</definition>
        <argsstring>(IntPtr pPhysicalDevice, System.Text.StringBuilder pchValue, uint unBufferSize)</argsstring>
        <name>_GetVulkanDeviceExtensionsRequired</name>
        <param>
          <type>IntPtr</type>
          <declname>pPhysicalDevice</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchValue</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unBufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="849" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1acec020845b093a0661c4f86e03fb4390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRCompositor._SetExplicitTimingMode</definition>
        <argsstring>(EVRCompositorTimingMode eTimingMode)</argsstring>
        <name>_SetExplicitTimingMode</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a9fcb102e844540a2246475933f824463" kindref="member">EVRCompositorTimingMode</ref></type>
          <declname>eTimingMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="854" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5db66fc4dafe46e41c5cf85bf8d1c719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1ac34ee1034fda668ccd45f57676ded81b" kindref="member">EVRCompositorError</ref></type>
        <definition>internal delegate EVRCompositorError Valve.VR.IVRCompositor._SubmitExplicitTimingData</definition>
        <argsstring>()</argsstring>
        <name>_SubmitExplicitTimingData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="859" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1a133e0381c30b872f74b12228080e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRCompositor._IsMotionSmoothingEnabled</definition>
        <argsstring>()</argsstring>
        <name>_IsMotionSmoothingEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="864" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="647" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="646" bodyend="868"/>
    <listofallmembers>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9987f397d90497cfb7dec1feeeab53e4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_CanRenderScene</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a24bbc59100ce60397cba42d396d7b51c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_ClearLastSubmittedFrame</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aed1353bac615b802be6754380e30fbf1" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_ClearSkyboxOverride</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a0a02f8e41398d3129dea3bf9ba3a8a25" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_CompositorBringToFront</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a351b398aced3747ea129a949a86c5293" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_CompositorDumpImages</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad0df5d7509e71103e962c8b331d6cfd5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_CompositorGoToBack</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a06ecd250e5b6b1b461d10582eb94e16c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_CompositorQuit</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a24abe64d80aceed84bdeabb788a8b683" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_FadeGrid</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab967ee4e10a9344a4790c20786ed21c6" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_FadeToColor</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a36094af51a8c04b9a3e162457ce669b9" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_ForceInterleavedReprojectionOn</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a41854e10b434af0c1747fdb05b91098f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_ForceReconnectProcess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5b17db2366df6ea7d74ca5b03c9037d4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetCumulativeStats</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae7afb03647118e23520b2b59de4c5ec4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetCurrentFadeColor</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1af32ee4004d4955894735f00e6d4dfbe3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetCurrentGridAlpha</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5ae9bface8b9a771d2d7240a2b425a7e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetCurrentSceneFocusProcess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a946f8645a1cf6d6380064532df33d6d0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetFrameTimeRemaining</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6346b53c57bb41157b6fa9946537b334" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetFrameTiming</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a136355380a2308c5dc9f690b1ca77c60" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetFrameTimings</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a907be4acb4579b5ee85ba1c6b455f1ea" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetLastFrameRenderer</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a707d9c738e4eb3162086a2b14bca3c70" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetLastPoseForTrackedDeviceIndex</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab8dca04ae79b8aa27b29fb0a87260240" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetLastPoses</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9046a6da4f9d12e76f42e8476d698cc5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetMirrorTextureD3D11</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a99ed37ffd770d7a7e9f1cd1c843b0f91" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetMirrorTextureGL</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a4a4568c4dfcd60444a4ab3b7bf47a019" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetTrackingSpace</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab2e36a8e0528d7f4d66abc820366dba4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetVulkanDeviceExtensionsRequired</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ab79e60bb33523a61ea4347c37827535f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_GetVulkanInstanceExtensionsRequired</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae7894fcd457855bc576170f3ef45a658" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_HideMirrorWindow</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a860925c25ba19ea99a70ab8b080fc57e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_IsFullscreen</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a709b0f249fd12044c3c24298e0794585" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_IsMirrorWindowVisible</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1a133e0381c30b872f74b12228080e87" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_IsMotionSmoothingEnabled</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1af32b455cb8d7467ceaed3018cc163bfe" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_LockGLSharedTextureForAccess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1897063eebdbc1ee4d4ae821a6d584cc" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_PostPresentHandoff</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a79364707bc336637d4790df0a5949c2f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_ReleaseMirrorTextureD3D11</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a8007bc81c8368208327b657a2d9d70b5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_ReleaseSharedGLTexture</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1acec020845b093a0661c4f86e03fb4390" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_SetExplicitTimingMode</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6d4862a15d14c6786ea787b59a6d08c1" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_SetSkyboxOverride</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a8f3a63140b76c144825aef005d57b9a7" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_SetTrackingSpace</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa6f4f906ffd776b1d99a73db6224e3dd" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_ShouldAppRenderWithLowResources</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a752ed27fd9773cc53b3be5e0d7cd2556" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_ShowMirrorWindow</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1422994a772786e464dde9703ca9bd7f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_Submit</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5db66fc4dafe46e41c5cf85bf8d1c719" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_SubmitExplicitTimingData</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a52c4de7b702770e872b7ef001d8c6b32" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_SuspendRendering</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad503ea42a467e1498243ff87b76188f0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_UnlockGLSharedTextureForAccess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a526e58af311d731d5802cb0d3736f7de" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>_WaitGetPoses</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a2b36be4ce964cca2b015912751c4ae15" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>CanRenderScene</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a4ccb6191c65b45e6f39671ec913a5620" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>ClearLastSubmittedFrame</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a804bbc949f333e29b412119c82a3b713" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>ClearSkyboxOverride</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae584ac5635dcc4a157efdf90e5c04662" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>CompositorBringToFront</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a3fead654c9ee024f9b7becf3150f5214" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>CompositorDumpImages</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa88d54da01f8620a3c0c53c031c0025d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>CompositorGoToBack</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a3fa5673221b03129290c0fd5dd9401ed" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>CompositorQuit</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a8db3c38a395e7352920379547c8071a0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>FadeGrid</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a09cc2ac11d93021e5f9e6530fab0757b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>FadeToColor</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ac8929e7619ebe2ffa6a379f5ff7e29cd" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>ForceInterleavedReprojectionOn</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae9c9a863909027b2a1abb60d474010fe" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>ForceReconnectProcess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa3cf0b9048bdc0ee3e1c0a9a431bebe1" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetCumulativeStats</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a628fbabf5a244406d5112eced13c63dc" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetCurrentFadeColor</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a391e74f059c4716270e2e8d168662850" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetCurrentGridAlpha</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a7e7b837ace250e8312b5fe1d3353f964" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetCurrentSceneFocusProcess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a16e7269af018b0589ede9e3d7d618487" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetFrameTimeRemaining</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad2cdd4bf978eeda19961df5c88e424ce" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetFrameTiming</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1acbcbbcee7076791f10d650af68a95328" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetFrameTimings</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad5c9c07736931cc1663a766dfcfa13b0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetLastFrameRenderer</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6fbed9f7ac57e65727afe7d867883c12" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetLastPoseForTrackedDeviceIndex</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a42be7eeaea139f04df7260a6f74791a3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetLastPoses</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9a72d670b1de214f0d2d6d8fd5ae46b4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetMirrorTextureD3D11</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a5519fa0d05576c6021df19c08c2e350f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetMirrorTextureGL</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a66d7b3f8b2d98b50b94a7b6723593ab0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetTrackingSpace</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a601861efee1846fb7ffe71b6405f231a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetVulkanDeviceExtensionsRequired</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ad734c406ba294357c6a9d992154774e1" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>GetVulkanInstanceExtensionsRequired</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9682d6250bef4cba9b16528818ca241d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>HideMirrorWindow</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a7cae2a894784dd0fb2302e20d60e7ff8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>IsFullscreen</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6fc49d73e29d2dead001115ec3a6e8cc" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>IsMirrorWindowVisible</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1ae7d87c497e0e72e63a8240ba48b3398b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>IsMotionSmoothingEnabled</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a1fe3254db89bea4506082adb62200cf3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>LockGLSharedTextureForAccess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aac1c3ee99b666cd9f38872f510d45161" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>PostPresentHandoff</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa8f5713024670c41ee1018e6692b371d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>ReleaseMirrorTextureD3D11</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a484fee3e3816dd0734ac90ee12773abc" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>ReleaseSharedGLTexture</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aa68aa9770c77aebb53902c7b2418af99" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>SetExplicitTimingMode</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a484354e0ace511b6b47aa7a25157882a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>SetSkyboxOverride</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a7d12544c3a7ff539b520c1ff4941aba5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>SetTrackingSpace</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1aacc73748f1dfc0e1fdcfeb5129525a66" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>ShouldAppRenderWithLowResources</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9c2ff7d65d34419d7160d678f8b57e0a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>ShowMirrorWindow</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1abe6d8cca56250c7520eb5680b59726e0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>Submit</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1af9a37b27e8eaea8c44e974cfe051086b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>SubmitExplicitTimingData</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a9a65d3f0ab17d11d1771dcd4167d9092" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>SuspendRendering</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1afee8c0932af2f5331c01b76b5023df45" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>UnlockGLSharedTextureForAccess</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_compositor_1a6506c136d5242a72d1cab500c8e81edb" prot="public" virt="non-virtual"><scope>Valve::VR::IVRCompositor</scope><name>WaitGetPoses</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
