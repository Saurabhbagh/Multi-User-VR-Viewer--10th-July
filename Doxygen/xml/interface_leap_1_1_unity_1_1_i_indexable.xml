<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="interface_leap_1_1_unity_1_1_i_indexable" kind="interface" language="C#" prot="public">
    <compoundname>Leap::Unity::IIndexable</compoundname>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_ring_buffer" prot="public" virt="non-virtual">Leap.Unity.RingBuffer&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="interface_leap_1_1_unity_1_1_i_indexable_1a91008796a5e0ea8200a6f4fa226e1a50" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>T</type>
        <definition>T Leap.Unity.IIndexable&lt; T &gt;.this[int idx]</definition>
        <argsstring></argsstring>
        <name>this[int idx]</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexable.cs" line="24" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexable.cs" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="property" id="interface_leap_1_1_unity_1_1_i_indexable_1a1f881d4965a67f3d717770fb6e546624" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Leap.Unity.IIndexable&lt; T &gt;.Count</definition>
        <argsstring></argsstring>
        <name>Count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexable.cs" line="26" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexable.cs" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This easy-to-implement interface represents the ability to index into a collection of elements of type T. IIndexables inherit Query() via an extension method. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="interface_leap_1_1_unity_1_1_i_indexable" kindref="compound">IIndexable</ref> is fire-and-forget if your implementer is a reference type (class). If the implementing type is a struct, be mindful of boxing, and consider using <ref refid="interface_leap_1_1_unity_1_1_i_indexable_struct" kindref="compound">IIndexableStruct</ref> and pooling instead. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1877">
        <label>Leap.Unity.IIndexable&lt; T &gt;</label>
        <link refid="interface_leap_1_1_unity_1_1_i_indexable"/>
      </node>
      <node id="1878">
        <label>Leap::Unity::RingBuffer&lt; T &gt;</label>
        <link refid="class_leap_1_1_unity_1_1_ring_buffer"/>
        <childnode refid="1877" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexable.cs" line="22" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/IIndexable.cs" bodystart="22" bodyend="27"/>
    <listofallmembers>
      <member refid="interface_leap_1_1_unity_1_1_i_indexable_1a1f881d4965a67f3d717770fb6e546624" prot="public" virt="non-virtual"><scope>Leap::Unity::IIndexable</scope><name>Count</name></member>
      <member refid="interface_leap_1_1_unity_1_1_i_indexable_1a91008796a5e0ea8200a6f4fa226e1a50" prot="public" virt="non-virtual"><scope>Leap::Unity::IIndexable</scope><name>this[int idx]</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
