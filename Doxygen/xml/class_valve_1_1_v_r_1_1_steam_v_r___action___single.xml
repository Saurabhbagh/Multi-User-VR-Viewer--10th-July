<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Single</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___single" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_Single</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ISerializationCallbackReceiver</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a86a5b4eead30dce2d9f13859571778d3" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae0c72c83dccd88a0235e8a831d62116e" kindref="member">ChangeHandler</ref></type>
        <definition>ChangeHandler Valve.VR.SteamVR_Action_Single.onChange</definition>
        <argsstring></argsstring>
        <name>onChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the axis changes by more than the specified changeTolerance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="21" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a560a7271eccd9441f110d40beed27170" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a1514666eabcafba498274e8d6cee2a40" kindref="member">UpdateHandler</ref></type>
        <definition>UpdateHandler Valve.VR.SteamVR_Action_Single.onUpdate</definition>
        <argsstring></argsstring>
        <name>onUpdate</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="25" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a54b775fb731fcfddfb12298d3c6cd42c" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a4193937cd6b6e4b7248374bc5636f6fd" kindref="member">AxisHandler</ref></type>
        <definition>AxisHandler Valve.VR.SteamVR_Action_Single.onAxis</definition>
        <argsstring></argsstring>
        <name>onAxis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event will fire whenever the float value of the action is non-zero </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="29" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a3067f41e74c07aa2b18fa374290fe78d" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a45ad70dbb8a58191f373b7ae098b833b" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Single.onActiveChange</definition>
        <argsstring></argsstring>
        <name>onActiveChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires when the active state (ActionSet active and binding active) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="33" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ac2174a4a4cf474cb9141e6a6d9709f9c" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a45ad70dbb8a58191f373b7ae098b833b" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Single.onActiveBindingChange</definition>
        <argsstring></argsstring>
        <name>onActiveBindingChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires when the active state of the binding changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="37" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a31539f002182ea339ae7056f07987f8f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Single.axis</definition>
        <argsstring></argsstring>
        <name>axis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The current float value of the action. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="43" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a8a00ad5421754252a7e05ec832a3468b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Single.lastAxis</definition>
        <argsstring></argsstring>
        <name>lastAxis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The float value of the action from the previous update. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="47" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ab851061c00607a9fabe39db21cd00ac0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Single.delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The float value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="51" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a7debc59f65b7f98973df24c8de93ed6c" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Single.lastDelta</definition>
        <argsstring></argsstring>
        <name>lastDelta</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The float value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="55" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="55" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a4193937cd6b6e4b7248374bc5636f6fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Single.AxisHandler</definition>
        <argsstring>(SteamVR_Action_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta)</argsstring>
        <name>AxisHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kindref="compound">SteamVR_Action_Single</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newDelta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a45ad70dbb8a58191f373b7ae098b833b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Single.ActiveChangeHandler</definition>
        <argsstring>(SteamVR_Action_Single fromAction, SteamVR_Input_Sources fromSource, bool active)</argsstring>
        <name>ActiveChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kindref="compound">SteamVR_Action_Single</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae0c72c83dccd88a0235e8a831d62116e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Single.ChangeHandler</definition>
        <argsstring>(SteamVR_Action_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta)</argsstring>
        <name>ChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kindref="compound">SteamVR_Action_Single</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newDelta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a1514666eabcafba498274e8d6cee2a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Single.UpdateHandler</definition>
        <argsstring>(SteamVR_Action_Single fromAction, SteamVR_Input_Sources fromSource, float newAxis, float newDelta)</argsstring>
        <name>UpdateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kindref="compound">SteamVR_Action_Single</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newAxis</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newDelta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a2d51af077b79d68b587a6e13f3d57cac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.SteamVR_Action_Single.SteamVR_Action_Single</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_Action_Single</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="58" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a3b78812c9a7bea43b8d64440d5f4b339" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Single.GetAxis</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetAxis</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The current float value of the action </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="62" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a8aa6e18ddcc56f8eb53277dbf91a731a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Single.GetAxisDelta</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetAxisDelta</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The float value difference between this update and the previous update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="69" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a6c9ab66919b07bc3bdf1012b9c1a05c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Single.GetLastAxis</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastAxis</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The float value of the action from the previous update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="76" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a8732072fe03f7645b4087d20dce8df39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Single.GetLastAxisDelta</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastAxisDelta</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The float value difference between the previous update and update before that. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="83" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a7c280e8752917180b21bbf4d953d4243" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.AddOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a45ad70dbb8a58191f373b7ae098b833b" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the <emphasis>functional</emphasis> active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s active state changes and the corresponding input source</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="92" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae56434d507e319e8a216e724728dbe76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.RemoveOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a45ad70dbb8a58191f373b7ae098b833b" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing a function when the <emphasis>functional</emphasis> active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="101" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a1b05b455c3734492cc844b3afca8a59e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.AddOnActiveBindingChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnActiveBindingChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a45ad70dbb8a58191f373b7ae098b833b" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s active state changes and the corresponding input source</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="109" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae17685502cf60155bf806900ee0f197e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.RemoveOnActiveBindingChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnActiveBindingChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a45ad70dbb8a58191f373b7ae098b833b" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="117" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ac3ae13457eeec363b6eefdf13ed6cc84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.AddOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae0c72c83dccd88a0235e8a831d62116e" kindref="member">ChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the axis changes by more than the specified changeTolerance </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="125" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a4f3b457d103cf2fa28d805a274977b85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.RemoveOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae0c72c83dccd88a0235e8a831d62116e" kindref="member">ChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive on change events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="133" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a5a1d4b3c8ba06700a28cdcffbf3674ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.AddOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a1514666eabcafba498274e8d6cee2a40" kindref="member">UpdateHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action (with the specified inputSource) is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="141" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1afde34c68d7e2d5af7fadca23e7440ccb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.RemoveOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a1514666eabcafba498274e8d6cee2a40" kindref="member">UpdateHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="149" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a7de52c2fa108e420f018e31065c915be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.AddOnAxisListener</definition>
        <argsstring>(AxisHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnAxisListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a4193937cd6b6e4b7248374bc5636f6fd" kindref="member">AxisHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the float value of the action is non-zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="157" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a39aed374b5f84383e67dd25b592ac48e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Single.RemoveOnAxisListener</definition>
        <argsstring>(AxisHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnAxisListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a4193937cd6b6e4b7248374bc5636f6fd" kindref="member">AxisHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="165" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="165" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ac30c2badb09aa194d795da9556b70fa0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Single.OnBeforeSerialize</definition>
        <argsstring>()</argsstring>
        <name>OnBeforeSerialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="170" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a95c50120dfdf731d983ee95632612607" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Single.OnAfterDeserialize</definition>
        <argsstring>()</argsstring>
        <name>OnAfterDeserialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="174" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="174" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An analog action with a value generally from 0 to 1. Also provides a delta since the last update. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4838">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4837">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4838" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4836">
        <label>ISteamVR_Action_Single</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___single"/>
        <childnode refid="4837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4839">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4834">
        <label>Valve.VR.SteamVR_Action_Single</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single"/>
        <childnode refid="4835" relation="public-inheritance">
        </childnode>
        <childnode refid="4836" relation="public-inheritance">
        </childnode>
        <childnode refid="4839" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4835">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4844">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4843">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4844" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4842">
        <label>ISteamVR_Action_Single</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___single"/>
        <childnode refid="4843" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4845">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4840">
        <label>Valve.VR.SteamVR_Action_Single</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single"/>
        <childnode refid="4841" relation="public-inheritance">
        </childnode>
        <childnode refid="4842" relation="public-inheritance">
        </childnode>
        <childnode refid="4845" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4841">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" line="14" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Single.cs" bodystart="13" bodyend="178"/>
    <listofallmembers>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a85095931b202ff69185fceaf75e5503a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>actionSet</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a529749f5fa62c29a4faac767cd9ece8d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>active</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a304d2c626023c9dea73f4289c57975b3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a45ad70dbb8a58191f373b7ae098b833b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>ActiveChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a5bb4f52dca76a5fda6f9977d787c0402" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>activeDevice</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abf4ed89526fde73c6142fbd458bc1eb8" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>activeDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a78f3e5c201024521dd7f575617f58244" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>activeOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a4aabe825dd43d59f2c23677904f93846" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>activeOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a1b05b455c3734492cc844b3afca8a59e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>AddOnActiveBindingChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a7c280e8752917180b21bbf4d953d4243" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>AddOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a7de52c2fa108e420f018e31065c915be" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>AddOnAxisListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ac3ae13457eeec363b6eefdf13ed6cc84" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>AddOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a5a1d4b3c8ba06700a28cdcffbf3674ae" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>AddOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a31539f002182ea339ae7056f07987f8f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>axis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a4193937cd6b6e4b7248374bc5636f6fd" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>AxisHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a129bfbee3aa107bc4fcb46716a240d88" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>changed</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a709444689c4ec680077a341f6cd7b984" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>changed</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afccb197dbb5d721e390e60cce83957f4" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>changedTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a761752bb73a29d2ee597e71a61476c79" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>changedTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae0c72c83dccd88a0235e8a831d62116e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>ChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ab851061c00607a9fabe39db21cd00ac0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>delta</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1fb56d52a28f0c621007a6b3ea7a71b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af39cd279bc56854ce6cf89402e405a1c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>ForceAddSourceToUpdateList</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1aecfcecacdabb3ca489a137a30f9b1728" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2cf3c55c01761a091db3afb42a3d47f2" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetActiveDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a3b78812c9a7bea43b8d64440d5f4b339" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a8aa6e18ddcc56f8eb53277dbf91a731a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetAxisDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ab5dff6e847415ea70581fb544443738d" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a21f1b8a683a6950f2e2cd1a2bbe42acc" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a6c9ab66919b07bc3bdf1012b9c1a05c1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetLastAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a8732072fe03f7645b4087d20dce8df39" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetLastAxisDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a330a9cf6a0b63e08804318d49e43509e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetLocalizedOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a6ae3b2c4b90917042b1fda3fe54b2d36" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetLocalizedOriginPart</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ad435fe38eac2d62d6ce217644a6586af" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetRenderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1accdc869f6fd50ef15580a271b6de4d30" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>GetTimeLastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a8f32f3e77335f4266e326200072a216c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a648d3f94c79e2ec43ec9846535fbf8ef" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>IsUpdating</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1f350e66dccb7f9124446967e856500" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>lastActive</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1af78f7edb626305afcd4cbccf10e14b0f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a0c9642e77bd7d7889df24be40da84e41" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>lastActiveOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a96b5ca1f6b126ef0b1ddda76abdc3535" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>lastActiveOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a8a00ad5421754252a7e05ec832a3468b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>lastAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a61423de9edc8a8301e81f2522d635507" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>lastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ad31c92ed9c0df791c4cf8f6907dc6d73" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>lastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a7debc59f65b7f98973df24c8de93ed6c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>lastDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a400ef60ea3cecf1cd50d8da97a00d13b" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>localizedOriginName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abfb307a430eb5946c905d07bec79b2aa" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>localizedOriginName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ac2174a4a4cf474cb9141e6a6d9709f9c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>onActiveBindingChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a3067f41e74c07aa2b18fa374290fe78d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>onActiveChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a95c50120dfdf731d983ee95632612607" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>OnAfterDeserialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a54b775fb731fcfddfb12298d3c6cd42c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>onAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ac30c2badb09aa194d795da9556b70fa0" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>OnBeforeSerialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a86a5b4eead30dce2d9f13859571778d3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>onChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a560a7271eccd9441f110d40beed27170" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>onUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae17685502cf60155bf806900ee0f197e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>RemoveOnActiveBindingChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1ae56434d507e319e8a216e724728dbe76" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>RemoveOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a39aed374b5f84383e67dd25b592ac48e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>RemoveOnAxisListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a4f3b457d103cf2fa28d805a274977b85" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>RemoveOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1afde34c68d7e2d5af7fadca23e7440ccb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>RemoveOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af302f79ecf325f6507a3aca1de536097" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>renderModelComponentName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1aed8fb392a34de9c8840578c4a3f6a9ba" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>renderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a2d51af077b79d68b587a6e13f3d57cac" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>SteamVR_Action_Single</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afd572897e423daf987b7708a6d8dc890" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>trackedDeviceIndex</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a5dbae568b5daf1cfd3b529b00750caae" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>trackedDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single_1a1514666eabcafba498274e8d6cee2a40" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>UpdateHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2b6e25e75c6ebc79eda8b335abedb031" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;."><scope>Valve::VR::SteamVR_Action_Single</scope><name>updateTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ada770da3da523e6bba5c7b5501a8da9e" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Single."><scope>Valve::VR::SteamVR_Action_Single</scope><name>updateTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ac2e658d37dcdb843a0cff2e62cbd84cf" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Single</scope><name>UpdateValues</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
