<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___events" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Events</compoundname>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" prot="public">Valve::VR::SteamVR_Events::Action</innerclass>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" prot="public">Valve::VR::SteamVR_Events::Action</innerclass>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" prot="public">Valve::VR::SteamVR_Events::Action</innerclass>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" prot="public">Valve::VR::SteamVR_Events::Action</innerclass>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action_no_args" prot="public">Valve::VR::SteamVR_Events::ActionNoArgs</innerclass>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" prot="public">Valve::VR::SteamVR_Events::Event</innerclass>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" prot="public">Valve::VR::SteamVR_Events::Event</innerclass>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" prot="public">Valve::VR::SteamVR_Events::Event</innerclass>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" prot="public">Valve::VR::SteamVR_Events::Event</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a1e718a8fb689516d853988d7341a0025" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; bool &gt;</type>
        <definition>Event&lt;bool&gt; Valve.VR.SteamVR_Events.Calibrating</definition>
        <argsstring></argsstring>
        <name>Calibrating</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="146" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a61fa80a3c486e15701a0a675bf3efd45" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; int, bool &gt;</type>
        <definition>Event&lt;int, bool&gt; Valve.VR.SteamVR_Events.DeviceConnected</definition>
        <argsstring></argsstring>
        <name>DeviceConnected</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;int, bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="149" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a03956a4e8b5ffba78524e79cdcdb82a1" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; Color, float, bool &gt;</type>
        <definition>Event&lt;Color, float, bool&gt; Valve.VR.SteamVR_Events.Fade</definition>
        <argsstring></argsstring>
        <name>Fade</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;Color, float, bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="152" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a4a9a08f480753bee0f427f7c28068288" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref></type>
        <definition>Event Valve.VR.SteamVR_Events.FadeReady</definition>
        <argsstring></argsstring>
        <name>FadeReady</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="155" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a30a6074ae6a6a0be688253925c15b702" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; bool &gt;</type>
        <definition>Event&lt;bool&gt; Valve.VR.SteamVR_Events.HideRenderModels</definition>
        <argsstring></argsstring>
        <name>HideRenderModels</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="158" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1aa0830b5339c57936bdbecc6326a680c5" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; bool &gt;</type>
        <definition>Event&lt;bool&gt; Valve.VR.SteamVR_Events.Initializing</definition>
        <argsstring></argsstring>
        <name>Initializing</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="161" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1ad9eac620bc20f0d689f936dca63058c5" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; bool &gt;</type>
        <definition>Event&lt;bool&gt; Valve.VR.SteamVR_Events.InputFocus</definition>
        <argsstring></argsstring>
        <name>InputFocus</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="164" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a49f1e06c2072b146de39e3ce539357b2" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; bool &gt;</type>
        <definition>Event&lt;bool&gt; Valve.VR.SteamVR_Events.Loading</definition>
        <argsstring></argsstring>
        <name>Loading</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="167" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a7258fb8b7bd93f2e1525c72d59e87632" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; float &gt;</type>
        <definition>Event&lt;float&gt; Valve.VR.SteamVR_Events.LoadingFadeIn</definition>
        <argsstring></argsstring>
        <name>LoadingFadeIn</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;float&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="170" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a8b8e3b3758561dc5bea59687edbd1fb8" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; float &gt;</type>
        <definition>Event&lt;float&gt; Valve.VR.SteamVR_Events.LoadingFadeOut</definition>
        <argsstring></argsstring>
        <name>LoadingFadeOut</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;float&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="173" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a7a92e28937b23451180e97441ae4806c" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; <ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref>[]&gt;</type>
        <definition>Event&lt;TrackedDevicePose_t[]&gt; Valve.VR.SteamVR_Events.NewPoses</definition>
        <argsstring></argsstring>
        <name>NewPoses</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;<ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref>[]&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="176" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a5030d5265f401420219294b971b93f78" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref></type>
        <definition>Event Valve.VR.SteamVR_Events.NewPosesApplied</definition>
        <argsstring></argsstring>
        <name>NewPosesApplied</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="179" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1af4cc261bd771d180c51dfc0eaf488915" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; bool &gt;</type>
        <definition>Event&lt;bool&gt; Valve.VR.SteamVR_Events.Initialized</definition>
        <argsstring></argsstring>
        <name>Initialized</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="182" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a538922cc33b25fb8ce726fb92d053f6d" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; bool &gt;</type>
        <definition>Event&lt;bool&gt; Valve.VR.SteamVR_Events.OutOfRange</definition>
        <argsstring></argsstring>
        <name>OutOfRange</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="185" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1ab5b76a133985d02f2595ffe7dc56c9e7" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___render_model" kindref="compound">SteamVR_RenderModel</ref>, bool &gt;</type>
        <definition>Event&lt;SteamVR_RenderModel, bool&gt; Valve.VR.SteamVR_Events.RenderModelLoaded</definition>
        <argsstring></argsstring>
        <name>RenderModelLoaded</name>
        <initializer>= new <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;<ref refid="class_valve_1_1_v_r_1_1_steam_v_r___render_model" kindref="compound">SteamVR_RenderModel</ref>, bool&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="188" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a2ba53cf41352a5e130bab3884c540e6c" prot="private" static="yes" mutable="no">
        <type>System.Collections.Generic.Dictionary&lt; <ref refid="namespace_valve_1_1_v_r_1afe3398b9e5cb1ea06335142d1b9289f3" kindref="member">EVREventType</ref>, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; <ref refid="struct_valve_1_1_v_r_1_1_v_r_event__t" kindref="compound">VREvent_t</ref> &gt; &gt;</type>
        <definition>System.Collections.Generic.Dictionary&lt;EVREventType, Event&lt;VREvent_t&gt; &gt; Valve.VR.SteamVR_Events.systemEvents</definition>
        <argsstring></argsstring>
        <name>systemEvents</name>
        <initializer>= new System.Collections.Generic.Dictionary&lt;<ref refid="namespace_valve_1_1_v_r_1afe3398b9e5cb1ea06335142d1b9289f3" kindref="member">EVREventType</ref>, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt;<ref refid="struct_valve_1_1_v_r_1_1_v_r_event__t" kindref="compound">VREvent_t</ref>&gt;&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="191" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1aa1f5e284a0180dfee3f2607e761cc5f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.CalibratingAction</definition>
        <argsstring>(UnityAction&lt; bool &gt; action)</argsstring>
        <name>CalibratingAction</name>
        <param>
          <type>UnityAction&lt; bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="147" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a17e8fb857f5ab72374786cf3b37b953f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.DeviceConnectedAction</definition>
        <argsstring>(UnityAction&lt; int, bool &gt; action)</argsstring>
        <name>DeviceConnectedAction</name>
        <param>
          <type>UnityAction&lt; int, bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="150" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a1fd108afe9e1fc66feab347addf36160" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.FadeAction</definition>
        <argsstring>(UnityAction&lt; Color, float, bool &gt; action)</argsstring>
        <name>FadeAction</name>
        <param>
          <type>UnityAction&lt; Color, float, bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="153" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a85311c20368ca6552ace6b800b871b1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.FadeReadyAction</definition>
        <argsstring>(UnityAction action)</argsstring>
        <name>FadeReadyAction</name>
        <param>
          <type>UnityAction</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="156" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a44dba1d710d59f038ce28671c535375a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.HideRenderModelsAction</definition>
        <argsstring>(UnityAction&lt; bool &gt; action)</argsstring>
        <name>HideRenderModelsAction</name>
        <param>
          <type>UnityAction&lt; bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="159" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a3b3bf2575422aea0aafb52a92ca740d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.InitializingAction</definition>
        <argsstring>(UnityAction&lt; bool &gt; action)</argsstring>
        <name>InitializingAction</name>
        <param>
          <type>UnityAction&lt; bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="162" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1aa82ef1bc9dffd93e5f2e3710f29233f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.InputFocusAction</definition>
        <argsstring>(UnityAction&lt; bool &gt; action)</argsstring>
        <name>InputFocusAction</name>
        <param>
          <type>UnityAction&lt; bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="165" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a400036b51df066ddd5041a90bc6f4779" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.LoadingAction</definition>
        <argsstring>(UnityAction&lt; bool &gt; action)</argsstring>
        <name>LoadingAction</name>
        <param>
          <type>UnityAction&lt; bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="168" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a8b014ddf0a7b71516f6746ca6e1242db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.LoadingFadeInAction</definition>
        <argsstring>(UnityAction&lt; float &gt; action)</argsstring>
        <name>LoadingFadeInAction</name>
        <param>
          <type>UnityAction&lt; float &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="171" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a6b2eb054d08e71c4640c3797e0b65d73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.LoadingFadeOutAction</definition>
        <argsstring>(UnityAction&lt; float &gt; action)</argsstring>
        <name>LoadingFadeOutAction</name>
        <param>
          <type>UnityAction&lt; float &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="174" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a4405ae7142a1563bbea3ceef0a167770" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.NewPosesAction</definition>
        <argsstring>(UnityAction&lt; TrackedDevicePose_t[]&gt; action)</argsstring>
        <name>NewPosesAction</name>
        <param>
          <type>UnityAction&lt; <ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref>[]&gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="177" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a5716459f3bd03db7b8fa570bab1f615a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.NewPosesAppliedAction</definition>
        <argsstring>(UnityAction action)</argsstring>
        <name>NewPosesAppliedAction</name>
        <param>
          <type>UnityAction</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="180" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1a52b88270ce3db01403a303b1ceb82075" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.InitializedAction</definition>
        <argsstring>(UnityAction&lt; bool &gt; action)</argsstring>
        <name>InitializedAction</name>
        <param>
          <type>UnityAction&lt; bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="183" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1ab34fb63a1803fd0ec09a1832c44a3e3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.OutOfRangeAction</definition>
        <argsstring>(UnityAction&lt; bool &gt; action)</argsstring>
        <name>OutOfRangeAction</name>
        <param>
          <type>UnityAction&lt; bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="186" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1aeb374bc7f9eb178dcadf433bcdddcd40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.RenderModelLoadedAction</definition>
        <argsstring>(UnityAction&lt; SteamVR_RenderModel, bool &gt; action)</argsstring>
        <name>RenderModelLoadedAction</name>
        <param>
          <type>UnityAction&lt; <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___render_model" kindref="compound">SteamVR_RenderModel</ref>, bool &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="189" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1acc719e830afecc8c75e4f5c85b9fab71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event" kindref="compound">Event</ref>&lt; <ref refid="struct_valve_1_1_v_r_1_1_v_r_event__t" kindref="compound">VREvent_t</ref> &gt;</type>
        <definition>static Event&lt;VREvent_t&gt; Valve.VR.SteamVR_Events.System</definition>
        <argsstring>(EVREventType eventType)</argsstring>
        <name>System</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1afe3398b9e5cb1ea06335142d1b9289f3" kindref="member">EVREventType</ref></type>
          <declname>eventType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="192" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="192" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___events_1ac0d3363acc29cbf0188316e39a3f0e1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action" kindref="compound">Action</ref></type>
        <definition>static Action Valve.VR.SteamVR_Events.SystemAction</definition>
        <argsstring>(EVREventType eventType, UnityAction&lt; VREvent_t &gt; action)</argsstring>
        <name>SystemAction</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1afe3398b9e5cb1ea06335142d1b9289f3" kindref="member">EVREventType</ref></type>
          <declname>eventType</declname>
        </param>
        <param>
          <type>UnityAction&lt; <ref refid="struct_valve_1_1_v_r_1_1_v_r_event__t" kindref="compound">VREvent_t</ref> &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="203" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="203" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5279">
        <label>Valve.VR.SteamVR_Events.Event&lt; Color, float, bool &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event"/>
      </node>
      <node id="5280">
        <label>Valve.VR.SteamVR_Events.Event&lt; bool &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event"/>
      </node>
      <node id="5277">
        <label>Valve.VR.SteamVR_Events.Event&lt; Valve.VR.SteamVR_RenderModel, bool &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event"/>
      </node>
      <node id="5275">
        <label>Valve.VR.SteamVR_Events</label>
        <childnode refid="5276" relation="usage">
          <edgelabel>LoadingFadeOut</edgelabel>
          <edgelabel>LoadingFadeIn</edgelabel>
        </childnode>
        <childnode refid="5277" relation="usage">
          <edgelabel>RenderModelLoaded</edgelabel>
        </childnode>
        <childnode refid="5278" relation="usage">
          <edgelabel>FadeReady</edgelabel>
          <edgelabel>NewPosesApplied</edgelabel>
        </childnode>
        <childnode refid="5279" relation="usage">
          <edgelabel>Fade</edgelabel>
        </childnode>
        <childnode refid="5280" relation="usage">
          <edgelabel>Loading</edgelabel>
          <edgelabel>HideRenderModels</edgelabel>
          <edgelabel>Calibrating</edgelabel>
          <edgelabel>Initializing</edgelabel>
          <edgelabel>Initialized</edgelabel>
          <edgelabel>OutOfRange</edgelabel>
          <edgelabel>InputFocus</edgelabel>
        </childnode>
        <childnode refid="5281" relation="usage">
          <edgelabel>NewPoses</edgelabel>
        </childnode>
        <childnode refid="5282" relation="usage">
          <edgelabel>DeviceConnected</edgelabel>
        </childnode>
      </node>
      <node id="5282">
        <label>Valve.VR.SteamVR_Events.Event&lt; int, bool &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event"/>
      </node>
      <node id="5281">
        <label>Valve.VR.SteamVR_Events.Event&lt; Valve.VR.TrackedDevicePose_t[]&gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event"/>
      </node>
      <node id="5276">
        <label>Valve.VR.SteamVR_Events.Event&lt; float &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event"/>
      </node>
      <node id="5278">
        <label>Valve.VR.SteamVR_Events.Event</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" line="27" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Events.cs" bodystart="26" bodyend="207"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a1e718a8fb689516d853988d7341a0025" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>Calibrating</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1aa1f5e284a0180dfee3f2607e761cc5f9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>CalibratingAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a61fa80a3c486e15701a0a675bf3efd45" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>DeviceConnected</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a17e8fb857f5ab72374786cf3b37b953f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>DeviceConnectedAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a03956a4e8b5ffba78524e79cdcdb82a1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>Fade</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a1fd108afe9e1fc66feab347addf36160" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>FadeAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a4a9a08f480753bee0f427f7c28068288" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>FadeReady</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a85311c20368ca6552ace6b800b871b1c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>FadeReadyAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a30a6074ae6a6a0be688253925c15b702" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>HideRenderModels</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a44dba1d710d59f038ce28671c535375a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>HideRenderModelsAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1af4cc261bd771d180c51dfc0eaf488915" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>Initialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a52b88270ce3db01403a303b1ceb82075" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>InitializedAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1aa0830b5339c57936bdbecc6326a680c5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>Initializing</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a3b3bf2575422aea0aafb52a92ca740d8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>InitializingAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1ad9eac620bc20f0d689f936dca63058c5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>InputFocus</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1aa82ef1bc9dffd93e5f2e3710f29233f6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>InputFocusAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a49f1e06c2072b146de39e3ce539357b2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>Loading</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a400036b51df066ddd5041a90bc6f4779" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>LoadingAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a7258fb8b7bd93f2e1525c72d59e87632" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>LoadingFadeIn</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a8b014ddf0a7b71516f6746ca6e1242db" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>LoadingFadeInAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a8b8e3b3758561dc5bea59687edbd1fb8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>LoadingFadeOut</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a6b2eb054d08e71c4640c3797e0b65d73" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>LoadingFadeOutAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a7a92e28937b23451180e97441ae4806c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>NewPoses</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a4405ae7142a1563bbea3ceef0a167770" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>NewPosesAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a5030d5265f401420219294b971b93f78" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>NewPosesApplied</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a5716459f3bd03db7b8fa570bab1f615a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>NewPosesAppliedAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a538922cc33b25fb8ce726fb92d053f6d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>OutOfRange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1ab34fb63a1803fd0ec09a1832c44a3e3f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>OutOfRangeAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1ab5b76a133985d02f2595ffe7dc56c9e7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>RenderModelLoaded</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1aeb374bc7f9eb178dcadf433bcdddcd40" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>RenderModelLoadedAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1acc719e830afecc8c75e4f5c85b9fab71" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>System</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1ac0d3363acc29cbf0188316e39a3f0e1f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>SystemAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___events_1a2ba53cf41352a5e130bab3884c540e6c" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Events</scope><name>systemEvents</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
