<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_grenade_8cs" kind="file" language="C#">
    <compoundname>Grenade.cs</compoundname>
    <innerclass refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade" prot="public">Valve::VR::InteractionSystem::Sample::Grenade</innerclass>
    <innernamespace refid="namespace_valve">Valve</innernamespace>
    <innernamespace refid="namespace_valve_1_1_v_r">Valve::VR</innernamespace>
    <innernamespace refid="namespace_valve_1_1_v_r_1_1_interaction_system">Valve::VR::InteractionSystem</innernamespace>
    <innernamespace refid="namespace_valve_1_1_v_r_1_1_interaction_system_1_1_sample">Valve::VR::InteractionSystem::Sample</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_valve_1_1_v_r_1_1_interaction_system_1_1_sample" kindref="compound">Valve.VR.InteractionSystem.Sample</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6" refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade" kindref="compound">Grenade</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8" refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1a35871cdd033148c6279bd16992cc656b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>GameObject<sp/><ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1a35871cdd033148c6279bd16992cc656b" kindref="member">explodePartPrefab</ref>;</highlight></codeline>
<codeline lineno="9" refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1aad5d8ce9979d97f5cc30ffe82f4bf550" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1aad5d8ce9979d97f5cc30ffe82f4bf550" kindref="member">explodeCount</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1ac7b2055641a0a93c3416d80dd9eeeb62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1ac7b2055641a0a93c3416d80dd9eeeb62" kindref="member">minMagnitudeToExplode</ref><sp/>=<sp/>1f;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_interactable" kindref="compound">Interactable</ref><sp/>interactable;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interactable<sp/>=<sp/>this.GetComponent&lt;Interactable&gt;();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnCollisionEnter(Collision<sp/>collision)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interactable<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>interactable.<ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_interactable_1a1980377b09ca72c574f045e7d6aac17f" kindref="member">attachedToHand</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//don&apos;t<sp/>explode<sp/>in<sp/>hand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collision.impulse.magnitude<sp/>&gt;<sp/><ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1ac7b2055641a0a93c3416d80dd9eeeb62" kindref="member">minMagnitudeToExplode</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>explodeIndex<sp/>=<sp/>0;<sp/>explodeIndex<sp/>&lt;<sp/><ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1aad5d8ce9979d97f5cc30ffe82f4bf550" kindref="member">explodeCount</ref>;<sp/>explodeIndex++)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GameObject<sp/>explodePart<sp/>=<sp/>(GameObject)GameObject.Instantiate(<ref refid="class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1a35871cdd033148c6279bd16992cc656b" kindref="member">explodePartPrefab</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.transform.position,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.transform.rotation);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>explodePart.GetComponentInChildren&lt;MeshRenderer&gt;().material.SetColor(</highlight><highlight class="stringliteral">&quot;_TintColor&quot;</highlight><highlight class="normal">,<sp/>Random.ColorHSV(0f,<sp/>1f,<sp/>1f,<sp/>1f,<sp/>0.5f,<sp/>1f));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Destroy(this.gameObject);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Samples/Grenade/Grenade.cs"/>
  </compounddef>
</doxygen>
