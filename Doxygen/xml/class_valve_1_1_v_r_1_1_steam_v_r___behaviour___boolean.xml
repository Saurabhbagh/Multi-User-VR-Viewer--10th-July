<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Behaviour_Boolean</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a522b3b344157b96353bb519bced45474" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
        <definition>SteamVR_Action_Boolean Valve.VR.SteamVR_Behaviour_Boolean.booleanAction</definition>
        <argsstring></argsstring>
        <name>booleanAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="21" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ad396ec574856f8332bfb9231f1199dc9" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
        <definition>SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Boolean.inputSource</definition>
        <argsstring></argsstring>
        <name>inputSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="24" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a732d3221d1c00ab43ff87425673c9a49" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_event" kindref="compound">SteamVR_Behaviour_BooleanEvent</ref></type>
        <definition>SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean.onChange</definition>
        <argsstring></argsstring>
        <name>onChange</name>
        <briefdescription>
<para>This UnityEvent fires whenever a change happens in the action </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="27" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ab7d0f9440d0b7c1f3df9cd7b21dd8104" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_event" kindref="compound">SteamVR_Behaviour_BooleanEvent</ref></type>
        <definition>SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean.onUpdate</definition>
        <argsstring></argsstring>
        <name>onUpdate</name>
        <briefdescription>
<para>This UnityEvent fires whenever the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="33" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ad7c976b36eeab0c73b6232aac9d29d65" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_event" kindref="compound">SteamVR_Behaviour_BooleanEvent</ref></type>
        <definition>SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean.onPress</definition>
        <argsstring></argsstring>
        <name>onPress</name>
        <briefdescription>
<para>This UnityEvent will fire whenever the boolean action is true and gets updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="39" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1abb6167286813c1edd0b8d565aa6f1e36" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_event" kindref="compound">SteamVR_Behaviour_BooleanEvent</ref></type>
        <definition>SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean.onPressDown</definition>
        <argsstring></argsstring>
        <name>onPressDown</name>
        <briefdescription>
<para>This UnityEvent will fire whenever the boolean action has changed from false to true in the last update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="45" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ab81b2dae4a38e689a81af644da2c8ff4" prot="public" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_event" kindref="compound">SteamVR_Behaviour_BooleanEvent</ref></type>
        <definition>SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean.onPressUp</definition>
        <argsstring></argsstring>
        <name>onPressUp</name>
        <briefdescription>
<para>This UnityEvent will fire whenever the boolean action has changed from true to false in the last update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="51" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="event">
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a19cd995d03f07a98150ba6c466032af9" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ac6747cdeceec4d24ddb39b4de05b1ca6" kindref="member">ChangeHandler</ref></type>
        <definition>ChangeHandler Valve.VR.SteamVR_Behaviour_Boolean.onChangeEvent</definition>
        <argsstring></argsstring>
        <name>onChangeEvent</name>
        <briefdescription>
<para>This C# event fires whenever a change happens in the action </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="30" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1af7987bf6d371d204514044c91b1a2e8f" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ae98c73afb05e760178c435aa4baa175c" kindref="member">UpdateHandler</ref></type>
        <definition>UpdateHandler Valve.VR.SteamVR_Behaviour_Boolean.onUpdateEvent</definition>
        <argsstring></argsstring>
        <name>onUpdateEvent</name>
        <briefdescription>
<para>This C# event fires whenever the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="36" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a1e55199fdcd5d8fa714e0ba802b5210f" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a915c126540f6be14cd925ac1679649af" kindref="member">StateHandler</ref></type>
        <definition>StateHandler Valve.VR.SteamVR_Behaviour_Boolean.onPressEvent</definition>
        <argsstring></argsstring>
        <name>onPressEvent</name>
        <briefdescription>
<para>This C# event will fire whenever the boolean action is true and gets updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="42" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a190d1f5b2453778d2403f0389d31621b" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a72b8998f8432175c0bdeec28b33eeb48" kindref="member">StateDownHandler</ref></type>
        <definition>StateDownHandler Valve.VR.SteamVR_Behaviour_Boolean.onPressDownEvent</definition>
        <argsstring></argsstring>
        <name>onPressDownEvent</name>
        <briefdescription>
<para>This C# event will fire whenever the boolean action has changed from false to true in the last update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="48" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a25f59fa151fdd77e1856c1d567d8fa59" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a6ac1e6383124de89a78d25b5f453bab7" kindref="member">StateUpHandler</ref></type>
        <definition>StateUpHandler Valve.VR.SteamVR_Behaviour_Boolean.onPressUpEvent</definition>
        <argsstring></argsstring>
        <name>onPressUpEvent</name>
        <briefdescription>
<para>This C# event will fire whenever the boolean action has changed from true to false in the last update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="54" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a893fb4b744621a730be84d41908e0e3a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Behaviour_Boolean.isActive</definition>
        <argsstring></argsstring>
        <name>isActive</name>
        <briefdescription>
<para>Returns true if this action is currently bound and its action set is active </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="57" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ab6787ffad27bdf7cdf30d0b63c96c8c0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
        <definition>SteamVR_ActionSet Valve.VR.SteamVR_Behaviour_Boolean.actionSet</definition>
        <argsstring></argsstring>
        <name>actionSet</name>
        <briefdescription>
<para>Returns the action set that this action is in. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="60" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ae0bebdd1322463f3cd70b9cdc91ece76" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Boolean.OnEnable</definition>
        <argsstring>()</argsstring>
        <name>OnEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="64" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a3c4c6231615ac96e43cd5646dc515cfd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_Behaviour_Boolean.OnDisable</definition>
        <argsstring>()</argsstring>
        <name>OnDisable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="75" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ace248524b7a7f0cf0e7481daa34fa01b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Boolean.AddHandlers</definition>
        <argsstring>()</argsstring>
        <name>AddHandlers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="80" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a5045745f25bd2a4ad2238782b551da5e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Boolean.RemoveHandlers</definition>
        <argsstring>()</argsstring>
        <name>RemoveHandlers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="89" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="89" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ab0c611c0f0a305a5cd94ab9eed78e385" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Boolean.SteamVR_Behaviour_Boolean_OnStateUp</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>SteamVR_Behaviour_Boolean_OnStateUp</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="102" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="102" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a80e5b9542ab2183edcc45bd8b5b792b6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Boolean.SteamVR_Behaviour_Boolean_OnStateDown</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>SteamVR_Behaviour_Boolean_OnStateDown</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="115" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="115" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a53d4bca1905c262b927a34174e10a766" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Boolean.SteamVR_Behaviour_Boolean_OnState</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>SteamVR_Behaviour_Boolean_OnState</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="128" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="128" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a07113eb7221f8b19a55d89c375d283dc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Boolean.SteamVR_Behaviour_Boolean_OnUpdate</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState)</argsstring>
        <name>SteamVR_Behaviour_Boolean_OnUpdate</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="141" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="141" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a02b46c566dbba7286c36dcca4af5b0c6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Behaviour_Boolean.SteamVR_Behaviour_Boolean_OnChange</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState)</argsstring>
        <name>SteamVR_Behaviour_Boolean_OnChange</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="154" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="154" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a971bb30542fc5f5da959fb951afdecbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_Behaviour_Boolean.GetLocalizedName</definition>
        <argsstring>(params EVRInputStringBits[] localizedParts)</argsstring>
        <name>GetLocalizedName</name>
        <param>
          <type>params <ref refid="namespace_valve_1_1_v_r_1a05e76187bbc5846b9bfb44f6acf13912" kindref="member">EVRInputStringBits</ref> []</type>
          <declname>localizedParts</declname>
        </param>
        <briefdescription>
<para>Gets the localized name of the device that the action corresponds to. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localizedParts</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem>
<para>VRInputString_Hand - Which hand the origin is in. E.g. &quot;Left Hand&quot; </para>
</listitem>
<listitem>
<para>VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. &quot;Vive Controller&quot; </para>
</listitem>
<listitem>
<para>VRInputString_InputSource - What part of that controller is the origin. E.g. &quot;Trackpad&quot; </para>
</listitem>
<listitem>
<para>VRInputString_All - All of the above. E.g. &quot;Left Hand Vive Controller Trackpad&quot; </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="178" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="178" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a72b8998f8432175c0bdeec28b33eeb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Boolean.StateDownHandler</definition>
        <argsstring>(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>StateDownHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean" kindref="compound">SteamVR_Behaviour_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a6ac1e6383124de89a78d25b5f453bab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Boolean.StateUpHandler</definition>
        <argsstring>(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>StateUpHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean" kindref="compound">SteamVR_Behaviour_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a915c126540f6be14cd925ac1679649af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Boolean.StateHandler</definition>
        <argsstring>(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>StateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean" kindref="compound">SteamVR_Behaviour_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a4629d21a26e1e23cf5d7d6ddee6331ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Boolean.ActiveChangeHandler</definition>
        <argsstring>(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource, bool active)</argsstring>
        <name>ActiveChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean" kindref="compound">SteamVR_Behaviour_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ac6747cdeceec4d24ddb39b4de05b1ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Boolean.ChangeHandler</definition>
        <argsstring>(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState)</argsstring>
        <name>ChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean" kindref="compound">SteamVR_Behaviour_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ae98c73afb05e760178c435aa4baa175c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Behaviour_Boolean.UpdateHandler</definition>
        <argsstring>(SteamVR_Behaviour_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState)</argsstring>
        <name>UpdateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean" kindref="compound">SteamVR_Behaviour_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="190" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This component simplifies using boolean actions. </para>
    </briefdescription>
    <detaileddescription>
<para>Provides editor accessible events: OnPress, OnPressDown, OnPressUp, OnChange, and OnUpdate.</para>
<para>Provides script accessible events: OnPressEvent, OnPressDownEvent, OnPressUpEvent, OnChangeEvent, and OnUpdateEvent.</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5099">
        <label>Valve.VR.SteamVR_Behaviour_Boolean</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean"/>
        <childnode refid="5100" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5100">
        <label>MonoBehaviour</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5109">
        <label>Valve.VR.SteamVR_Behaviour_BooleanEvent</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_event"/>
        <childnode refid="5110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5107">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="5103">
        <label>Valve.VR.SteamVR_Action_Boolean</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean"/>
        <childnode refid="5104" relation="public-inheritance">
        </childnode>
        <childnode refid="5105" relation="public-inheritance">
        </childnode>
        <childnode refid="5108" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5106">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="5107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5108">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="5101">
        <label>Valve.VR.SteamVR_Behaviour_Boolean</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean"/>
        <childnode refid="5102" relation="public-inheritance">
        </childnode>
        <childnode refid="5103" relation="usage">
          <edgelabel>booleanAction</edgelabel>
        </childnode>
        <childnode refid="5109" relation="usage">
          <edgelabel>onPressDown</edgelabel>
          <edgelabel>onPress</edgelabel>
          <edgelabel>onUpdate</edgelabel>
          <edgelabel>onChange</edgelabel>
          <edgelabel>onPressUp</edgelabel>
        </childnode>
      </node>
      <node id="5110">
        <label>UnityEvent&lt; SteamVR_Behaviour_Boolean, SteamVR_Input_Sources, bool &gt;</label>
      </node>
      <node id="5105">
        <label>ISteamVR_Action_Boolean</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean"/>
        <childnode refid="5106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5102">
        <label>MonoBehaviour</label>
      </node>
      <node id="5104">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Behaviour_Boolean.cs" bodystart="18" bodyend="191"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ab6787ffad27bdf7cdf30d0b63c96c8c0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>actionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a4629d21a26e1e23cf5d7d6ddee6331ba" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>ActiveChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ace248524b7a7f0cf0e7481daa34fa01b" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>AddHandlers</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a522b3b344157b96353bb519bced45474" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>booleanAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ac6747cdeceec4d24ddb39b4de05b1ca6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>ChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a971bb30542fc5f5da959fb951afdecbd" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>GetLocalizedName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ad396ec574856f8332bfb9231f1199dc9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>inputSource</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a893fb4b744621a730be84d41908e0e3a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>isActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a732d3221d1c00ab43ff87425673c9a49" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a19cd995d03f07a98150ba6c466032af9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onChangeEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a3c4c6231615ac96e43cd5646dc515cfd" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>OnDisable</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ae0bebdd1322463f3cd70b9cdc91ece76" prot="protected" virt="virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>OnEnable</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ad7c976b36eeab0c73b6232aac9d29d65" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onPress</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1abb6167286813c1edd0b8d565aa6f1e36" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onPressDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a190d1f5b2453778d2403f0389d31621b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onPressDownEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a1e55199fdcd5d8fa714e0ba802b5210f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onPressEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ab81b2dae4a38e689a81af644da2c8ff4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onPressUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a25f59fa151fdd77e1856c1d567d8fa59" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onPressUpEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ab7d0f9440d0b7c1f3df9cd7b21dd8104" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1af7987bf6d371d204514044c91b1a2e8f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>onUpdateEvent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a5045745f25bd2a4ad2238782b551da5e" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>RemoveHandlers</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a72b8998f8432175c0bdeec28b33eeb48" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>StateDownHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a915c126540f6be14cd925ac1679649af" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>StateHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a6ac1e6383124de89a78d25b5f453bab7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>StateUpHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a02b46c566dbba7286c36dcca4af5b0c6" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>SteamVR_Behaviour_Boolean_OnChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a53d4bca1905c262b927a34174e10a766" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>SteamVR_Behaviour_Boolean_OnState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a80e5b9542ab2183edcc45bd8b5b792b6" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>SteamVR_Behaviour_Boolean_OnStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ab0c611c0f0a305a5cd94ab9eed78e385" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>SteamVR_Behaviour_Boolean_OnStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1a07113eb7221f8b19a55d89c375d283dc" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>SteamVR_Behaviour_Boolean_OnUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_1ae98c73afb05e760178c435aa4baa175c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Behaviour_Boolean</scope><name>UpdateHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
