<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_bit_converter_non_alloc" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::BitConverterNonAlloc</compoundname>
    <innerclass refid="struct_leap_1_1_unity_1_1_bit_converter_non_alloc_1_1_conversion_struct" prot="private">Leap::Unity::BitConverterNonAlloc::ConversionStruct</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a168486849077bb52cf672b1855fac910" prot="private" static="yes" mutable="no">
        <type>ConversionStruct</type>
        <definition>ConversionStruct Leap.Unity.BitConverterNonAlloc._c</definition>
        <argsstring></argsstring>
        <name>_c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a1bce1e76593448bf867b5d7c362f2ffe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt16</type>
        <definition>static UInt16 Leap.Unity.BitConverterNonAlloc.ToUInt16</definition>
        <argsstring>(byte[] bytes, int offset=0)</argsstring>
        <name>ToUInt16</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the UInt16 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="27" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="27" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aa31fd09d6539fe44fb56566f71729627" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Int16</type>
        <definition>static Int16 Leap.Unity.BitConverterNonAlloc.ToInt16</definition>
        <argsstring>(byte[] bytes, int offset=0)</argsstring>
        <name>ToInt16</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Int16 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="45" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="45" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a56eb14b294831dc5dec609aa4df05b7e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>static UInt32 Leap.Unity.BitConverterNonAlloc.ToUInt32</definition>
        <argsstring>(byte[] bytes, int offset=0)</argsstring>
        <name>ToUInt32</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the UInt32 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="63" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1ae93545889d14c94b4c9ceefcca1a5752" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Int32</type>
        <definition>static Int32 Leap.Unity.BitConverterNonAlloc.ToInt32</definition>
        <argsstring>(byte[] bytes, int offset=0)</argsstring>
        <name>ToInt32</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Int32 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="83" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="83" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aa45fd6ae4df622accae3002ce19fd8df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt64</type>
        <definition>static UInt64 Leap.Unity.BitConverterNonAlloc.ToUInt64</definition>
        <argsstring>(byte[] bytes, int offset=0)</argsstring>
        <name>ToUInt64</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the UInt64 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="103" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="103" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aa54156740e50abd68af060ae6d84c445" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Int64</type>
        <definition>static Int64 Leap.Unity.BitConverterNonAlloc.ToInt64</definition>
        <argsstring>(byte[] bytes, int offset=0)</argsstring>
        <name>ToInt64</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Int64 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="127" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="127" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a6f9068505abff04bc179796308d17d83" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Single</type>
        <definition>static Single Leap.Unity.BitConverterNonAlloc.ToSingle</definition>
        <argsstring>(byte[] bytes, int offset=0)</argsstring>
        <name>ToSingle</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Single value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="151" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="151" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a9840519cf4096ad9bb08a79d217adb45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Double</type>
        <definition>static Double Leap.Unity.BitConverterNonAlloc.ToDouble</definition>
        <argsstring>(byte[] bytes, int offset=0)</argsstring>
        <name>ToDouble</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Double value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="171" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="171" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1abe14bf22a3f9ca38ee5c526231f6124a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt16</type>
        <definition>static UInt16 Leap.Unity.BitConverterNonAlloc.ToUInt16</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ToUInt16</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the UInt16 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the UInt16 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="199" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="199" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1adfef08fb7e0a3768ee5e3ce454d97d56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Int16</type>
        <definition>static Int16 Leap.Unity.BitConverterNonAlloc.ToInt16</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ToInt16</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Int16 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Int16 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="222" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="222" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a07c88770ca07a32c005c2b1cff5beb91" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt32</type>
        <definition>static UInt32 Leap.Unity.BitConverterNonAlloc.ToUInt32</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ToUInt32</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the UInt32 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the UInt32 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="245" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="245" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a3c8d60eb73c22fcc1dea2e7edea27af7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Int32</type>
        <definition>static Int32 Leap.Unity.BitConverterNonAlloc.ToInt32</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ToInt32</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Int32 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Int32 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="270" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="270" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a844cce3ba64592cf52b1b2b34f20c521" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>UInt64</type>
        <definition>static UInt64 Leap.Unity.BitConverterNonAlloc.ToUInt64</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ToUInt64</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the UInt64 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the UInt64 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="295" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="295" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1ab6493070a8b60def7b1aec478a0c8380" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Int64</type>
        <definition>static Int64 Leap.Unity.BitConverterNonAlloc.ToInt64</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ToInt64</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Int64 value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Int64 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="324" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="324" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a6c96a7f68e6d0ad97ec48cb5947a83cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Single</type>
        <definition>static Single Leap.Unity.BitConverterNonAlloc.ToSingle</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ToSingle</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Single value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Single in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="353" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="353" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a9820ec2c33bea515f075ff689b6546cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Double</type>
        <definition>static Double Leap.Unity.BitConverterNonAlloc.ToDouble</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ToDouble</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given an array of bytes, and an offset to start reading from, return the Double value that is represented by that byte pattern. Undefined results if there are not enough bytes in the array. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Double in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="378" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="378" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1ac7b48e623f575248bf24b51b26737402" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(UInt16 value, byte[] bytes, int offset=0)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>UInt16</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given a UInt16 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="404" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="404" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1abce56815db71dca426c6e308b231def1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Int16 value, byte[] bytes, int offset=0)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Int16</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given a Int16 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="423" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="423" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a2c62d4686b85ac281ca7b533f57a078a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(UInt32 value, byte[] bytes, int offset=0)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>UInt32</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given a UInt32 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="442" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="442" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a1c3e9b75446dbc59608d53c40c8c8102" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Int32 value, byte[] bytes, int offset=0)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Int32</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given a Int32 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="463" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="463" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a407be16fba4e88b3dcd78b0659293b77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(UInt64 value, byte[] bytes, int offset=0)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>UInt64</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given a UInt64 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="484" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="484" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a25f858cb4b41da3df49137ed3dbd1059" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Int64 value, byte[] bytes, int offset=0)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Int64</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given a Int64 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="509" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="509" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1ad3709baf34fad9c5359bc13ea5806265" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Single value, byte[] bytes, int offset=0)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Single</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given a Single value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="534" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="534" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aced3b4b16c3c5337113630a1e976c59a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Double value, byte[] bytes, int offset=0)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Given a Double value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="555" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="555" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a7d86dea3a5145db831f73cfbf99d261a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(UInt16 value, byte[] bytes, ref int offset)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>UInt16</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given a UInt16 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the UInt16 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="583" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="583" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1afb835eb941c609166ade065c17d670f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Int16 value, byte[] bytes, ref int offset)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Int16</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given a Int16 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Int16 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="606" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="606" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a1d240cf7568778d74366335c6c120e11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(UInt32 value, byte[] bytes, ref int offset)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>UInt32</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given a UInt32 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the UInt32 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="629" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="629" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1adc44d599b68cd4b2cd49e8512757d170" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Int32 value, byte[] bytes, ref int offset)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Int32</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given a Int32 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Int32 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="654" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="654" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a88929578bbc93c2411ce5fb9fc0f8ab8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(UInt64 value, byte[] bytes, ref int offset)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>UInt64</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given a UInt64 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the UInt64 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="679" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="679" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a52e437171cf6bc692c27922a8bcd45fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Int64 value, byte[] bytes, ref int offset)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Int64</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given a Int64 value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Int64 in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="708" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="708" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a7548b437f16472678b7976ac8cb9114a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Single value, byte[] bytes, ref int offset)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Single</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given a Single value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Single in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="737" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="737" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aade825439f1e71b34e4231ea00d1a4c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.BitConverterNonAlloc.GetBytes</definition>
        <argsstring>(Double value, byte[] bytes, ref int offset)</argsstring>
        <name>GetBytes</name>
        <param>
          <type>Double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Given a Double value, copy its binary representation into the given array of bytes, at the given offset. Undefined results if there are not enough bytes in the array to accept the value. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset variable is incremented by the size of the Double in bytes after this method is complete. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="762" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="762" bodyend="781"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" line="15" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/BitConverterNonAlloc.cs" bodystart="15" bodyend="821"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a168486849077bb52cf672b1855fac910" prot="private" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>_c</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1ac7b48e623f575248bf24b51b26737402" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1abce56815db71dca426c6e308b231def1" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a2c62d4686b85ac281ca7b533f57a078a" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a1c3e9b75446dbc59608d53c40c8c8102" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a407be16fba4e88b3dcd78b0659293b77" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a25f858cb4b41da3df49137ed3dbd1059" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1ad3709baf34fad9c5359bc13ea5806265" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aced3b4b16c3c5337113630a1e976c59a" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a7d86dea3a5145db831f73cfbf99d261a" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1afb835eb941c609166ade065c17d670f0" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a1d240cf7568778d74366335c6c120e11" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1adc44d599b68cd4b2cd49e8512757d170" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a88929578bbc93c2411ce5fb9fc0f8ab8" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a52e437171cf6bc692c27922a8bcd45fe" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a7548b437f16472678b7976ac8cb9114a" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aade825439f1e71b34e4231ea00d1a4c3" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>GetBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a9840519cf4096ad9bb08a79d217adb45" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToDouble</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a9820ec2c33bea515f075ff689b6546cf" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToDouble</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aa31fd09d6539fe44fb56566f71729627" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToInt16</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1adfef08fb7e0a3768ee5e3ce454d97d56" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToInt16</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1ae93545889d14c94b4c9ceefcca1a5752" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToInt32</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a3c8d60eb73c22fcc1dea2e7edea27af7" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToInt32</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aa54156740e50abd68af060ae6d84c445" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToInt64</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1ab6493070a8b60def7b1aec478a0c8380" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToInt64</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a6f9068505abff04bc179796308d17d83" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToSingle</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a6c96a7f68e6d0ad97ec48cb5947a83cc" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToSingle</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a1bce1e76593448bf867b5d7c362f2ffe" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToUInt16</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1abe14bf22a3f9ca38ee5c526231f6124a" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToUInt16</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a56eb14b294831dc5dec609aa4df05b7e" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToUInt32</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a07c88770ca07a32c005c2b1cff5beb91" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToUInt32</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1aa45fd6ae4df622accae3002ce19fd8df" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToUInt64</name></member>
      <member refid="class_leap_1_1_unity_1_1_bit_converter_non_alloc_1a844cce3ba64592cf52b1b2b34f20c521" prot="public" virt="non-virtual"><scope>Leap::Unity::BitConverterNonAlloc</scope><name>ToUInt64</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
