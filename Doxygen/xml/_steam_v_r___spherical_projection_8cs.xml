<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_steam_v_r___spherical_projection_8cs" kind="file" language="C#">
    <compoundname>SteamVR_SphericalProjection.cs</compoundname>
    <innerclass refid="class_valve_1_1_v_r_1_1_steam_v_r___spherical_projection" prot="public">Valve::VR::SteamVR_SphericalProjection</innerclass>
    <innernamespace refid="namespace_valve">Valve</innernamespace>
    <innernamespace refid="namespace_valve_1_1_v_r">Valve::VR</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//=======<sp/>Copyright<sp/>(c)<sp/>Valve<sp/>Corporation,<sp/>All<sp/>rights<sp/>reserved.<sp/>===============</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Purpose:<sp/>Applies<sp/>spherical<sp/>projection<sp/>to<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_valve_1_1_v_r" kindref="compound">Valve.VR</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>[ExecuteInEditMode]</highlight></codeline>
<codeline lineno="12" refid="class_valve_1_1_v_r_1_1_steam_v_r___spherical_projection" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___spherical_projection" kindref="compound">SteamVR_SphericalProjection</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Material<sp/>material;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_valve_1_1_v_r_1_1_steam_v_r___spherical_projection_1a4e5bb05db62e8cf84e24485f0f7e489b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___spherical_projection_1a4e5bb05db62e8cf84e24485f0f7e489b" kindref="member">Set</ref>(Vector3<sp/>N,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phi1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta1,<sp/></highlight><highlight class="comment">//<sp/>in<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>uAxis,<sp/>Vector3<sp/>uOrigin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>uScale,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vAxis,<sp/>Vector3<sp/>vOrigin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vScale)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(material<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Material(Shader.Find(</highlight><highlight class="stringliteral">&quot;Custom/SteamVR_SphericalProjection&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetVector(</highlight><highlight class="stringliteral">&quot;_N&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector4(N.x,<sp/>N.y,<sp/>N.z));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetFloat(</highlight><highlight class="stringliteral">&quot;_Phi0&quot;</highlight><highlight class="normal">,<sp/>phi0<sp/>*<sp/>Mathf.Deg2Rad);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetFloat(</highlight><highlight class="stringliteral">&quot;_Phi1&quot;</highlight><highlight class="normal">,<sp/>phi1<sp/>*<sp/>Mathf.Deg2Rad);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetFloat(</highlight><highlight class="stringliteral">&quot;_Theta0&quot;</highlight><highlight class="normal">,<sp/>theta0<sp/>*<sp/>Mathf.Deg2Rad<sp/>+<sp/>Mathf.PI<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetFloat(</highlight><highlight class="stringliteral">&quot;_Theta1&quot;</highlight><highlight class="normal">,<sp/>theta1<sp/>*<sp/>Mathf.Deg2Rad<sp/>+<sp/>Mathf.PI<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetVector(</highlight><highlight class="stringliteral">&quot;_UAxis&quot;</highlight><highlight class="normal">,<sp/>uAxis);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetVector(</highlight><highlight class="stringliteral">&quot;_VAxis&quot;</highlight><highlight class="normal">,<sp/>vAxis);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetVector(</highlight><highlight class="stringliteral">&quot;_UOrigin&quot;</highlight><highlight class="normal">,<sp/>uOrigin);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetVector(</highlight><highlight class="stringliteral">&quot;_VOrigin&quot;</highlight><highlight class="normal">,<sp/>vOrigin);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetFloat(</highlight><highlight class="stringliteral">&quot;_UScale&quot;</highlight><highlight class="normal">,<sp/>uScale);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>material.SetFloat(</highlight><highlight class="stringliteral">&quot;_VScale&quot;</highlight><highlight class="normal">,<sp/>vScale);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnRenderImage(RenderTexture<sp/>src,<sp/>RenderTexture<sp/>dest)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Graphics.Blit(src,<sp/>dest,<sp/>material);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_SphericalProjection.cs"/>
  </compounddef>
</doxygen>
