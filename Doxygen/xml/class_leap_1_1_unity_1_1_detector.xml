<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_detector" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::Detector</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_abstract_hold_detector" prot="public" virt="non-virtual">Leap.Unity.AbstractHoldDetector</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_detector_logic_gate" prot="public" virt="non-virtual">Leap.Unity.DetectorLogicGate</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_extended_finger_detector" prot="public" virt="non-virtual">Leap.Unity.ExtendedFingerDetector</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_finger_direction_detector" prot="public" virt="non-virtual">Leap.Unity.FingerDirectionDetector</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_palm_direction_detector" prot="public" virt="non-virtual">Leap.Unity.PalmDirectionDetector</derivedcompoundref>
    <derivedcompoundref refid="class_leap_1_1_unity_1_1_proximity_detector" prot="public" virt="non-virtual">Leap.Unity.ProximityDetector</derivedcompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_detector_1a89e15d17ea95587d9edf49c42473264d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.Detector.IsActive</definition>
        <argsstring></argsstring>
        <name>IsActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current detector state. <simplesect kind="since"><para>4.1.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="37" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="37" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_detector_1a2c568ab4188098d2d39affef4d680340" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.Detector._isActive</definition>
        <argsstring></argsstring>
        <name>_isActive</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="38" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_detector_1a55b5828df6cfa7321ccbf04dcf027ff9" prot="public" static="no" mutable="no">
        <type>UnityEvent</type>
        <definition>UnityEvent Leap.Unity.Detector.OnActivate</definition>
        <argsstring></argsstring>
        <name>OnActivate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dispatched when the detector activates (becomes true). <simplesect kind="since"><para>4.1.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="43" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_detector_1a786623564f0d001aa6869bb136786822" prot="public" static="no" mutable="no">
        <type>UnityEvent</type>
        <definition>UnityEvent Leap.Unity.Detector.OnDeactivate</definition>
        <argsstring></argsstring>
        <name>OnDeactivate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dispatched when the detector deactivates (becomes false). <simplesect kind="since"><para>4.1.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="48" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_detector_1ad922f873e3c07f9128d6438332e7b9c7" prot="protected" static="no" mutable="no">
        <type>Color</type>
        <definition>Color Leap.Unity.Detector.OnColor</definition>
        <argsstring></argsstring>
        <name>OnColor</name>
        <initializer>= Color.green</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="75" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_detector_1a976fc8d66dd98aaea15196d861df429c" prot="protected" static="no" mutable="no">
        <type>Color</type>
        <definition>Color Leap.Unity.Detector.OffColor</definition>
        <argsstring></argsstring>
        <name>OffColor</name>
        <initializer>= Color.red</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="76" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_detector_1ad7f8d0e7b913b78e86b2dacaa56287aa" prot="protected" static="no" mutable="no">
        <type>Color</type>
        <definition>Color Leap.Unity.Detector.LimitColor</definition>
        <argsstring></argsstring>
        <name>LimitColor</name>
        <initializer>= Color.blue</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="77" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_detector_1aae0718ccceffd88a12d63ad718cda346" prot="protected" static="no" mutable="no">
        <type>Color</type>
        <definition>Color Leap.Unity.Detector.DirectionColor</definition>
        <argsstring></argsstring>
        <name>DirectionColor</name>
        <initializer>= Color.white</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="78" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_detector_1a2dc0788829955e7d50bc7d553cc68d05" prot="protected" static="no" mutable="no">
        <type>Color</type>
        <definition>Color Leap.Unity.Detector.NormalColor</definition>
        <argsstring></argsstring>
        <name>NormalColor</name>
        <initializer>= Color.gray</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="79" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Leap.Unity.Detector.Activate</definition>
        <argsstring>()</argsstring>
        <name>Activate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invoked when this detector activates. Subclasses must call this function when the detector&apos;s conditions become true. <simplesect kind="since"><para>4.1.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="55" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Leap.Unity.Detector.Deactivate</definition>
        <argsstring>()</argsstring>
        <name>Deactivate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invoked when this detector deactivates. Subclasses must call this function when the detector&apos;s conditions change from true to false. <simplesect kind="since"><para>4.1.2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="67" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="67" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for detectors.</para>
<para>A <ref refid="class_leap_1_1_unity_1_1_detector" kindref="compound">Detector</ref> is an object that observes some aspect of a scene and reports true when the specified conditions are met. Typically these conditions involve hand information, but this is not required.</para>
<para><ref refid="class_leap_1_1_unity_1_1_detector" kindref="compound">Detector</ref> implementations must call <ref refid="class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8" kindref="member">Activate()</ref> when their conditions are met and <ref refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" kindref="member">Deactivate()</ref> when those conditions are no longer met. Implementations should also call <ref refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" kindref="member">Deactivate()</ref> when they, or the object they are a component of become disabled. Implementations can call <ref refid="class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8" kindref="member">Activate()</ref> and <ref refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" kindref="member">Deactivate()</ref> more often than is strictly necessary. This <ref refid="class_leap_1_1_unity_1_1_detector" kindref="compound">Detector</ref> base class keeps track of the IsActive status and only dispatches events when the status changes.</para>
<para><simplesect kind="since"><para>4.1.2 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="939">
        <label>Leap.Unity.ProximityDetector</label>
        <link refid="class_leap_1_1_unity_1_1_proximity_detector"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="937">
        <label>Leap.Unity.FingerDirectionDetector</label>
        <link refid="class_leap_1_1_unity_1_1_finger_direction_detector"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="933">
        <label>Leap.Unity.AbstractHoldDetector</label>
        <link refid="class_leap_1_1_unity_1_1_abstract_hold_detector"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="938">
        <label>Leap.Unity.PalmDirectionDetector</label>
        <link refid="class_leap_1_1_unity_1_1_palm_direction_detector"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="931">
        <label>Leap.Unity.Detector</label>
        <link refid="class_leap_1_1_unity_1_1_detector"/>
        <childnode refid="932" relation="public-inheritance">
        </childnode>
      </node>
      <node id="936">
        <label>Leap.Unity.ExtendedFingerDetector</label>
        <link refid="class_leap_1_1_unity_1_1_extended_finger_detector"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="934">
        <label>Leap.Unity.PinchDetector</label>
        <link refid="class_leap_1_1_unity_1_1_pinch_detector"/>
        <childnode refid="933" relation="public-inheritance">
        </childnode>
      </node>
      <node id="932">
        <label>MonoBehaviour</label>
      </node>
      <node id="935">
        <label>Leap.Unity.DetectorLogicGate</label>
        <link refid="class_leap_1_1_unity_1_1_detector_logic_gate"/>
        <childnode refid="931" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="940">
        <label>Leap.Unity.Detector</label>
        <link refid="class_leap_1_1_unity_1_1_detector"/>
        <childnode refid="941" relation="public-inheritance">
        </childnode>
      </node>
      <node id="941">
        <label>MonoBehaviour</label>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" line="33" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/Detector.cs" bodystart="33" bodyend="81"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_detector_1a2c568ab4188098d2d39affef4d680340" prot="private" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>_isActive</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8" prot="public" virt="virtual"><scope>Leap::Unity::Detector</scope><name>Activate</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" prot="public" virt="virtual"><scope>Leap::Unity::Detector</scope><name>Deactivate</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1aae0718ccceffd88a12d63ad718cda346" prot="protected" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>DirectionColor</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1a89e15d17ea95587d9edf49c42473264d" prot="public" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>IsActive</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1ad7f8d0e7b913b78e86b2dacaa56287aa" prot="protected" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>LimitColor</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1a2dc0788829955e7d50bc7d553cc68d05" prot="protected" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>NormalColor</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1a976fc8d66dd98aaea15196d861df429c" prot="protected" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>OffColor</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1a55b5828df6cfa7321ccbf04dcf027ff9" prot="public" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>OnActivate</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1ad922f873e3c07f9128d6438332e7b9c7" prot="protected" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>OnColor</name></member>
      <member refid="class_leap_1_1_unity_1_1_detector_1a786623564f0d001aa6869bb136786822" prot="public" virt="non-virtual"><scope>Leap::Unity::Detector</scope><name>OnDeactivate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
