<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Vector2</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector2" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_Vector2</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ISerializationCallbackReceiver</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a339f6effe1596dd43a10ee68869f66e6" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad390de62736aedd5be93238b1840ffec" kindref="member">ChangeHandler</ref></type>
        <definition>ChangeHandler Valve.VR.SteamVR_Action_Vector2.onChange</definition>
        <argsstring></argsstring>
        <name>onChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the axis changes by more than the specified changeTolerance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="24" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a26a550d86f7daabe09bc123e2ce7bd77" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a3f6872fd8960cbb9f571b0362857d9b5" kindref="member">UpdateHandler</ref></type>
        <definition>UpdateHandler Valve.VR.SteamVR_Action_Vector2.onUpdate</definition>
        <argsstring></argsstring>
        <name>onUpdate</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="28" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a8572a98f22c7a84fdbeabb69b34580b2" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a11d8b99df804d185a33c7c60791ef426" kindref="member">AxisHandler</ref></type>
        <definition>AxisHandler Valve.VR.SteamVR_Action_Vector2.onAxis</definition>
        <argsstring></argsstring>
        <name>onAxis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event will fire whenever the Vector2 value of the action is non-zero </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="32" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1afaa6f3e9d0ef1e3ef5555401598de607" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad01c83284de71c0d9cd8f7e673ce5ab5" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2.onActiveChange</definition>
        <argsstring></argsstring>
        <name>onActiveChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> Event fires when the active state (ActionSet active and binding active) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="36" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a0629b2634326464fc8ae3131e1c75ef4" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad01c83284de71c0d9cd8f7e673ce5ab5" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2.onActiveBindingChange</definition>
        <argsstring></argsstring>
        <name>onActiveBindingChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> Event fires when the active state of the binding changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="40" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1afd401d7d248459f2e074dc2b04f4bdc9" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector2</type>
        <definition>Vector2 Valve.VR.SteamVR_Action_Vector2.axis</definition>
        <argsstring></argsstring>
        <name>axis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The current Vector2 value of the action. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="46" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1abfaa7777e33e79208c25062cba77d687" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector2</type>
        <definition>Vector2 Valve.VR.SteamVR_Action_Vector2.lastAxis</definition>
        <argsstring></argsstring>
        <name>lastAxis</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The Vector2 value of the action from the previous update. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="50" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad1de90619e8911feb3ad60732edefd51" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector2</type>
        <definition>Vector2 Valve.VR.SteamVR_Action_Vector2.delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The Vector2 value difference between this update and the previous update. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="54" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a64aa5d73aa92d61abf982584d29a7175" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector2</type>
        <definition>Vector2 Valve.VR.SteamVR_Action_Vector2.lastDelta</definition>
        <argsstring></argsstring>
        <name>lastDelta</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> The Vector2 value difference between the previous update and update before that. Note: Will only return non-zero if the action is also active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="58" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a11d8b99df804d185a33c7c60791ef426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Vector2.AxisHandler</definition>
        <argsstring>(SteamVR_Action_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 axis, Vector2 delta)</argsstring>
        <name>AxisHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kindref="compound">SteamVR_Action_Vector2</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad01c83284de71c0d9cd8f7e673ce5ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Vector2.ActiveChangeHandler</definition>
        <argsstring>(SteamVR_Action_Vector2 fromAction, SteamVR_Input_Sources fromSource, bool active)</argsstring>
        <name>ActiveChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kindref="compound">SteamVR_Action_Vector2</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad390de62736aedd5be93238b1840ffec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Vector2.ChangeHandler</definition>
        <argsstring>(SteamVR_Action_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 axis, Vector2 delta)</argsstring>
        <name>ChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kindref="compound">SteamVR_Action_Vector2</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a3f6872fd8960cbb9f571b0362857d9b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Vector2.UpdateHandler</definition>
        <argsstring>(SteamVR_Action_Vector2 fromAction, SteamVR_Input_Sources fromSource, Vector2 axis, Vector2 delta)</argsstring>
        <name>UpdateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kindref="compound">SteamVR_Action_Vector2</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1acc03022252e10caa2e44c5a2e4ee180d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.SteamVR_Action_Vector2.SteamVR_Action_Vector2</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_Action_Vector2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="61" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a9313e35bdbdfc18a161484bdd0c8239b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>Vector2 Valve.VR.SteamVR_Action_Vector2.GetAxis</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetAxis</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The current Vector2 value of the action </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="65" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a87c7b602c486249f0bb0a8f908fb82c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>Vector2 Valve.VR.SteamVR_Action_Vector2.GetAxisDelta</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetAxisDelta</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The Vector2 value difference between this update and the previous update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="72" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1aaef8a836bd1040eb6854ba7ad5a5d042" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>Vector2 Valve.VR.SteamVR_Action_Vector2.GetLastAxis</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastAxis</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The Vector2 value of the action from the previous update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="79" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a3bebc5e4564895072ce9ed9f532b7a97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>Vector2 Valve.VR.SteamVR_Action_Vector2.GetLastAxisDelta</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastAxisDelta</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The Vector2 value difference between the previous update and update before that. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="86" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a69cefbe63ef365944127b0ee3ab056c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.AddOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad01c83284de71c0d9cd8f7e673ce5ab5" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the <emphasis>functional</emphasis> active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s active state changes and the corresponding input source</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="95" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a7cceff632cff0062c1a2018032e84600" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.RemoveOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad01c83284de71c0d9cd8f7e673ce5ab5" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing a function when the <emphasis>functional</emphasis> active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="104" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a9ad74daee25b567d8961cd28d5357008" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.AddOnActiveBindingChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnActiveBindingChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad01c83284de71c0d9cd8f7e673ce5ab5" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s active state changes and the corresponding input source</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="112" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a7ceb21535842b499cd8e73ffbee4be90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.RemoveOnActiveBindingChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnActiveBindingChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad01c83284de71c0d9cd8f7e673ce5ab5" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="120" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a6ed8ca5d8b3b60d52a8c7d875506d3ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.AddOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad390de62736aedd5be93238b1840ffec" kindref="member">ChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the axis changes by more than the specified changeTolerance </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="128" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a7449f5403cd5c68579091d9ab4f6084f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.RemoveOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad390de62736aedd5be93238b1840ffec" kindref="member">ChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive on change events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="136" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a12df05b3e447aaa26cc81b9ccae3cd2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.AddOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a3f6872fd8960cbb9f571b0362857d9b5" kindref="member">UpdateHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action (with the specified inputSource) is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="144" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a615865386254c66852cf687a8e330c3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.RemoveOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a3f6872fd8960cbb9f571b0362857d9b5" kindref="member">UpdateHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="152" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a52cf0999c3cb5f377a61d9b29189cfdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.AddOnAxisListener</definition>
        <argsstring>(AxisHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnAxisListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a11d8b99df804d185a33c7c60791ef426" kindref="member">AxisHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the Vector2 value of the action is non-zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="160" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1add5f9659d86eed956636d7495f4af7de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vector2.RemoveOnAxisListener</definition>
        <argsstring>(AxisHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnAxisListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a11d8b99df804d185a33c7c60791ef426" kindref="member">AxisHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="168" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="168" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1adefcb2d45fad77ddfb99c33ecc3b9c2b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Vector2.OnBeforeSerialize</definition>
        <argsstring>()</argsstring>
        <name>OnBeforeSerialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="173" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a4a3c37d75102b8ad7acffb9523ef8a1a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Vector2.OnAfterDeserialize</definition>
        <argsstring>()</argsstring>
        <name>OnAfterDeserialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="177" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="177" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An analog action with two values generally from -1 to 1. Also provides a delta since the last update. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4949">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4948">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4949" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4950">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4947">
        <label>ISteamVR_Action_Vector2</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector2"/>
        <childnode refid="4948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4946">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
      <node id="4945">
        <label>Valve.VR.SteamVR_Action_Vector2</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2"/>
        <childnode refid="4946" relation="public-inheritance">
        </childnode>
        <childnode refid="4947" relation="public-inheritance">
        </childnode>
        <childnode refid="4950" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4955">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4954">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4955" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4956">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4953">
        <label>ISteamVR_Action_Vector2</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector2"/>
        <childnode refid="4954" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4952">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
      <node id="4951">
        <label>Valve.VR.SteamVR_Action_Vector2</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2"/>
        <childnode refid="4952" relation="public-inheritance">
        </childnode>
        <childnode refid="4953" relation="public-inheritance">
        </childnode>
        <childnode refid="4956" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vector2.cs" bodystart="16" bodyend="181"/>
    <listofallmembers>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a85095931b202ff69185fceaf75e5503a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>actionSet</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a529749f5fa62c29a4faac767cd9ece8d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>active</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a304d2c626023c9dea73f4289c57975b3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad01c83284de71c0d9cd8f7e673ce5ab5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>ActiveChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a5bb4f52dca76a5fda6f9977d787c0402" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>activeDevice</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abf4ed89526fde73c6142fbd458bc1eb8" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>activeDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a78f3e5c201024521dd7f575617f58244" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>activeOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a4aabe825dd43d59f2c23677904f93846" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>activeOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a9ad74daee25b567d8961cd28d5357008" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>AddOnActiveBindingChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a69cefbe63ef365944127b0ee3ab056c4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>AddOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a52cf0999c3cb5f377a61d9b29189cfdd" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>AddOnAxisListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a6ed8ca5d8b3b60d52a8c7d875506d3ad" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>AddOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a12df05b3e447aaa26cc81b9ccae3cd2c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>AddOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1afd401d7d248459f2e074dc2b04f4bdc9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>axis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a11d8b99df804d185a33c7c60791ef426" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>AxisHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a129bfbee3aa107bc4fcb46716a240d88" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>changed</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a709444689c4ec680077a341f6cd7b984" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>changed</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afccb197dbb5d721e390e60cce83957f4" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>changedTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a761752bb73a29d2ee597e71a61476c79" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>changedTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad390de62736aedd5be93238b1840ffec" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>ChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1ad1de90619e8911feb3ad60732edefd51" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>delta</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1fb56d52a28f0c621007a6b3ea7a71b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af39cd279bc56854ce6cf89402e405a1c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>ForceAddSourceToUpdateList</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1aecfcecacdabb3ca489a137a30f9b1728" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2cf3c55c01761a091db3afb42a3d47f2" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetActiveDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a9313e35bdbdfc18a161484bdd0c8239b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a87c7b602c486249f0bb0a8f908fb82c0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetAxisDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ab5dff6e847415ea70581fb544443738d" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a21f1b8a683a6950f2e2cd1a2bbe42acc" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1aaef8a836bd1040eb6854ba7ad5a5d042" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetLastAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a3bebc5e4564895072ce9ed9f532b7a97" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetLastAxisDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a330a9cf6a0b63e08804318d49e43509e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetLocalizedOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a6ae3b2c4b90917042b1fda3fe54b2d36" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetLocalizedOriginPart</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ad435fe38eac2d62d6ce217644a6586af" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetRenderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1accdc869f6fd50ef15580a271b6de4d30" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>GetTimeLastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a8f32f3e77335f4266e326200072a216c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a648d3f94c79e2ec43ec9846535fbf8ef" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>IsUpdating</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1f350e66dccb7f9124446967e856500" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>lastActive</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1af78f7edb626305afcd4cbccf10e14b0f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a0c9642e77bd7d7889df24be40da84e41" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>lastActiveOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a96b5ca1f6b126ef0b1ddda76abdc3535" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>lastActiveOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1abfaa7777e33e79208c25062cba77d687" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>lastAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a61423de9edc8a8301e81f2522d635507" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>lastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ad31c92ed9c0df791c4cf8f6907dc6d73" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>lastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a64aa5d73aa92d61abf982584d29a7175" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>lastDelta</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a400ef60ea3cecf1cd50d8da97a00d13b" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>localizedOriginName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abfb307a430eb5946c905d07bec79b2aa" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>localizedOriginName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a0629b2634326464fc8ae3131e1c75ef4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>onActiveBindingChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1afaa6f3e9d0ef1e3ef5555401598de607" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>onActiveChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a4a3c37d75102b8ad7acffb9523ef8a1a" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>OnAfterDeserialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a8572a98f22c7a84fdbeabb69b34580b2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>onAxis</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1adefcb2d45fad77ddfb99c33ecc3b9c2b" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>OnBeforeSerialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a339f6effe1596dd43a10ee68869f66e6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>onChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a26a550d86f7daabe09bc123e2ce7bd77" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>onUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a7ceb21535842b499cd8e73ffbee4be90" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>RemoveOnActiveBindingChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a7cceff632cff0062c1a2018032e84600" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>RemoveOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1add5f9659d86eed956636d7495f4af7de" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>RemoveOnAxisListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a7449f5403cd5c68579091d9ab4f6084f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>RemoveOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a615865386254c66852cf687a8e330c3c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>RemoveOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af302f79ecf325f6507a3aca1de536097" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>renderModelComponentName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1aed8fb392a34de9c8840578c4a3f6a9ba" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>renderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1acc03022252e10caa2e44c5a2e4ee180d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>SteamVR_Action_Vector2</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afd572897e423daf987b7708a6d8dc890" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>trackedDeviceIndex</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a5dbae568b5daf1cfd3b529b00750caae" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>trackedDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2_1a3f6872fd8960cbb9f571b0362857d9b5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>UpdateHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2b6e25e75c6ebc79eda8b335abedb031" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>updateTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ada770da3da523e6bba5c7b5501a8da9e" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Vector2."><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>updateTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ac2e658d37dcdb843a0cff2e62cbd84cf" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vector2</scope><name>UpdateValues</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
