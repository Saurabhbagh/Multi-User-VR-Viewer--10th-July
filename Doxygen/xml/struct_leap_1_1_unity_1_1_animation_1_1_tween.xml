<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_leap_1_1_unity_1_1_animation_1_1_tween" kind="struct" language="C#" prot="public">
    <compoundname>Leap::Unity::Animation::Tween</compoundname>
    <innerclass refid="class_leap_1_1_unity_1_1_animation_1_1_tween_1_1_color_interpolator" prot="private">Leap::Unity::Animation::Tween::ColorInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_animation_1_1_tween_1_1_float_interpolator" prot="private">Leap::Unity::Animation::Tween::FloatInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_animation_1_1_tween_1_1_quaternion_interpolator" prot="private">Leap::Unity::Animation::Tween::QuaternionInterpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_animation_1_1_tween_1_1_vector2_interpolator" prot="private">Leap::Unity::Animation::Tween::Vector2Interpolator</innerclass>
    <innerclass refid="class_leap_1_1_unity_1_1_animation_1_1_tween_1_1_vector3_interpolator" prot="private">Leap::Unity::Animation::Tween::Vector3Interpolator</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad90990cea75cd6f2794d5ef01d37f1d8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Leap.Unity.Animation.Tween._id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ab3394cde7e1159a04d6336b5c8403b9b" prot="private" static="no" mutable="no">
        <type><ref refid="class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_tween_instance" kindref="compound">TweenInstance</ref></type>
        <definition>TweenInstance Leap.Unity.Animation.Tween._instance</definition>
        <argsstring></argsstring>
        <name>_instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="18" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.Animation.Tween.isValid</definition>
        <argsstring></argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Returns whether or not this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> is considered valid. A <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> can become invalid under the following conditions: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>It was constructed with the default constructor. Only ever use <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7238365f2fb16c95082dc5d71b8f5139" kindref="member">Tween.Single</ref> or Tween.Persistant to create Tweens.</para>
</listitem><listitem><para>It was constructed with <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7238365f2fb16c95082dc5d71b8f5139" kindref="member">Tween.Single</ref> and has already finished playing. Use Tween.Persistant if you want to keep it for longer.</para>
</listitem><listitem><para>It had Release called. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="55" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a0af0e03e8197661737ace80ef03636c6" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.Animation.Tween.isRunning</definition>
        <argsstring></argsstring>
        <name>isRunning</name>
        <briefdescription>
<para>Returns whether or not the <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> is currently running. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="64" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae88d2317428932c7de52a00298005696" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_leap_1_1_unity_1_1_animation_1ab080d4756e4d3d6a2fc9cd9a7f4e695a" kindref="member">Direction</ref>?</type>
        <definition>Direction? Leap.Unity.Animation.Tween.direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <briefdescription>
<para>Gets or sets whether or not this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> is moving forwards or backwards. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="74" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a27ebf28615fd4bfe76cf8c9eb2bd3379" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Leap.Unity.Animation.Tween.timeLeft</definition>
        <argsstring></argsstring>
        <name>timeLeft</name>
        <briefdescription>
<para>Gets how much time is left before the <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> stops. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="89" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="89" bodyend="94"/>
      </memberdef>
      <memberdef kind="property" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae0123854170a23519792c97c8620645c" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>float</type>
        <definition>float Leap.Unity.Animation.Tween.progress</definition>
        <argsstring></argsstring>
        <name>progress</name>
        <briefdescription>
<para>Gets or sets how far along completion this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> is. This value is a percent that ranges from 0 to 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="100" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="100" bodyend="142"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ace36e93470c4b1168289ae1eef2e4736" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>MaterialSelector</type>
        <definition>MaterialSelector Leap.Unity.Animation.Tween.Target</definition>
        <argsstring>(Material material)</argsstring>
        <name>Target</name>
        <param>
          <type>Material</type>
          <declname>material</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/MaterialInterpolators.cs" line="16" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/MaterialInterpolators.cs" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1aa7b22a26af26ea28523475885b119dda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TransformSelector</type>
        <definition>TransformSelector Leap.Unity.Animation.Tween.Target</definition>
        <argsstring>(Transform transform)</argsstring>
        <name>Target</name>
        <param>
          <type>Transform</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/TransformInterpolators.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/TransformInterpolators.cs" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a831691155a74d63fe5a0a8c07bce6d13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Value</definition>
        <argsstring>(float a, float b, Action&lt; float &gt; onValue)</argsstring>
        <name>Value</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Action&lt; float &gt;</type>
          <declname>onValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4b8b8872079eed40ed3565488390768b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Value</definition>
        <argsstring>(Vector2 a, Vector2 b, Action&lt; Vector2 &gt; onValue)</argsstring>
        <name>Value</name>
        <param>
          <type>Vector2</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Action&lt; Vector2 &gt;</type>
          <declname>onValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" line="39" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad8eaac902159cb11727ed3fdb9b29f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Value</definition>
        <argsstring>(Vector3 a, Vector3 b, Action&lt; Vector3 &gt; onValue)</argsstring>
        <name>Value</name>
        <param>
          <type>Vector3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Action&lt; Vector3 &gt;</type>
          <declname>onValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" line="59" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4877dc9c6bc0010523f51d21549098fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Value</definition>
        <argsstring>(Quaternion a, Quaternion b, Action&lt; Quaternion &gt; onValue)</argsstring>
        <name>Value</name>
        <param>
          <type>Quaternion</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Action&lt; Quaternion &gt;</type>
          <declname>onValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" line="79" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1aab3b83bfba4ff98c4ddb8129501e731b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Value</definition>
        <argsstring>(Color a, Color b, Action&lt; Color &gt; onValue)</argsstring>
        <name>Value</name>
        <param>
          <type>Color</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Color</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Action&lt; Color &gt;</type>
          <declname>onValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" line="99" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.AddInterpolator</definition>
        <argsstring>(IInterpolator interpolator)</argsstring>
        <name>AddInterpolator</name>
        <param>
          <type><ref refid="interface_leap_1_1_unity_1_1_animation_1_1_i_interpolator" kindref="compound">IInterpolator</ref></type>
          <declname>interpolator</declname>
        </param>
        <briefdescription>
<para>Adds a new Interpolator to this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref>. This Interpolator will have it&apos;s Interpolate method called every step of the <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> with the smoothed progress value. All Interpolators are recycled when the <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> itself is Recycled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="152" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="152" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a233ad9426dc52f71fd5ac36500946d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.OverTime</definition>
        <argsstring>(float seconds)</argsstring>
        <name>OverTime</name>
        <param>
          <type>float</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
<para>Specifies that this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> should travel from begining to end over a certain number of seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="166" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a8a9610fdde3d806fdd7ca4c6e06f1645" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.AtRate</definition>
        <argsstring>(float unitsPerSecond)</argsstring>
        <name>AtRate</name>
        <param>
          <type>float</type>
          <declname>unitsPerSecond</declname>
        </param>
        <briefdescription>
<para>Specifies that this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> should travel at the given rate. This rate is measured against the FIRST interpolator added to this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref>, at the moment AtRate is called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="176" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7bb854a75ebd46b16addf1018768d6cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Smooth</definition>
        <argsstring>(SmoothType type=SmoothType.Smooth)</argsstring>
        <name>Smooth</name>
        <param>
          <type><ref refid="namespace_leap_1_1_unity_1_1_animation_1a9667bc3fe4218574cb25efb892505c77" kindref="member">SmoothType</ref></type>
          <declname>type</declname>
          <defval>SmoothType.Smooth</defval>
        </param>
        <briefdescription>
<para>Specifies that this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> should the given smoothing method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="185" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="185" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae1929c2f7f8dc7636e16d54b67d75337" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Smooth</definition>
        <argsstring>(AnimationCurve curve)</argsstring>
        <name>Smooth</name>
        <param>
          <type>AnimationCurve</type>
          <declname>curve</declname>
        </param>
        <briefdescription>
<para>Specifies that this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> should use the given <ref refid="namespace_leap_1_1_unity_1_1_animation" kindref="compound">Animation</ref> curve for its smoothing. The curve should map from [0-1] to [0-1]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="195" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a27b1991777c67934e885c0d01c64d031" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Smooth</definition>
        <argsstring>(Func&lt; float, float &gt; smoothFunction)</argsstring>
        <name>Smooth</name>
        <param>
          <type>Func&lt; float, float &gt;</type>
          <declname>smoothFunction</declname>
        </param>
        <briefdescription>
<para>Specifies that this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> should use the given Function for its smoothing. The function should map from [0-1] to [0-1]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="206" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="206" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a2f1e2df07793b5a7c397184cedeaca02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.OnProgress</definition>
        <argsstring>(Action&lt; float &gt; action)</argsstring>
        <name>OnProgress</name>
        <param>
          <type>Action&lt; float &gt;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Specifies an action to be called every step of the <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This callback happens after:<itemizedlist>
<listitem><para>OnLeaveStart</para>
</listitem><listitem><para>OnLeaveEnd</para>
</listitem><listitem><para>All interpolators have been interpolated This callback happens before:</para>
</listitem><listitem><para>OnReachStart</para>
</listitem><listitem><para>OnReachEnd </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="223" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="223" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a6aa4eb20bcc8295adee7afc50e8fe731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.OnLeaveStart</definition>
        <argsstring>(Action action)</argsstring>
        <name>OnLeaveStart</name>
        <param>
          <type>Action</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Specifies an action to be called whenever this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> is Played forward when at the start. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="233" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="233" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1af996cdf4236de2395c88bd0ba0fe65fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.OnReachStart</definition>
        <argsstring>(Action action)</argsstring>
        <name>OnReachStart</name>
        <param>
          <type>Action</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Specifies an action to be called whenever this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> reaches the start. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="243" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ac971360d59e189a9b5f788f1c881969c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.OnLeaveEnd</definition>
        <argsstring>(Action action)</argsstring>
        <name>OnLeaveEnd</name>
        <param>
          <type>Action</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Specifies an action to be called whenever this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> is Played backwards when at the end. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="253" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="253" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a6444cd8ffe0160d1431e091f3c4d8649" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.OnReachEnd</definition>
        <argsstring>(Action action)</argsstring>
        <name>OnReachEnd</name>
        <param>
          <type>Action</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Specifies an action to be called whenever this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> reaches the end. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="263" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a00ec83a05cb0637fc0bcc24e8703c572" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Play</definition>
        <argsstring>()</argsstring>
        <name>Play</name>
        <briefdescription>
<para>Starts playing this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref>. It will continue from the same position it left off on, and will continue in the same direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="273" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="273" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a1428d270a9c131173d13fe41c0728088" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Play</definition>
        <argsstring>(Direction direction)</argsstring>
        <name>Play</name>
        <param>
          <type><ref refid="namespace_leap_1_1_unity_1_1_animation_1ab080d4756e4d3d6a2fc9cd9a7f4e695a" kindref="member">Direction</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Starts playing this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> in a specific direction. It will condition from the same position it left off on. The direction will change even if the <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> is already playing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="293" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="293" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a8453ef9311e720d1518b1a6bd9466ff9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>Tween Leap.Unity.Animation.Tween.Play</definition>
        <argsstring>(float destinationPercent)</argsstring>
        <name>Play</name>
        <param>
          <type>float</type>
          <declname>destinationPercent</declname>
        </param>
        <briefdescription>
<para>Starts playing this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> towards a destination percent. Once it reaches that value, it will stop. If the destination percent is not 0 or 1, it will not trigger OnReachStart or OnReachEnd. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="307" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="307" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae3aea546f6195b60ace0fd614c3925d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_internal_1_1_tween_instance_1_1_tween_yield_instruction" kindref="compound">TweenInstance.TweenYieldInstruction</ref></type>
        <definition>TweenInstance.TweenYieldInstruction Leap.Unity.Animation.Tween.Yield</definition>
        <argsstring>()</argsstring>
        <name>Yield</name>
        <briefdescription>
<para>Returns a custom yield instruction that can be yielded to in order to wait for the completion of this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref>. This will yield correctly even if the <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> is modified as it is playing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="326" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="326" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a081bc17380d04763af8322c31b1ab887" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Animation.Tween.Pause</definition>
        <argsstring>()</argsstring>
        <name>Pause</name>
        <briefdescription>
<para>Pauses this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref>. It retains its position and direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="335" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="335" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad5f8092aec0bf5f7f301b9dbeef5a666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Animation.Tween.Stop</definition>
        <argsstring>()</argsstring>
        <name>Stop</name>
        <briefdescription>
<para>Stops this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref>. If it is not a persistant <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref>, it will be recycled right away. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="346" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="346" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1aae3c96c326e36d7dd2079ec15f772409" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Animation.Tween.Release</definition>
        <argsstring>()</argsstring>
        <name>Release</name>
        <briefdescription>
<para>Forces this <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> to be recycled right away. Once this method is called, the <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> will be invalid and unable to be modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="363" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="363" bodyend="369"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a5a65bf338e35cfd2cb76e140a2a3e4c1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Unity.Animation.Tween.Tween</definition>
        <argsstring>(bool isSingle)</argsstring>
        <name>Tween</name>
        <param>
          <type>bool</type>
          <declname>isSingle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="20" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a5fb8b17c191dd44577ded021e780868d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Animation.Tween.throwIfInvalid</definition>
        <argsstring>()</argsstring>
        <name>throwIfInvalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="373" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="373" bodyend="383"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7238365f2fb16c95082dc5d71b8f5139" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>static Tween Leap.Unity.Animation.Tween.Single</definition>
        <argsstring>()</argsstring>
        <name>Single</name>
        <briefdescription>
<para>Create a single-use <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> that will auto-release itself as soon as it is finished playing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="29" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4e3149fd5f794b71c50a8bb18b6d338e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>static Tween Leap.Unity.Animation.Tween.Persistent</definition>
        <argsstring>()</argsstring>
        <name>Persistent</name>
        <briefdescription>
<para>Creates a persistant <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> that will not ever auto-release itself. You must specifically call Release in order for the resources of the tween to be returned to the pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="37" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a77dd8bb5e57e2fffe9351ad806eaf53f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref></type>
        <definition>static Tween Leap.Unity.Animation.Tween.AfterDelay</definition>
        <argsstring>(float delay, Action onReachEnd)</argsstring>
        <name>AfterDelay</name>
        <param>
          <type>float</type>
          <declname>delay</declname>
        </param>
        <param>
          <type>Action</type>
          <declname>onReachEnd</declname>
        </param>
        <briefdescription>
<para>Create a single-use <ref refid="struct_leap_1_1_unity_1_1_animation_1_1_tween" kindref="compound">Tween</ref> that will fire onReachEnd after the specified delay in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" line="44" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Tween.cs" bodystart="44" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/MaterialInterpolators.cs" line="15" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/MaterialInterpolators.cs" bodystart="15" bodyend="19"/>
    <listofallmembers>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad90990cea75cd6f2794d5ef01d37f1d8" prot="private" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>_id</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ab3394cde7e1159a04d6336b5c8403b9b" prot="private" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>_instance</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>AddInterpolator</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a77dd8bb5e57e2fffe9351ad806eaf53f" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>AfterDelay</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a8a9610fdde3d806fdd7ca4c6e06f1645" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>AtRate</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae88d2317428932c7de52a00298005696" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>direction</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a0af0e03e8197661737ace80ef03636c6" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>isRunning</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>isValid</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ac971360d59e189a9b5f788f1c881969c" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>OnLeaveEnd</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a6aa4eb20bcc8295adee7afc50e8fe731" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>OnLeaveStart</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a2f1e2df07793b5a7c397184cedeaca02" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>OnProgress</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a6444cd8ffe0160d1431e091f3c4d8649" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>OnReachEnd</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1af996cdf4236de2395c88bd0ba0fe65fb" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>OnReachStart</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a233ad9426dc52f71fd5ac36500946d76" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>OverTime</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a081bc17380d04763af8322c31b1ab887" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Pause</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4e3149fd5f794b71c50a8bb18b6d338e" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Persistent</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a00ec83a05cb0637fc0bcc24e8703c572" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Play</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a1428d270a9c131173d13fe41c0728088" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Play</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a8453ef9311e720d1518b1a6bd9466ff9" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Play</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae0123854170a23519792c97c8620645c" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>progress</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1aae3c96c326e36d7dd2079ec15f772409" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Release</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7238365f2fb16c95082dc5d71b8f5139" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Single</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7bb854a75ebd46b16addf1018768d6cd" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Smooth</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae1929c2f7f8dc7636e16d54b67d75337" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Smooth</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a27b1991777c67934e885c0d01c64d031" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Smooth</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad5f8092aec0bf5f7f301b9dbeef5a666" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Stop</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ace36e93470c4b1168289ae1eef2e4736" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Target</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1aa7b22a26af26ea28523475885b119dda" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Target</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a5fb8b17c191dd44577ded021e780868d" prot="private" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>throwIfInvalid</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a27ebf28615fd4bfe76cf8c9eb2bd3379" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>timeLeft</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a5a65bf338e35cfd2cb76e140a2a3e4c1" prot="private" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Tween</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a831691155a74d63fe5a0a8c07bce6d13" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Value</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4b8b8872079eed40ed3565488390768b" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Value</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad8eaac902159cb11727ed3fdb9b29f8a" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Value</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4877dc9c6bc0010523f51d21549098fa" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Value</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1aab3b83bfba4ff98c4ddb8129501e731b" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Value</name></member>
      <member refid="struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae3aea546f6195b60ace0fd614c3925d4" prot="public" virt="non-virtual"><scope>Leap::Unity::Animation::Tween</scope><name>Yield</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
