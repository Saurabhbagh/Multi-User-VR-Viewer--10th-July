<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_ActionSet</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IEquatable&lt; SteamVR_ActionSet &gt;</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set" prot="public" virt="non-virtual">Valve.VR.ISteamVR_ActionSet</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ISerializationCallbackReceiver</basecompoundref>
    <derivedcompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__buggy" prot="public" virt="non-virtual">Valve.VR.SteamVR_Input_ActionSet_buggy</derivedcompoundref>
    <derivedcompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__default" prot="public" virt="non-virtual">Valve.VR.SteamVR_Input_ActionSet_default</derivedcompoundref>
    <derivedcompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__mixedreality" prot="public" virt="non-virtual">Valve.VR.SteamVR_Input_ActionSet_mixedreality</derivedcompoundref>
    <derivedcompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__platformer" prot="public" virt="non-virtual">Valve.VR.SteamVR_Input_ActionSet_platformer</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a29bd0ad9aa6ebcdd958acbac1f110335" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet.actionSetPath</definition>
        <argsstring></argsstring>
        <name>actionSetPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="22" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a4336152a003828c503e762b3d6bbc90e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data" kindref="compound">SteamVR_ActionSet_Data</ref></type>
        <definition>SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet.setData</definition>
        <argsstring></argsstring>
        <name>setData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="25" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a7628464d8dcc5239d10705bd796999d1" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_ActionSet.initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="135" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1adc8074b2043ebd3ccf470aef4f02c1d3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref> []</type>
        <definition>SteamVR_Action [] Valve.VR.SteamVR_ActionSet.allActions</definition>
        <argsstring></argsstring>
        <name>allActions</name>
        <briefdescription>
<para>All actions within this set (including out actions) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="29" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ac0c94124b2bccf8f0af077de0191e000" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in" kindref="compound">ISteamVR_Action_In</ref> []</type>
        <definition>ISteamVR_Action_In [] Valve.VR.SteamVR_ActionSet.nonVisualInActions</definition>
        <argsstring></argsstring>
        <name>nonVisualInActions</name>
        <briefdescription>
<para>All IN actions within this set that are NOT pose or skeleton actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="41" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="42" bodyend="50"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a89d6139bb48360e1b3c1622747c3a384" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in" kindref="compound">ISteamVR_Action_In</ref> []</type>
        <definition>ISteamVR_Action_In [] Valve.VR.SteamVR_ActionSet.visualActions</definition>
        <argsstring></argsstring>
        <name>visualActions</name>
        <briefdescription>
<para>All pose and skeleton actions within this set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="53" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ae523ca47e6a064f396bcebb6f50d7e75" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> []</type>
        <definition>SteamVR_Action_Pose [] Valve.VR.SteamVR_ActionSet.poseActions</definition>
        <argsstring></argsstring>
        <name>poseActions</name>
        <briefdescription>
<para>All pose actions within this set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="65" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="66" bodyend="74"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aeed444513c7a235df879f703e4a6227e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref> []</type>
        <definition>SteamVR_Action_Skeleton [] Valve.VR.SteamVR_ActionSet.skeletonActions</definition>
        <argsstring></argsstring>
        <name>skeletonActions</name>
        <briefdescription>
<para>All skeleton actions within this set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="77" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="78" bodyend="86"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aec75fd69b96d1f0f7dd0c807885244fe" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out" kindref="compound">ISteamVR_Action_Out</ref> []</type>
        <definition>ISteamVR_Action_Out [] Valve.VR.SteamVR_ActionSet.outActionArray</definition>
        <argsstring></argsstring>
        <name>outActionArray</name>
        <briefdescription>
<para>All out actions within this set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="89" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aa7318fdfffc15351b27d55255f9da651" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet.fullPath</definition>
        <argsstring></argsstring>
        <name>fullPath</name>
        <briefdescription>
<para>The full path to this action set (ex: /actions/in/default) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="102" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="103" bodyend="111"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a2f7ecd341561b80ddbb177dabbaa0036" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet.usage</definition>
        <argsstring></argsstring>
        <name>usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="112" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="113" bodyend="121"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ae8d12a8a8939aca9bc09d5b2e6863539" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>ulong</type>
        <definition>ulong Valve.VR.SteamVR_ActionSet.handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="123" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="124" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a91a20f8025cb5281f23e9c7d519af517" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.SteamVR_ActionSet.SteamVR_ActionSet</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_ActionSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ab74fc162e267b0074066bff7b0166fc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_ActionSet.PreInitialize</definition>
        <argsstring>(string newActionPath)</argsstring>
        <name>PreInitialize</name>
        <param>
          <type>string</type>
          <declname>newActionPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="151" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="151" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aea6a8312c74c796f16de4480d14b2230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_ActionSet.FinishPreInitialize</definition>
        <argsstring>()</argsstring>
        <name>FinishPreInitialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="162" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a1f0049b024089d6ce2d2a71a19ef5c31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Valve.VR.SteamVR_ActionSet.Initialize</definition>
        <argsstring>(bool createNew=false, bool throwErrors=true)</argsstring>
        <name>Initialize</name>
        <param>
          <type>bool</type>
          <declname>createNew</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>throwErrors</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Initializes the handle for the action </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="170" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="170" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a2d9abb96df39d29be3ea763a95d56b9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet.GetPath</definition>
        <argsstring>()</argsstring>
        <name>GetPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="201" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a90637da41a53066829ee8bd3e06a3ce9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_ActionSet.IsActive</definition>
        <argsstring>(SteamVR_Input_Sources source=SteamVR_Input_Sources.Any)</argsstring>
        <name>IsActive</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1aa56bf951c356649897b7ebf385ff4804">IsActive</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>source</declname>
          <defval><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref></defval>
        </param>
        <briefdescription>
<para>Returns whether the set is currently active or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to check. Any means all devices here (not left or right, but all)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="210" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ae535aed06b1d430319f22923e71bacc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_ActionSet.GetTimeLastChanged</definition>
        <argsstring>(SteamVR_Input_Sources source=SteamVR_Input_Sources.Any)</argsstring>
        <name>GetTimeLastChanged</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a7c8434a48c12c5b70f6cbfd1f2bca5be">GetTimeLastChanged</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>source</declname>
          <defval><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref></defval>
        </param>
        <briefdescription>
<para>Returns the last time this action set was changed (set to active or inactive) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to check. Any means all devices here (not left or right, but all)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="219" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aeabdda07095a66c6937d796713356120" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_ActionSet.Activate</definition>
        <argsstring>(SteamVR_Input_Sources activateForSource=SteamVR_Input_Sources.Any, int priority=0, bool disableAllOtherActionSets=false)</argsstring>
        <name>Activate</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1ad7a3807ce56c1ace0e0dba9c666380c4">Activate</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>activateForSource</declname>
          <defval><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>disableAllOtherActionSets</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Activate this set so its actions can be called </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>disableAllOtherActionSets</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable all other action sets at the same time</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>The priority of this action set. If you have two actions bound to the same input (button) the higher priority set will override the lower priority. If they are the same priority both will execute.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>activateForSource</parametername>
</parameternamelist>
<parameterdescription>
<para>Will activate this action set only for the specified source. Any if you want to activate for everything</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="230" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ac1cf6b278cd4df49f18da3f59d8d9fc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_ActionSet.Deactivate</definition>
        <argsstring>(SteamVR_Input_Sources forSource=SteamVR_Input_Sources.Any)</argsstring>
        <name>Deactivate</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a7f2befeb3e536b020c6a9a72ac16597b">Deactivate</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>forSource</declname>
          <defval><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref></defval>
        </param>
        <briefdescription>
<para>Deactivate the action set so its actions can no longer be called </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="238" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a045aa0b32ec9f9b6f65b5fcf35474250" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet.GetShortName</definition>
        <argsstring>()</argsstring>
        <name>GetShortName</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a695b72b2db2413a2ee8b7b2797f83240">GetShortName</reimplements>
        <briefdescription>
<para>Gets the last part of the path for this action. Removes &quot;actions&quot; and direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="244" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a212fb34fda9aa2be57a9a78e3ca6fe0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_ActionSet.ReadRawSetActive</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>ReadRawSetActive</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a7db619853c00ffb7ac16ba370921ac4e">ReadRawSetActive</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="249" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1afc8e7c4a2dbc8e182f34ec832bfd9b22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_ActionSet.ReadRawSetLastChanged</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>ReadRawSetLastChanged</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a7647555ffdd2708516296e140100a8ae">ReadRawSetLastChanged</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="254" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ab43c42368df77386ea8e480817e814cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Valve.VR.SteamVR_ActionSet.ReadRawSetPriority</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>ReadRawSetPriority</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a79f6520e36cd4bfa4ddb1388a8ff1b51">ReadRawSetPriority</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="259" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a0c6ad358e98d8c059ef94fab25a48229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data" kindref="compound">SteamVR_ActionSet_Data</ref></type>
        <definition>SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet.GetActionSetData</definition>
        <argsstring>()</argsstring>
        <name>GetActionSetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="264" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a9ab6363b51a1765d7d387c4cac93f401" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CreateType</type>
        <definition>CreateType Valve.VR.SteamVR_ActionSet.GetCopy&lt; CreateType &gt;</definition>
        <argsstring>()</argsstring>
        <name>GetCopy&lt; CreateType &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="269" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="269" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a5758ecaf3e9b9bc26db3ba6f64cc9a39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_ActionSet.Equals</definition>
        <argsstring>(SteamVR_ActionSet other)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="280" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="280" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a1093904e530e05fa8b4161285bbc7a3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_ActionSet.Equals</definition>
        <argsstring>(object other)</argsstring>
        <name>Equals</name>
        <param>
          <type>object</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="288" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="288" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a77c22e696784714f4ce7cc3e846f1534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override int</type>
        <definition>override int Valve.VR.SteamVR_ActionSet.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="306" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="306" bodyend="312"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a2e7f4010655d5bab8525920914d564aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CreateType</type>
        <definition>static CreateType Valve.VR.SteamVR_ActionSet.Create&lt; CreateType &gt;</definition>
        <argsstring>(string newSetPath)</argsstring>
        <name>Create&lt; CreateType &gt;</name>
        <param>
          <type>string</type>
          <declname>newSetPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="138" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="138" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1acdc177c7f04c22b27113570985449870" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CreateType</type>
        <definition>static CreateType Valve.VR.SteamVR_ActionSet.CreateFromName&lt; CreateType &gt;</definition>
        <argsstring>(string newSetName)</argsstring>
        <name>CreateFromName&lt; CreateType &gt;</name>
        <param>
          <type>string</type>
          <declname>newSetName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="144" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1abc84b4428fef468f820c05447432f3e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_ActionSet.operator !=</definition>
        <argsstring>(SteamVR_ActionSet set1, SteamVR_ActionSet set2)</argsstring>
        <name>operator !=</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
          <declname>set1</declname>
        </param>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
          <declname>set2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="314" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a3eb69b39d2ee970d0f2a4f932d5312a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_ActionSet.operator==</definition>
        <argsstring>(SteamVR_ActionSet set1, SteamVR_ActionSet set2)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
          <declname>set1</declname>
        </param>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
          <declname>set2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="319" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="319" bodyend="330"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a37f747b49a21dd61afd28c788bb164fb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_ActionSet.OnBeforeSerialize</definition>
        <argsstring>()</argsstring>
        <name>OnBeforeSerialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="332" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aad4c95ee4aeec0694cc31f7f819a8f21" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_ActionSet.OnAfterDeserialize</definition>
        <argsstring>()</argsstring>
        <name>OnAfterDeserialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="336" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="336" bodyend="348"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Action sets are logical groupings of actions. Multiple sets can be active at one time. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5058">
        <label>Valve.VR.SteamVR_Input_ActionSet_default</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__default"/>
        <childnode refid="5053" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5054">
        <label>IEquatable&lt; SteamVR_ActionSet &gt;</label>
      </node>
      <node id="5057">
        <label>Valve.VR.SteamVR_Input_ActionSet_buggy</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__buggy"/>
        <childnode refid="5053" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5059">
        <label>Valve.VR.SteamVR_Input_ActionSet_mixedreality</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__mixedreality"/>
        <childnode refid="5053" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5056">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="5053">
        <label>Valve.VR.SteamVR_ActionSet</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set"/>
        <childnode refid="5054" relation="public-inheritance">
        </childnode>
        <childnode refid="5055" relation="public-inheritance">
        </childnode>
        <childnode refid="5056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5055">
        <label>ISteamVR_ActionSet</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set"/>
      </node>
      <node id="5060">
        <label>Valve.VR.SteamVR_Input_ActionSet_platformer</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__platformer"/>
        <childnode refid="5053" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5062">
        <label>IEquatable&lt; SteamVR_ActionSet &gt;</label>
      </node>
      <node id="5064">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="5065">
        <label>Valve.VR.SteamVR_ActionSet_Data</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data"/>
        <childnode refid="5063" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5061">
        <label>Valve.VR.SteamVR_ActionSet</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set"/>
        <childnode refid="5062" relation="public-inheritance">
        </childnode>
        <childnode refid="5063" relation="public-inheritance">
        </childnode>
        <childnode refid="5064" relation="public-inheritance">
        </childnode>
        <childnode refid="5065" relation="usage">
          <edgelabel>setData</edgelabel>
        </childnode>
      </node>
      <node id="5063">
        <label>ISteamVR_ActionSet</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="18" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="17" bodyend="349"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a29bd0ad9aa6ebcdd958acbac1f110335" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>actionSetPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aeabdda07095a66c6937d796713356120" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>Activate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1adc8074b2043ebd3ccf470aef4f02c1d3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>allActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a2e7f4010655d5bab8525920914d564aa" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>Create&lt; CreateType &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1acdc177c7f04c22b27113570985449870" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>CreateFromName&lt; CreateType &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ac1cf6b278cd4df49f18da3f59d8d9fc4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>Deactivate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a5758ecaf3e9b9bc26db3ba6f64cc9a39" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>Equals</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a1093904e530e05fa8b4161285bbc7a3f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>Equals</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aea6a8312c74c796f16de4480d14b2230" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>FinishPreInitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aa7318fdfffc15351b27d55255f9da651" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a0c6ad358e98d8c059ef94fab25a48229" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>GetActionSetData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a9ab6363b51a1765d7d387c4cac93f401" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>GetCopy&lt; CreateType &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a77c22e696784714f4ce7cc3e846f1534" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>GetHashCode</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a2d9abb96df39d29be3ea763a95d56b9c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>GetPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a045aa0b32ec9f9b6f65b5fcf35474250" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>GetShortName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ae535aed06b1d430319f22923e71bacc7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>GetTimeLastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ae8d12a8a8939aca9bc09d5b2e6863539" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a1f0049b024089d6ce2d2a71a19ef5c31" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a7628464d8dcc5239d10705bd796999d1" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>initialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a90637da41a53066829ee8bd3e06a3ce9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>IsActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ac0c94124b2bccf8f0af077de0191e000" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>nonVisualInActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aad4c95ee4aeec0694cc31f7f819a8f21" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>OnAfterDeserialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a37f747b49a21dd61afd28c788bb164fb" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>OnBeforeSerialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1abc84b4428fef468f820c05447432f3e8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>operator !=</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a3eb69b39d2ee970d0f2a4f932d5312a4" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>operator==</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aec75fd69b96d1f0f7dd0c807885244fe" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>outActionArray</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ae523ca47e6a064f396bcebb6f50d7e75" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>poseActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ab74fc162e267b0074066bff7b0166fc3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>PreInitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a212fb34fda9aa2be57a9a78e3ca6fe0f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>ReadRawSetActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1afc8e7c4a2dbc8e182f34ec832bfd9b22" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>ReadRawSetLastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1ab43c42368df77386ea8e480817e814cb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>ReadRawSetPriority</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a4336152a003828c503e762b3d6bbc90e" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>setData</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1aeed444513c7a235df879f703e4a6227e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>skeletonActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a91a20f8025cb5281f23e9c7d519af517" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>SteamVR_ActionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a2f7ecd341561b80ddbb177dabbaa0036" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>usage</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set_1a89d6139bb48360e1b3c1622747c3a384" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet</scope><name>visualActions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
