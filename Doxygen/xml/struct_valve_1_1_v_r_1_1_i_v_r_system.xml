<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_valve_1_1_v_r_1_1_i_v_r_system" kind="struct" language="C#" prot="public">
    <compoundname>Valve::VR::IVRSystem</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a51dc8b71cce5093f779099db3f2ae19c" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7c739552eda67112e5ed1c5e6b64388b" kindref="member">_GetRecommendedRenderTargetSize</ref></type>
        <definition>internal _GetRecommendedRenderTargetSize Valve.VR.IVRSystem.GetRecommendedRenderTargetSize</definition>
        <argsstring></argsstring>
        <name>GetRecommendedRenderTargetSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="21" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a28ccdb1a7ebc0cd67aa01fde5a09a29e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a10aad034ee13b75116d84a989eced445" kindref="member">_GetProjectionMatrix</ref></type>
        <definition>internal _GetProjectionMatrix Valve.VR.IVRSystem.GetProjectionMatrix</definition>
        <argsstring></argsstring>
        <name>GetProjectionMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="26" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1abc6c8a648793f141ae5cd8498887eb6d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1adb042a1d95520b0ab26f1f2c97d7dff4" kindref="member">_GetProjectionRaw</ref></type>
        <definition>internal _GetProjectionRaw Valve.VR.IVRSystem.GetProjectionRaw</definition>
        <argsstring></argsstring>
        <name>GetProjectionRaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="31" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a20be9536f86c1195024062854be1ac59" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a88600e2b90cd94cb7fd918636a56cef3" kindref="member">_ComputeDistortion</ref></type>
        <definition>internal _ComputeDistortion Valve.VR.IVRSystem.ComputeDistortion</definition>
        <argsstring></argsstring>
        <name>ComputeDistortion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="36" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6cf8f7e1b8b9187bf3d4ded098d49203" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a285d2953403229712d9fa48bb3224d80" kindref="member">_GetEyeToHeadTransform</ref></type>
        <definition>internal _GetEyeToHeadTransform Valve.VR.IVRSystem.GetEyeToHeadTransform</definition>
        <argsstring></argsstring>
        <name>GetEyeToHeadTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="41" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a25109bd3030fde7863c8a1167d2c6bb4" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab4843adda277e53c0307051b2ec21cc8" kindref="member">_GetTimeSinceLastVsync</ref></type>
        <definition>internal _GetTimeSinceLastVsync Valve.VR.IVRSystem.GetTimeSinceLastVsync</definition>
        <argsstring></argsstring>
        <name>GetTimeSinceLastVsync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="46" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a1f85e448984efdb948ab539fcf4446c2" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1af8628eb30b5b12b64585d57ebc093ff9" kindref="member">_GetD3D9AdapterIndex</ref></type>
        <definition>internal _GetD3D9AdapterIndex Valve.VR.IVRSystem.GetD3D9AdapterIndex</definition>
        <argsstring></argsstring>
        <name>GetD3D9AdapterIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="51" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a433e3147a2f1d989802a8087752bf02c" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab24a286fab0641489f5da8a338858169" kindref="member">_GetDXGIOutputInfo</ref></type>
        <definition>internal _GetDXGIOutputInfo Valve.VR.IVRSystem.GetDXGIOutputInfo</definition>
        <argsstring></argsstring>
        <name>GetDXGIOutputInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="56" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ac78a36f65ca807a8cd4332b0ab7549bf" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7b0363d609497bbe2b11d2af5ff2fc07" kindref="member">_GetOutputDevice</ref></type>
        <definition>internal _GetOutputDevice Valve.VR.IVRSystem.GetOutputDevice</definition>
        <argsstring></argsstring>
        <name>GetOutputDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="61" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a9d257568f716b875785a30f66dc441aa" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a82b26bcb84c59e3b886653e6f52c9fdf" kindref="member">_IsDisplayOnDesktop</ref></type>
        <definition>internal _IsDisplayOnDesktop Valve.VR.IVRSystem.IsDisplayOnDesktop</definition>
        <argsstring></argsstring>
        <name>IsDisplayOnDesktop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="66" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7f7b4443ca65064f398c08d07ac068ca" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a97b502df669ebd8f271bea132cd15eed" kindref="member">_SetDisplayVisibility</ref></type>
        <definition>internal _SetDisplayVisibility Valve.VR.IVRSystem.SetDisplayVisibility</definition>
        <argsstring></argsstring>
        <name>SetDisplayVisibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="71" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad82a0592fe681a8e3eece30c2bf2ea2d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aaea53504ce1e2a5c54baaaa6d1ad2d40" kindref="member">_GetDeviceToAbsoluteTrackingPose</ref></type>
        <definition>internal _GetDeviceToAbsoluteTrackingPose Valve.VR.IVRSystem.GetDeviceToAbsoluteTrackingPose</definition>
        <argsstring></argsstring>
        <name>GetDeviceToAbsoluteTrackingPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="76" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6bc413a891810fc8e6d122f89ff3e4d2" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ae73e4e8327964bc0c9947bebed6f41fd" kindref="member">_ResetSeatedZeroPose</ref></type>
        <definition>internal _ResetSeatedZeroPose Valve.VR.IVRSystem.ResetSeatedZeroPose</definition>
        <argsstring></argsstring>
        <name>ResetSeatedZeroPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="81" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa03cb81558d2e3f244f4cd7e25d99f1e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1af45048703eb614b2aa0e3a306838b131" kindref="member">_GetSeatedZeroPoseToStandingAbsoluteTrackingPose</ref></type>
        <definition>internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose Valve.VR.IVRSystem.GetSeatedZeroPoseToStandingAbsoluteTrackingPose</definition>
        <argsstring></argsstring>
        <name>GetSeatedZeroPoseToStandingAbsoluteTrackingPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="86" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0c19c0373810a8e2b53dd04befcb8537" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1acca513b3beff9bcf5c4e6cc4cb367b64" kindref="member">_GetRawZeroPoseToStandingAbsoluteTrackingPose</ref></type>
        <definition>internal _GetRawZeroPoseToStandingAbsoluteTrackingPose Valve.VR.IVRSystem.GetRawZeroPoseToStandingAbsoluteTrackingPose</definition>
        <argsstring></argsstring>
        <name>GetRawZeroPoseToStandingAbsoluteTrackingPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="91" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a4eda6be881ec8440960d130834f70e59" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1acb35a55e60800abca1d3216ba5c3b90e" kindref="member">_GetSortedTrackedDeviceIndicesOfClass</ref></type>
        <definition>internal _GetSortedTrackedDeviceIndicesOfClass Valve.VR.IVRSystem.GetSortedTrackedDeviceIndicesOfClass</definition>
        <argsstring></argsstring>
        <name>GetSortedTrackedDeviceIndicesOfClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="96" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1acc4284c334c1b50f84803018f7efea60" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1af6da0a3c81f4645a74f3ae34d3c050b6" kindref="member">_GetTrackedDeviceActivityLevel</ref></type>
        <definition>internal _GetTrackedDeviceActivityLevel Valve.VR.IVRSystem.GetTrackedDeviceActivityLevel</definition>
        <argsstring></argsstring>
        <name>GetTrackedDeviceActivityLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="101" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7fac59520ba04459f4389fb1758280fe" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a4b3c449999bda4d5effec48e5b5d6dfa" kindref="member">_ApplyTransform</ref></type>
        <definition>internal _ApplyTransform Valve.VR.IVRSystem.ApplyTransform</definition>
        <argsstring></argsstring>
        <name>ApplyTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="106" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ae3be66c094b70af75494d85548c6747c" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a78755de15fec7aaaccc22d7539a7492a" kindref="member">_GetTrackedDeviceIndexForControllerRole</ref></type>
        <definition>internal _GetTrackedDeviceIndexForControllerRole Valve.VR.IVRSystem.GetTrackedDeviceIndexForControllerRole</definition>
        <argsstring></argsstring>
        <name>GetTrackedDeviceIndexForControllerRole</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="111" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad069e02bb223054805c2feb8c4439bdd" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a38e3886f059ec9bd5728bcd5c5561e49" kindref="member">_GetControllerRoleForTrackedDeviceIndex</ref></type>
        <definition>internal _GetControllerRoleForTrackedDeviceIndex Valve.VR.IVRSystem.GetControllerRoleForTrackedDeviceIndex</definition>
        <argsstring></argsstring>
        <name>GetControllerRoleForTrackedDeviceIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="116" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a889385c93465cef3035571bb7a89c98e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a012f6620d3faad15d7622c5c53b091e8" kindref="member">_GetTrackedDeviceClass</ref></type>
        <definition>internal _GetTrackedDeviceClass Valve.VR.IVRSystem.GetTrackedDeviceClass</definition>
        <argsstring></argsstring>
        <name>GetTrackedDeviceClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="121" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a73d69a5a0a052993628d025de426b5f0" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a879d599690d8f4f52620923b283b85c6" kindref="member">_IsTrackedDeviceConnected</ref></type>
        <definition>internal _IsTrackedDeviceConnected Valve.VR.IVRSystem.IsTrackedDeviceConnected</definition>
        <argsstring></argsstring>
        <name>IsTrackedDeviceConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="126" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1aed27d542bd09a4f62c497e215cc9cbf8" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad59f0298d859db814984c5b2c46e2a1c" kindref="member">_GetBoolTrackedDeviceProperty</ref></type>
        <definition>internal _GetBoolTrackedDeviceProperty Valve.VR.IVRSystem.GetBoolTrackedDeviceProperty</definition>
        <argsstring></argsstring>
        <name>GetBoolTrackedDeviceProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="131" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1aae99b75e4e0541e865cb73d1b3a01b8e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a463f30e32dfce512ceed667f548e83ed" kindref="member">_GetFloatTrackedDeviceProperty</ref></type>
        <definition>internal _GetFloatTrackedDeviceProperty Valve.VR.IVRSystem.GetFloatTrackedDeviceProperty</definition>
        <argsstring></argsstring>
        <name>GetFloatTrackedDeviceProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="136" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad2b2ee545a313585fffd1971cd1be4bf" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0201a1804a9833cfe2834c810ee97893" kindref="member">_GetInt32TrackedDeviceProperty</ref></type>
        <definition>internal _GetInt32TrackedDeviceProperty Valve.VR.IVRSystem.GetInt32TrackedDeviceProperty</definition>
        <argsstring></argsstring>
        <name>GetInt32TrackedDeviceProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="141" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a3ba664ad5c9d2b52d4c5f9c7917308f5" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a2cd6c3c2bdb9cbf7ee06115283aa3640" kindref="member">_GetUint64TrackedDeviceProperty</ref></type>
        <definition>internal _GetUint64TrackedDeviceProperty Valve.VR.IVRSystem.GetUint64TrackedDeviceProperty</definition>
        <argsstring></argsstring>
        <name>GetUint64TrackedDeviceProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="146" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a995ec67fd90726b954f37ca8a0f941ea" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1add3a6aac11e39d31852a68b40434aa72" kindref="member">_GetMatrix34TrackedDeviceProperty</ref></type>
        <definition>internal _GetMatrix34TrackedDeviceProperty Valve.VR.IVRSystem.GetMatrix34TrackedDeviceProperty</definition>
        <argsstring></argsstring>
        <name>GetMatrix34TrackedDeviceProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="151" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a8794f5d4fdd98afbaf5f0b60f78b841a" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a664650bb051f15b2aa5974a22fb4f483" kindref="member">_GetArrayTrackedDeviceProperty</ref></type>
        <definition>internal _GetArrayTrackedDeviceProperty Valve.VR.IVRSystem.GetArrayTrackedDeviceProperty</definition>
        <argsstring></argsstring>
        <name>GetArrayTrackedDeviceProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="156" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a333164a121dcf6dd2496d237c2476784" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6dec2a7ad8cb675cbc12248da723827b" kindref="member">_GetStringTrackedDeviceProperty</ref></type>
        <definition>internal _GetStringTrackedDeviceProperty Valve.VR.IVRSystem.GetStringTrackedDeviceProperty</definition>
        <argsstring></argsstring>
        <name>GetStringTrackedDeviceProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="161" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0456c00bd2ce6efef6e542ac99b933b4" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab8df6803ff20af23449bb3a8951f75f8" kindref="member">_GetPropErrorNameFromEnum</ref></type>
        <definition>internal _GetPropErrorNameFromEnum Valve.VR.IVRSystem.GetPropErrorNameFromEnum</definition>
        <argsstring></argsstring>
        <name>GetPropErrorNameFromEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="166" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a77dd68df65c7feb90c6bb81aeb49790c" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad05dee46b825b66c941f09a69ddc2a13" kindref="member">_PollNextEvent</ref></type>
        <definition>internal _PollNextEvent Valve.VR.IVRSystem.PollNextEvent</definition>
        <argsstring></argsstring>
        <name>PollNextEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="171" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a1d29adecbeff4cc37b4e30f83d74efa2" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a651836066c8780d5e5aadab482bd22d3" kindref="member">_PollNextEventWithPose</ref></type>
        <definition>internal _PollNextEventWithPose Valve.VR.IVRSystem.PollNextEventWithPose</definition>
        <argsstring></argsstring>
        <name>PollNextEventWithPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="176" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1aeff0e53b53082e6fd51aa033513cabbf" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a31f48cf54b258ae76bcfc5444ee883c8" kindref="member">_GetEventTypeNameFromEnum</ref></type>
        <definition>internal _GetEventTypeNameFromEnum Valve.VR.IVRSystem.GetEventTypeNameFromEnum</definition>
        <argsstring></argsstring>
        <name>GetEventTypeNameFromEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="181" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad69e1074728820f7385004d571f2687a" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a2778354bdfffa5063ed74f2634feb02d" kindref="member">_GetHiddenAreaMesh</ref></type>
        <definition>internal _GetHiddenAreaMesh Valve.VR.IVRSystem.GetHiddenAreaMesh</definition>
        <argsstring></argsstring>
        <name>GetHiddenAreaMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="186" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a820c4d678b9e885c8de11fc31aede166" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a1eca77760e6464488c6ca3e083e0a456" kindref="member">_GetControllerState</ref></type>
        <definition>internal _GetControllerState Valve.VR.IVRSystem.GetControllerState</definition>
        <argsstring></argsstring>
        <name>GetControllerState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="191" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a95719e013581d2bc69b8ac13230f9926" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad69cca720213c448e77167bb46b1a804" kindref="member">_GetControllerStateWithPose</ref></type>
        <definition>internal _GetControllerStateWithPose Valve.VR.IVRSystem.GetControllerStateWithPose</definition>
        <argsstring></argsstring>
        <name>GetControllerStateWithPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="196" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a14c214fd36ef8b882166e9d1f03654c9" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7d878e9f5dd86b552a79017e9b265b72" kindref="member">_TriggerHapticPulse</ref></type>
        <definition>internal _TriggerHapticPulse Valve.VR.IVRSystem.TriggerHapticPulse</definition>
        <argsstring></argsstring>
        <name>TriggerHapticPulse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="201" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a33d4426980f8543ddb97498cd31d712d" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0a9463bae6cfe3289f8b18e79db1dbb4" kindref="member">_GetButtonIdNameFromEnum</ref></type>
        <definition>internal _GetButtonIdNameFromEnum Valve.VR.IVRSystem.GetButtonIdNameFromEnum</definition>
        <argsstring></argsstring>
        <name>GetButtonIdNameFromEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="206" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6b7a4e2865bc3a965e8d3aec231cb6d8" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa41d19dc0a8ab0539fef127d02dd471a" kindref="member">_GetControllerAxisTypeNameFromEnum</ref></type>
        <definition>internal _GetControllerAxisTypeNameFromEnum Valve.VR.IVRSystem.GetControllerAxisTypeNameFromEnum</definition>
        <argsstring></argsstring>
        <name>GetControllerAxisTypeNameFromEnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="211" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a19022fa80da6a1237bd179eb97a98c10" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ae830dd893c1ac74196be24544e94f9ca" kindref="member">_IsInputAvailable</ref></type>
        <definition>internal _IsInputAvailable Valve.VR.IVRSystem.IsInputAvailable</definition>
        <argsstring></argsstring>
        <name>IsInputAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="216" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a9ca8e0aa72557ad6d53936ce945d638f" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a160c811798537299b253f20e8bcc1e4d" kindref="member">_IsSteamVRDrawingControllers</ref></type>
        <definition>internal _IsSteamVRDrawingControllers Valve.VR.IVRSystem.IsSteamVRDrawingControllers</definition>
        <argsstring></argsstring>
        <name>IsSteamVRDrawingControllers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="221" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa9fb2748a8d56a66f39629552db1fc66" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad63c0ab21538f30ce52420c007356f12" kindref="member">_ShouldApplicationPause</ref></type>
        <definition>internal _ShouldApplicationPause Valve.VR.IVRSystem.ShouldApplicationPause</definition>
        <argsstring></argsstring>
        <name>ShouldApplicationPause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="226" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a24eff068adfd4b8924e9e1224406d14e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6f55813bd7702e935e3313a50f27fd87" kindref="member">_ShouldApplicationReduceRenderingWork</ref></type>
        <definition>internal _ShouldApplicationReduceRenderingWork Valve.VR.IVRSystem.ShouldApplicationReduceRenderingWork</definition>
        <argsstring></argsstring>
        <name>ShouldApplicationReduceRenderingWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="231" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a8135bdde65be17613157cc5df69f769a" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a818e951800bb68fb2ae856f7f12dd2fe" kindref="member">_DriverDebugRequest</ref></type>
        <definition>internal _DriverDebugRequest Valve.VR.IVRSystem.DriverDebugRequest</definition>
        <argsstring></argsstring>
        <name>DriverDebugRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="236" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ac265d711916027dad4c18fddf66c8824" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab19faf642558ef1a557fb70618db9ba3" kindref="member">_PerformFirmwareUpdate</ref></type>
        <definition>internal _PerformFirmwareUpdate Valve.VR.IVRSystem.PerformFirmwareUpdate</definition>
        <argsstring></argsstring>
        <name>PerformFirmwareUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="241" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6b60311b536677d807becf55bada9760" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa692c4d5b5097052364afcb966fd63cd" kindref="member">_AcknowledgeQuit_Exiting</ref></type>
        <definition>internal _AcknowledgeQuit_Exiting Valve.VR.IVRSystem.AcknowledgeQuit_Exiting</definition>
        <argsstring></argsstring>
        <name>AcknowledgeQuit_Exiting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="246" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a400312901662b9450b7a450f18119ea0" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a4309327757a4f929aeb20c09f12f16b4" kindref="member">_AcknowledgeQuit_UserPrompt</ref></type>
        <definition>internal _AcknowledgeQuit_UserPrompt Valve.VR.IVRSystem.AcknowledgeQuit_UserPrompt</definition>
        <argsstring></argsstring>
        <name>AcknowledgeQuit_UserPrompt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="251" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7c739552eda67112e5ed1c5e6b64388b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._GetRecommendedRenderTargetSize</definition>
        <argsstring>(ref uint pnWidth, ref uint pnHeight)</argsstring>
        <name>_GetRecommendedRenderTargetSize</name>
        <param>
          <type>ref uint</type>
          <declname>pnWidth</declname>
        </param>
        <param>
          <type>ref uint</type>
          <declname>pnHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a10aad034ee13b75116d84a989eced445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix44__t" kindref="compound">HmdMatrix44_t</ref></type>
        <definition>internal delegate HmdMatrix44_t Valve.VR.IVRSystem._GetProjectionMatrix</definition>
        <argsstring>(EVREye eEye, float fNearZ, float fFarZ)</argsstring>
        <name>_GetProjectionMatrix</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880" kindref="member">EVREye</ref></type>
          <declname>eEye</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fNearZ</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fFarZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1adb042a1d95520b0ab26f1f2c97d7dff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._GetProjectionRaw</definition>
        <argsstring>(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)</argsstring>
        <name>_GetProjectionRaw</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880" kindref="member">EVREye</ref></type>
          <declname>eEye</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>pfLeft</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>pfRight</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>pfTop</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>pfBottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a88600e2b90cd94cb7fd918636a56cef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._ComputeDistortion</definition>
        <argsstring>(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)</argsstring>
        <name>_ComputeDistortion</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880" kindref="member">EVREye</ref></type>
          <declname>eEye</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fU</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fV</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_distortion_coordinates__t" kindref="compound">DistortionCoordinates_t</ref></type>
          <declname>pDistortionCoordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a285d2953403229712d9fa48bb3224d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
        <definition>internal delegate HmdMatrix34_t Valve.VR.IVRSystem._GetEyeToHeadTransform</definition>
        <argsstring>(EVREye eEye)</argsstring>
        <name>_GetEyeToHeadTransform</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880" kindref="member">EVREye</ref></type>
          <declname>eEye</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab4843adda277e53c0307051b2ec21cc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._GetTimeSinceLastVsync</definition>
        <argsstring>(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)</argsstring>
        <name>_GetTimeSinceLastVsync</name>
        <param>
          <type>ref float</type>
          <declname>pfSecondsSinceLastVsync</declname>
        </param>
        <param>
          <type>ref ulong</type>
          <declname>pulFrameCounter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1af8628eb30b5b12b64585d57ebc093ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate int</type>
        <definition>internal delegate int Valve.VR.IVRSystem._GetD3D9AdapterIndex</definition>
        <argsstring>()</argsstring>
        <name>_GetD3D9AdapterIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab24a286fab0641489f5da8a338858169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._GetDXGIOutputInfo</definition>
        <argsstring>(ref int pnAdapterIndex)</argsstring>
        <name>_GetDXGIOutputInfo</name>
        <param>
          <type>ref int</type>
          <declname>pnAdapterIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7b0363d609497bbe2b11d2af5ff2fc07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._GetOutputDevice</definition>
        <argsstring>(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)</argsstring>
        <name>_GetOutputDevice</name>
        <param>
          <type>ref ulong</type>
          <declname>pnDevice</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a9481de640e411eef49c2f3fdca82eaa3" kindref="member">ETextureType</ref></type>
          <declname>textureType</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a82b26bcb84c59e3b886653e6f52c9fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._IsDisplayOnDesktop</definition>
        <argsstring>()</argsstring>
        <name>_IsDisplayOnDesktop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a97b502df669ebd8f271bea132cd15eed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._SetDisplayVisibility</definition>
        <argsstring>(bool bIsVisibleOnDesktop)</argsstring>
        <name>_SetDisplayVisibility</name>
        <param>
          <type>bool</type>
          <declname>bIsVisibleOnDesktop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1aaea53504ce1e2a5c54baaaa6d1ad2d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._GetDeviceToAbsoluteTrackingPose</definition>
        <argsstring>(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In, Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount)</argsstring>
        <name>_GetDeviceToAbsoluteTrackingPose</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f" kindref="member">ETrackingUniverseOrigin</ref></type>
          <declname>eOrigin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fPredictedSecondsToPhotonsFromNow</declname>
        </param>
        <param>
          <attributes>[In, Out]</attributes>
          <type><ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref> []</type>
          <declname>pTrackedDevicePoseArray</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unTrackedDevicePoseArrayCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ae73e4e8327964bc0c9947bebed6f41fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._ResetSeatedZeroPose</definition>
        <argsstring>()</argsstring>
        <name>_ResetSeatedZeroPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1af45048703eb614b2aa0e3a306838b131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
        <definition>internal delegate HmdMatrix34_t Valve.VR.IVRSystem._GetSeatedZeroPoseToStandingAbsoluteTrackingPose</definition>
        <argsstring>()</argsstring>
        <name>_GetSeatedZeroPoseToStandingAbsoluteTrackingPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1acca513b3beff9bcf5c4e6cc4cb367b64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
        <definition>internal delegate HmdMatrix34_t Valve.VR.IVRSystem._GetRawZeroPoseToStandingAbsoluteTrackingPose</definition>
        <argsstring>()</argsstring>
        <name>_GetRawZeroPoseToStandingAbsoluteTrackingPose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1acb35a55e60800abca1d3216ba5c3b90e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRSystem._GetSortedTrackedDeviceIndicesOfClass</definition>
        <argsstring>(ETrackedDeviceClass eTrackedDeviceClass, [In, Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex)</argsstring>
        <name>_GetSortedTrackedDeviceIndicesOfClass</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1aa1a3c2765fe53acb85372a57652c47a1" kindref="member">ETrackedDeviceClass</ref></type>
          <declname>eTrackedDeviceClass</declname>
        </param>
        <param>
          <attributes>[In, Out]</attributes>
          <type>uint []</type>
          <declname>punTrackedDeviceIndexArray</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unTrackedDeviceIndexArrayCount</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unRelativeToTrackedDeviceIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1af6da0a3c81f4645a74f3ae34d3c050b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a44a7a02e482d63dc5e0c0851a2ad775e" kindref="member">EDeviceActivityLevel</ref></type>
        <definition>internal delegate EDeviceActivityLevel Valve.VR.IVRSystem._GetTrackedDeviceActivityLevel</definition>
        <argsstring>(uint unDeviceId)</argsstring>
        <name>_GetTrackedDeviceActivityLevel</name>
        <param>
          <type>uint</type>
          <declname>unDeviceId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a4b3c449999bda4d5effec48e5b5d6dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._ApplyTransform</definition>
        <argsstring>(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)</argsstring>
        <name>_ApplyTransform</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref></type>
          <declname>pOutputPose</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref></type>
          <declname>pTrackedDevicePose</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
          <declname>pTransform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a78755de15fec7aaaccc22d7539a7492a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRSystem._GetTrackedDeviceIndexForControllerRole</definition>
        <argsstring>(ETrackedControllerRole unDeviceType)</argsstring>
        <name>_GetTrackedDeviceIndexForControllerRole</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a7814f024ae1755837d784b5263e05792" kindref="member">ETrackedControllerRole</ref></type>
          <declname>unDeviceType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a38e3886f059ec9bd5728bcd5c5561e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a7814f024ae1755837d784b5263e05792" kindref="member">ETrackedControllerRole</ref></type>
        <definition>internal delegate ETrackedControllerRole Valve.VR.IVRSystem._GetControllerRoleForTrackedDeviceIndex</definition>
        <argsstring>(uint unDeviceIndex)</argsstring>
        <name>_GetControllerRoleForTrackedDeviceIndex</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a012f6620d3faad15d7622c5c53b091e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1aa1a3c2765fe53acb85372a57652c47a1" kindref="member">ETrackedDeviceClass</ref></type>
        <definition>internal delegate ETrackedDeviceClass Valve.VR.IVRSystem._GetTrackedDeviceClass</definition>
        <argsstring>(uint unDeviceIndex)</argsstring>
        <name>_GetTrackedDeviceClass</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a879d599690d8f4f52620923b283b85c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._IsTrackedDeviceConnected</definition>
        <argsstring>(uint unDeviceIndex)</argsstring>
        <name>_IsTrackedDeviceConnected</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad59f0298d859db814984c5b2c46e2a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._GetBoolTrackedDeviceProperty</definition>
        <argsstring>(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)</argsstring>
        <name>_GetBoolTrackedDeviceProperty</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482" kindref="member">ETrackedDeviceProperty</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b" kindref="member">ETrackedPropertyError</ref></type>
          <declname>pError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a463f30e32dfce512ceed667f548e83ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate float</type>
        <definition>internal delegate float Valve.VR.IVRSystem._GetFloatTrackedDeviceProperty</definition>
        <argsstring>(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)</argsstring>
        <name>_GetFloatTrackedDeviceProperty</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482" kindref="member">ETrackedDeviceProperty</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b" kindref="member">ETrackedPropertyError</ref></type>
          <declname>pError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0201a1804a9833cfe2834c810ee97893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate int</type>
        <definition>internal delegate int Valve.VR.IVRSystem._GetInt32TrackedDeviceProperty</definition>
        <argsstring>(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)</argsstring>
        <name>_GetInt32TrackedDeviceProperty</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482" kindref="member">ETrackedDeviceProperty</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b" kindref="member">ETrackedPropertyError</ref></type>
          <declname>pError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a2cd6c3c2bdb9cbf7ee06115283aa3640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate ulong</type>
        <definition>internal delegate ulong Valve.VR.IVRSystem._GetUint64TrackedDeviceProperty</definition>
        <argsstring>(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)</argsstring>
        <name>_GetUint64TrackedDeviceProperty</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482" kindref="member">ETrackedDeviceProperty</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b" kindref="member">ETrackedPropertyError</ref></type>
          <declname>pError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1add3a6aac11e39d31852a68b40434aa72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
        <definition>internal delegate HmdMatrix34_t Valve.VR.IVRSystem._GetMatrix34TrackedDeviceProperty</definition>
        <argsstring>(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)</argsstring>
        <name>_GetMatrix34TrackedDeviceProperty</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482" kindref="member">ETrackedDeviceProperty</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b" kindref="member">ETrackedPropertyError</ref></type>
          <declname>pError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a664650bb051f15b2aa5974a22fb4f483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRSystem._GetArrayTrackedDeviceProperty</definition>
        <argsstring>(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)</argsstring>
        <name>_GetArrayTrackedDeviceProperty</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482" kindref="member">ETrackedDeviceProperty</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>propType</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unBufferSize</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b" kindref="member">ETrackedPropertyError</ref></type>
          <declname>pError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6dec2a7ad8cb675cbc12248da723827b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRSystem._GetStringTrackedDeviceProperty</definition>
        <argsstring>(uint unDeviceIndex, ETrackedDeviceProperty prop, System.Text.StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)</argsstring>
        <name>_GetStringTrackedDeviceProperty</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482" kindref="member">ETrackedDeviceProperty</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchValue</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unBufferSize</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b" kindref="member">ETrackedPropertyError</ref></type>
          <declname>pError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab8df6803ff20af23449bb3a8951f75f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate IntPtr</type>
        <definition>internal delegate IntPtr Valve.VR.IVRSystem._GetPropErrorNameFromEnum</definition>
        <argsstring>(ETrackedPropertyError error)</argsstring>
        <name>_GetPropErrorNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b" kindref="member">ETrackedPropertyError</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad05dee46b825b66c941f09a69ddc2a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._PollNextEvent</definition>
        <argsstring>(ref VREvent_t pEvent, uint uncbVREvent)</argsstring>
        <name>_PollNextEvent</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_v_r_event__t" kindref="compound">VREvent_t</ref></type>
          <declname>pEvent</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>uncbVREvent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a651836066c8780d5e5aadab482bd22d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._PollNextEventWithPose</definition>
        <argsstring>(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)</argsstring>
        <name>_PollNextEventWithPose</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f" kindref="member">ETrackingUniverseOrigin</ref></type>
          <declname>eOrigin</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_v_r_event__t" kindref="compound">VREvent_t</ref></type>
          <declname>pEvent</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>uncbVREvent</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref></type>
          <declname>pTrackedDevicePose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a31f48cf54b258ae76bcfc5444ee883c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate IntPtr</type>
        <definition>internal delegate IntPtr Valve.VR.IVRSystem._GetEventTypeNameFromEnum</definition>
        <argsstring>(EVREventType eType)</argsstring>
        <name>_GetEventTypeNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1afe3398b9e5cb1ea06335142d1b9289f3" kindref="member">EVREventType</ref></type>
          <declname>eType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a2778354bdfffa5063ed74f2634feb02d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="struct_valve_1_1_v_r_1_1_hidden_area_mesh__t" kindref="compound">HiddenAreaMesh_t</ref></type>
        <definition>internal delegate HiddenAreaMesh_t Valve.VR.IVRSystem._GetHiddenAreaMesh</definition>
        <argsstring>(EVREye eEye, EHiddenAreaMeshType type)</argsstring>
        <name>_GetHiddenAreaMesh</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880" kindref="member">EVREye</ref></type>
          <declname>eEye</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a2ed1af4858f23bc73d7358e8fcde5c64" kindref="member">EHiddenAreaMeshType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a1eca77760e6464488c6ca3e083e0a456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._GetControllerState</definition>
        <argsstring>(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)</argsstring>
        <name>_GetControllerState</name>
        <param>
          <type>uint</type>
          <declname>unControllerDeviceIndex</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_v_r_controller_state__t" kindref="compound">VRControllerState_t</ref></type>
          <declname>pControllerState</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unControllerStateSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad69cca720213c448e77167bb46b1a804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._GetControllerStateWithPose</definition>
        <argsstring>(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)</argsstring>
        <name>_GetControllerStateWithPose</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f" kindref="member">ETrackingUniverseOrigin</ref></type>
          <declname>eOrigin</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unControllerDeviceIndex</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_v_r_controller_state__t" kindref="compound">VRControllerState_t</ref></type>
          <declname>pControllerState</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unControllerStateSize</declname>
        </param>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_tracked_device_pose__t" kindref="compound">TrackedDevicePose_t</ref></type>
          <declname>pTrackedDevicePose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7d878e9f5dd86b552a79017e9b265b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._TriggerHapticPulse</definition>
        <argsstring>(uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)</argsstring>
        <name>_TriggerHapticPulse</name>
        <param>
          <type>uint</type>
          <declname>unControllerDeviceIndex</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unAxisId</declname>
        </param>
        <param>
          <type>ushort</type>
          <declname>usDurationMicroSec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0a9463bae6cfe3289f8b18e79db1dbb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate IntPtr</type>
        <definition>internal delegate IntPtr Valve.VR.IVRSystem._GetButtonIdNameFromEnum</definition>
        <argsstring>(EVRButtonId eButtonId)</argsstring>
        <name>_GetButtonIdNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a43fd11be1f2f7596cbb480b4a5dc2e87" kindref="member">EVRButtonId</ref></type>
          <declname>eButtonId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa41d19dc0a8ab0539fef127d02dd471a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate IntPtr</type>
        <definition>internal delegate IntPtr Valve.VR.IVRSystem._GetControllerAxisTypeNameFromEnum</definition>
        <argsstring>(EVRControllerAxisType eAxisType)</argsstring>
        <name>_GetControllerAxisTypeNameFromEnum</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1aaccda1681e581ff46f9d883a8b574a66" kindref="member">EVRControllerAxisType</ref></type>
          <declname>eAxisType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ae830dd893c1ac74196be24544e94f9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._IsInputAvailable</definition>
        <argsstring>()</argsstring>
        <name>_IsInputAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a160c811798537299b253f20e8bcc1e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._IsSteamVRDrawingControllers</definition>
        <argsstring>()</argsstring>
        <name>_IsSteamVRDrawingControllers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad63c0ab21538f30ce52420c007356f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._ShouldApplicationPause</definition>
        <argsstring>()</argsstring>
        <name>_ShouldApplicationPause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6f55813bd7702e935e3313a50f27fd87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRSystem._ShouldApplicationReduceRenderingWork</definition>
        <argsstring>()</argsstring>
        <name>_ShouldApplicationReduceRenderingWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a818e951800bb68fb2ae856f7f12dd2fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate uint</type>
        <definition>internal delegate uint Valve.VR.IVRSystem._DriverDebugRequest</definition>
        <argsstring>(uint unDeviceIndex, string pchRequest, System.Text.StringBuilder pchResponseBuffer, uint unResponseBufferSize)</argsstring>
        <name>_DriverDebugRequest</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pchRequest</declname>
        </param>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pchResponseBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unResponseBufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab19faf642558ef1a557fb70618db9ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a07c3927041d6bb490e61ca27612c41ff" kindref="member">EVRFirmwareError</ref></type>
        <definition>internal delegate EVRFirmwareError Valve.VR.IVRSystem._PerformFirmwareUpdate</definition>
        <argsstring>(uint unDeviceIndex)</argsstring>
        <name>_PerformFirmwareUpdate</name>
        <param>
          <type>uint</type>
          <declname>unDeviceIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa692c4d5b5097052364afcb966fd63cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._AcknowledgeQuit_Exiting</definition>
        <argsstring>()</argsstring>
        <name>_AcknowledgeQuit_Exiting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_system_1a4309327757a4f929aeb20c09f12f16b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate void</type>
        <definition>internal delegate void Valve.VR.IVRSystem._AcknowledgeQuit_UserPrompt</definition>
        <argsstring>()</argsstring>
        <name>_AcknowledgeQuit_UserPrompt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="249" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="16" bodyend="253"/>
    <listofallmembers>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa692c4d5b5097052364afcb966fd63cd" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_AcknowledgeQuit_Exiting</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a4309327757a4f929aeb20c09f12f16b4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_AcknowledgeQuit_UserPrompt</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a4b3c449999bda4d5effec48e5b5d6dfa" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_ApplyTransform</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a88600e2b90cd94cb7fd918636a56cef3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_ComputeDistortion</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a818e951800bb68fb2ae856f7f12dd2fe" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_DriverDebugRequest</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a664650bb051f15b2aa5974a22fb4f483" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetArrayTrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad59f0298d859db814984c5b2c46e2a1c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetBoolTrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0a9463bae6cfe3289f8b18e79db1dbb4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetButtonIdNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa41d19dc0a8ab0539fef127d02dd471a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetControllerAxisTypeNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a38e3886f059ec9bd5728bcd5c5561e49" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetControllerRoleForTrackedDeviceIndex</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a1eca77760e6464488c6ca3e083e0a456" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetControllerState</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad69cca720213c448e77167bb46b1a804" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetControllerStateWithPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1af8628eb30b5b12b64585d57ebc093ff9" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetD3D9AdapterIndex</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aaea53504ce1e2a5c54baaaa6d1ad2d40" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetDeviceToAbsoluteTrackingPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab24a286fab0641489f5da8a338858169" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetDXGIOutputInfo</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a31f48cf54b258ae76bcfc5444ee883c8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetEventTypeNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a285d2953403229712d9fa48bb3224d80" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetEyeToHeadTransform</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a463f30e32dfce512ceed667f548e83ed" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetFloatTrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a2778354bdfffa5063ed74f2634feb02d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetHiddenAreaMesh</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0201a1804a9833cfe2834c810ee97893" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetInt32TrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1add3a6aac11e39d31852a68b40434aa72" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetMatrix34TrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7b0363d609497bbe2b11d2af5ff2fc07" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetOutputDevice</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a10aad034ee13b75116d84a989eced445" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetProjectionMatrix</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1adb042a1d95520b0ab26f1f2c97d7dff4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetProjectionRaw</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab8df6803ff20af23449bb3a8951f75f8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetPropErrorNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1acca513b3beff9bcf5c4e6cc4cb367b64" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetRawZeroPoseToStandingAbsoluteTrackingPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7c739552eda67112e5ed1c5e6b64388b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetRecommendedRenderTargetSize</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1af45048703eb614b2aa0e3a306838b131" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetSeatedZeroPoseToStandingAbsoluteTrackingPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1acb35a55e60800abca1d3216ba5c3b90e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetSortedTrackedDeviceIndicesOfClass</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6dec2a7ad8cb675cbc12248da723827b" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetStringTrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab4843adda277e53c0307051b2ec21cc8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetTimeSinceLastVsync</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1af6da0a3c81f4645a74f3ae34d3c050b6" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetTrackedDeviceActivityLevel</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a012f6620d3faad15d7622c5c53b091e8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetTrackedDeviceClass</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a78755de15fec7aaaccc22d7539a7492a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetTrackedDeviceIndexForControllerRole</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a2cd6c3c2bdb9cbf7ee06115283aa3640" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_GetUint64TrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a82b26bcb84c59e3b886653e6f52c9fdf" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_IsDisplayOnDesktop</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ae830dd893c1ac74196be24544e94f9ca" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_IsInputAvailable</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a160c811798537299b253f20e8bcc1e4d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_IsSteamVRDrawingControllers</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a879d599690d8f4f52620923b283b85c6" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_IsTrackedDeviceConnected</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ab19faf642558ef1a557fb70618db9ba3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_PerformFirmwareUpdate</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad05dee46b825b66c941f09a69ddc2a13" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_PollNextEvent</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a651836066c8780d5e5aadab482bd22d3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_PollNextEventWithPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ae73e4e8327964bc0c9947bebed6f41fd" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_ResetSeatedZeroPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a97b502df669ebd8f271bea132cd15eed" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_SetDisplayVisibility</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad63c0ab21538f30ce52420c007356f12" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_ShouldApplicationPause</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6f55813bd7702e935e3313a50f27fd87" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_ShouldApplicationReduceRenderingWork</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7d878e9f5dd86b552a79017e9b265b72" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>_TriggerHapticPulse</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6b60311b536677d807becf55bada9760" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>AcknowledgeQuit_Exiting</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a400312901662b9450b7a450f18119ea0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>AcknowledgeQuit_UserPrompt</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7fac59520ba04459f4389fb1758280fe" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>ApplyTransform</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a20be9536f86c1195024062854be1ac59" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>ComputeDistortion</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a8135bdde65be17613157cc5df69f769a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>DriverDebugRequest</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a8794f5d4fdd98afbaf5f0b60f78b841a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetArrayTrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aed27d542bd09a4f62c497e215cc9cbf8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetBoolTrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a33d4426980f8543ddb97498cd31d712d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetButtonIdNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6b7a4e2865bc3a965e8d3aec231cb6d8" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetControllerAxisTypeNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad069e02bb223054805c2feb8c4439bdd" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetControllerRoleForTrackedDeviceIndex</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a820c4d678b9e885c8de11fc31aede166" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetControllerState</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a95719e013581d2bc69b8ac13230f9926" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetControllerStateWithPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a1f85e448984efdb948ab539fcf4446c2" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetD3D9AdapterIndex</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad82a0592fe681a8e3eece30c2bf2ea2d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetDeviceToAbsoluteTrackingPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a433e3147a2f1d989802a8087752bf02c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetDXGIOutputInfo</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aeff0e53b53082e6fd51aa033513cabbf" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetEventTypeNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6cf8f7e1b8b9187bf3d4ded098d49203" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetEyeToHeadTransform</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aae99b75e4e0541e865cb73d1b3a01b8e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetFloatTrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad69e1074728820f7385004d571f2687a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetHiddenAreaMesh</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ad2b2ee545a313585fffd1971cd1be4bf" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetInt32TrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a995ec67fd90726b954f37ca8a0f941ea" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetMatrix34TrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ac78a36f65ca807a8cd4332b0ab7549bf" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetOutputDevice</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a28ccdb1a7ebc0cd67aa01fde5a09a29e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetProjectionMatrix</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1abc6c8a648793f141ae5cd8498887eb6d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetProjectionRaw</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0456c00bd2ce6efef6e542ac99b933b4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetPropErrorNameFromEnum</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a0c19c0373810a8e2b53dd04befcb8537" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetRawZeroPoseToStandingAbsoluteTrackingPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a51dc8b71cce5093f779099db3f2ae19c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetRecommendedRenderTargetSize</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa03cb81558d2e3f244f4cd7e25d99f1e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetSeatedZeroPoseToStandingAbsoluteTrackingPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a4eda6be881ec8440960d130834f70e59" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetSortedTrackedDeviceIndicesOfClass</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a333164a121dcf6dd2496d237c2476784" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetStringTrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a25109bd3030fde7863c8a1167d2c6bb4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetTimeSinceLastVsync</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1acc4284c334c1b50f84803018f7efea60" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetTrackedDeviceActivityLevel</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a889385c93465cef3035571bb7a89c98e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetTrackedDeviceClass</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ae3be66c094b70af75494d85548c6747c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetTrackedDeviceIndexForControllerRole</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a3ba664ad5c9d2b52d4c5f9c7917308f5" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>GetUint64TrackedDeviceProperty</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a9d257568f716b875785a30f66dc441aa" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>IsDisplayOnDesktop</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a19022fa80da6a1237bd179eb97a98c10" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>IsInputAvailable</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a9ca8e0aa72557ad6d53936ce945d638f" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>IsSteamVRDrawingControllers</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a73d69a5a0a052993628d025de426b5f0" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>IsTrackedDeviceConnected</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1ac265d711916027dad4c18fddf66c8824" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>PerformFirmwareUpdate</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a77dd68df65c7feb90c6bb81aeb49790c" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>PollNextEvent</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a1d29adecbeff4cc37b4e30f83d74efa2" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>PollNextEventWithPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a6bc413a891810fc8e6d122f89ff3e4d2" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>ResetSeatedZeroPose</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a7f7b4443ca65064f398c08d07ac068ca" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>SetDisplayVisibility</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1aa9fb2748a8d56a66f39629552db1fc66" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>ShouldApplicationPause</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a24eff068adfd4b8924e9e1224406d14e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>ShouldApplicationReduceRenderingWork</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_system_1a14c214fd36ef8b882166e9d1f03654c9" prot="public" virt="non-virtual"><scope>Valve::VR::IVRSystem</scope><name>TriggerHapticPulse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
