<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_hands" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::Hands</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_hands_1a820d081118197d7bb95d21f76dd33e49" prot="private" static="yes" mutable="no">
        <type><ref refid="class_leap_1_1_unity_1_1_leap_provider" kindref="compound">LeapProvider</ref></type>
        <definition>LeapProvider Leap.Unity.Hands.s_provider</definition>
        <argsstring></argsstring>
        <name>s_provider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="23" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_hands_1adfce4acd700c2303fa39284f1b390add" prot="private" static="yes" mutable="no">
        <type>GameObject</type>
        <definition>GameObject Leap.Unity.Hands.s_leapRig</definition>
        <argsstring></argsstring>
        <name>s_leapRig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="24" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_hands_1a03a4f39fd7485a295c52f6f0952384ed" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>GameObject</type>
        <definition>GameObject Leap.Unity.Hands.CameraRig</definition>
        <argsstring></argsstring>
        <name>CameraRig</name>
        <briefdescription>
<para>Static convenience accessor for the <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> camera rig. This is the parent of the Camera that contains a <ref refid="class_leap_1_1_unity_1_1_leap_provider" kindref="compound">LeapProvider</ref> in one of its children, or null if there is no such GameObject. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="55" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_hands_1a73af7f37784ddf8f21bc077d6cc7accc" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_leap_1_1_unity_1_1_leap_provider" kindref="compound">LeapProvider</ref></type>
        <definition>LeapProvider Leap.Unity.Hands.Provider</definition>
        <argsstring></argsstring>
        <name>Provider</name>
        <briefdescription>
<para>Static convenience accessor for a <ref refid="class_leap_1_1_unity_1_1_leap_provider" kindref="compound">LeapProvider</ref> in the scene. Preference is given to a <ref refid="class_leap_1_1_unity_1_1_leap_service_provider" kindref="compound">LeapServiceProvider</ref> if there is one. </para>
        </briefdescription>
        <detaileddescription>
<para>If static memory currently has no reference for the provider (or if it was destroyed), this call will search the scene for a <ref refid="class_leap_1_1_unity_1_1_leap_provider" kindref="compound">LeapProvider</ref> and cache it to be returned next time.</para>
<para>If there is no <ref refid="class_leap_1_1_unity_1_1_leap_provider" kindref="compound">LeapProvider</ref> in your scene, this getter will return null. Be warned that calling this regularly can be expensive if LeapProviders often don&apos;t exist in your scene or are frequently destroyed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="76" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_hands_1a91db7808bba46eb6db385404d6147ce8" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand Leap.Unity.Hands.Left</definition>
        <argsstring></argsstring>
        <name>Left</name>
        <briefdescription>
<para>Returns the first left hand found by <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> in the current frame, otherwise returns null if no such hand is found. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="106" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="106" bodyend="112"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_hands_1a572e905f3bec7cb35356e3c769931fce" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand Leap.Unity.Hands.Right</definition>
        <argsstring></argsstring>
        <name>Right</name>
        <briefdescription>
<para>Returns the first right hand found by <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> in the current frame, otherwise returns null if no such hand is found. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="118" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="118" bodyend="124"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_hands_1a1d039cbc2c8e48aebb8c78fb7e91a4ba" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand Leap.Unity.Hands.FixedLeft</definition>
        <argsstring></argsstring>
        <name>FixedLeft</name>
        <briefdescription>
<para>Returns the first left hand found by <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> in the current fixed frame, otherwise returns null if no such hand is found. The fixed frame is aligned with the physics timestep. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="130" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="130" bodyend="136"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_hands_1a6d781829f5d467fcbb5641313ba701df" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>Hand Leap.Unity.Hands.FixedRight</definition>
        <argsstring></argsstring>
        <name>FixedRight</name>
        <briefdescription>
<para>Returns the first right hand found by <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> in the current fixed frame, otherwise returns null if no such hand is found. The fixed frame is aligned with the physics timestep. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="142" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="142" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a96f94a0e7f1c7551e535533455a9e841" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Leap.Unity.Hands.Hands</definition>
        <argsstring>()</argsstring>
        <name>Hands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="26" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a75c77c11e5acae3c165296d062ae8e9e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.InitStaticOnNewScene</definition>
        <argsstring>(Scene unused, Scene unused2)</argsstring>
        <name>InitStaticOnNewScene</name>
        <param>
          <type>Scene</type>
          <declname>unused</declname>
        </param>
        <param>
          <type>Scene</type>
          <declname>unused2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="31" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a0b5063222b528aad9a20feefc1980c8d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.InitStatic</definition>
        <argsstring>()</argsstring>
        <name>InitStatic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="35" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="35" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1aa82ee5367e573614e498400db4c84937" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>static Hand Leap.Unity.Hands.Get</definition>
        <argsstring>(Chirality chirality)</argsstring>
        <name>Get</name>
        <param>
          <type><ref refid="namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606f" kindref="member">Chirality</ref></type>
          <declname>chirality</declname>
        </param>
        <briefdescription>
<para>Returns the first hand of the argument Chirality in the current frame, otherwise returns null if no such hand is found. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="89" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a739f7f2e9e6e3f0e79c2876a3558cd75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
        <definition>static Hand Leap.Unity.Hands.GetFixed</definition>
        <argsstring>(Chirality chirality)</argsstring>
        <name>GetFixed</name>
        <param>
          <type><ref refid="namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606f" kindref="member">Chirality</ref></type>
          <declname>chirality</declname>
        </param>
        <briefdescription>
<para>As Get, but returns the FixedUpdate (physics timestep) hand as opposed to the Update hand. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="97" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a3b21cacfe66126e3999b1740a4e21a28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>static Finger Leap.Unity.Hands.GetThumb</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetThumb</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shorthand for hand.Fingers[(int)<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baa80b1befb870616449c53c8e69bc07216" kindref="member">Leap.Finger.FingerType.TYPE_THUMB</ref>], or, alternatively, hand.Fingers[0]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="153" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1ab06ffbd984c306b3453e8212a6485afe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>static Finger Leap.Unity.Hands.GetIndex</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetIndex</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Shorthand for hand.Fingers[(int)<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baae935a2bcf041187b5d3530f6084c5914" kindref="member">Leap.Finger.FingerType.TYPE_INDEX</ref>], or, alternatively, hand.Fingers[1]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="161" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a2f539d92262ecbc2f83dd3ea154bca5a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>static Finger Leap.Unity.Hands.GetMiddle</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetMiddle</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Shorthand for hand.Fingers[(int)<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baa965f716c4f07774bf9ac423d8806e43f" kindref="member">Leap.Finger.FingerType.TYPE_MIDDLE</ref>], or, alternatively, hand.Fingers[2]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="169" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a582344e3feebe50816db6ef52ceeec41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>static Finger Leap.Unity.Hands.GetRing</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetRing</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Shorthand for hand.Fingers[(int)<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baa713f93a2e06469cbe78206cf744b9966" kindref="member">Leap.Finger.FingerType.TYPE_RING</ref>], or, alternatively, hand.Fingers[3]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="177" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a60f77a8a400e67a444504717ad7461dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref></type>
        <definition>static Finger Leap.Unity.Hands.GetPinky</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetPinky</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Shorthand for hand.Fingers[(int)<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2baab9f37692a6cb1524fc97cedc5bac23a5" kindref="member">Leap.Finger.FingerType.TYPE_PINKY</ref>], or, alternatively, hand.Fingers[4]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="185" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a84cf33a1b98603e540533bc6acaf633e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
        <definition>static Pose Leap.Unity.Hands.GetPalmPose</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetPalmPose</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> consisting of the tracked hand&apos;s palm position and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="192" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1abe5e9fb9a29663903f342a61b92b48ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.SetPalmPose</definition>
        <argsstring>(this Hand hand, Pose newPalmPose)</argsstring>
        <name>SetPalmPose</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>newPalmPose</declname>
        </param>
        <briefdescription>
<para>As Hand.SetTransform(), but takes a <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> as input for convenience. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="199" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a2d6920da2adeca7f352208a2d28bdbae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Hands.PalmarAxis</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>PalmarAxis</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Returns the direction the <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref>&apos;s palm is facing. For the other two palm-basis directions, see RadialAxis and DistalAxis. </para>
        </briefdescription>
        <detaileddescription>
<para>The direction out of the back of the hand would be called the dorsal axis. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="209" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a90142c62fd348b22aef7e5db270dfaf2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Hands.RadialAxis</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>RadialAxis</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Returns the the direction towards the thumb that is perpendicular to the palmar and distal axes. Left and right hands will return opposing directions. </para>
        </briefdescription>
        <detaileddescription>
<para>The direction away from the thumb would be called the ulnar axis. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="219" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="219" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a7c5afbbce7a574daae5a762c11cc8403" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Hands.DistalAxis</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>DistalAxis</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Returns the direction towards the fingers that is perpendicular to the palmar and radial axes. </para>
        </briefdescription>
        <detaileddescription>
<para>The direction towards the wrist would be called the proximal axis. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="234" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1aa924a170cbefeea9d5773fed6676f57c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Hands.IsPinching</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>IsPinching</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Returns whether the pinch strength for the hand is greater than 0.8. For more reliable pinch behavior, try applying hysteresis to the PinchStrength property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="242" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a7b233c3c9df6aa8315b6b5bee518fb2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Hands.GetPinchPosition</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetPinchPosition</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Returns approximately where the thumb and index finger will be if they are pinched together. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="249" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="249" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1ade10d20ca229fc906776997b45278f56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Hands.GetPredictedPinchPosition</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetPredictedPinchPosition</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Returns a decent approximation of where the hand is pinching, or where it will pinch, even if the index and thumb tips are far apart. </para>
        </briefdescription>
        <detaileddescription>
<para>In general, this will be more stable than GetPinchPosition(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="261" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="261" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a45d9f85eedccfba18003f950ab6f88cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Hands.IsFacing</definition>
        <argsstring>(this Vector3 facingVector, Vector3 fromWorldPosition, Vector3 towardsWorldPosition, float maxOffsetAngleAllowed)</argsstring>
        <name>IsFacing</name>
        <param>
          <type>this Vector3</type>
          <declname>facingVector</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>fromWorldPosition</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>towardsWorldPosition</declname>
        </param>
        <param>
          <type>float</type>
          <declname>maxOffsetAngleAllowed</declname>
        </param>
        <briefdescription>
<para>Returns whether this vector faces from a given world position towards another world position within a maximum angle of error. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="284" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="284" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1aecd1baab7c65b3b070cf9a4c9e6f5ee2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Hands.GetFistStrength</definition>
        <argsstring>(this Hand hand)</argsstring>
        <name>GetFistStrength</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Returns a confidence value from 0 to 1 indicating how strongly the <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref> is making a fist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="292" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="292" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a9b20f13b62677f9af6e63a6ff7e42248" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.Transform</definition>
        <argsstring>(this Bone bone, Vector3 position, Quaternion rotation)</argsstring>
        <name>Transform</name>
        <param>
          <type>this <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref></type>
          <declname>bone</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Transforms a bone by a position and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="304" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="304" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a9e5c26058a0976258bb8852307867c50" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.Transform</definition>
        <argsstring>(this Finger finger, Vector3 position, Quaternion rotation)</argsstring>
        <name>Transform</name>
        <param>
          <type>this <ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref></type>
          <declname>finger</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Transforms a finger by a position and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="311" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a0f230990bfae6a956fb2ce02352c11ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.Transform</definition>
        <argsstring>(this Hand hand, Vector3 position, Quaternion rotation)</argsstring>
        <name>Transform</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Transforms a hand by a position and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="318" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a440eec511dc6dca57db55c227021e80e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.Transform</definition>
        <argsstring>(this Frame frame, Vector3 position, Quaternion rotation)</argsstring>
        <name>Transform</name>
        <param>
          <type>this <ref refid="class_leap_1_1_frame" kindref="compound">Frame</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Transforms a frame by a position and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="325" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1acacd92d176f858b092c702030972d2a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.SetTransform</definition>
        <argsstring>(this Bone bone, Vector3 position, Quaternion rotation)</argsstring>
        <name>SetTransform</name>
        <param>
          <type>this <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref></type>
          <declname>bone</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Transforms a bone to a position and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="332" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1a1f59cdefb18234fd2e306ae039446f92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.SetTipTransform</definition>
        <argsstring>(this Finger finger, Vector3 position, Quaternion rotation)</argsstring>
        <name>SetTipTransform</name>
        <param>
          <type>this <ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref></type>
          <declname>finger</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Transforms a finger to a position and rotation by its fingertip. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="340" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_hands_1aeb04ed7ff0a714c693075854e26141b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Hands.SetTransform</definition>
        <argsstring>(this Hand hand, Vector3 position, Quaternion rotation)</argsstring>
        <name>SetTransform</name>
        <param>
          <type>this <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Transforms a hand to a position and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="348" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="348" bodyend="351"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Static convenience methods and extension methods for getting useful <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref> data. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" line="21" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/HandUtils.cs" bodystart="21" bodyend="353"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_hands_1a03a4f39fd7485a295c52f6f0952384ed" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>CameraRig</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a7c5afbbce7a574daae5a762c11cc8403" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>DistalAxis</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a1d039cbc2c8e48aebb8c78fb7e91a4ba" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>FixedLeft</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a6d781829f5d467fcbb5641313ba701df" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>FixedRight</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1aa82ee5367e573614e498400db4c84937" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Get</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1aecd1baab7c65b3b070cf9a4c9e6f5ee2" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetFistStrength</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a739f7f2e9e6e3f0e79c2876a3558cd75" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetFixed</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1ab06ffbd984c306b3453e8212a6485afe" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetIndex</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a2f539d92262ecbc2f83dd3ea154bca5a" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetMiddle</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a84cf33a1b98603e540533bc6acaf633e" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetPalmPose</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a7b233c3c9df6aa8315b6b5bee518fb2b" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetPinchPosition</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a60f77a8a400e67a444504717ad7461dc" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetPinky</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1ade10d20ca229fc906776997b45278f56" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetPredictedPinchPosition</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a582344e3feebe50816db6ef52ceeec41" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetRing</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a3b21cacfe66126e3999b1740a4e21a28" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>GetThumb</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a96f94a0e7f1c7551e535533455a9e841" prot="private" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Hands</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a0b5063222b528aad9a20feefc1980c8d" prot="private" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>InitStatic</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a75c77c11e5acae3c165296d062ae8e9e" prot="private" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>InitStaticOnNewScene</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a45d9f85eedccfba18003f950ab6f88cd" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>IsFacing</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1aa924a170cbefeea9d5773fed6676f57c" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>IsPinching</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a91db7808bba46eb6db385404d6147ce8" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Left</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a2d6920da2adeca7f352208a2d28bdbae" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>PalmarAxis</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a73af7f37784ddf8f21bc077d6cc7accc" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Provider</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a90142c62fd348b22aef7e5db270dfaf2" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>RadialAxis</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a572e905f3bec7cb35356e3c769931fce" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Right</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1adfce4acd700c2303fa39284f1b390add" prot="private" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>s_leapRig</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a820d081118197d7bb95d21f76dd33e49" prot="private" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>s_provider</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1abe5e9fb9a29663903f342a61b92b48ad" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>SetPalmPose</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a1f59cdefb18234fd2e306ae039446f92" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>SetTipTransform</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1acacd92d176f858b092c702030972d2a6" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>SetTransform</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1aeb04ed7ff0a714c693075854e26141b5" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>SetTransform</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a9b20f13b62677f9af6e63a6ff7e42248" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Transform</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a9e5c26058a0976258bb8852307867c50" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Transform</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a0f230990bfae6a956fb2ce02352c11ed" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Transform</name></member>
      <member refid="class_leap_1_1_unity_1_1_hands_1a440eec511dc6dca57db55c227021e80e" prot="public" virt="non-virtual"><scope>Leap::Unity::Hands</scope><name>Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
