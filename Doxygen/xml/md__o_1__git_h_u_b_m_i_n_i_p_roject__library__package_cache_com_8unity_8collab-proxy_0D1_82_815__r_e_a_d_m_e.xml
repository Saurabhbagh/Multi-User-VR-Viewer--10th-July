<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="md__o_1__git_h_u_b_m_i_n_i_p_roject__library__package_cache_com_8unity_8collab-proxy_0D1_82_815__r_e_a_d_m_e" kind="page">
    <compoundname>md_O:_GitHUBMINIPRoject_Library_PackageCache_com.unity.collab-proxy@1.2.15_README</compoundname>
    <title>Collab Proxy UPM Package</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is the packaged version of Collab, currently limited to containing the History and Toolbar windows, along with supporting classes.</para>
<para><heading level="2">Development</heading>
</para>
<para>Check this repository out in your {$PROJECT}/Packages/ folder, under the name com.unity.collab-proxy. The classes will be built by Unity.</para>
<para><heading level="2">Testing</heading>
</para>
<para>In order to run the tests, you will need to add this project to the testables key in your manifest.json - once you have done this, the tests will be picked up by the Unity Test Runner window.</para>
<para><heading level="2">Building</heading>
</para>
<para>You may build this project using msbuild. The commands to do so can be seen under .gitlab-ci.yml.</para>
<para><heading level="2">Deploying</heading>
</para>
<para>Gitlab will automatically build your project when you deploy. You can download the resulting artifact, which will be a dll, and place it in your Editor/bin/ folder. Open the package in Unity to generate the meta files, and then you will be able to publish.</para>
<para>We&apos;re currently looking into a way to avoid this manual process. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
