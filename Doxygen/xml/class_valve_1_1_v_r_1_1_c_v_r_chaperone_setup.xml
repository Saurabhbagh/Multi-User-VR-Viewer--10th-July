<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::CVRChaperoneSetup</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1ace48c6b7b8eb078c106a1afe013e45ed" prot="private" static="no" mutable="no">
        <type><ref refid="struct_valve_1_1_v_r_1_1_i_v_r_chaperone_setup" kindref="compound">IVRChaperoneSetup</ref></type>
        <definition>IVRChaperoneSetup Valve.VR.CVRChaperoneSetup.FnTable</definition>
        <argsstring></argsstring>
        <name>FnTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2374" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2374" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a79073917768609de9a3efe7a12de6078" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>internal</type>
        <definition>internal Valve.VR.CVRChaperoneSetup.CVRChaperoneSetup</definition>
        <argsstring>(IntPtr pInterface)</argsstring>
        <name>CVRChaperoneSetup</name>
        <param>
          <type>IntPtr</type>
          <declname>pInterface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2375" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2375" bodyend="2378"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1abb6ee2add41e2ffd400ab355774c7386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.CommitWorkingCopy</definition>
        <argsstring>(EChaperoneConfigFile configFile)</argsstring>
        <name>CommitWorkingCopy</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a9d16676419221d1177d39fe862e1f7d1" kindref="member">EChaperoneConfigFile</ref></type>
          <declname>configFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2379" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2379" bodyend="2383"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a45c8a9ccbbb71c1ae5bf3209a4535a2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.RevertWorkingCopy</definition>
        <argsstring>()</argsstring>
        <name>RevertWorkingCopy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2384" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2384" bodyend="2387"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1aa43a57c8e233817439f03b5995cfeb98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.GetWorkingPlayAreaSize</definition>
        <argsstring>(ref float pSizeX, ref float pSizeZ)</argsstring>
        <name>GetWorkingPlayAreaSize</name>
        <param>
          <type>ref float</type>
          <declname>pSizeX</declname>
        </param>
        <param>
          <type>ref float</type>
          <declname>pSizeZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2388" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2388" bodyend="2394"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1af9818d8196c99c4aa991f53d8571f372" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.GetWorkingPlayAreaRect</definition>
        <argsstring>(ref HmdQuad_t rect)</argsstring>
        <name>GetWorkingPlayAreaRect</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_quad__t" kindref="compound">HmdQuad_t</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2395" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2395" bodyend="2399"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1adc3e926f8a82b9d067f558f843735da7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.GetWorkingCollisionBoundsInfo</definition>
        <argsstring>(out HmdQuad_t [] pQuadsBuffer)</argsstring>
        <name>GetWorkingCollisionBoundsInfo</name>
        <param>
          <type>out <ref refid="struct_valve_1_1_v_r_1_1_hmd_quad__t" kindref="compound">HmdQuad_t</ref> []</type>
          <declname>pQuadsBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2400" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2400" bodyend="2407"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1ae4f63ca66c7798282bc9a2ae79c58d1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.GetLiveCollisionBoundsInfo</definition>
        <argsstring>(out HmdQuad_t [] pQuadsBuffer)</argsstring>
        <name>GetLiveCollisionBoundsInfo</name>
        <param>
          <type>out <ref refid="struct_valve_1_1_v_r_1_1_hmd_quad__t" kindref="compound">HmdQuad_t</ref> []</type>
          <declname>pQuadsBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2408" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2408" bodyend="2415"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1af03bd429f7d5913ca8423ca3cc53dc5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.GetWorkingSeatedZeroPoseToRawTrackingPose</definition>
        <argsstring>(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)</argsstring>
        <name>GetWorkingSeatedZeroPoseToRawTrackingPose</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
          <declname>pmatSeatedZeroPoseToRawTrackingPose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2416" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2416" bodyend="2420"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1aa39a7fd6be058cdd7de62640ebe1ec8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.GetWorkingStandingZeroPoseToRawTrackingPose</definition>
        <argsstring>(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)</argsstring>
        <name>GetWorkingStandingZeroPoseToRawTrackingPose</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
          <declname>pmatStandingZeroPoseToRawTrackingPose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2421" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2421" bodyend="2425"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a3b42da20dee26b61a7352d86c76e494d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.SetWorkingPlayAreaSize</definition>
        <argsstring>(float sizeX, float sizeZ)</argsstring>
        <name>SetWorkingPlayAreaSize</name>
        <param>
          <type>float</type>
          <declname>sizeX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sizeZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2426" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2426" bodyend="2429"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a779ba5b737b45a949fa8c23b98a309de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.SetWorkingCollisionBoundsInfo</definition>
        <argsstring>(HmdQuad_t [] pQuadsBuffer)</argsstring>
        <name>SetWorkingCollisionBoundsInfo</name>
        <param>
          <type><ref refid="struct_valve_1_1_v_r_1_1_hmd_quad__t" kindref="compound">HmdQuad_t</ref> []</type>
          <declname>pQuadsBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2430" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2430" bodyend="2433"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a27603428d4c757b8ecac4e26c13ea46c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.SetWorkingPerimeter</definition>
        <argsstring>(HmdVector2_t [] pPointBuffer)</argsstring>
        <name>SetWorkingPerimeter</name>
        <param>
          <type><ref refid="struct_valve_1_1_v_r_1_1_hmd_vector2__t" kindref="compound">HmdVector2_t</ref> []</type>
          <declname>pPointBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2434" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2434" bodyend="2437"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a4528ef252f374d951ba173d412dec0d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.SetWorkingSeatedZeroPoseToRawTrackingPose</definition>
        <argsstring>(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)</argsstring>
        <name>SetWorkingSeatedZeroPoseToRawTrackingPose</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
          <declname>pMatSeatedZeroPoseToRawTrackingPose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2438" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2438" bodyend="2441"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a6d7f95d19b799168a2462cf1c5b25550" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.SetWorkingStandingZeroPoseToRawTrackingPose</definition>
        <argsstring>(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)</argsstring>
        <name>SetWorkingStandingZeroPoseToRawTrackingPose</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
          <declname>pMatStandingZeroPoseToRawTrackingPose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2442" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2442" bodyend="2445"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a8a87649c12b2837993e7e31f83edc4d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.ReloadFromDisk</definition>
        <argsstring>(EChaperoneConfigFile configFile)</argsstring>
        <name>ReloadFromDisk</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a9d16676419221d1177d39fe862e1f7d1" kindref="member">EChaperoneConfigFile</ref></type>
          <declname>configFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2446" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2446" bodyend="2449"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a3529a7cfb08be0cb85fa55ac70a19d8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.GetLiveSeatedZeroPoseToRawTrackingPose</definition>
        <argsstring>(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)</argsstring>
        <name>GetLiveSeatedZeroPoseToRawTrackingPose</name>
        <param>
          <type>ref <ref refid="struct_valve_1_1_v_r_1_1_hmd_matrix34__t" kindref="compound">HmdMatrix34_t</ref></type>
          <declname>pmatSeatedZeroPoseToRawTrackingPose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2450" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2450" bodyend="2454"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a0b2f938528a082e00bb40b8bf214a854" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.ExportLiveToBuffer</definition>
        <argsstring>(System.Text.StringBuilder pBuffer, ref uint pnBufferLength)</argsstring>
        <name>ExportLiveToBuffer</name>
        <param>
          <type>System.Text.StringBuilder</type>
          <declname>pBuffer</declname>
        </param>
        <param>
          <type>ref uint</type>
          <declname>pnBufferLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2455" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2455" bodyend="2460"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1ad926c2713b34a03cc1f6c9ab8f0bcf79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.CVRChaperoneSetup.ImportFromBufferToWorking</definition>
        <argsstring>(string pBuffer, uint nImportFlags)</argsstring>
        <name>ImportFromBufferToWorking</name>
        <param>
          <type>string</type>
          <declname>pBuffer</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nImportFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2461" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2461" bodyend="2465"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a2bc2d7e52176af8cf8cef21fc309c46e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.ShowWorkingSetPreview</definition>
        <argsstring>()</argsstring>
        <name>ShowWorkingSetPreview</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2466" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2466" bodyend="2469"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1aa648b650438df3c243c3a6ada856ce7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.CVRChaperoneSetup.HideWorkingSetPreview</definition>
        <argsstring>()</argsstring>
        <name>HideWorkingSetPreview</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2470" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2470" bodyend="2473"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="2373" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="2372" bodyend="2474"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1abb6ee2add41e2ffd400ab355774c7386" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>CommitWorkingCopy</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a79073917768609de9a3efe7a12de6078" prot="private" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>CVRChaperoneSetup</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a0b2f938528a082e00bb40b8bf214a854" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>ExportLiveToBuffer</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1ace48c6b7b8eb078c106a1afe013e45ed" prot="private" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>FnTable</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1ae4f63ca66c7798282bc9a2ae79c58d1d" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>GetLiveCollisionBoundsInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a3529a7cfb08be0cb85fa55ac70a19d8b" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>GetLiveSeatedZeroPoseToRawTrackingPose</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1adc3e926f8a82b9d067f558f843735da7" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>GetWorkingCollisionBoundsInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1af9818d8196c99c4aa991f53d8571f372" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>GetWorkingPlayAreaRect</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1aa43a57c8e233817439f03b5995cfeb98" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>GetWorkingPlayAreaSize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1af03bd429f7d5913ca8423ca3cc53dc5d" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>GetWorkingSeatedZeroPoseToRawTrackingPose</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1aa39a7fd6be058cdd7de62640ebe1ec8c" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>GetWorkingStandingZeroPoseToRawTrackingPose</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1aa648b650438df3c243c3a6ada856ce7d" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>HideWorkingSetPreview</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1ad926c2713b34a03cc1f6c9ab8f0bcf79" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>ImportFromBufferToWorking</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a8a87649c12b2837993e7e31f83edc4d2" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>ReloadFromDisk</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a45c8a9ccbbb71c1ae5bf3209a4535a2c" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>RevertWorkingCopy</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a779ba5b737b45a949fa8c23b98a309de" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>SetWorkingCollisionBoundsInfo</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a27603428d4c757b8ecac4e26c13ea46c" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>SetWorkingPerimeter</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a3b42da20dee26b61a7352d86c76e494d" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>SetWorkingPlayAreaSize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a4528ef252f374d951ba173d412dec0d8" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>SetWorkingSeatedZeroPoseToRawTrackingPose</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a6d7f95d19b799168a2462cf1c5b25550" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>SetWorkingStandingZeroPoseToRawTrackingPose</name></member>
      <member refid="class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup_1a2bc2d7e52176af8cf8cef21fc309c46e" prot="public" virt="non-virtual"><scope>Valve::VR::CVRChaperoneSetup</scope><name>ShowWorkingSetPreview</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
