<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_utils" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::Utils</compoundname>
    <innerclass refid="struct_leap_1_1_unity_1_1_utils_1_1_children_enumerator" prot="public">Leap::Unity::Utils::ChildrenEnumerator</innerclass>
    <innerclass refid="struct_leap_1_1_unity_1_1_utils_1_1_horizontal_line_rect_enumerator" prot="public">Leap::Unity::Utils::HorizontalLineRectEnumerator</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_utils_1a696a1c21549db280952e711b4dd9707a" prot="private" static="yes" mutable="no">
        <type>TextureFormat []</type>
        <definition>TextureFormat [] Leap.Unity.Utils._incompressibleFormats</definition>
        <argsstring></argsstring>
        <name>_incompressibleFormats</name>
        <initializer>= new TextureFormat[] {
      TextureFormat.R16,
      TextureFormat.EAC_R,
      TextureFormat.EAC_R_SIGNED,
      TextureFormat.EAC_RG,
      TextureFormat.EAC_RG_SIGNED,
      TextureFormat.ETC_RGB4_3DS,
      TextureFormat.ETC_RGBA8_3DS
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1344" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1344" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a0296f38c900d9a1a0b52d97ffc329475" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Swap&lt; T &gt;</definition>
        <argsstring>(ref T a, ref T b)</argsstring>
        <name>Swap&lt; T &gt;</name>
        <param>
          <type>ref T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ref T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Swaps the references of a and b. Note that you can pass in references to array elements if you want! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="29" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a94e23beb7eebe85d1a3da7eaa91edd42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Swap&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, int a, int b)</argsstring>
        <name>Swap&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Utility extension to swap the elements at index a and index b. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="38" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a503ebb0330cd745a5c7a140ff8bbef84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Swap&lt; T &gt;</definition>
        <argsstring>(this T[] array, int a, int b)</argsstring>
        <name>Swap&lt; T &gt;</name>
        <param>
          <type>this T []</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Utility extension to swap the elements at index a and index b. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="47" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a60fe0f8fe42b157cb8eb174929342c84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Reverse&lt; T &gt;</definition>
        <argsstring>(this T[] array)</argsstring>
        <name>Reverse&lt; T &gt;</name>
        <param>
          <type>this T []</type>
          <declname>array</declname>
        </param>
        <briefdescription>
<para>System.Array.Reverse is actually surprisingly complex / slow. This is a basic generic implementation of the reverse algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="55" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a939645b8355a3a4fba6478f3f9a16380" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Reverse&lt; T &gt;</definition>
        <argsstring>(this T[] array, int start, int length)</argsstring>
        <name>Reverse&lt; T &gt;</name>
        <param>
          <type>this T []</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>System.Array.Reverse is actually surprisingly complex / slow. This is a basic generic implementation of the reverse algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="68" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="68" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a220df2393a6058c348c9d782e6a70763" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Shuffle&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list)</argsstring>
        <name>Shuffle&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Shuffle the given list into a different permutation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="80" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae2470901bfa532e4bc20e816ff7cf13a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.DoubleCapacity&lt; T &gt;</definition>
        <argsstring>(ref T[] array)</argsstring>
        <name>DoubleCapacity&lt; T &gt;</name>
        <param>
          <type>ref T []</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="86" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae4bab4289d3c98d7006d08d3b4fb4e69" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.AreEqualUnordered&lt; T &gt;</definition>
        <argsstring>(IList&lt; T &gt; a, IList&lt; T &gt; b)</argsstring>
        <name>AreEqualUnordered&lt; T &gt;</name>
        <param>
          <type>IList&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>IList&lt; T &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns whether or not two lists contain the same elements ignoring order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="95" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="95" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a251afb8d0c610fcd08886aa2f765e321" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.ImplementsInterface</definition>
        <argsstring>(this Type type, Type ifaceType)</argsstring>
        <name>ImplementsInterface</name>
        <param>
          <type>this Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>ifaceType</declname>
        </param>
        <briefdescription>
<para>Returns whether this type implements the argument interface type. If the argument type is not an interface, returns false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="146" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="146" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a3322774b25cf2b8233dbefb4700a4dec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.IsActiveRelativeToParent</definition>
        <argsstring>(this Transform obj, Transform parent)</argsstring>
        <name>IsActiveRelativeToParent</name>
        <param>
          <type>this Transform</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="156" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="156" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a49475a4ef198633bdf7a5ef19de51831" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; int &gt;</type>
        <definition>static List&lt;int&gt; Leap.Unity.Utils.GetSortedOrder&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list)</argsstring>
        <name>GetSortedOrder&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Given a list of comparable types, return an ordering that orders the elements into sorted order. The ordering is a list of indices where each index refers to the element located at that index in the original list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="175" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="175" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac2b6c674bc84acc8471f275aac3244a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.ApplyOrdering&lt; T &gt;</definition>
        <argsstring>(this IList&lt; T &gt; list, List&lt; int &gt; ordering)</argsstring>
        <name>ApplyOrdering&lt; T &gt;</name>
        <param>
          <type>this IList&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>ordering</declname>
        </param>
        <briefdescription>
<para>Given a list and an ordering, order the list according to the ordering. This method assumes the ordering is a valid ordering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="192" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="192" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a1413956a00c8269dffe75a5b34e5b291" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Leap.Unity.Utils.MakeRelativePath</definition>
        <argsstring>(string relativeTo, string path)</argsstring>
        <name>MakeRelativePath</name>
        <param>
          <type>string</type>
          <declname>relativeTo</declname>
        </param>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="209" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="209" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ad6f33609d634be5818ad79f5204edfe6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Leap.Unity.Utils.TrimEnd</definition>
        <argsstring>(this string str, int characters)</argsstring>
        <name>TrimEnd</name>
        <param>
          <type>this string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>characters</declname>
        </param>
        <briefdescription>
<para>Trims a specific number of characters off of the end of the provided string. When the number of trimmed characters is equal to or greater than the length of the string, the empty string is always returned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="237" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a0451bf37aa810a7c953b45ef4afb38bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Leap.Unity.Utils.TrimStart</definition>
        <argsstring>(this string str, int characters)</argsstring>
        <name>TrimStart</name>
        <param>
          <type>this string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>characters</declname>
        </param>
        <briefdescription>
<para>Trims a specific number of characters off of the beginning of the provided string. When the number of trimmed characters is equal to or greater than the length of the string, the empty string is always returned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="247" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aeec397faa51672cd06cc07c70a20fa6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Leap.Unity.Utils.Capitalize</definition>
        <argsstring>(this string str)</argsstring>
        <name>Capitalize</name>
        <param>
          <type>this string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Capitalizes a simple string. Only looks at the first character, so if your string has any kind of non-letter character as the first character this method will do nothing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="256" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="256" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a7d2c7549b5787485a99f425cc18505cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Leap.Unity.Utils.GenerateNiceName</definition>
        <argsstring>(string value)</argsstring>
        <name>GenerateNiceName</name>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Takes a variable-like name and turns it into a nice human readable name. <ref refid="namespace_leap_1_1_unity_1_1_examples" kindref="compound">Examples</ref>: </para>
        </briefdescription>
        <detaileddescription>
<para>_privateVar =&gt; Private Var multBy32 =&gt; Mult By 32 the_key_code =&gt; The Key Code CamelCaseToo =&gt; Camel Case Too _is2_equalTo_5 =&gt; Is 2 Equal To 5 GetTheSCUBANow =&gt; Get The SCUBA Now m_privateVar =&gt; Private Var kConstantVar =&gt; Constant Var </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="278" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="278" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae5116efbacd62398e88981773f4fea5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Leap.Unity.Utils.ToArrayString&lt; T &gt;</definition>
        <argsstring>(this IEnumerable&lt; T &gt; enumerable)</argsstring>
        <name>ToArrayString&lt; T &gt;</name>
        <param>
          <type>this IEnumerable&lt; T &gt;</type>
          <declname>enumerable</declname>
        </param>
        <briefdescription>
<para>Prints the elements of an array in a bracket-enclosed, comma-delimited list, prefixed by the elements&apos; type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="381" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="381" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a4f840a6652e0ab37c4a579cb8674e7e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Leap.Unity.Utils.Repeat</definition>
        <argsstring>(int x, int m)</argsstring>
        <name>Repeat</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="401" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a7256e623527860cffed9f489de5fe022" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Leap.Unity.Utils.Sign</definition>
        <argsstring>(int value)</argsstring>
        <name>Sign</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="406" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="406" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1abb8854a2d9519dfdcb31a56e9fc84a5a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>static Vector2 Leap.Unity.Utils.Perpendicular</definition>
        <argsstring>(this Vector2 vector)</argsstring>
        <name>Perpendicular</name>
        <param>
          <type>this Vector2</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Returns a vector that is perpendicular to this vector. The returned vector will have the same length as the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="421" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="421" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a7f808cbb0512b2d8b0d063d70a469a4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.Perpendicular</definition>
        <argsstring>(this Vector3 vector)</argsstring>
        <name>Perpendicular</name>
        <param>
          <type>this Vector3</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Returns a vector that is perpendicular to this vector. The returned vector is not guaranteed to be a unit vector, nor is its length guaranteed to be the same as the source vector&apos;s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="431" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="431" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1af1afe38a401bce1b51632dd5349df91d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.ContainsNaN</definition>
        <argsstring>(this Vector3 v)</argsstring>
        <name>ContainsNaN</name>
        <param>
          <type>this Vector3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="455" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="455" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a4439818fabb993e5bab9cbd534ae4985" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.IsBetween</definition>
        <argsstring>(this float f, float f0, float f1)</argsstring>
        <name>IsBetween</name>
        <param>
          <type>this float</type>
          <declname>f</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="461" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="461" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac0baa321c81d218adf73c2a67af22416" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.IsBetween</definition>
        <argsstring>(this double d, double d0, double d1)</argsstring>
        <name>IsBetween</name>
        <param>
          <type>this double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="467" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="467" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a947331e9ce028ec5cd8360acb33e5b8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.TimedExtrapolate</definition>
        <argsstring>(Vector3 a, float aTime, Vector3 b, float bTime, float extrapolatedTime)</argsstring>
        <name>TimedExtrapolate</name>
        <param>
          <type>Vector3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>aTime</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bTime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>extrapolatedTime</declname>
        </param>
        <briefdescription>
<para>Extrapolates using time values for positions a and b at extrapolatedTime. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="476" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="476" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a9f234ae1281589007aeff8ffb3821b2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.TimedExtrapolate</definition>
        <argsstring>(Quaternion a, float aTime, Quaternion b, float bTime, float extrapolatedTime)</argsstring>
        <name>TimedExtrapolate</name>
        <param>
          <type>Quaternion</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>aTime</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bTime</declname>
        </param>
        <param>
          <type>float</type>
          <declname>extrapolatedTime</declname>
        </param>
        <briefdescription>
<para>Extrapolates using time values for rotations a and b at extrapolatedTime. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="485" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="485" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a7e39459ea5863c8205ace2dbe318404f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.NextTuple</definition>
        <argsstring>(IList&lt; int &gt; tuple, int maxValue)</argsstring>
        <name>NextTuple</name>
        <param>
          <type>IList&lt; int &gt;</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxValue</declname>
        </param>
        <briefdescription>
<para>A specification of the generic NextTuple method that only works for integers ranging from 0 inclusive to maxValue exclusive. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="495" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="495" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1af2075179bf412a26b95265eb1ac3a231" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.NextTuple&lt; T &gt;</definition>
        <argsstring>(IList&lt; T &gt; tuple, Func&lt; T, T &gt; nextItem)</argsstring>
        <name>NextTuple&lt; T &gt;</name>
        <param>
          <type>IList&lt; T &gt;</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>Func&lt; T, T &gt;</type>
          <declname>nextItem</declname>
        </param>
        <briefdescription>
<para>Given one tuple of a collection of possible tuples, mutate it into the next tuple in the in the lexicographic sequence, or into the first tuple if the last tuple has been reached. </para>
        </briefdescription>
        <detaileddescription>
<para>The items of the tuple must be comparable to each other. The getNext function takes an item and returns the next item in the lexicographic sequence, or the first item if there is no next item. </para>
<para><simplesect kind="return"><para>Returns true if the new tuple comes after the input tuple, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="510" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="510" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a4a3eb7baf6036c4e45d12ad0ba2fa3ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T []</type>
        <definition>static T [] Leap.Unity.Utils.ClearWithDefaults&lt; T &gt;</definition>
        <argsstring>(this T[] arr)</argsstring>
        <name>ClearWithDefaults&lt; T &gt;</name>
        <param>
          <type>this T []</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
<para>Sets all elements in the array of type T to default(T). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="534" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="534" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ab7f5c27e96ffaa5227b3a55c05b055d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T []</type>
        <definition>static T [] Leap.Unity.Utils.ClearWith&lt; T &gt;</definition>
        <argsstring>(this T[] arr, T value)</argsstring>
        <name>ClearWith&lt; T &gt;</name>
        <param>
          <type>this T []</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets all elements in the array of type T to the argument value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="544" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="544" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a84e37f98f946e28ff64699fb0b287323" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.EnsureListExists&lt; T &gt;</definition>
        <argsstring>(ref List&lt; T &gt; list)</argsstring>
        <name>EnsureListExists&lt; T &gt;</name>
        <param>
          <type>ref List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="555" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="555" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ab9a1b98aeba4d079d17994fa61396f30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.EnsureListCount&lt; T &gt;</definition>
        <argsstring>(this List&lt; T &gt; list, int count)</argsstring>
        <name>EnsureListCount&lt; T &gt;</name>
        <param>
          <type>this List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="561" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="561" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aa08b80af4a963b314b520462a42f5c8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.EnsureListCount&lt; T &gt;</definition>
        <argsstring>(this List&lt; T &gt; list, int count, Func&lt; T &gt; createT, Action&lt; T &gt; deleteT=null)</argsstring>
        <name>EnsureListCount&lt; T &gt;</name>
        <param>
          <type>this List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>Func&lt; T &gt;</type>
          <declname>createT</declname>
        </param>
        <param>
          <type>Action&lt; T &gt;</type>
          <declname>deleteT</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="573" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="573" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a450159e8af585da1a42b0c4838df2efa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Add&lt; T &gt;</definition>
        <argsstring>(this List&lt; T &gt; list, T t0, T t1)</argsstring>
        <name>Add&lt; T &gt;</name>
        <param>
          <type>this List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
<para>Adds t0, then t1 to this list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="591" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="591" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1afa1373a114dbda9cf267320eeeda40de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Add&lt; T &gt;</definition>
        <argsstring>(this List&lt; T &gt; list, T t0, T t1, T t2)</argsstring>
        <name>Add&lt; T &gt;</name>
        <param>
          <type>this List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>Adds t0, t1, then t2 to this list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="599" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="599" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac2aef9e8f846b68b71c3ab0431134567" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.Add&lt; T &gt;</definition>
        <argsstring>(this List&lt; T &gt; list, T t0, T t1, T t2, T t3)</argsstring>
        <name>Add&lt; T &gt;</name>
        <param>
          <type>this List&lt; T &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>T</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
<para>Adds t0, t1, t2, then t3 to this list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="608" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="608" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a7ed0bce1e1241cf3e0553d38c41cefe7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Leap.Unity.Utils.FindObjectInHierarchy&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>FindObjectInHierarchy&lt; T &gt;</name>
        <briefdescription>
<para>Usage is the same as FindObjectOfType, but this method will also return objects that are inactive. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this method to search for singleton-pattern objects even if they are disabled, but be warned that it&apos;s not cheap to call! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="630" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="630" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a5a005576f855daa26450647ee07145fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_utils_1_1_children_enumerator" kindref="compound">ChildrenEnumerator</ref></type>
        <definition>static ChildrenEnumerator Leap.Unity.Utils.GetChildren</definition>
        <argsstring>(this Transform t)</argsstring>
        <name>GetChildren</name>
        <param>
          <type>this Transform</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Returns the children of this Transform in sibling index order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="653" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="653" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a0d76f0a49449cbadbc8d3fce924ee267" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.ResetLocalTransform</definition>
        <argsstring>(this Transform t)</argsstring>
        <name>ResetLocalTransform</name>
        <param>
          <type>this Transform</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Sets the localPosition, localRotation, and localScale to their default values: Vector3.zero, Quaternion.identity, and Vector3.one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="689" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="689" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a83b60b50e910a3ed41c41409033d620a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.ResetLocalPose</definition>
        <argsstring>(this Transform t)</argsstring>
        <name>ResetLocalPose</name>
        <param>
          <type>this Transform</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Sets the localPosition and localRotation of this Transform to Vector3.zero and Quaternion.identity. Doesn&apos;t affect localScale. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="699" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="699" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a73248ce148978ec479a85f07ac237ebe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.FindOwnedChildComponents&lt; ComponentType, OwnerType &gt;</definition>
        <argsstring>(OwnerType rootObj, List&lt; ComponentType &gt; ownedComponents, bool includeInactiveObjects=false)</argsstring>
        <name>FindOwnedChildComponents&lt; ComponentType, OwnerType &gt;</name>
        <param>
          <type>OwnerType</type>
          <declname>rootObj</declname>
        </param>
        <param>
          <type>List&lt; ComponentType &gt;</type>
          <declname>ownedComponents</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeInactiveObjects</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Recursively searches the hierarchy of the argument Transform to find all of the Components of type ComponentType (the first type argument) that should be &quot;owned&quot; by the OwnerType component type (the second type argument). </para>
        </briefdescription>
        <detaileddescription>
<para>If a child GameObject itself has an OwnerType component, that child is ignored, and its children are ignored <ndash/> the assumption being that such a child owns itself and any ComponentType components beneath it.</para>
<para>For example, a call to FindOwnedChildComponents with ComponentType Collider and OwnerType Rigidbody would return all of the Colliders that are attached to the rootObj Rigidbody, but none of the colliders that are attached to a rootObj&apos;s child&apos;s own Rigidbody.</para>
<para>Optionally, ComponentType components of inactive GameObjects can be included in the returned list; by default, these components are skipped.</para>
<para>This is not a cheap method to call, but it does not allocate garbage, so it is safe for use at runtime. </para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ComponentType</parametername>
</parameternamelist>
<parameterdescription>
<para>The component type to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OwnerType</parametername>
</parameternamelist>
<parameterdescription>
<para>The component type that assumes ownership of any ComponentType in its own Transform or its Transform&apos;s children/grandchildren. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="737" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="738" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a083b928ea7cda29dcd6bd3a3ef19d579" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.LookAwayFrom</definition>
        <argsstring>(this Transform thisTransform, Transform transform)</argsstring>
        <name>LookAwayFrom</name>
        <param>
          <type>this Transform</type>
          <declname>thisTransform</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Similar to <ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>&apos;s Transform.LookAt(), but resolves the forward vector of this Transform to point away from the argument Transform. </para>
        </briefdescription>
        <detaileddescription>
<para>Useful for billboarding Quads and UI elements whose forward vectors should match rather than oppose the Main Camera&apos;s forward vector.</para>
<para>Optionally, you may also pass an upwards vector, which will be provided to the underlying Quaternion.LookRotation. Vector3.up will be used by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="794" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="794" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a584f3a92f293668c1a3114bd8787b183" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.LookAwayFrom</definition>
        <argsstring>(this Transform thisTransform, Transform transform, Vector3 upwards)</argsstring>
        <name>LookAwayFrom</name>
        <param>
          <type>this Transform</type>
          <declname>thisTransform</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>upwards</declname>
        </param>
        <briefdescription>
<para>Similar to <ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>&apos;s Transform.LookAt(), but resolves the forward vector of this Transform to point away from the argument Transform. </para>
        </briefdescription>
        <detaileddescription>
<para>Allows specifying an upwards parameter; this is passed as the upwards vector to the Quaternion.LookRotation. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thisTransform</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="806" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="806" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a7824c071db5b47a9aafd1711f61e15a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.ToVector3</definition>
        <argsstring>(this Vector4 v4)</argsstring>
        <name>ToVector3</name>
        <param>
          <type>this Vector4</type>
          <declname>v4</declname>
        </param>
        <briefdescription>
<para>Returns a Vector3 containing the X, Y, and Z components of this Vector4. Note that an implicit conversion exists from Vector4 to Vector3 already, so this extension method is only useful if you specifically want an explicit conversion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="819" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="819" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a903d9d0f9fc008b22603165ad848de5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.InLocalSpace</definition>
        <argsstring>(this Vector3 v, Transform t)</argsstring>
        <name>InLocalSpace</name>
        <param>
          <type>this Vector3</type>
          <declname>v</declname>
        </param>
        <param>
          <type>Transform</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Returns this vector converted from world space to the local space of the argument Transform. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="827" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="827" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a265244773736cb395d93687ab32a2edd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.ToAngleAxisVector</definition>
        <argsstring>(this Quaternion q)</argsstring>
        <name>ToAngleAxisVector</name>
        <param>
          <type>this Quaternion</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Converts the quaternion into an axis and an angle and returns the vector axis * angle. Angle magnitude is measured in degrees, not radians; this requires conversion to radians if being used to set the angular velocity of a PhysX Rigidbody. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="843" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="843" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a2b471570a64fe48ac70d85787228f5b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.QuaternionFromAngleAxisVector</definition>
        <argsstring>(Vector3 angleAxisVector)</argsstring>
        <name>QuaternionFromAngleAxisVector</name>
        <param>
          <type>Vector3</type>
          <declname>angleAxisVector</declname>
        </param>
        <briefdescription>
<para>Returns a Quaternion described by the provided angle axis vector. Expects the magnitude (angle) to be in degrees, not radians. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="854" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="854" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a14744b4d7343cffec9a1a8523382d66b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.ToNormalized</definition>
        <argsstring>(this Quaternion quaternion)</argsstring>
        <name>ToNormalized</name>
        <param>
          <type>this Quaternion</type>
          <declname>quaternion</declname>
        </param>
        <briefdescription>
<para>Returns a normalized Quaternion from the input quaternion. If the input quaternion is zero-length (AKA the default Quaternion), the identity Quaternion is returned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="864" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="864" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aadf919f471b2d6de4d31358634a790c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.FaceTargetWithoutTwist</definition>
        <argsstring>(Vector3 fromPosition, Vector3 targetPosition, bool flip180=false)</argsstring>
        <name>FaceTargetWithoutTwist</name>
        <param>
          <type>Vector3</type>
          <declname>fromPosition</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>targetPosition</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flip180</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the rotation that makes a transform at fromPosition point its forward vector at targetPosition and keep its rightward vector parallel with the horizon defined by a normal of Vector3.up. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, this will point an interface panel at a user camera while maintaining the alignment of text and other elements with the horizon line. </para>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="884" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="884" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a01869d28d1a58488dcf54b1a7b351452" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.FaceTargetWithoutTwist</definition>
        <argsstring>(Vector3 fromPosition, Vector3 targetPosition, Vector3 upwardDirection, bool flip180=false)</argsstring>
        <name>FaceTargetWithoutTwist</name>
        <param>
          <type>Vector3</type>
          <declname>fromPosition</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>targetPosition</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>upwardDirection</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flip180</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the rotation that makes a transform at fromPosition point its forward vector at targetPosition and keep its rightward vector parallel with the horizon defined by the upwardDirection normal. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, this will point an interface panel at a user camera while maintaining the alignment of text and other elements with the horizon line. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="898" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="898" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aba6d17dcc9701e9976e66dff2e5b700e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.Flipped</definition>
        <argsstring>(this Quaternion q)</argsstring>
        <name>Flipped</name>
        <param>
          <type>this Quaternion</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="907" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="907" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a43927462a32d602d27c973fddfea1e96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.CompressQuatToBytes</definition>
        <argsstring>(Quaternion quat, byte[] buffer, ref int offset)</argsstring>
        <name>CompressQuatToBytes</name>
        <param>
          <type>Quaternion</type>
          <declname>quat</declname>
        </param>
        <param>
          <type>byte []</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Fills the provided bytes buffer starting at the offset with a compressed form of the argument quaternion. The offset is also shifted by 4 bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>Use Utils.DecompressBytesToQuat to decode this representation. This encoding ONLY works with normalized Quaternions, taking advantage of the fact that their components sum to 1 to only encode three of Quaternion components. As a result, this method encodes a Quaternion as a single unsigned integer (4 bytes).</para>
<para>Sources: <ulink url="https://bitbucket.org/Unity-Technologies/networking/pull-requests/9/quaternion-compression-for-sending/diff">https://bitbucket.org/Unity-Technologies/networking/pull-requests/9/quaternion-compression-for-sending/diff</ulink> and <ulink url="http://stackoverflow.com/questions/3393717/c-sharp-converting-uint-to-byte">http://stackoverflow.com/questions/3393717/c-sharp-converting-uint-to-byte</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="927" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="927" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac061a49f908c1c0d729949e0828c2e1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.DecompressBytesToQuat</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>DecompressBytesToQuat</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Reads 4 bytes from the argument bytes array (starting at the provided offset) and returns a Quaternion as encoded by the Utils.CompressedQuatToBytes function. Also increments the provided offset by 4. </para>
        </briefdescription>
        <detaileddescription>
<para>See the Utils.CompressedQuatToBytes documentation for more details on the byte representation this method expects.</para>
<para>Sources: <ulink url="https://bitbucket.org/Unity-Technologies/networking/pull-requests/9/quaternion-compression-for-sending/diff">https://bitbucket.org/Unity-Technologies/networking/pull-requests/9/quaternion-compression-for-sending/diff</ulink> and <ulink url="http://stackoverflow.com/questions/3393717/c-sharp-converting-uint-to-byte">http://stackoverflow.com/questions/3393717/c-sharp-converting-uint-to-byte</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1002" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1002" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac479198843b1871fac79ae0d43d7a3d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4x4</type>
        <definition>static Matrix4x4 Leap.Unity.Utils.CompMul</definition>
        <argsstring>(Matrix4x4 m, float f)</argsstring>
        <name>CompMul</name>
        <param>
          <type>Matrix4x4</type>
          <declname>m</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1044" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1044" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1adff5d29dbf40293b97e488ea87bce4ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.IgnoreCollisions</definition>
        <argsstring>(GameObject first, GameObject second, bool ignore=true)</argsstring>
        <name>IgnoreCollisions</name>
        <param>
          <type>GameObject</type>
          <declname>first</declname>
        </param>
        <param>
          <type>GameObject</type>
          <declname>second</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Calls Physics.IgnoreCollision for each Collider in the first GameObject against each Collider in the second GameObject. </para>
        </briefdescription>
        <detaileddescription>
<para>If you have many colliders that need to ignore collisions, consider utilizing Layer collision settings as an optimization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1071" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1071" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a89b66765cc38880b36677b2c5ac90071" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.GetDirection</definition>
        <argsstring>(this CapsuleCollider capsule)</argsstring>
        <name>GetDirection</name>
        <param>
          <type>this CapsuleCollider</type>
          <declname>capsule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1103" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1103" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a4cd0398ea98d41c5fa9d50defa4243db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.GetEffectiveRadius</definition>
        <argsstring>(this CapsuleCollider capsule)</argsstring>
        <name>GetEffectiveRadius</name>
        <param>
          <type>this CapsuleCollider</type>
          <declname>capsule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1111" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1111" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a16d91cf57275809554bea71fd8cbe8ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.GetEffectiveRadiusMultiplier</definition>
        <argsstring>(this CapsuleCollider capsule)</argsstring>
        <name>GetEffectiveRadiusMultiplier</name>
        <param>
          <type>this CapsuleCollider</type>
          <declname>capsule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1115" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1115" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1adf17b7324f4c0d64f9925ad58dc03440" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.GetCapsulePoints</definition>
        <argsstring>(this CapsuleCollider capsule, out Vector3 a, out Vector3 b)</argsstring>
        <name>GetCapsulePoints</name>
        <param>
          <type>this CapsuleCollider</type>
          <declname>capsule</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>out Vector3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1132" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1132" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1af11c654d59ba3bb33630e97ec67fe5f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.SetCapsulePoints</definition>
        <argsstring>(this CapsuleCollider capsule, Vector3 a, Vector3 b)</argsstring>
        <name>SetCapsulePoints</name>
        <param>
          <type>this CapsuleCollider</type>
          <declname>capsule</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Manipulates capsule.transform.position, capsule.transform.rotation, and capsule.height so that the line segment defined by the capsule connects world-space points a and b. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1151" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1151" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aa2fe22763d48d874a70cfac9b24f2575" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.FindColliders&lt; T &gt;</definition>
        <argsstring>(GameObject obj, List&lt; T &gt; colliders, bool includeInactiveObjects=false)</argsstring>
        <name>FindColliders&lt; T &gt;</name>
        <param>
          <type>GameObject</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>List&lt; T &gt;</type>
          <declname>colliders</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeInactiveObjects</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Recursively searches the hierarchy of the argument GameObject to find all of the Colliders that are attached to the object&apos;s Rigidbody (or that <emphasis>would</emphasis> be attached to its Rigidbody if it doesn&apos;t have one) and adds them to the provided colliders list. Warning: The provided &quot;colliders&quot; List will be cleared before use. </para>
        </briefdescription>
        <detaileddescription>
<para>Colliders that are the children of other Rigidbody elements beneath the argument object are ignored. Optionally, colliders of inactive GameObjects can be included in the returned list; by default, these colliders are skipped. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1180" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1180" bodyend="1220"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac12488ad78a4b43ae0abde518a7b77aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Color</type>
        <definition>static Color Leap.Unity.Utils.WithAlpha</definition>
        <argsstring>(this Color color, float alpha)</argsstring>
        <name>WithAlpha</name>
        <param>
          <type>this Color</type>
          <declname>color</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1226" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1226" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a416cd320bb3d920c53775fc3657353dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Color</type>
        <definition>static Color Leap.Unity.Utils.ParseHtmlColorString</definition>
        <argsstring>(string htmlString)</argsstring>
        <name>ParseHtmlColorString</name>
        <param>
          <type>string</type>
          <declname>htmlString</declname>
        </param>
        <briefdescription>
<para>Just like ColorUtility.TryParseHtmlString but throws a useful error message if it fails. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1234" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1234" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a9cfc9701b19cfb2db0c439b5a38ab2a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Color</type>
        <definition>static Color Leap.Unity.Utils.LerpHSV</definition>
        <argsstring>(this Color color, Color towardsColor, float t)</argsstring>
        <name>LerpHSV</name>
        <param>
          <type>this Color</type>
          <declname>color</declname>
        </param>
        <param>
          <type>Color</type>
          <declname>towardsColor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Lerps this color towards the argument color in HSV space and returns the lerped color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1252" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1252" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a52ff48874ec3558de0c971df45781e28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.LerpHue</definition>
        <argsstring>(float h0, float h1, float t)</argsstring>
        <name>LerpHue</name>
        <param>
          <type>float</type>
          <declname>h0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Cyclically lerps hue arguments by t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1272" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1272" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aca1b043d98b8438de0f12027612ab06e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.DrawCircle</definition>
        <argsstring>(Vector3 center, Vector3 normal, float radius, Color color, int quality=32, float duration=0, bool depthTest=true)</argsstring>
        <name>DrawCircle</name>
        <param>
          <type>Vector3</type>
          <declname>center</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>normal</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>Color</type>
          <declname>color</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
          <defval>32</defval>
        </param>
        <param>
          <type>float</type>
          <declname>duration</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>depthTest</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1288" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1288" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae2efdec81d72f53c8c08a45d500c120f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.DrawArc</definition>
        <argsstring>(float arc, Vector3 center, Vector3 forward, Vector3 normal, float radius, Color color, int quality=32)</argsstring>
        <name>DrawArc</name>
        <param>
          <type>float</type>
          <declname>arc</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>center</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>normal</declname>
        </param>
        <param>
          <type>float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>Color</type>
          <declname>color</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
          <defval>32</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1301" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1301" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a34ab0d111c61b327cac750e5c932651a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.DrawCone</definition>
        <argsstring>(Vector3 origin, Vector3 direction, float angle, float height, Color color, int quality=4, float duration=0, bool depthTest=true)</argsstring>
        <name>DrawCone</name>
        <param>
          <type>Vector3</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Color</type>
          <declname>color</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
          <defval>4</defval>
        </param>
        <param>
          <type>float</type>
          <declname>duration</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>depthTest</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1325" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1325" bodyend="1338"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1acf8dce8063757411a3c0e92f87aede21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Leap.Unity.Utils.IsCompressible</definition>
        <argsstring>(TextureFormat format)</argsstring>
        <name>IsCompressible</name>
        <param>
          <type>TextureFormat</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Returns whether or not the given format is a valid input to EditorUtility.CompressTexture(); </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1357" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1357" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ad0988163da778e6d8aa794808338fa57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.Area</definition>
        <argsstring>(this Rect rect)</argsstring>
        <name>Area</name>
        <param>
          <type>this Rect</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Returns the area of the Rect, width * height. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1372" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1372" bodyend="1374"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1adb32c043c4cf9652c0497f69414d4c1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.Extrude</definition>
        <argsstring>(this Rect r, float margin)</argsstring>
        <name>Extrude</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Returns a new Rect with the argument as an outward margin on each border of this Rect; the result is a larger Rect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1380" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1380" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a61e81fea0b470707f7e0d90ac14b315f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadInner</definition>
        <argsstring>(this Rect r, float padding)</argsstring>
        <name>PadInner</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
<para>Returns a new Rect with the argument padding as a margin relative to each border of the provided Rect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1389" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1389" bodyend="1391"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae2b935e496fe3b99f017081625b96854" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadInner</definition>
        <argsstring>(this Rect r, float padTop, float padBottom, float padLeft, float padRight)</argsstring>
        <name>PadInner</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padTop</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padBottom</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padLeft</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padRight</declname>
        </param>
        <briefdescription>
<para>Returns a new Rect with the argument padding as a margin inward from each corresponding border of the provided Rect. The returned Rect will never collapse to have a width or height less than zero, and its resulting size will never be larger than the input rect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1399" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1399" bodyend="1414"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1afa9e2535c8c8abe898e43d5250a49412" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadTop</definition>
        <argsstring>(this Rect r, float padding)</argsstring>
        <name>PadTop</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1418" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1418" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a80ecceb053c45f794d9a63e11ef7317b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadBottom</definition>
        <argsstring>(this Rect r, float padding)</argsstring>
        <name>PadBottom</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1422" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1422" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a028cbe5b6862edfa8c8e168206d67fb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadLeft</definition>
        <argsstring>(this Rect r, float padding)</argsstring>
        <name>PadLeft</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1426" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1426" bodyend="1428"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a970bd7c457e63aa8f85d630880b47a34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadRight</definition>
        <argsstring>(this Rect r, float padding)</argsstring>
        <name>PadRight</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1430" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1430" bodyend="1432"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aa3f8d2b98f008591ea443597a6b391c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadTop</definition>
        <argsstring>(this Rect r, float padding, out Rect marginRect)</argsstring>
        <name>PadTop</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>marginRect</declname>
        </param>
        <briefdescription>
<para>Returns the Rect if padded on the top by the padding amount, and optionally outputs the remaining margin into marginRect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1442" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1442" bodyend="1445"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac7e4506abab6d6091d51737be46786b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadBottom</definition>
        <argsstring>(this Rect r, float padding, out Rect marginRect)</argsstring>
        <name>PadBottom</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>marginRect</declname>
        </param>
        <briefdescription>
<para>Returns the Rect if padded on the bottom by the padding amount, and optionally outputs the remaining margin into marginRect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1451" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1451" bodyend="1454"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a52a302a759f7a5fa2525e0a335f39ec3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadLeft</definition>
        <argsstring>(this Rect r, float padding, out Rect marginRect)</argsstring>
        <name>PadLeft</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>marginRect</declname>
        </param>
        <briefdescription>
<para>Returns the Rect if padded on the left by the padding amount, and optionally outputs the remaining margin into marginRect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1460" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1460" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1acb11c48acf7923d03c6e9fce9eae32fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadRight</definition>
        <argsstring>(this Rect r, float padding, out Rect marginRect)</argsstring>
        <name>PadRight</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>marginRect</declname>
        </param>
        <briefdescription>
<para>Returns the Rect if padded on the right by the padding amount, and optionally outputs the remaining margin into marginRect. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1469" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1469" bodyend="1472"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a6b47aaa333e1b68806792d5c9cf7b40f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadTopBottomPercent</definition>
        <argsstring>(this Rect r, float padPercent)</argsstring>
        <name>PadTopBottomPercent</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1478" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1478" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a469d989925d23533d6df7fe3c348e3b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadLeftRightPercent</definition>
        <argsstring>(this Rect r, float padPercent)</argsstring>
        <name>PadLeftRightPercent</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1483" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1483" bodyend="1486"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a1cd21977170483f420f4c1f8749b6b40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadTopPercent</definition>
        <argsstring>(this Rect r, float padPercent)</argsstring>
        <name>PadTopPercent</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1492" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1492" bodyend="1495"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aa2fc58267a0e7a14122b7076f8e24c0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadBottomPercent</definition>
        <argsstring>(this Rect r, float padPercent)</argsstring>
        <name>PadBottomPercent</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1497" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1497" bodyend="1500"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aebb05eac0bc2394d94516328b5046f23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadLeftPercent</definition>
        <argsstring>(this Rect r, float padPercent)</argsstring>
        <name>PadLeftPercent</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1502" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1502" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae8925e88d919a24c2cf33276dbc9296c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.PadRightPercent</definition>
        <argsstring>(this Rect r, float padPercent)</argsstring>
        <name>PadRightPercent</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padPercent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1506" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1506" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a935fa5eb7ec2ebf3e97cfdd7d1598d4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeTop</definition>
        <argsstring>(this Rect r, float heightFromTop)</argsstring>
        <name>TakeTop</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>heightFromTop</declname>
        </param>
        <briefdescription>
<para>Return a margin of the given height on the top of the input Rect. You can&apos;t Take more than there is Rect to take from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1518" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1518" bodyend="1521"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae73d90a5980a5e50c11aaf64eebc1b9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeBottom</definition>
        <argsstring>(this Rect r, float heightFromBottom)</argsstring>
        <name>TakeBottom</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>heightFromBottom</declname>
        </param>
        <briefdescription>
<para>Return a margin of the given height on the bottom of the input Rect. You can&apos;t Take more than there is Rect to take from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1527" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1527" bodyend="1530"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a38ed85c21c3f46d658051ee982d940d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeLeft</definition>
        <argsstring>(this Rect r, float widthFromLeft)</argsstring>
        <name>TakeLeft</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>widthFromLeft</declname>
        </param>
        <briefdescription>
<para>Return a margin of the given width on the left side of the input Rect. You can&apos;t Take more than there is Rect to take from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1536" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1536" bodyend="1539"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a450e2465dcab5b53ccf46b6ad21a6e99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeRight</definition>
        <argsstring>(this Rect r, float widthFromRight)</argsstring>
        <name>TakeRight</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>widthFromRight</declname>
        </param>
        <briefdescription>
<para>Return a margin of the given width on the right side of the input Rect. You can&apos;t Take more than there is Rect to take from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1545" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1545" bodyend="1548"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac74b3d2ac536803281b264aaa5da5992" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeTop</definition>
        <argsstring>(this Rect r, float padding, out Rect theRest)</argsstring>
        <name>TakeTop</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>theRest</declname>
        </param>
        <briefdescription>
<para>Return a margin of the given width on the top of the input Rect, and optionally outputs the rest of the Rect into theRest. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1558" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1558" bodyend="1561"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a86367353a6cdb61868b92a5bcc8d67b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeBottom</definition>
        <argsstring>(this Rect r, float padding, out Rect theRest)</argsstring>
        <name>TakeBottom</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>theRest</declname>
        </param>
        <briefdescription>
<para>Return a margin of the given width on the bottom of the input Rect, and optionally outputs the rest of the Rect into theRest. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1567" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1567" bodyend="1570"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ab85f5e4d9b5af978abcfbd7a5aac50b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeLeft</definition>
        <argsstring>(this Rect r, float padding, out Rect theRest)</argsstring>
        <name>TakeLeft</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>theRest</declname>
        </param>
        <briefdescription>
<para>Return a margin of the given width on the left side of the input Rect, and optionally outputs the rest of the Rect into theRest. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1576" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1576" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1af280f6077bce047a6703de826521e5d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeRight</definition>
        <argsstring>(this Rect r, float padding, out Rect theRest)</argsstring>
        <name>TakeRight</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>theRest</declname>
        </param>
        <briefdescription>
<para>Return a margin of the given width on the right side of the input Rect, and optionally outputs the rest of the Rect into theRest. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1585" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1585" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a915cbf1273b269ffbe64a9689b7a8897" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Rect</type>
        <definition>static Rect Leap.Unity.Utils.TakeHorizontal</definition>
        <argsstring>(this Rect r, float lineHeight, out Rect theRest, bool fromTop=true)</argsstring>
        <name>TakeHorizontal</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lineHeight</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>theRest</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fromTop</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a horizontal strip of lineHeight of this rect (from the top by default) and provides what&apos;s left of this rect after the line is removed as theRest. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1596" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1596" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a0be13e1ce74a016e1039d0eb0b43487c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Leap.Unity.Utils.SplitHorizontallyWithLeft</definition>
        <argsstring>(this Rect rect, out Rect left, out Rect right, float leftWidth)</argsstring>
        <name>SplitHorizontallyWithLeft</name>
        <param>
          <type>this Rect</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>left</declname>
        </param>
        <param>
          <type>out Rect</type>
          <declname>right</declname>
        </param>
        <param>
          <type>float</type>
          <declname>leftWidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1603" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1603" bodyend="1609"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a14478b5fa4d165120e5b7f8e3496a529" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_utils_1_1_horizontal_line_rect_enumerator" kindref="compound">HorizontalLineRectEnumerator</ref></type>
        <definition>static HorizontalLineRectEnumerator Leap.Unity.Utils.TakeAllLines</definition>
        <argsstring>(this Rect r, int numLines)</argsstring>
        <name>TakeAllLines</name>
        <param>
          <type>this Rect</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numLines</declname>
        </param>
        <briefdescription>
<para>Slices numLines horizontal line Rects from this Rect and returns an enumerator that will return each line Rect. </para>
        </briefdescription>
        <detaileddescription>
<para>The height of each line is the height of the Rect divided by the number of lines requested. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1620" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1620" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a525933f0ec84746a0890cae272f5843a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
        <definition>static Pose Leap.Unity.Utils.From</definition>
        <argsstring>(this Vector3 position, Pose fromPose)</argsstring>
        <name>From</name>
        <param>
          <type>this Vector3</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>fromPose</declname>
        </param>
        <briefdescription>
<para>Returns a pose such that fromPose.Then(thisPose) will have this position and the fromPose&apos;s rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1680" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1680" bodyend="1682"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a3b133022a2b937e8ab0fbfc05766cebf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
        <definition>static Pose Leap.Unity.Utils.GetPose</definition>
        <argsstring>(this Rigidbody rigidbody)</argsstring>
        <name>GetPose</name>
        <param>
          <type>this Rigidbody</type>
          <declname>rigidbody</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1684" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1684" bodyend="1686"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aa311b894bb76349a3f9b4b042a2b4704" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
        <definition>static Pose Leap.Unity.Utils.MirroredX</definition>
        <argsstring>(this Pose pose)</argsstring>
        <name>MirroredX</name>
        <param>
          <type>this <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>pose</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> that has its position and rotation mirrored on the X axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1691" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1691" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a730100494a73ce44decbe14a87d5e298" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
        <definition>static Pose Leap.Unity.Utils.Negated</definition>
        <argsstring>(this Pose pose)</argsstring>
        <name>Negated</name>
        <param>
          <type>this <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>pose</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> that has its position and rotation flipped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1701" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1701" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac12ee9d91f70ef1cdf309d4f2288506d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.Map</definition>
        <argsstring>(this float value, float valueMin, float valueMax, float resultMin, float resultMax)</argsstring>
        <name>Map</name>
        <param>
          <type>this float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Maps the value between valueMin and valueMax to its linearly proportional equivalent between resultMin and resultMax. The input value is clamped between valueMin and valueMax; if this is not desired, see MapUnclamped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1718" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1718" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a971ddbd4986666376a74ae6594d3834a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.MapUnclamped</definition>
        <argsstring>(this float value, float valueMin, float valueMax, float resultMin, float resultMax)</argsstring>
        <name>MapUnclamped</name>
        <param>
          <type>this float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Maps the value between valueMin and valueMax to its linearly proportional equivalent between resultMin and resultMax, without clamping the result value between resultMin and resultMax. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1727" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1727" bodyend="1730"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a6d4ecb1360fa625d4811b9d0b22fa35a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>static Vector2 Leap.Unity.Utils.Map</definition>
        <argsstring>(this Vector2 value, float valueMin, float valueMax, float resultMin, float resultMax)</argsstring>
        <name>Map</name>
        <param>
          <type>this Vector2</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Maps each Vector2 component between valueMin and valueMax to its linearly proportional equivalent between resultMin and resultMax. The input values are clamped between valueMin and valueMax; if this is not desired, see MapUnclamped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1736" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1736" bodyend="1739"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ad1efaf746dbba8806207a5a20865dae9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>static Vector2 Leap.Unity.Utils.MapUnclamped</definition>
        <argsstring>(this Vector2 value, float valueMin, float valueMax, float resultMin, float resultMax)</argsstring>
        <name>MapUnclamped</name>
        <param>
          <type>this Vector2</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Maps each Vector2 component between valueMin and valueMax to its linearly proportional equivalent between resultMin and resultMax, without clamping the result value between resultMin and resultMax. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1745" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1745" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a348e0e3b11946211a4ef19557ce347f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.Map</definition>
        <argsstring>(this Vector3 value, float valueMin, float valueMax, float resultMin, float resultMax)</argsstring>
        <name>Map</name>
        <param>
          <type>this Vector3</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Maps each Vector3 component between valueMin and valueMax to its linearly proportional equivalent between resultMin and resultMax. The input values are clamped between valueMin and valueMax; if this is not desired, see MapUnclamped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1754" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1754" bodyend="1758"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aaf360026ed3f58bfec1d199c1007abd3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.MapUnclamped</definition>
        <argsstring>(this Vector3 value, float valueMin, float valueMax, float resultMin, float resultMax)</argsstring>
        <name>MapUnclamped</name>
        <param>
          <type>this Vector3</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Maps each Vector3 component between valueMin and valueMax to its linearly proportional equivalent between resultMin and resultMax, without clamping the result value between resultMin and resultMax. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1764" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1764" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a0f7da1a28f67710f7516dca97e55b4c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector4</type>
        <definition>static Vector4 Leap.Unity.Utils.Map</definition>
        <argsstring>(this Vector4 value, float valueMin, float valueMax, float resultMin, float resultMax)</argsstring>
        <name>Map</name>
        <param>
          <type>this Vector4</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Maps each Vector4 component between valueMin and valueMax to its linearly proportional equivalent between resultMin and resultMax. The input values are clamped between valueMin and valueMax; if this is not desired, see MapUnclamped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1774" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1774" bodyend="1779"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aba3ee605bb90be2288fa157fe7d24e37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector4</type>
        <definition>static Vector4 Leap.Unity.Utils.MapUnclamped</definition>
        <argsstring>(this Vector4 value, float valueMin, float valueMax, float resultMin, float resultMax)</argsstring>
        <name>MapUnclamped</name>
        <param>
          <type>this Vector4</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Maps each Vector4 component between valueMin and valueMax to its linearly proportional equivalent between resultMin and resultMax, without clamping the result value between resultMin and resultMax. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1785" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1785" bodyend="1790"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ac127f7c40aa595f5f2b706d37c906e13" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>static Vector2 Leap.Unity.Utils.Map</definition>
        <argsstring>(float input, float valueMin, float valueMax, Vector2 resultMin, Vector2 resultMax)</argsstring>
        <name>Map</name>
        <param>
          <type>float</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Returns a vector between resultMin and resultMax based on the input value&apos;s position between valueMin and valueMax. The input value is clamped between valueMin and valueMax. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1797" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1797" bodyend="1799"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a51d17bdecc9c5365a8ef2ff3ba732002" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.Map</definition>
        <argsstring>(float input, float valueMin, float valueMax, Vector3 resultMin, Vector3 resultMax)</argsstring>
        <name>Map</name>
        <param>
          <type>float</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Returns a vector between resultMin and resultMax based on the input value&apos;s position between valueMin and valueMax. The input value is clamped between valueMin and valueMax. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1806" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1806" bodyend="1808"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a2566a7df38bfe895ff7c9be720d13509" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector4</type>
        <definition>static Vector4 Leap.Unity.Utils.Map</definition>
        <argsstring>(float input, float valueMin, float valueMax, Vector4 resultMin, Vector4 resultMax)</argsstring>
        <name>Map</name>
        <param>
          <type>float</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>valueMax</declname>
        </param>
        <param>
          <type>Vector4</type>
          <declname>resultMin</declname>
        </param>
        <param>
          <type>Vector4</type>
          <declname>resultMax</declname>
        </param>
        <briefdescription>
<para>Returns a vector between resultMin and resultMax based on the input value&apos;s position between valueMin and valueMax. The input value is clamped between valueMin and valueMax. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1815" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1815" bodyend="1817"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1affe9c6ef22c7ed8673a94c80ff258bd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>static Vector2 Leap.Unity.Utils.CompMul</definition>
        <argsstring>(this Vector2 A, Vector2 B)</argsstring>
        <name>CompMul</name>
        <param>
          <type>this Vector2</type>
          <declname>A</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>Returns a new Vector2 via component-wise multiplication. This operation is equivalent to Vector3.Scale(A, B). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1823" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1823" bodyend="1825"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a4476caa3744812ae126c33cb7f96b053" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.CompMul</definition>
        <argsstring>(this Vector3 A, Vector3 B)</argsstring>
        <name>CompMul</name>
        <param>
          <type>this Vector3</type>
          <declname>A</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>Returns a new Vector3 via component-wise multiplication. This operation is equivalent to Vector3.Scale(A, B). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1831" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1831" bodyend="1833"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a302c3d73a881fe734945011ea74b763f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector4</type>
        <definition>static Vector4 Leap.Unity.Utils.CompMul</definition>
        <argsstring>(this Vector4 A, Vector4 B)</argsstring>
        <name>CompMul</name>
        <param>
          <type>this Vector4</type>
          <declname>A</declname>
        </param>
        <param>
          <type>Vector4</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>Returns a new Vector4 via component-wise multiplication. This operation is equivalent to Vector3.Scale(A, B). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1839" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1839" bodyend="1841"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a17011b2d8f17a83899fcc9893386e1d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>static Vector2 Leap.Unity.Utils.CompDiv</definition>
        <argsstring>(this Vector2 A, Vector2 B)</argsstring>
        <name>CompDiv</name>
        <param>
          <type>this Vector2</type>
          <declname>A</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>Returns a new Vector3 via component-wise division. This operation is the inverse of A.CompMul(B). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1847" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1847" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1affb1063ce2675aad55023dd301b85824" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.CompDiv</definition>
        <argsstring>(this Vector3 A, Vector3 B)</argsstring>
        <name>CompDiv</name>
        <param>
          <type>this Vector3</type>
          <declname>A</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>Returns a new Vector3 via component-wise division. This operation is the inverse of A.CompMul(B). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1855" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1855" bodyend="1857"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1aedd9bc4ea0827375c7f4b84d598f83ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector4</type>
        <definition>static Vector4 Leap.Unity.Utils.CompDiv</definition>
        <argsstring>(this Vector4 A, Vector4 B)</argsstring>
        <name>CompDiv</name>
        <param>
          <type>this Vector4</type>
          <declname>A</declname>
        </param>
        <param>
          <type>Vector4</type>
          <declname>B</declname>
        </param>
        <briefdescription>
<para>Returns a new Vector4 via component-wise division. This operation is the inverse of A.CompMul(B). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1863" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1863" bodyend="1865"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1abbce50546725e44d2bd6def1250fc9e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompSum</definition>
        <argsstring>(this Vector2 v)</argsstring>
        <name>CompSum</name>
        <param>
          <type>this Vector2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the sum of the components of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1870" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1870" bodyend="1872"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a5fc7844df671ac2e29666d5e5c05a566" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompSum</definition>
        <argsstring>(this Vector3 v)</argsstring>
        <name>CompSum</name>
        <param>
          <type>this Vector3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the sum of the components of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1877" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1877" bodyend="1879"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae7507cc9b7e33a3f6604d03a28afc096" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompSum</definition>
        <argsstring>(this Vector4 v)</argsstring>
        <name>CompSum</name>
        <param>
          <type>this Vector4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the sum of the components of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1884" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1884" bodyend="1886"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a14787e6bab28b336a9d67bf006988412" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompMax</definition>
        <argsstring>(this Vector2 v)</argsstring>
        <name>CompMax</name>
        <param>
          <type>this Vector2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the largest component of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1891" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1891" bodyend="1893"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a0a9ef74f6ac9309cded9db54a1357fa4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompMax</definition>
        <argsstring>(this Vector3 v)</argsstring>
        <name>CompMax</name>
        <param>
          <type>this Vector3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the largest component of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1898" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1898" bodyend="1900"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a89453732e915ea1ec679415946257a0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompMax</definition>
        <argsstring>(this Vector4 v)</argsstring>
        <name>CompMax</name>
        <param>
          <type>this Vector4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the largest component of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1905" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1905" bodyend="1907"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1acfd274e664f39c6aca8040e873ce37b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompMin</definition>
        <argsstring>(this Vector2 v)</argsstring>
        <name>CompMin</name>
        <param>
          <type>this Vector2</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the smallest component of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1912" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1912" bodyend="1914"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a1467f62da2b305c11715cd026226990c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompMin</definition>
        <argsstring>(this Vector3 v)</argsstring>
        <name>CompMin</name>
        <param>
          <type>this Vector3</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the smallest component of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1919" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1919" bodyend="1921"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a6bcb33589d3077431bb61e37c74c883b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.CompMin</definition>
        <argsstring>(this Vector4 v)</argsstring>
        <name>CompMin</name>
        <param>
          <type>this Vector4</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the smallest component of the input vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1926" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1926" bodyend="1928"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a28a0524bc543866825eeaf663768cc16" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.From</definition>
        <argsstring>(this float thisFloat, float otherFloat)</argsstring>
        <name>From</name>
        <param>
          <type>this float</type>
          <declname>thisFloat</declname>
        </param>
        <param>
          <type>float</type>
          <declname>otherFloat</declname>
        </param>
        <briefdescription>
<para>Additive From syntax for floats. Evaluated as this float plus the additive inverse of the other float, usually expressed as thisFloat - otherFloat. </para>
        </briefdescription>
        <detaileddescription>
<para>For less trivial uses of From/Then syntax, refer to their implementations for Quaternions and Matrix4x4s. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1943" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1943" bodyend="1945"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a3d2e30da9e8f2164ea044a3e62d919f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.To</definition>
        <argsstring>(this float thisFloat, float otherFloat)</argsstring>
        <name>To</name>
        <param>
          <type>this float</type>
          <declname>thisFloat</declname>
        </param>
        <param>
          <type>float</type>
          <declname>otherFloat</declname>
        </param>
        <briefdescription>
<para>Additive To syntax for floats. Evaluated as this float plus the additive inverse of the other float, usually expressed as otherFloat - thisFloat. </para>
        </briefdescription>
        <detaileddescription>
<para>For less trivial uses of From/Then syntax, refer to their implementations for Quaternions and Matrix4x4s. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1954" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1954" bodyend="1956"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a79486b86240e143af5927a93f0b03e66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Leap.Unity.Utils.Then</definition>
        <argsstring>(this float thisFloat, float otherFloat)</argsstring>
        <name>Then</name>
        <param>
          <type>this float</type>
          <declname>thisFloat</declname>
        </param>
        <param>
          <type>float</type>
          <declname>otherFloat</declname>
        </param>
        <briefdescription>
<para>Additive Then syntax for floats. Literally, thisFloat + otherFloat. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1961" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1961" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1af9e9f7a30ef21417f073e5fdef0564d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.From</definition>
        <argsstring>(this Vector3 thisVector, Vector3 otherVector)</argsstring>
        <name>From</name>
        <param>
          <type>this Vector3</type>
          <declname>thisVector</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>otherVector</declname>
        </param>
        <briefdescription>
<para>Additive From syntax for Vector3. Literally thisVector - otherVector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1972" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1972" bodyend="1974"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ab09f03527b2e8f90fb3b5553b4011bcd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.To</definition>
        <argsstring>(this Vector3 thisVector, Vector3 otherVector)</argsstring>
        <name>To</name>
        <param>
          <type>this Vector3</type>
          <declname>thisVector</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>otherVector</declname>
        </param>
        <briefdescription>
<para>Additive To syntax for Vector3. Literally otherVector - thisVector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1979" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1979" bodyend="1981"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1acf5ec7ea1a500345ab24e439a72eaaca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Utils.Then</definition>
        <argsstring>(this Vector3 thisVector, Vector3 otherVector)</argsstring>
        <name>Then</name>
        <param>
          <type>this Vector3</type>
          <declname>thisVector</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>otherVector</declname>
        </param>
        <briefdescription>
<para>Additive Then syntax for Vector3. Literally thisVector + otherVector. For example: A.Then(B.From(A)) == B. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="1987" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="1987" bodyend="1989"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a4aaacdca2cbd4be3da1d78f459d58578" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.From</definition>
        <argsstring>(this Quaternion thisQuaternion, Quaternion otherQuaternion)</argsstring>
        <name>From</name>
        <param>
          <type>this Quaternion</type>
          <declname>thisQuaternion</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>otherQuaternion</declname>
        </param>
        <briefdescription>
<para>A.From(B) produces the quaternion that rotates from B to A. Combines with Then() to produce readable, predictable results: B.Then(A.From(B)) == A. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2000" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2000" bodyend="2002"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ab56040ddc94a3bfd5fc96fbde048c99e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.To</definition>
        <argsstring>(this Quaternion thisQuaternion, Quaternion otherQuaternion)</argsstring>
        <name>To</name>
        <param>
          <type>this Quaternion</type>
          <declname>thisQuaternion</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>otherQuaternion</declname>
        </param>
        <briefdescription>
<para>A.To(B) produces the quaternion that rotates from A to B. Combines with Then() to produce readable, predictable results: B.Then(B.To(A)) == A. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2009" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2009" bodyend="2011"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a13271bc0a71675acf179f4836d5963df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Quaternion</type>
        <definition>static Quaternion Leap.Unity.Utils.Then</definition>
        <argsstring>(this Quaternion thisQuaternion, Quaternion otherQuaternion)</argsstring>
        <name>Then</name>
        <param>
          <type>this Quaternion</type>
          <declname>thisQuaternion</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>otherQuaternion</declname>
        </param>
        <briefdescription>
<para>Rotates this quaternion by the other quaternion. This is a rightward syntax for Quaternion multiplication, which normally obeys left-multiply ordering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2017" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2017" bodyend="2019"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a8c7af6b31871964e65fdc0c37a02d8aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
        <definition>static Pose Leap.Unity.Utils.From</definition>
        <argsstring>(this Pose thisPose, Pose otherPose)</argsstring>
        <name>From</name>
        <param>
          <type>this <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>thisPose</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>otherPose</declname>
        </param>
        <briefdescription>
<para>From syntax for <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> structs; A.From(B) returns the <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> that transforms to <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> A from <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> B. Also see To() and Then(). </para>
        </briefdescription>
        <detaileddescription>
<para>For example, A.Then(B.From(A)) == B. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2031" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2031" bodyend="2033"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a151e4b7f99c0b7102bb5ae0ea387d02b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
        <definition>static Pose Leap.Unity.Utils.To</definition>
        <argsstring>(this Pose thisPose, Pose otherPose)</argsstring>
        <name>To</name>
        <param>
          <type>this <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>thisPose</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>otherPose</declname>
        </param>
        <briefdescription>
<para>To syntax for <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> structs; A.To(B) returns the <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> that transforms from <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> A to <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref> B. Also see From() and Then(). </para>
        </briefdescription>
        <detaileddescription>
<para>For example, A.Then(A.To(B)) == B. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2041" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2041" bodyend="2043"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1adef7ec4fca8ae68d2728b6222e67c86f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
        <definition>static Pose Leap.Unity.Utils.Then</definition>
        <argsstring>(this Pose thisPose, Pose otherPose)</argsstring>
        <name>Then</name>
        <param>
          <type>this <ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>thisPose</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_unity_1_1_pose" kindref="compound">Pose</ref></type>
          <declname>otherPose</declname>
        </param>
        <briefdescription>
<para>Returns the other pose transformed by this pose. This pose could be understood as the parent pose, and the other pose transformed from local this-pose space to world space. </para>
        </briefdescription>
        <detaileddescription>
<para>This is similar to matrix multiplication: A * B == A.Then(B). However, order of operations is more explicit with this syntax. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2053" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2053" bodyend="2055"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1ae9dc51c18562d9c05758db096cbbce4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4x4</type>
        <definition>static Matrix4x4 Leap.Unity.Utils.From</definition>
        <argsstring>(this Matrix4x4 thisMatrix, Matrix4x4 otherMatrix)</argsstring>
        <name>From</name>
        <param>
          <type>this Matrix4x4</type>
          <declname>thisMatrix</declname>
        </param>
        <param>
          <type>Matrix4x4</type>
          <declname>otherMatrix</declname>
        </param>
        <briefdescription>
<para>A.From(B) produces the matrix that transforms from B to A. Combines with Then() to produce readable, predictable results: B.Then(A.From(B)) == A. </para>
        </briefdescription>
        <detaileddescription>
<para>Warning: Scale factors of zero will invalidate this behavior. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2068" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2068" bodyend="2070"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a2851ea56f05a75ed9f2a1e08ec4d7e96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4x4</type>
        <definition>static Matrix4x4 Leap.Unity.Utils.To</definition>
        <argsstring>(this Matrix4x4 thisMatrix, Matrix4x4 otherMatrix)</argsstring>
        <name>To</name>
        <param>
          <type>this Matrix4x4</type>
          <declname>thisMatrix</declname>
        </param>
        <param>
          <type>Matrix4x4</type>
          <declname>otherMatrix</declname>
        </param>
        <briefdescription>
<para>A.To(B) produces the matrix that transforms from A to B. Combines with Then() to produce readable, predictable results: B.Then(B.To(A)) == A. </para>
        </briefdescription>
        <detaileddescription>
<para>Warning: Scale factors of zero will invalidate this behavior. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2079" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2079" bodyend="2081"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_utils_1a49cb1c7a12b5868300afa79161c98f3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4x4</type>
        <definition>static Matrix4x4 Leap.Unity.Utils.Then</definition>
        <argsstring>(this Matrix4x4 thisMatrix, Matrix4x4 otherMatrix)</argsstring>
        <name>Then</name>
        <param>
          <type>this Matrix4x4</type>
          <declname>thisMatrix</declname>
        </param>
        <param>
          <type>Matrix4x4</type>
          <declname>otherMatrix</declname>
        </param>
        <briefdescription>
<para>Transforms this matrix by the other matrix. This is a rightward syntax for matrix multiplication, which normally obeys left-multiply ordering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="2087" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="2087" bodyend="2089"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Utils.cs" bodystart="19" bodyend="2095"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_utils_1a696a1c21549db280952e711b4dd9707a" prot="private" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>_incompressibleFormats</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a450159e8af585da1a42b0c4838df2efa" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Add&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1afa1373a114dbda9cf267320eeeda40de" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Add&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac2aef9e8f846b68b71c3ab0431134567" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Add&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac2b6c674bc84acc8471f275aac3244a3" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ApplyOrdering&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ad0988163da778e6d8aa794808338fa57" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Area</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae4bab4289d3c98d7006d08d3b4fb4e69" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>AreEqualUnordered&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aeec397faa51672cd06cc07c70a20fa6c" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Capitalize</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ab7f5c27e96ffaa5227b3a55c05b055d7" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ClearWith&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a4a3eb7baf6036c4e45d12ad0ba2fa3ff" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ClearWithDefaults&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a17011b2d8f17a83899fcc9893386e1d6" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompDiv</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1affb1063ce2675aad55023dd301b85824" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompDiv</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aedd9bc4ea0827375c7f4b84d598f83ab" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompDiv</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a14787e6bab28b336a9d67bf006988412" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMax</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a0a9ef74f6ac9309cded9db54a1357fa4" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMax</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a89453732e915ea1ec679415946257a0d" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMax</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1acfd274e664f39c6aca8040e873ce37b7" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMin</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a1467f62da2b305c11715cd026226990c" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMin</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a6bcb33589d3077431bb61e37c74c883b" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMin</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac479198843b1871fac79ae0d43d7a3d6" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMul</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1affe9c6ef22c7ed8673a94c80ff258bd1" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMul</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a4476caa3744812ae126c33cb7f96b053" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMul</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a302c3d73a881fe734945011ea74b763f" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompMul</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a43927462a32d602d27c973fddfea1e96" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompressQuatToBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1abbce50546725e44d2bd6def1250fc9e3" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompSum</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a5fc7844df671ac2e29666d5e5c05a566" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompSum</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae7507cc9b7e33a3f6604d03a28afc096" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>CompSum</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1af1afe38a401bce1b51632dd5349df91d" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ContainsNaN</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac061a49f908c1c0d729949e0828c2e1e" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>DecompressBytesToQuat</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae2470901bfa532e4bc20e816ff7cf13a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>DoubleCapacity&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae2efdec81d72f53c8c08a45d500c120f" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>DrawArc</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aca1b043d98b8438de0f12027612ab06e" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>DrawCircle</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a34ab0d111c61b327cac750e5c932651a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>DrawCone</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ab9a1b98aeba4d079d17994fa61396f30" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>EnsureListCount&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aa08b80af4a963b314b520462a42f5c8e" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>EnsureListCount&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a84e37f98f946e28ff64699fb0b287323" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>EnsureListExists&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1adb32c043c4cf9652c0497f69414d4c1f" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Extrude</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aadf919f471b2d6de4d31358634a790c2" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>FaceTargetWithoutTwist</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a01869d28d1a58488dcf54b1a7b351452" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>FaceTargetWithoutTwist</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aa2fe22763d48d874a70cfac9b24f2575" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>FindColliders&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a7ed0bce1e1241cf3e0553d38c41cefe7" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>FindObjectInHierarchy&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a73248ce148978ec479a85f07ac237ebe" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>FindOwnedChildComponents&lt; ComponentType, OwnerType &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aba6d17dcc9701e9976e66dff2e5b700e" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Flipped</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a525933f0ec84746a0890cae272f5843a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>From</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a28a0524bc543866825eeaf663768cc16" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>From</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1af9e9f7a30ef21417f073e5fdef0564d3" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>From</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a4aaacdca2cbd4be3da1d78f459d58578" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>From</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a8c7af6b31871964e65fdc0c37a02d8aa" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>From</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae9dc51c18562d9c05758db096cbbce4e" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>From</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a7d2c7549b5787485a99f425cc18505cb" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>GenerateNiceName</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1adf17b7324f4c0d64f9925ad58dc03440" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>GetCapsulePoints</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a5a005576f855daa26450647ee07145fe" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>GetChildren</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a89b66765cc38880b36677b2c5ac90071" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>GetDirection</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a4cd0398ea98d41c5fa9d50defa4243db" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>GetEffectiveRadius</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a16d91cf57275809554bea71fd8cbe8ce" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>GetEffectiveRadiusMultiplier</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a3b133022a2b937e8ab0fbfc05766cebf" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>GetPose</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a49475a4ef198633bdf7a5ef19de51831" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>GetSortedOrder&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1adff5d29dbf40293b97e488ea87bce4ed" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>IgnoreCollisions</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a251afb8d0c610fcd08886aa2f765e321" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ImplementsInterface</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a903d9d0f9fc008b22603165ad848de5b" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>InLocalSpace</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a3322774b25cf2b8233dbefb4700a4dec" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>IsActiveRelativeToParent</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a4439818fabb993e5bab9cbd534ae4985" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>IsBetween</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac0baa321c81d218adf73c2a67af22416" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>IsBetween</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1acf8dce8063757411a3c0e92f87aede21" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>IsCompressible</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a9cfc9701b19cfb2db0c439b5a38ab2a1" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>LerpHSV</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a52ff48874ec3558de0c971df45781e28" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>LerpHue</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a083b928ea7cda29dcd6bd3a3ef19d579" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>LookAwayFrom</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a584f3a92f293668c1a3114bd8787b183" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>LookAwayFrom</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a1413956a00c8269dffe75a5b34e5b291" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>MakeRelativePath</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac12ee9d91f70ef1cdf309d4f2288506d" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Map</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a6d4ecb1360fa625d4811b9d0b22fa35a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Map</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a348e0e3b11946211a4ef19557ce347f4" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Map</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a0f7da1a28f67710f7516dca97e55b4c2" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Map</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac127f7c40aa595f5f2b706d37c906e13" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Map</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a51d17bdecc9c5365a8ef2ff3ba732002" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Map</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a2566a7df38bfe895ff7c9be720d13509" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Map</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a971ddbd4986666376a74ae6594d3834a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>MapUnclamped</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ad1efaf746dbba8806207a5a20865dae9" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>MapUnclamped</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aaf360026ed3f58bfec1d199c1007abd3" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>MapUnclamped</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aba3ee605bb90be2288fa157fe7d24e37" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>MapUnclamped</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aa311b894bb76349a3f9b4b042a2b4704" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>MirroredX</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a730100494a73ce44decbe14a87d5e298" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Negated</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a7e39459ea5863c8205ace2dbe318404f" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>NextTuple</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1af2075179bf412a26b95265eb1ac3a231" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>NextTuple&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a80ecceb053c45f794d9a63e11ef7317b" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadBottom</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac7e4506abab6d6091d51737be46786b3" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadBottom</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aa2fc58267a0e7a14122b7076f8e24c0e" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadBottomPercent</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a61e81fea0b470707f7e0d90ac14b315f" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadInner</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae2b935e496fe3b99f017081625b96854" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadInner</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a028cbe5b6862edfa8c8e168206d67fb1" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadLeft</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a52a302a759f7a5fa2525e0a335f39ec3" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadLeft</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aebb05eac0bc2394d94516328b5046f23" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadLeftPercent</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a469d989925d23533d6df7fe3c348e3b0" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadLeftRightPercent</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a970bd7c457e63aa8f85d630880b47a34" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadRight</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1acb11c48acf7923d03c6e9fce9eae32fb" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadRight</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae8925e88d919a24c2cf33276dbc9296c" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadRightPercent</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1afa9e2535c8c8abe898e43d5250a49412" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadTop</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1aa3f8d2b98f008591ea443597a6b391c3" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadTop</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a6b47aaa333e1b68806792d5c9cf7b40f" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadTopBottomPercent</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a1cd21977170483f420f4c1f8749b6b40" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>PadTopPercent</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a416cd320bb3d920c53775fc3657353dd" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ParseHtmlColorString</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1abb8854a2d9519dfdcb31a56e9fc84a5a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Perpendicular</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a7f808cbb0512b2d8b0d063d70a469a4b" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Perpendicular</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a2b471570a64fe48ac70d85787228f5b6" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>QuaternionFromAngleAxisVector</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a4f840a6652e0ab37c4a579cb8674e7e0" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Repeat</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a83b60b50e910a3ed41c41409033d620a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ResetLocalPose</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a0d76f0a49449cbadbc8d3fce924ee267" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ResetLocalTransform</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a60fe0f8fe42b157cb8eb174929342c84" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Reverse&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a939645b8355a3a4fba6478f3f9a16380" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Reverse&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1af11c654d59ba3bb33630e97ec67fe5f1" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>SetCapsulePoints</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a220df2393a6058c348c9d782e6a70763" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Shuffle&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a7256e623527860cffed9f489de5fe022" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Sign</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a0be13e1ce74a016e1039d0eb0b43487c" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>SplitHorizontallyWithLeft</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a0296f38c900d9a1a0b52d97ffc329475" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Swap&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a94e23beb7eebe85d1a3da7eaa91edd42" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Swap&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a503ebb0330cd745a5c7a140ff8bbef84" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Swap&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a14478b5fa4d165120e5b7f8e3496a529" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeAllLines</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae73d90a5980a5e50c11aaf64eebc1b9a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeBottom</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a86367353a6cdb61868b92a5bcc8d67b3" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeBottom</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a915cbf1273b269ffbe64a9689b7a8897" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeHorizontal</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a38ed85c21c3f46d658051ee982d940d0" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeLeft</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ab85f5e4d9b5af978abcfbd7a5aac50b8" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeLeft</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a450e2465dcab5b53ccf46b6ad21a6e99" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeRight</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1af280f6077bce047a6703de826521e5d0" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeRight</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a935fa5eb7ec2ebf3e97cfdd7d1598d4a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeTop</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac74b3d2ac536803281b264aaa5da5992" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TakeTop</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a79486b86240e143af5927a93f0b03e66" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Then</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1acf5ec7ea1a500345ab24e439a72eaaca" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Then</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a13271bc0a71675acf179f4836d5963df" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Then</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1adef7ec4fca8ae68d2728b6222e67c86f" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Then</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a49cb1c7a12b5868300afa79161c98f3b" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>Then</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a947331e9ce028ec5cd8360acb33e5b8e" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TimedExtrapolate</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a9f234ae1281589007aeff8ffb3821b2a" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TimedExtrapolate</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a3d2e30da9e8f2164ea044a3e62d919f7" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>To</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ab09f03527b2e8f90fb3b5553b4011bcd" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>To</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ab56040ddc94a3bfd5fc96fbde048c99e" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>To</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a151e4b7f99c0b7102bb5ae0ea387d02b" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>To</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a2851ea56f05a75ed9f2a1e08ec4d7e96" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>To</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a265244773736cb395d93687ab32a2edd" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ToAngleAxisVector</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ae5116efbacd62398e88981773f4fea5b" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ToArrayString&lt; T &gt;</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a14744b4d7343cffec9a1a8523382d66b" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ToNormalized</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a7824c071db5b47a9aafd1711f61e15a6" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>ToVector3</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ad6f33609d634be5818ad79f5204edfe6" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TrimEnd</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1a0451bf37aa810a7c953b45ef4afb38bd" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>TrimStart</name></member>
      <member refid="class_leap_1_1_unity_1_1_utils_1ac12488ad78a4b43ae0abde518a7b77aa" prot="public" virt="non-virtual"><scope>Leap::Unity::Utils</scope><name>WithAlpha</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
