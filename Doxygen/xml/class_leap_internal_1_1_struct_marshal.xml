<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_internal_1_1_struct_marshal" kind="class" language="C#" prot="public">
    <compoundname>LeapInternal::StructMarshal</compoundname>
    <innerclass refid="class_leap_internal_1_1_struct_marshal_1_1_struct_container" prot="private">LeapInternal::StructMarshal::StructContainer</innerclass>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_leap_internal_1_1_struct_marshal_1a326507a97142b35801b10853c5e93014" prot="private" static="yes" mutable="no">
        <type>StructContainer</type>
        <definition>StructContainer LeapInternal.StructMarshal&lt; T &gt;._container</definition>
        <argsstring></argsstring>
        <name>_container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" line="26" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_internal_1_1_struct_marshal_1a142d49a892445f6bd14a317e2e659778" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int LeapInternal.StructMarshal&lt; T &gt;._sizeofT</definition>
        <argsstring></argsstring>
        <name>_sizeofT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" line="29" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_leap_internal_1_1_struct_marshal_1a84214508d56fa8aae6aadbd052486806" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int LeapInternal.StructMarshal&lt; T &gt;.Size</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size in bytes of the struct of type T. This call is equivalent to Marshal.Sizeof(typeof(T)) but caches the result for ease of access. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" line="39" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" bodystart="39" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_leap_internal_1_1_struct_marshal_1a86709443c89a46169ed04dd95880a0a7" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static LeapInternal.StructMarshal&lt; T &gt;.StructMarshal</definition>
        <argsstring>()</argsstring>
        <name>StructMarshal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" line="31" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" bodystart="31" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_leap_internal_1_1_struct_marshal_1a61979f8d4c2812780dd2e5826a6bd253" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void LeapInternal.StructMarshal&lt; T &gt;.PtrToStruct</definition>
        <argsstring>(IntPtr ptr, out T t)</argsstring>
        <name>PtrToStruct</name>
        <param>
          <type>IntPtr</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts an IntPtr to a struct of type T. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" line="48" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" bodystart="48" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_internal_1_1_struct_marshal_1a8c6222bf8db48b1c1165d2b8e835277b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void LeapInternal.StructMarshal&lt; T &gt;.ArrayElementToStruct</definition>
        <argsstring>(IntPtr ptr, int arrayIndex, out T t)</argsstring>
        <name>ArrayElementToStruct</name>
        <param>
          <type>IntPtr</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arrayIndex</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a single element in an array pointed to by ptr to a struct of type T. This method does not and cannot do any bounds checking! This method does not create any garbage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" line="77" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" bodystart="77" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A helper class to marshal between unmanaged memory and structs without creating garbage. </para>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" line="18" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/StructMarshal.cs" bodystart="18" bodyend="80"/>
    <listofallmembers>
      <member refid="class_leap_internal_1_1_struct_marshal_1a326507a97142b35801b10853c5e93014" prot="private" virt="non-virtual"><scope>LeapInternal::StructMarshal</scope><name>_container</name></member>
      <member refid="class_leap_internal_1_1_struct_marshal_1a142d49a892445f6bd14a317e2e659778" prot="private" virt="non-virtual"><scope>LeapInternal::StructMarshal</scope><name>_sizeofT</name></member>
      <member refid="class_leap_internal_1_1_struct_marshal_1a8c6222bf8db48b1c1165d2b8e835277b" prot="public" virt="non-virtual"><scope>LeapInternal::StructMarshal</scope><name>ArrayElementToStruct</name></member>
      <member refid="class_leap_internal_1_1_struct_marshal_1a61979f8d4c2812780dd2e5826a6bd253" prot="public" virt="non-virtual"><scope>LeapInternal::StructMarshal</scope><name>PtrToStruct</name></member>
      <member refid="class_leap_internal_1_1_struct_marshal_1a84214508d56fa8aae6aadbd052486806" prot="public" virt="non-virtual"><scope>LeapInternal::StructMarshal</scope><name>Size</name></member>
      <member refid="class_leap_internal_1_1_struct_marshal_1a86709443c89a46169ed04dd95880a0a7" prot="private" virt="non-virtual"><scope>LeapInternal::StructMarshal</scope><name>StructMarshal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
