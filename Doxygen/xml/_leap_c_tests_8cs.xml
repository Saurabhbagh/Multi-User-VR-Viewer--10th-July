<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_leap_c_tests_8cs" kind="file" language="C#">
    <compoundname>LeapCTests.cs</compoundname>
    <innerclass refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests" prot="public">Leap::LeapCSharp::Tests::LeapCTests</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_leap_c_sharp">Leap::LeapCSharp</innernamespace>
    <innernamespace refid="namespace_leap_1_1_leap_c_sharp_1_1_tests">Leap::LeapCSharp::Tests</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Threading;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Runtime.InteropServices;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>NUnit.Framework;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_internal" kindref="compound">LeapInternal</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_leap_c_sharp_1_1_tests" kindref="compound">Leap.LeapCSharp.Tests</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>[TestFixture]</highlight></codeline>
<codeline lineno="20" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests" kindref="compound">LeapCTests</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="23" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1adde34c1811e7232528b77aa9ce3c35c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1adde34c1811e7232528b77aa9ce3c35c3" kindref="member">TestNow</ref>()<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a92e9bb730041df4094e328bcf326da47" kindref="member">GetNow</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Thread.Sleep(1);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>stop<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a92e9bb730041df4094e328bcf326da47" kindref="member">GetNow</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>stop<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Greater(delta,<sp/>200);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Less(delta,<sp/>1800);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="35" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a2a8d719baeeb77249e0f524e68dce6e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a2a8d719baeeb77249e0f524e68dce6e9" kindref="member">TestRebaserLifeCycle</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>rebaser<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1aff89b9602b8eae92c47079d89d4be8fc" kindref="member">CreateClockRebaser</ref>(out<sp/>rebaser);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(IntPtr.Zero,<sp/>rebaser,<sp/></highlight><highlight class="stringliteral">&quot;Handle<sp/>no<sp/>longer<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int64<sp/>sysNow<sp/>=<sp/>DateTime.Now.Millisecond;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int64<sp/>leapNow<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a92e9bb730041df4094e328bcf326da47" kindref="member">GetNow</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a27dbedabde4b0e1b86cea09687ba3f49" kindref="member">UpdateRebase</ref>(rebaser,<sp/>sysNow,<sp/>leapNow);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int64<sp/>rebasedTime;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4c10837b7f5fa82c07eca68c17d3a49d" kindref="member">RebaseClock</ref>(rebaser,<sp/>sysNow<sp/>+<sp/>10,<sp/>out<sp/>rebasedTime);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Rebased:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>rebasedTime);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a72516d54ac9cccc3c7bd8bb064109273" kindref="member">DestroyClockRebaser</ref>(rebaser);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="55" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a69a66157f9ae366d500c44f6b41b548a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a69a66157f9ae366d500c44f6b41b548a" kindref="member">TestCreateConnection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref><sp/>config<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g_1a1bf89a95e26e6ddc466744ce0661a18a" kindref="member">server_namespace</ref><sp/>=<sp/>Marshal.StringToHGlobalAnsi(</highlight><highlight class="stringliteral">&quot;Leap<sp/>Service&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g_1a70b836de05823b343ec5df4e6751ba8d" kindref="member">flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>config.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g_1a4746dd9bc79ad1934f2801e68e38d9d1" kindref="member">size</ref><sp/>=<sp/>(uint)Marshal.SizeOf(config);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(ref<sp/>config,<sp/>out<sp/>connHandle);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(connHandle<sp/>==<sp/>IntPtr.Zero,<sp/></highlight><highlight class="stringliteral">&quot;Configured<sp/>connection<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>defConn<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>defConn);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(defConn<sp/>==<sp/>IntPtr.Zero,<sp/></highlight><highlight class="stringliteral">&quot;Default<sp/>config<sp/>connection<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeHGlobal(config.server_namespace);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>[Ignore(</highlight><highlight class="stringliteral">&quot;info.status<sp/>is<sp/>not<sp/>returning<sp/>true<sp/>even<sp/>though<sp/>the<sp/>result<sp/>was<sp/>returned<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;as<sp/>successful.<sp/>See<sp/>the<sp/>commented-out<sp/>assert<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>test.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="76" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1aa9366a0620dbe96061e538a2875e3618" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1aa9366a0620dbe96061e538a2875e3618" kindref="member">TestOpenConnection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o" kindref="compound">LEAP_CONNECTION_INFO</ref><sp/>info<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o" kindref="compound">LEAP_CONNECTION_INFO</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o_1a5428e50901ec7335e8450706a26e180a" kindref="member">size</ref><sp/>=<sp/>(uint)Marshal.SizeOf(typeof(<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o" kindref="compound">LEAP_CONNECTION_INFO</ref>));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abaf56f46dac48027a36aa0c08d94abbf" kindref="member">GetConnectionInfo</ref>(connHandle,<sp/>ref<sp/>info);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assert.AreEqual(eLeapConnectionStatus.eLeapConnectionStatus_Connected,<sp/>info.status,<sp/>&quot;Status:<sp/>&quot;<sp/>+<sp/>info.status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="93" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a9cbd5a2d5a1b94fdf980f4134c0dc0eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a9cbd5a2d5a1b94fdf980f4134c0dc0eb" kindref="member">TestGetConnectionInfo</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o" kindref="compound">LEAP_CONNECTION_INFO</ref><sp/>info<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o" kindref="compound">LEAP_CONNECTION_INFO</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o_1a3d12b72914f3b4bf9b536a6a429cfdbc" kindref="member">status</ref><sp/>=<sp/><ref refid="namespace_leap_internal_1a98a6a4220fcab393d11bf4ec2eecdea6" kindref="member">eLeapConnectionStatus</ref>.eLeapConnectionStatus_HandshakeIncomplete;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>info.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o_1a5428e50901ec7335e8450706a26e180a" kindref="member">size</ref><sp/>=<sp/>(uint)Marshal.SizeOf(typeof(<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o" kindref="compound">LEAP_CONNECTION_INFO</ref>));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abaf56f46dac48027a36aa0c08d94abbf" kindref="member">GetConnectionInfo</ref>(connHandle,<sp/>ref<sp/>info);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_InvalidArgument,<sp/>result);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref><sp/>config<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(ref<sp/>config,<sp/>out<sp/>connHandle);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abaf56f46dac48027a36aa0c08d94abbf" kindref="member">GetConnectionInfo</ref>(connHandle,<sp/>ref<sp/>info);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a98a6a4220fcab393d11bf4ec2eecdea6" kindref="member">eLeapConnectionStatus</ref>.eLeapConnectionStatus_NotConnected,<sp/>info.status,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>connected<sp/>before<sp/>OpenConnection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>polls<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>polls;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abaf56f46dac48027a36aa0c08d94abbf" kindref="member">GetConnectionInfo</ref>(connHandle,<sp/>ref<sp/>info);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a98a6a4220fcab393d11bf4ec2eecdea6" kindref="member">eLeapConnectionStatus</ref>.eLeapConnectionStatus_Connected,<sp/>info.status,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>info<sp/>says<sp/>we<sp/>are<sp/>connected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="127" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a483200483d91981206d162ccc312fc3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a483200483d91981206d162ccc312fc3b" kindref="member">TestPollConnection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref><sp/>config<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(ref<sp/>config,<sp/>out<sp/>connHandle);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>polls<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>polls;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Console.WriteLine(</highlight><highlight class="stringliteral">&quot;Poll<sp/>#&quot;</highlight><highlight class="normal"><sp/>+<sp/>i<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>msg.type<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>result<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>result);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success<sp/>||<sp/>result<sp/>==<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Timeout,<sp/></highlight><highlight class="stringliteral">&quot;Poll<sp/>#&quot;</highlight><highlight class="normal"><sp/>+<sp/>i<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>polls);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Thread.Sleep<sp/>(54);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="150" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a8c4b2c7e793ea7adba0c47c005006433" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a8c4b2c7e793ea7adba0c47c005006433" kindref="member">TestInterpolateFrames</ref>()<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref><sp/>config<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(ref<sp/>config,<sp/>out<sp/>connHandle);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>connection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>6<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>polls<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>firstBefore<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref>();<sp/></highlight><highlight class="comment">//<sp/>Prevent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;unassigned&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>firstAfter<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>tenthBefore;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>tenth;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>tenthAfter;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>polls;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Tracking)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameCount<sp/>==<sp/>selected<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(msg.eventStructPtr,<sp/>out<sp/>firstBefore);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameCount<sp/>==<sp/>selected)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(msg.eventStructPtr,<sp/>out<sp/>first);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameCount<sp/>==<sp/>selected<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(msg.eventStructPtr,<sp/>out<sp/>firstAfter);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameCount<sp/>==<sp/>selected<sp/>+<sp/>2)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(msg.eventStructPtr,<sp/>out<sp/>tenthBefore);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameCount<sp/>==<sp/>selected<sp/>+<sp/>3)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(msg.eventStructPtr,<sp/>out<sp/>tenth);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameCount<sp/>==<sp/>selected<sp/>+<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(msg.eventStructPtr,<sp/>out<sp/>tenthAfter);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount++;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Int64<sp/>halfTime<sp/>=<sp/>(first.info.timestamp<sp/>-<sp/>firstBefore.info.timestamp)/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Int64<sp/>testTime<sp/>=<sp/>first.<ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t_1a05e4cb8a43cac50fbe03886fa71fec99" kindref="member">info</ref>.<ref refid="struct_leap_internal_1_1_l_e_a_p___f_r_a_m_e___h_e_a_d_e_r_1a5d251bc27fa45a5da9b9a31f92d2835e" kindref="member">timestamp</ref>;</highlight><highlight class="comment">//<sp/>+<sp/>halfTime;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>size;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;PrevF<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>firstBefore.<ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t_1a05e4cb8a43cac50fbe03886fa71fec99" kindref="member">info</ref>.<ref refid="struct_leap_internal_1_1_l_e_a_p___f_r_a_m_e___h_e_a_d_e_r_1a5d251bc27fa45a5da9b9a31f92d2835e" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Test<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>testTime);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;NextF<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>firstAfter.<ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t_1a05e4cb8a43cac50fbe03886fa71fec99" kindref="member">info</ref>.<ref refid="struct_leap_internal_1_1_l_e_a_p___f_r_a_m_e___h_e_a_d_e_r_1a5d251bc27fa45a5da9b9a31f92d2835e" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1af4b7756a3307a082b6160d6e06d7f187" kindref="member">GetFrameSize</ref>(connHandle,<sp/>testTime,<sp/>out<sp/>size);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Size:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Frame<sp/>size<sp/>call<sp/>succeeded<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>result.indexOf());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>trackingBuffer<sp/>=<sp/>Marshal.AllocHGlobal((Int32)size);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a37b93d6d332a4fb88714b1a7583c3ce8" kindref="member">InterpolateFrame</ref>(connHandle,<sp/>testTime,<sp/>trackingBuffer,<sp/>size);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Frame<sp/>interpolation<sp/>succeeded.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t" kindref="compound">LEAP_TRACKING_EVENT</ref><sp/>tracking_evt;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_TRACKING_EVENT&gt;.PtrToStruct(trackingBuffer,<sp/>out<sp/>tracking_evt);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(first.<ref refid="struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t_1a05e4cb8a43cac50fbe03886fa71fec99" kindref="member">info</ref>.<ref refid="struct_leap_internal_1_1_l_e_a_p___f_r_a_m_e___h_e_a_d_e_r_1a505537dcff6f66c04c5d62a571785312" kindref="member">frame_id</ref>,<sp/>tracking_evt.info.frame_id,<sp/></highlight><highlight class="stringliteral">&quot;Interpolated<sp/>frame<sp/>has<sp/>ID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeHGlobal(trackingBuffer);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="214" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a231dd2df6f6166828c0ee88b63ee54ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a231dd2df6f6166828c0ee88b63ee54ef" kindref="member">TestGetDeviceList</ref>()<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>device<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>deviceCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1ab705081937bf1a4cf7f69f3298991c5a" kindref="member">GetDeviceCount</ref>(connHandle,<sp/>out<sp/>deviceCount);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;DC:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>deviceCount);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Assert.AreEqual(eLeapRS.eLeapRS_Success,<sp/>result,<sp/>&quot;Device<sp/>count<sp/>call<sp/>successful&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Greater(deviceCount,<sp/>0,<sp/>deviceCount<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>devices<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>validDeviceHandles<sp/>=<sp/>deviceCount;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[]<sp/>deviceList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[deviceCount];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4e3fe78202056e73c092818ecce8ee6f" kindref="member">GetDeviceList</ref>(connHandle,<sp/>deviceList,<sp/>out<sp/>validDeviceHandles);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(deviceCount,<sp/>validDeviceHandles,<sp/>validDeviceHandles<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>existing<sp/>devices<sp/>are<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;VDHC:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>validDeviceHandles);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>list<sp/>call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="249" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a7ba7f407a11ff24657e35d5f026fc0f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a7ba7f407a11ff24657e35d5f026fc0f5" kindref="member">TestOpenDevice</ref>()<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>device<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>deviceCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1ab705081937bf1a4cf7f69f3298991c5a" kindref="member">GetDeviceCount</ref>(connHandle,<sp/>out<sp/>deviceCount);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success<sp/>==<sp/>result<sp/>||<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_InsufficientBuffer<sp/>==<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>count<sp/>call<sp/>successful<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Greater(deviceCount,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Devices<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>validDeviceHandles<sp/>=<sp/>deviceCount;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[]<sp/>deviceList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[deviceCount];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4e3fe78202056e73c092818ecce8ee6f" kindref="member">GetDeviceList</ref>(connHandle,<sp/>deviceList,<sp/>out<sp/>validDeviceHandles);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(deviceCount,<sp/>validDeviceHandles,<sp/></highlight><highlight class="stringliteral">&quot;Existing<sp/>devices<sp/>are<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref><sp/>deviceRef<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>deviceList)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>device;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(deviceRef);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abde768c9d9266c586861d3e123ee2f8f" kindref="member">OpenDevice</ref>(deviceRef,<sp/>out<sp/>device);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(IntPtr.Zero,<sp/>device,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>handle<sp/>not<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="289" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a0520368ee5402a8d1bfebd0724a81b38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a0520368ee5402a8d1bfebd0724a81b38" kindref="member">TestGetDeviceInfo</ref>()<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>device<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>deviceCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1ab705081937bf1a4cf7f69f3298991c5a" kindref="member">GetDeviceCount</ref>(connHandle,<sp/>out<sp/>deviceCount);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success<sp/>==<sp/>result<sp/>||<sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_InsufficientBuffer<sp/>==<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>count<sp/>call<sp/>successful<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Greater(deviceCount,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Devices<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>validDeviceHandles<sp/>=<sp/>deviceCount;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[]<sp/>deviceList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[deviceCount];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4e3fe78202056e73c092818ecce8ee6f" kindref="member">GetDeviceList</ref>(connHandle,<sp/>deviceList,<sp/>out<sp/>validDeviceHandles);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(deviceCount,<sp/>validDeviceHandles,<sp/></highlight><highlight class="stringliteral">&quot;Existing<sp/>devices<sp/>are<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref><sp/>deviceRef<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>deviceList)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>device;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(deviceRef);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abde768c9d9266c586861d3e123ee2f8f" kindref="member">OpenDevice</ref>(deviceRef,<sp/>out<sp/>device);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o" kindref="compound">LEAP_DEVICE_INFO</ref><sp/>deviceInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o" kindref="compound">LEAP_DEVICE_INFO</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defaultLength<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o_1a60db596918d7743e92b731bffab6ed83" kindref="member">serial</ref><sp/>=<sp/>Marshal.AllocCoTaskMem(defaultLength);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o_1a6a8670a1df9cdc6ff7f488db60b89d42" kindref="member">size</ref><sp/>=<sp/>(uint)Marshal.SizeOf(deviceInfo);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;DeviceInfo<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>deviceInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o_1a6a8670a1df9cdc6ff7f488db60b89d42" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o_1ae86ff790599c8a97d23abfc932ec6f66" kindref="member">serial_length</ref><sp/>=<sp/>(uint)defaultLength;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(deviceInfo,<sp/></highlight><highlight class="stringliteral">&quot;Before:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2dc6de06ea26d56d00ab08f738eff9ef" kindref="member">GetDeviceInfo</ref>(device,<sp/>ref<sp/>deviceInfo);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_InsufficientBuffer,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceInfo.serial_length<sp/>!=<sp/>(uint)defaultLength)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.serial<sp/>=<sp/>Marshal.AllocCoTaskMem((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)deviceInfo.serial_length);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.size<sp/>=<sp/>(uint)Marshal.SizeOf(deviceInfo);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2dc6de06ea26d56d00ab08f738eff9ef" kindref="member">GetDeviceInfo</ref>(device,<sp/>ref<sp/>deviceInfo);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;2nd<sp/>Call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(deviceInfo,<sp/></highlight><highlight class="stringliteral">&quot;After:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>serialnumber<sp/>=<sp/>Marshal.PtrToStringAnsi(deviceInfo.serial);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(serialnumber);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="346" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1af42fcf33b5e08ca63cf812c8ecd6107e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1af42fcf33b5e08ca63cf812c8ecd6107e" kindref="member">TestGetOneDeviceInfo</ref>()<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___e_v_e_n_t" kindref="compound">LEAP_DEVICE_EVENT</ref><sp/>device_evt;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_DEVICE_EVENT&gt;.PtrToStruct(msg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>device_evt);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>device;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abde768c9d9266c586861d3e123ee2f8f" kindref="member">OpenDevice</ref>(device_evt.device,<sp/>out<sp/>device);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o" kindref="compound">LEAP_DEVICE_INFO</ref><sp/>deviceInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o" kindref="compound">LEAP_DEVICE_INFO</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defaultLength<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o_1a60db596918d7743e92b731bffab6ed83" kindref="member">serial</ref><sp/>=<sp/>Marshal.AllocCoTaskMem(defaultLength);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o_1a6a8670a1df9cdc6ff7f488db60b89d42" kindref="member">size</ref><sp/>=<sp/>(uint)Marshal.SizeOf(deviceInfo);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;DeviceInfo<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>deviceInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o_1a6a8670a1df9cdc6ff7f488db60b89d42" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o_1ae86ff790599c8a97d23abfc932ec6f66" kindref="member">serial_length</ref><sp/>=<sp/>(uint)defaultLength;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(deviceInfo,<sp/></highlight><highlight class="stringliteral">&quot;Before:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2dc6de06ea26d56d00ab08f738eff9ef" kindref="member">GetDeviceInfo</ref>(device,<sp/>ref<sp/>deviceInfo);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_InsufficientBuffer,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceInfo.serial_length<sp/>!=<sp/>(uint)defaultLength)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeCoTaskMem(deviceInfo.serial);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.serial<sp/>=<sp/>Marshal.AllocCoTaskMem((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)deviceInfo.serial_length);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceInfo.size<sp/>=<sp/>(uint)Marshal.SizeOf(deviceInfo);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2dc6de06ea26d56d00ab08f738eff9ef" kindref="member">GetDeviceInfo</ref>(device,<sp/>ref<sp/>deviceInfo);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;2nd<sp/>Call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(deviceInfo,<sp/></highlight><highlight class="stringliteral">&quot;After:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>serialnumber<sp/>=<sp/>Marshal.PtrToStringAnsi(deviceInfo.serial);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Marshal.FreeCoTaskMem(deviceInfo.serial);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(serialnumber);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="393" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a12b95b37a88a37e7b5c12df660ec8fcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a12b95b37a88a37e7b5c12df660ec8fcd" kindref="member">TestSetPolicyFlags</ref>()<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>setFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>clearFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1aeba99ff7b5740de9709a1535ca6d8ae4" kindref="member">SetPolicyFlags</ref>(connHandle,<sp/>setFlags,<sp/>clearFlags);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(result);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;SetDevicePolicyFlags<sp/>Call&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/><sp/>static<sp/>extern<sp/>eLeapRS<sp/><sp/>LeapSetDeviceFlags<sp/>(LEAP_DEVICE<sp/>hDevice,<sp/>UInt64<sp/>set,<sp/>UInt64<sp/>clear,<sp/>out<sp/>UInt64*<sp/>prior);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="420" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a8811c998921b7ed219bf18267e614482" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a8811c998921b7ed219bf18267e614482" kindref="member">TestSetDeviceFlags</ref>()<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref><sp/>config<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(ref<sp/>config,<sp/>out<sp/>connHandle);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>device<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>deviceCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1ab705081937bf1a4cf7f69f3298991c5a" kindref="member">GetDeviceCount</ref>(connHandle,<sp/>out<sp/>deviceCount);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_InsufficientBuffer,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;GetDeviceCount<sp/>Call<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Greater(deviceCount,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Devices<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>validDeviceHandles<sp/>=<sp/>deviceCount;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[]<sp/>deviceList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[deviceCount];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4e3fe78202056e73c092818ecce8ee6f" kindref="member">GetDeviceList</ref>(connHandle,<sp/>deviceList,<sp/>out<sp/>validDeviceHandles);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(deviceCount,<sp/>validDeviceHandles,<sp/></highlight><highlight class="stringliteral">&quot;Existing<sp/>devices<sp/>are<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref><sp/>deviceRef<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>deviceList)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>device;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abde768c9d9266c586861d3e123ee2f8f" kindref="member">OpenDevice</ref>(deviceRef,<sp/>out<sp/>device);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;OpenDevice<sp/>Call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>setFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>clearFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UInt64<sp/>priorFlags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a903a82df9979ed709e4d6a05f6a2c1fc" kindref="member">SetDeviceFlags</ref>(device,<sp/>setFlags,<sp/>clearFlags,<sp/>out<sp/>priorFlags);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;SetDeviceFlags<sp/>Call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>static<sp/>extern<sp/>void<sp/>LeapCloseDevice<sp/>(LEAP_DEVICE<sp/>pDevice);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="465" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1abd6e8c308243d73ea8a0155ff7a149c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1abd6e8c308243d73ea8a0155ff7a149c8" kindref="member">TestCloseDevice</ref>()<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>device<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>deviceCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1ab705081937bf1a4cf7f69f3298991c5a" kindref="member">GetDeviceCount</ref>(connHandle,<sp/>out<sp/>deviceCount);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.Greater(deviceCount,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Devices<sp/>exist:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>deviceCount);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(eLeapRS.eLeapRS_Success,<sp/>result,<sp/>&quot;GetDeviceCount<sp/>Call<sp/>successful&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>validDeviceHandles<sp/>=<sp/>deviceCount;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[]<sp/>deviceList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref>[deviceCount];</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4e3fe78202056e73c092818ecce8ee6f" kindref="member">GetDeviceList</ref>(connHandle,<sp/>deviceList,<sp/>out<sp/>validDeviceHandles);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(deviceCount,<sp/>validDeviceHandles,<sp/></highlight><highlight class="stringliteral">&quot;Existing<sp/>devices<sp/>are<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f" kindref="compound">LEAP_DEVICE_REF</ref><sp/>deviceRef<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>deviceList)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>device;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Assert.True<sp/>(false,<sp/>&quot;This<sp/>test<sp/>is<sp/>blocked<sp/>by<sp/>a<sp/>bug<sp/>--<sp/>device<sp/>handle<sp/>always<sp/>0&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1abde768c9d9266c586861d3e123ee2f8f" kindref="member">OpenDevice</ref>(deviceRef,<sp/>out<sp/>device);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;OpenDevice<sp/>Call<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a15c3ea074e98611c0bebb18d4c9fbea1" kindref="member">CloseDevice</ref>(device);<sp/></highlight><highlight class="comment">//TODO<sp/>How<sp/>to<sp/>verify?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>static<sp/>extern<sp/>void<sp/>LeapDestroyConnection<sp/>(LEAP_CONNECTION<sp/>connection);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="506" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a34eb0854ca584dca96bc4e06c3eb7b36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a34eb0854ca584dca96bc4e06c3eb7b36" kindref="member">TestDestroyConnection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref><sp/>config<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g" kindref="compound">LEAP_CONNECTION_CONFIG</ref>();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(ref<sp/>config,<sp/>out<sp/>connHandle);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(connHandle<sp/>==<sp/>IntPtr.Zero,<sp/></highlight><highlight class="stringliteral">&quot;configured<sp/>connection<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1aa8924a99915ab03a814c211b9a9536c3" kindref="member">DestroyConnection</ref>(connHandle);<sp/></highlight><highlight class="comment">//TODO<sp/>How<sp/>to<sp/>verify?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="516" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1aa01479ceba9659a80f925a8fe6b8353a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1aa01479ceba9659a80f925a8fe6b8353a" kindref="member">TestBoolConfigReadWrite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>requestId<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;image_processing_auto_flip&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>out<sp/>requestId);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>save<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange,<sp/>configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ab87d60121e7d5cc24b3ac9a072b20e8d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___c_h_a_n_g_e___e_v_e_n_t" kindref="compound">LEAP_CONFIG_CHANGE_EVENT</ref><sp/>response;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_CHANGE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>ReturnedRequestID<sp/>=<sp/>response.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___c_h_a_n_g_e___e_v_e_n_t_1aa40d14841ec918c7594c27b7d2943790" kindref="member">requestId</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestId,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>.Debug.Log(</highlight><highlight class="stringliteral">&quot;Response<sp/>status:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>response.status);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(response.status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//read<sp/>the<sp/>value<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>requestID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;image_processing_auto_flip&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Logger.Log<sp/>(&quot;Msg<sp/>type:<sp/>&quot;<sp/>+<sp/>configMsg.type);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse,<sp/>configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ab87d60121e7d5cc24b3ac9a072b20e8d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t" kindref="compound">LEAP_CONFIG_RESPONSE_EVENT</ref><sp/>set_response;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>set_response);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(configMsg);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(set_response);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(set_response.value);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReturnedRequestID<sp/>=<sp/>set_response.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t_1a199913488104b8861fb23bed170302e9" kindref="member">requestId</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Boolean,<sp/>set_response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>a<sp/>Boolean<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.False(set_response.value.boolValue<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Auto-flip<sp/>is<sp/>disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>to<sp/>opposite<sp/>boolean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;image_processing_auto_flip&quot;</highlight><highlight class="normal">,<sp/>(set_response.value.boolValue<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>out<sp/>requestId);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//read<sp/>the<sp/>value<sp/>back<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;image_processing_auto_flip&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Logger.Log<sp/>(&quot;Msg<sp/>type:<sp/>&quot;<sp/>+<sp/>configMsg.type);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>set_response);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(configMsg);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(set_response);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Logger.LogStruct(set_response.value);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReturnedRequestID<sp/>=<sp/>set_response.requestId;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Boolean,<sp/>set_response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>a<sp/>Boolean<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(set_response.value.boolValue<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Auto-flip<sp/>is<sp/>enabled<sp/>again&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>[Ignore(</highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>no<sp/>public-facing<sp/>float<sp/>config<sp/>settings.<sp/>(The<sp/>LeapC<sp/>gestures<sp/>API<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;deprecated.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="610" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1accf1499cc14bcc1ced1847bc9117efb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1accf1499cc14bcc1ced1847bc9117efb8" kindref="member">TestReadFloatConfig</ref>()<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>requestID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;Gesture.Swipe.MinVelocity&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>configMsg.type);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t" kindref="compound">LEAP_CONFIG_RESPONSE_EVENT</ref><sp/>response;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>ReturnedRequestID<sp/>=<sp/>response.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t_1a199913488104b8861fb23bed170302e9" kindref="member">requestId</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Float,<sp/>response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>a<sp/>Float<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(response.value.floatValue<sp/>!=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.NaN,<sp/></highlight><highlight class="stringliteral">&quot;Is<sp/>a<sp/>float&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(1000,<sp/>response.value.floatValue,<sp/></highlight><highlight class="stringliteral">&quot;Swipe<sp/>min<sp/>velocity<sp/>is<sp/>3mm,<sp/>the<sp/>default<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>[Ignore(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>does<sp/>not<sp/>document<sp/>any<sp/>float<sp/>config<sp/>settings<sp/>to<sp/>test<sp/>this<sp/>with.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="652" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a2fa791a01bb6eab31427eed6d885e5d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a2fa791a01bb6eab31427eed6d885e5d7" kindref="member">TestFloatConfigReadWrite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>to<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>requestID<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tool_radius_filtering&quot;</highlight><highlight class="normal">,<sp/>3.0f,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>save<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange,<sp/>configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ab87d60121e7d5cc24b3ac9a072b20e8d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___c_h_a_n_g_e___e_v_e_n_t" kindref="compound">LEAP_CONFIG_CHANGE_EVENT</ref><sp/>change;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_CHANGE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>change);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>change.requestId,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(change.status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tool_radius_filtering&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>configMsg.type);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t" kindref="compound">LEAP_CONFIG_RESPONSE_EVENT</ref><sp/>response;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>ReturnedRequestID<sp/>=<sp/>response.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t_1a199913488104b8861fb23bed170302e9" kindref="member">requestId</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Float,<sp/>response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>a<sp/>Float<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(response.value.floatValue<sp/>!=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.NaN,<sp/></highlight><highlight class="stringliteral">&quot;Is<sp/>a<sp/>float&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(3,<sp/>response.value.floatValue,<sp/></highlight><highlight class="stringliteral">&quot;Keytap<sp/>min<sp/>distance<sp/>is<sp/>3mm,<sp/>the<sp/>default<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>to<sp/>something<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tool_radius_filtering&quot;</highlight><highlight class="normal">,<sp/>6.0f,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>save<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange,<sp/>configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ab87d60121e7d5cc24b3ac9a072b20e8d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_CHANGE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>change);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>change.requestId,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(change.status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>again<sp/>to<sp/>verify<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tool_radius_filtering&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>configMsg.type);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReturnedRequestID<sp/>=<sp/>response.requestId;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Third<sp/>Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Float,<sp/>response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>a<sp/>Float<sp/>value<sp/>2nd<sp/>time,<sp/>too&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(response.value.floatValue<sp/>!=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.NaN,<sp/></highlight><highlight class="stringliteral">&quot;Is<sp/>a<sp/>float&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(6.0f,<sp/>response.value.floatValue,<sp/></highlight><highlight class="stringliteral">&quot;Keytap<sp/>min<sp/>distance<sp/>is<sp/>6mm,<sp/>the<sp/>changed<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>[Ignore(</highlight><highlight class="stringliteral">&quot;LeapC<sp/>appears<sp/>to<sp/>have<sp/>a<sp/>problem<sp/>returning<sp/>status:<sp/>true<sp/>for<sp/>a<sp/>successful<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;config<sp/>change<sp/>event<sp/>for<sp/>images_mode.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="756" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1abf861db3c801ee6093aeadd83fcaf034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1abf861db3c801ee6093aeadd83fcaf034" kindref="member">TestInt32ConfigReadWrite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>to<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>requestID<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;images_mode&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>save<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange,<sp/>configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ab87d60121e7d5cc24b3ac9a072b20e8d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___c_h_a_n_g_e___e_v_e_n_t" kindref="compound">LEAP_CONFIG_CHANGE_EVENT</ref><sp/>change;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_CHANGE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>change);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>change.requestId,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(change.status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;images_mode&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>configMsg.type);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t" kindref="compound">LEAP_CONFIG_RESPONSE_EVENT</ref><sp/>response;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>ReturnedRequestID<sp/>=<sp/>response.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t_1a199913488104b8861fb23bed170302e9" kindref="member">requestId</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Int32,<sp/>response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>an<sp/>Int32<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(1,<sp/>response.value.intValue,<sp/></highlight><highlight class="stringliteral">&quot;images_mode<sp/>should<sp/>be<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>something<sp/>else.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;images_mode&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>save<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange,<sp/>configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ab87d60121e7d5cc24b3ac9a072b20e8d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_CHANGE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>change);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>change.requestId,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(change.status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>again<sp/>to<sp/>verify<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;images_mode&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>configMsg.type);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReturnedRequestID<sp/>=<sp/>response.requestId;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_Int32,<sp/>response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>a<sp/>Int32<sp/>value<sp/>the<sp/>second<sp/>time,<sp/>too&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(2,<sp/>response.value.intValue,<sp/></highlight><highlight class="stringliteral">&quot;images_mode<sp/>is<sp/>2,<sp/>the<sp/>changed<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>[Ignore(</highlight><highlight class="stringliteral">&quot;No<sp/>known<sp/>public<sp/>settings<sp/>return<sp/>a<sp/>string.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="856" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a71310966231add3d3e472008c4ec263e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1a71310966231add3d3e472008c4ec263e" kindref="member">TestGetStringConfigValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>requestID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tracking_version&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>configMsg.type);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t___w_i_t_h___r_e_f___t_y_p_e" kindref="compound">LEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE</ref><sp/>response;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>ReturnedRequestID<sp/>=<sp/>response.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t___w_i_t_h___r_e_f___t_y_p_e_1a88e9acc56f20cfc18f551b96a1601209" kindref="member">requestId</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_String,<sp/>response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>a<sp/>String<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(</highlight><highlight class="stringliteral">&quot;v2&quot;</highlight><highlight class="normal">,<sp/>response.value.stringValue,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>expected<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>[Ignore(</highlight><highlight class="stringliteral">&quot;No<sp/>public<sp/>config<sp/>settings<sp/>exist<sp/>for<sp/>strings.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>[Test]</highlight></codeline>
<codeline lineno="899" refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1aec37424aa98f2862249fa54797b69b70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests_1aec37424aa98f2862249fa54797b69b70" kindref="member">TestStringConfigReadWrite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntPtr<sp/>connHandle<sp/>=<sp/>IntPtr.Zero;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a2a35287387889d78359ce9d0965fa706" kindref="member">CreateConnection</ref>(out<sp/>connHandle);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Open<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a18543f45477c803f6858299f5b942f5a" kindref="member">OpenConnection</ref>(connHandle);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Opened<sp/>connection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>for<sp/>device<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>tries;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>msg);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_Device)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(tries,<sp/>100,<sp/></highlight><highlight class="stringliteral">&quot;PollConnection<sp/>timed<sp/>out<sp/>trying<sp/>to<sp/>get<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>ConfigChange<sp/>event.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>to<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>requestID<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tilt_axis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>save<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(attempts,<sp/>1000,<sp/></highlight><highlight class="stringliteral">&quot;PollConnection<sp/>timed<sp/>out<sp/>trying<sp/>to<sp/>get<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>ConfigChange<sp/>event.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange,<sp/>configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ab87d60121e7d5cc24b3ac9a072b20e8d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___c_h_a_n_g_e___e_v_e_n_t" kindref="compound">LEAP_CONFIG_CHANGE_EVENT</ref><sp/>change;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_CHANGE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>change);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>change.requestId,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(change.status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tilt_axis&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>configMsg.type);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(attempts,<sp/>100,<sp/></highlight><highlight class="stringliteral">&quot;PollConnection<sp/>timed<sp/>out<sp/>trying<sp/>to<sp/>get<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>ConfigResponse<sp/>event.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t___w_i_t_h___r_e_f___t_y_p_e" kindref="compound">LEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE</ref><sp/>response;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UInt32<sp/>ReturnedRequestID<sp/>=<sp/>response.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t___w_i_t_h___r_e_f___t_y_p_e_1a88e9acc56f20cfc18f551b96a1601209" kindref="member">requestId</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_String,<sp/>response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>an<sp/>String<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/>response.value.stringValue,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>y.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>to<sp/>something<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.SaveConfigValue(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tilt_axis&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>save<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(attempts,<sp/>1000,<sp/></highlight><highlight class="stringliteral">&quot;PollConnection<sp/>timed<sp/>out<sp/>trying<sp/>to<sp/>get<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>ConfigChange<sp/>event.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigChange,<sp/>configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ab87d60121e7d5cc24b3ac9a072b20e8d" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_CHANGE_EVENT&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>change);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>change.requestId,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.True(change.status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>again<sp/>to<sp/>verify<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestID<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a9dd1b57cd651b609b45e8e476802f86b" kindref="member">RequestConfigValue</ref>(connHandle,<sp/></highlight><highlight class="stringliteral">&quot;tilt_axis&quot;</highlight><highlight class="normal">,<sp/>out<sp/>requestID);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1ae50b07d24c508b84273392b6dcbea1d9" kindref="member">eLeapRS</ref>.eLeapRS_Success,<sp/>result,<sp/></highlight><highlight class="stringliteral">&quot;Config<sp/>value<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e" kindref="compound">LEAP_CONNECTION_MESSAGE</ref>();</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attempts<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>attempts;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_leap_internal_1_1_leap_c" kindref="compound">LeapC</ref>.<ref refid="class_leap_internal_1_1_leap_c_1a4250f3129c57450a2f2b9e718dd6bb11" kindref="member">PollConnection</ref>(connHandle,<sp/>timeout,<sp/>ref<sp/>configMsg);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger.Log(</highlight><highlight class="stringliteral">&quot;Msg<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>configMsg.type);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configMsg.type<sp/>==<sp/><ref refid="namespace_leap_internal_1aa0ca3ef781ee69ce6a3cee33d6067d1a" kindref="member">eLeapEventType</ref>.eLeapEventType_ConfigResponse)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreNotEqual(attempts,<sp/>100,<sp/></highlight><highlight class="stringliteral">&quot;PollConnection<sp/>timed<sp/>out<sp/>trying<sp/>to<sp/>get<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>ConfigResponse<sp/>event.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE&gt;.PtrToStruct(configMsg.<ref refid="struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e_1ac00200c558d42511cd50600bba71bdc3" kindref="member">eventStructPtr</ref>,<sp/>out<sp/>response);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReturnedRequestID<sp/>=<sp/>response.requestId;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(requestID,<sp/>ReturnedRequestID,<sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>ID<sp/>is<sp/>the<sp/>same&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(<ref refid="namespace_leap_internal_1a9c15e305893cd05c1ec6d65cea48737c" kindref="member">eLeapValueType</ref>.eLeapValueType_String,<sp/>response.value.type,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>a<sp/>String<sp/>value<sp/>the<sp/>second<sp/>time,<sp/>too&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>response.value.stringValue,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Editor/Tests/LeapCTests.cs"/>
  </compounddef>
</doxygen>
