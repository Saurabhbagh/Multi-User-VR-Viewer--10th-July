<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Boolean</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_Boolean</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ISerializationCallbackReceiver</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a1d971e8340acfb9075164a5390cda27a" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9dbdff089d05d822688005fa19fef120" kindref="member">ChangeHandler</ref></type>
        <definition>ChangeHandler Valve.VR.SteamVR_Action_Boolean.onChange</definition>
        <argsstring></argsstring>
        <name>onChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever a state changes from false to true or true to false </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="26" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1abacac827162ffe15b71a5ac0f848baee" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ab9ee21a88a5d5d23603465c55796fcf5" kindref="member">UpdateHandler</ref></type>
        <definition>UpdateHandler Valve.VR.SteamVR_Action_Boolean.onUpdate</definition>
        <argsstring></argsstring>
        <name>onUpdate</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the action is updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="30" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ae12c666fba19bc6ed701a72bc8cdc9ed" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a59bb3ba4454fcebc2f1d2ddd661dd38f" kindref="member">StateHandler</ref></type>
        <definition>StateHandler Valve.VR.SteamVR_Action_Boolean.onState</definition>
        <argsstring></argsstring>
        <name>onState</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the boolean action is true and gets updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="34" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af66c5068d4d64878a5ae1b5fc0a70973" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a529f46e4f0459edb2641bbb382d10614" kindref="member">StateDownHandler</ref></type>
        <definition>StateDownHandler Valve.VR.SteamVR_Action_Boolean.onStateDown</definition>
        <argsstring></argsstring>
        <name>onStateDown</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the state of the boolean action has changed from false to true in the most recent update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="38" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a3516cf7cfb1a60d2e35cb33766f7ee9b" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a87ebada25dac6016557c3b81e6324b90" kindref="member">StateUpHandler</ref></type>
        <definition>StateUpHandler Valve.VR.SteamVR_Action_Boolean.onStateUp</definition>
        <argsstring></argsstring>
        <name>onStateUp</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> This event fires whenever the state of the boolean action has changed from true to false in the most recent update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="42" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a6a6a7e453cfd9ae522237e818304410e" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean.onActiveChange</definition>
        <argsstring></argsstring>
        <name>onActiveChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> Event fires when the active state (ActionSet active and binding active) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="46" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a8037fe573d3db4ff82e02447d588b7f6" prot="public" static="no" readable="no" writable="no" gettable="no" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" kindref="member">ActiveChangeHandler</ref></type>
        <definition>ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean.onActiveBindingChange</definition>
        <argsstring></argsstring>
        <name>onActiveBindingChange</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> Event fires when the bound state of the binding changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="50" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9378404032027ec121903aef42227c6a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> True when the boolean action is true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="55" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ac7b9134271850b1ff2225d93763d7b55" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.stateDown</definition>
        <argsstring></argsstring>
        <name>stateDown</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> True when the boolean action is true and the last state was false </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="58" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a72a8ac9f25770fb138e9c774bff57570" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.stateUp</definition>
        <argsstring></argsstring>
        <name>stateUp</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> True when the boolean action is false and the last state was true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="61" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ae71b9db566f57de6f618fb3476ac4a5d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.lastState</definition>
        <argsstring></argsstring>
        <name>lastState</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> (previous update) True when the boolean action is true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="65" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a64ec97a985e100ec2279dbdd990e6667" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.lastStateDown</definition>
        <argsstring></argsstring>
        <name>lastStateDown</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> (previous update) True when the boolean action is true and the last state was false </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="68" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9ae6503bdd49781fff0a4ae2ed92a546" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.lastStateUp</definition>
        <argsstring></argsstring>
        <name>lastStateUp</name>
        <briefdescription>
<para><bold>[Shortcut to: <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref>]</bold> (previous update) True when the boolean action is false and the last state was true </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="71" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="71" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a529f46e4f0459edb2641bbb382d10614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Boolean.StateDownHandler</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>StateDownHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a87ebada25dac6016557c3b81e6324b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Boolean.StateUpHandler</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>StateUpHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a59bb3ba4454fcebc2f1d2ddd661dd38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Boolean.StateHandler</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource)</argsstring>
        <name>StateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Boolean.ActiveChangeHandler</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource, bool active)</argsstring>
        <name>ActiveChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9dbdff089d05d822688005fa19fef120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Boolean.ChangeHandler</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState)</argsstring>
        <name>ChangeHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ab9ee21a88a5d5d23603465c55796fcf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Action_Boolean.UpdateHandler</definition>
        <argsstring>(SteamVR_Action_Boolean fromAction, SteamVR_Input_Sources fromSource, bool newState)</argsstring>
        <name>UpdateHandler</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
          <declname>fromAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>fromSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a13dc81923871ae6d319c93a7df9e4e9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.SteamVR_Action_Boolean.SteamVR_Action_Boolean</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_Action_Boolean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="74" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aa0a7eb5f7e02e35fd6922dd30b087f77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.GetStateDown</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetStateDown</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Returns true if the value of the action has been changed to true (from false) in the most recent update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="78" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a4b582272fb4f9c529e519246332e9922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.GetStateUp</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetStateUp</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Returns true if the value of the action has been changed to false (from true) in the most recent update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="85" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a189859c4e3670a461d15e63e9fca059b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.GetState</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetState</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Returns true if the value of the action (state) is currently true </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="92" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a3e90d2e15de3161ebb4a81a2359d107b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.GetLastStateDown</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastStateDown</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>[For the previous update] Returns true if the value of the action has been set to true (from false). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="99" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aaa7751d7c25465162535140bba43e5a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.GetLastStateUp</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastStateUp</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>[For the previous update] Returns true if the value of the action has been set to false (from true). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="106" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aac1600cda39d44d405761e63cf268950" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Action_Boolean.GetLastState</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLastState</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>[For the previous update] Returns true if the value of the action was true. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="113" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aafd99e0f3abcda6a07f8f9b900afe15e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.AddOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the <emphasis>functional</emphasis> active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s active state changes and the corresponding input source</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="122" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ab3b1adf6bf7cab23db177230d68ea943" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.RemoveOnActiveChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnActiveChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing a function when the <emphasis>functional</emphasis> active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound, or when the ActionSet changes state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="131" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a0a88149176505a5fae559faf64494839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.AddOnActiveBindingChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnActiveBindingChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the active state of this action (with the specified inputSource) changes. This happens when the action is bound or unbound </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s active state changes and the corresponding input source</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="139" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ae2ada673d90157f6f51c401f22612860" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.RemoveOnActiveBindingChangeListener</definition>
        <argsstring>(ActiveChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnActiveBindingChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" kindref="member">ActiveChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="147" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a4f96bf86478f1e5f91dec7c32a4a8616" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.AddOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9dbdff089d05d822688005fa19fef120" kindref="member">ChangeHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action (with the specified inputSource) changes </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="155" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ac298fc72527d85d9331a214ac08113ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.RemoveOnChangeListener</definition>
        <argsstring>(ChangeHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnChangeListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9dbdff089d05d822688005fa19fef120" kindref="member">ChangeHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive on change events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="163" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9cf9ddb16979e031c2f4a6f83da82830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.AddOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ab9ee21a88a5d5d23603465c55796fcf5" kindref="member">UpdateHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action (with the specified inputSource) is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="171" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a25fd219a2b7375d1182cedf9922dd2b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.RemoveOnUpdateListener</definition>
        <argsstring>(UpdateHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnUpdateListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ab9ee21a88a5d5d23603465c55796fcf5" kindref="member">UpdateHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="179" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a6c3868c8ed0752981b0814021f26c7cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.AddOnStateDownListener</definition>
        <argsstring>(StateDownHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnStateDownListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a529f46e4f0459edb2641bbb382d10614" kindref="member">StateDownHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action (with the specified inputSource) changes to true (from false). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="187" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af49585bef4b30cf01b02b65a31da5ea5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.RemoveOnStateDownListener</definition>
        <argsstring>(StateDownHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnStateDownListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a529f46e4f0459edb2641bbb382d10614" kindref="member">StateDownHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive update events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="195" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a50f2be0b97d5631bb06a7d1d2dad86d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.AddOnStateUpListener</definition>
        <argsstring>(StateUpHandler functionToCall, SteamVR_Input_Sources inputSource)</argsstring>
        <name>AddOnStateUpListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a87ebada25dac6016557c3b81e6324b90" kindref="member">StateUpHandler</ref></type>
          <declname>functionToCall</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Executes a function when the state of this action (with the specified inputSource) changes to false (from true). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToCall</parametername>
</parameternamelist>
<parameterdescription>
<para>A local function that receives the boolean action who&apos;s state has changed, the corresponding input source, and the new value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="203" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a4d1c65c46143ef782e438f4d80150efc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Boolean.RemoveOnStateUpListener</definition>
        <argsstring>(StateUpHandler functionToStopCalling, SteamVR_Input_Sources inputSource)</argsstring>
        <name>RemoveOnStateUpListener</name>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a87ebada25dac6016557c3b81e6324b90" kindref="member">StateUpHandler</ref></type>
          <declname>functionToStopCalling</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Stops executing the function setup by the corresponding AddListener </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>functionToStopCalling</parametername>
</parameternamelist>
<parameterdescription>
<para>The local function that you&apos;ve setup to receive events</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="211" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="211" bodyend="214"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a5990dec57f304d1291537922462bedf1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Boolean.OnBeforeSerialize</definition>
        <argsstring>()</argsstring>
        <name>OnBeforeSerialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="216" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a18a5902db45f3c8fdd13cb453a51d3af" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void ISerializationCallbackReceiver.</type>
        <definition>void ISerializationCallbackReceiver. Valve.VR.SteamVR_Action_Boolean.OnAfterDeserialize</definition>
        <argsstring>()</argsstring>
        <name>OnAfterDeserialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="220" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="220" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Boolean actions are either true or false. There are a variety of helper events included that will fire for the given input source. They&apos;re prefixed with &quot;on&quot;. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4670">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4666">
        <label>Valve.VR.SteamVR_Action_Boolean</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean"/>
        <childnode refid="4667" relation="public-inheritance">
        </childnode>
        <childnode refid="4668" relation="public-inheritance">
        </childnode>
        <childnode refid="4671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4669">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4670" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4671">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4668">
        <label>ISteamVR_Action_Boolean</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean"/>
        <childnode refid="4669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4667">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4676">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="4672">
        <label>Valve.VR.SteamVR_Action_Boolean</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean"/>
        <childnode refid="4673" relation="public-inheritance">
        </childnode>
        <childnode refid="4674" relation="public-inheritance">
        </childnode>
        <childnode refid="4677" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4675">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="4676" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4677">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="4674">
        <label>ISteamVR_Action_Boolean</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean"/>
        <childnode refid="4675" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4673">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Boolean.cs" bodystart="16" bodyend="224"/>
    <listofallmembers>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a85095931b202ff69185fceaf75e5503a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>actionSet</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a529749f5fa62c29a4faac767cd9ece8d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>active</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a304d2c626023c9dea73f4289c57975b3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af9f3044d5e4868485945b70d907c6bbb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>ActiveChangeHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a5bb4f52dca76a5fda6f9977d787c0402" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>activeDevice</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abf4ed89526fde73c6142fbd458bc1eb8" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>activeDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a78f3e5c201024521dd7f575617f58244" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>activeOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a4aabe825dd43d59f2c23677904f93846" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>activeOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a0a88149176505a5fae559faf64494839" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>AddOnActiveBindingChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aafd99e0f3abcda6a07f8f9b900afe15e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>AddOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a4f96bf86478f1e5f91dec7c32a4a8616" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>AddOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a6c3868c8ed0752981b0814021f26c7cb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>AddOnStateDownListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a50f2be0b97d5631bb06a7d1d2dad86d1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>AddOnStateUpListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9cf9ddb16979e031c2f4a6f83da82830" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>AddOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a129bfbee3aa107bc4fcb46716a240d88" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>changed</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a709444689c4ec680077a341f6cd7b984" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>changed</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afccb197dbb5d721e390e60cce83957f4" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>changedTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a761752bb73a29d2ee597e71a61476c79" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>changedTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9dbdff089d05d822688005fa19fef120" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>ChangeHandler</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1fb56d52a28f0c621007a6b3ea7a71b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af39cd279bc56854ce6cf89402e405a1c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>ForceAddSourceToUpdateList</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1aecfcecacdabb3ca489a137a30f9b1728" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2cf3c55c01761a091db3afb42a3d47f2" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetActiveDevice</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ab5dff6e847415ea70581fb544443738d" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a21f1b8a683a6950f2e2cd1a2bbe42acc" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aac1600cda39d44d405761e63cf268950" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetLastState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a3e90d2e15de3161ebb4a81a2359d107b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetLastStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aaa7751d7c25465162535140bba43e5a2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetLastStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a330a9cf6a0b63e08804318d49e43509e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetLocalizedOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a6ae3b2c4b90917042b1fda3fe54b2d36" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetLocalizedOriginPart</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ad435fe38eac2d62d6ce217644a6586af" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetRenderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a189859c4e3670a461d15e63e9fca059b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aa0a7eb5f7e02e35fd6922dd30b087f77" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a4b582272fb4f9c529e519246332e9922" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1accdc869f6fd50ef15580a271b6de4d30" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>GetTimeLastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a8f32f3e77335f4266e326200072a216c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a648d3f94c79e2ec43ec9846535fbf8ef" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>IsUpdating</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1f350e66dccb7f9124446967e856500" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastActive</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1af78f7edb626305afcd4cbccf10e14b0f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a0c9642e77bd7d7889df24be40da84e41" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastActiveOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a96b5ca1f6b126ef0b1ddda76abdc3535" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastActiveOrigin</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a61423de9edc8a8301e81f2522d635507" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ad31c92ed9c0df791c4cf8f6907dc6d73" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ae71b9db566f57de6f618fb3476ac4a5d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a64ec97a985e100ec2279dbdd990e6667" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9ae6503bdd49781fff0a4ae2ed92a546" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>lastStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a400ef60ea3cecf1cd50d8da97a00d13b" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>localizedOriginName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abfb307a430eb5946c905d07bec79b2aa" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>localizedOriginName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a8037fe573d3db4ff82e02447d588b7f6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>onActiveBindingChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a6a6a7e453cfd9ae522237e818304410e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>onActiveChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a18a5902db45f3c8fdd13cb453a51d3af" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>OnAfterDeserialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a5990dec57f304d1291537922462bedf1" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>OnBeforeSerialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a1d971e8340acfb9075164a5390cda27a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>onChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ae12c666fba19bc6ed701a72bc8cdc9ed" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>onState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af66c5068d4d64878a5ae1b5fc0a70973" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>onStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a3516cf7cfb1a60d2e35cb33766f7ee9b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>onStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1abacac827162ffe15b71a5ac0f848baee" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>onUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ae2ada673d90157f6f51c401f22612860" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>RemoveOnActiveBindingChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ab3b1adf6bf7cab23db177230d68ea943" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>RemoveOnActiveChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ac298fc72527d85d9331a214ac08113ed" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>RemoveOnChangeListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1af49585bef4b30cf01b02b65a31da5ea5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>RemoveOnStateDownListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a4d1c65c46143ef782e438f4d80150efc" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>RemoveOnStateUpListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a25fd219a2b7375d1182cedf9922dd2b1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>RemoveOnUpdateListener</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1af302f79ecf325f6507a3aca1de536097" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>renderModelComponentName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1aed8fb392a34de9c8840578c4a3f6a9ba" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>renderModelComponentName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a9378404032027ec121903aef42227c6a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>state</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ac7b9134271850b1ff2225d93763d7b55" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>stateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a529f46e4f0459edb2641bbb382d10614" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>StateDownHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a59bb3ba4454fcebc2f1d2ddd661dd38f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>StateHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a72a8ac9f25770fb138e9c774bff57570" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>stateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a87ebada25dac6016557c3b81e6324b90" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>StateUpHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a13dc81923871ae6d319c93a7df9e4e9d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>SteamVR_Action_Boolean</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1afd572897e423daf987b7708a6d8dc890" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>trackedDeviceIndex</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a5dbae568b5daf1cfd3b529b00750caae" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>trackedDeviceIndex</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1ab9ee21a88a5d5d23603465c55796fcf5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>UpdateHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2b6e25e75c6ebc79eda8b335abedb031" prot="public" virt="non-virtual" ambiguityscope="SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>updateTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ada770da3da523e6bba5c7b5501a8da9e" prot="public" virt="non-virtual" ambiguityscope="Valve::VR::ISteamVR_Action_Boolean."><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>updateTime</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ac2e658d37dcdb843a0cff2e62cbd84cf" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Boolean</scope><name>UpdateValues</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
