<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in" kind="interface" language="C#" prot="public">
    <compoundname>Valve::VR::ISteamVR_Action_In</compoundname>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action</basecompoundref>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source" prot="public" virt="non-virtual">Valve.VR.ISteamVR_Action_In_Source</basecompoundref>
    <derivedcompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_In&lt; SourceMap, SourceElement &gt;</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1a89831097965f96913740960fa6549c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.ISteamVR_Action_In.UpdateValues</definition>
        <argsstring>()</argsstring>
        <name>UpdateValues</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ac2e658d37dcdb843a0cff2e62cbd84cf">UpdateValues</reimplementedby>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Updates the data for all the input sources the system has detected need to be updated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1a944e45d5e2e494a1bfd8d71989fe6926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.ISteamVR_Action_In.GetRenderModelComponentName</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetRenderModelComponentName</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ad435fe38eac2d62d6ce217644a6586af">GetRenderModelComponentName</reimplementedby>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The name of the component on the render model that caused the action to be updated (not localized) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1ad0ed3e6765d11920e94e259f6ee6b7c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
        <definition>SteamVR_Input_Sources Valve.VR.ISteamVR_Action_In.GetActiveDevice</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetActiveDevice</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a2cf3c55c01761a091db3afb42a3d47f2">GetActiveDevice</reimplementedby>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>The input source that triggered the action to be updated last </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1ab21c1d79f19d11a4d3ee53d373c62cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>uint Valve.VR.ISteamVR_Action_In.GetDeviceIndex</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetDeviceIndex</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a21f1b8a683a6950f2e2cd1a2bbe42acc">GetDeviceIndex</reimplementedby>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Gets the device index for the controller this action is bound to. This can be used for render models or the pose tracking system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1acfd82f764ece664bc376e638fe440dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.ISteamVR_Action_In.GetChanged</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetChanged</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1ab5dff6e847415ea70581fb544443738d">GetChanged</reimplementedby>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Indicates whether or not the data for this action and specified input source has changed since the last update. Determined by <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> or &apos;changeTolerance&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1aa4ff7b17b61ea2e9ab5fe8421ed5e877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.ISteamVR_Action_In.GetLocalizedOriginPart</definition>
        <argsstring>(SteamVR_Input_Sources inputSource, params EVRInputStringBits[] localizedParts)</argsstring>
        <name>GetLocalizedOriginPart</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a6ae3b2c4b90917042b1fda3fe54b2d36">GetLocalizedOriginPart</reimplementedby>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>params <ref refid="namespace_valve_1_1_v_r_1a05e76187bbc5846b9bfb44f6acf13912" kindref="member">EVRInputStringBits</ref> []</type>
          <declname>localizedParts</declname>
        </param>
        <briefdescription>
<para>Gets the localized name of the device that the action corresponds to. Include as many EVRInputStringBits as you want to add to the localized string </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>localizedParts</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem>
<para>VRInputString_Hand - Which hand the origin is in. ex: &quot;Left Hand&quot;.  </para>
</listitem>
<listitem>
<para>VRInputString_ControllerType - What kind of controller the user has in that hand. ex: &quot;Vive Controller&quot;.  </para>
</listitem>
<listitem>
<para>VRInputString_InputSource - What part of that controller is the origin. ex: &quot;Trackpad&quot;.  </para>
</listitem>
<listitem>
<para>VRInputString_All - All of the above. ex: &quot;Left Hand Vive Controller Trackpad&quot;.  </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1a13a0e2e6f5ceb7ea67542364e203b383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.ISteamVR_Action_In.GetLocalizedOrigin</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>GetLocalizedOrigin</name>
        <reimplementedby refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in_1a330a9cf6a0b63e08804318d49e43509e">GetLocalizedOrigin</reimplementedby>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
<para>Gets the localized full name of the device that the action was updated by. ex: &quot;Left Hand Vive Controller Trackpad&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to get data from. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="387" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2436">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="2437">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="2436" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2435">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="2436" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2434">
        <label>Valve.VR.ISteamVR_Action_In</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in"/>
        <childnode refid="2435" relation="public-inheritance">
        </childnode>
        <childnode refid="2437" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2438">
        <label>Valve.VR.SteamVR_Action_In&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
        <childnode refid="2434" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2439">
        <label>Valve::VR::SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
        <childnode refid="2438" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2442">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="2443">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="2442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2441">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="2442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2440">
        <label>Valve.VR.ISteamVR_Action_In</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in"/>
        <childnode refid="2441" relation="public-inheritance">
        </childnode>
        <childnode refid="2443" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" line="337" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_In.cs" bodystart="336" bodyend="388"/>
    <listofallmembers>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a85095931b202ff69185fceaf75e5503a" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>actionSet</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a529749f5fa62c29a4faac767cd9ece8d" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>active</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a304d2c626023c9dea73f4289c57975b3" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>activeBinding</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abf4ed89526fde73c6142fbd458bc1eb8" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>activeDevice</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a4aabe825dd43d59f2c23677904f93846" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>activeOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a709444689c4ec680077a341f6cd7b984" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>changed</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a761752bb73a29d2ee597e71a61476c79" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>changedTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1fb56d52a28f0c621007a6b3ea7a71b" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>direction</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1aecfcecacdabb3ca489a137a30f9b1728" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>fullPath</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_1ad8d90df47697c9e5b43a0a46a241aa85" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>GetActive</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1ad0ed3e6765d11920e94e259f6ee6b7c4" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>GetActiveDevice</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1acfd82f764ece664bc376e638fe440dfd" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>GetChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1ab21c1d79f19d11a4d3ee53d373c62cb4" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>GetDeviceIndex</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1a13a0e2e6f5ceb7ea67542364e203b383" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>GetLocalizedOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1aa4ff7b17b61ea2e9ab5fe8421ed5e877" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>GetLocalizedOriginPart</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1a944e45d5e2e494a1bfd8d71989fe6926" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>GetRenderModelComponentName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_1ae21f01096754a807c68543f61e63bf1c" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>GetShortName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1a8f32f3e77335f4266e326200072a216c" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>handle</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1ad1f350e66dccb7f9124446967e856500" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>lastActive</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source_1af78f7edb626305afcd4cbccf10e14b0f" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>lastActiveBinding</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a96b5ca1f6b126ef0b1ddda76abdc3535" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>lastActiveOrigin</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ad31c92ed9c0df791c4cf8f6907dc6d73" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>lastChanged</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1abfb307a430eb5946c905d07bec79b2aa" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>localizedOriginName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1aed8fb392a34de9c8840578c4a3f6a9ba" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>renderModelComponentName</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1a5dbae568b5daf1cfd3b529b00750caae" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>trackedDeviceIndex</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source_1ada770da3da523e6bba5c7b5501a8da9e" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>updateTime</name></member>
      <member refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in_1a89831097965f96913740960fa6549c27" prot="public" virt="non-virtual"><scope>Valve::VR::ISteamVR_Action_In</scope><name>UpdateValues</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
