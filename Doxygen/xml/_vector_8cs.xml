<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_vector_8cs" kind="file" language="C#">
    <compoundname>Vector.cs</compoundname>
    <innerclass refid="class_leap_1_1_constants" prot="public">Leap::Constants</innerclass>
    <innerclass refid="struct_leap_1_1_vector" prot="public">Leap::Vector</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap" kindref="compound">Leap</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Constants<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>PI<sp/>=<sp/>3.1415926536f;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>DEG_TO_RAD<sp/>=<sp/>0.0174532925f;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RAD_TO_DEG<sp/>=<sp/>57.295779513f;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EPSILON<sp/>=<sp/>1.192092896e-07f;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>[Serializable]</highlight></codeline>
<codeline lineno="37" refid="struct_leap_1_1_vector" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>:<sp/>IEquatable&lt;Vector&gt;<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_leap_1_1_vector_1af056d6d462839c1e5d3d9fa7d0507f11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1af056d6d462839c1e5d3d9fa7d0507f11" kindref="member">operator +</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v1,<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v2)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(v1.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>+<sp/>v2.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/>v1.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>+<sp/>v2.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>,<sp/>v1.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>+<sp/>v2.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_leap_1_1_vector_1ac35b7560d4ac5acb9217120aa6281f41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1ac35b7560d4ac5acb9217120aa6281f41" kindref="member">operator -</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v1,<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v2)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(v1.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>-<sp/>v2.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/>v1.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>-<sp/>v2.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>,<sp/>v1.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>-<sp/>v2.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="struct_leap_1_1_vector_1a9189471d23ea61609806cbee7b1808bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a9189471d23ea61609806cbee7b1808bf" kindref="member">operator *</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(v1.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>*<sp/>scalar,<sp/>v1.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>*<sp/>scalar,<sp/>v1.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>*<sp/>scalar);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_leap_1_1_vector_1a7a1839d6ea30d92eb3a7591b73c41a63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a7a1839d6ea30d92eb3a7591b73c41a63" kindref="member">operator *</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalar,<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v1)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(v1.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>*<sp/>scalar,<sp/>v1.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>*<sp/>scalar,<sp/>v1.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>*<sp/>scalar);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="struct_leap_1_1_vector_1a8a707fa512d65682a773f87308c6d0e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a8a707fa512d65682a773f87308c6d0e9" kindref="member">operator /</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalar)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(v1.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>/<sp/>scalar,<sp/>v1.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>/<sp/>scalar,<sp/>v1.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>/<sp/>scalar);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="struct_leap_1_1_vector_1ab08ec541871ec6fefb7f66331fdb6f0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1ab08ec541871ec6fefb7f66331fdb6f0d" kindref="member">operator -</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v1)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(-v1.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/>-v1.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>,<sp/>-v1.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_leap_1_1_vector_1ae3811a09e999d99576d40d361d5871fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1ae3811a09e999d99576d40d361d5871fd" kindref="member">operator ==</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v1,<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v2)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v1.<ref refid="struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de" kindref="member">Equals</ref>(v2);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_leap_1_1_vector_1a6c834842a05008442e86353a7209d17b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a6c834842a05008442e86353a7209d17b" kindref="member">operator !=</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v1,<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v2)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!v1.<ref refid="struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de" kindref="member">Equals</ref>(v2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="struct_leap_1_1_vector_1ac5cd8263402ee3da54d342c65bde2511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/><ref refid="struct_leap_1_1_vector_1ac5cd8263402ee3da54d342c65bde2511" kindref="member">ToFloatArray</ref>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[]<sp/>{<sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>,<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>)<sp/>:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.x<sp/>=<sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.y<sp/>=<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this.z<sp/>=<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="struct_leap_1_1_vector_1a1058e5cc80c4eb8f521f485269f7b614" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a1058e5cc80c4eb8f521f485269f7b614" kindref="member">Vector</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>vector)<sp/>:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>=<sp/>vector.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>=<sp/>vector.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>=<sp/>vector.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="struct_leap_1_1_vector_1a9a192946523c91fc5aec3541cc09b762" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a9a192946523c91fc5aec3541cc09b762" kindref="member">DistanceTo</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)Math.Sqrt((<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>-<sp/>other.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>)<sp/>*<sp/>(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>-<sp/>other.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>)<sp/>+</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>-<sp/>other.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>)<sp/>*<sp/>(<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>-<sp/>other.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>)<sp/>+</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>-<sp/>other.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>)<sp/>*<sp/>(<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>-<sp/>other.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="struct_leap_1_1_vector_1a5833741990af0c182a41c75053d628b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a5833741990af0c182a41c75053d628b7" kindref="member">AngleTo</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/><ref refid="struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143" kindref="member">MagnitudeSquared</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143" kindref="member">MagnitudeSquared</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denom<sp/>&lt;=<sp/>Constants.EPSILON)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804" kindref="member">Dot</ref>(other)<sp/>/<sp/>(float)Math.Sqrt(denom);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;=<sp/>1.0f)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&lt;=<sp/>-1.0f)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Constants.PI;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)Math.Acos(val);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804" kindref="member">Dot</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>)<sp/>+<sp/>(<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>)<sp/>+<sp/>(<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="struct_leap_1_1_vector_1acdd326aa3bd6ac8eaf4d0c321db129cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1acdd326aa3bd6ac8eaf4d0c321db129cb" kindref="member">Cross</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>((<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>)<sp/>-<sp/>(<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>)<sp/>-<sp/>(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>)<sp/>-<sp/>(<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>*<sp/>other.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="struct_leap_1_1_vector_1a0da414710f7b4d8bab10ed4685750599" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a0da414710f7b4d8bab10ed4685750599" kindref="member">ToString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de" kindref="member">Equals</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>.NearlyEquals(v.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>)<sp/>&amp;&amp;<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>.NearlyEquals(v.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>)<sp/>&amp;&amp;<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>.NearlyEquals(v.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="struct_leap_1_1_vector_1a024719e566f2af651da6494e0f5cd86c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a024719e566f2af651da6494e0f5cd86c" kindref="member">Equals</ref>(<ref refid="_t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref><sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj<sp/>is<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>&amp;&amp;<sp/><ref refid="struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de" kindref="member">Equals</ref>((<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref>)obj);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="struct_leap_1_1_vector_1aae57324c0e393fc8f8b799092964efbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aae57324c0e393fc8f8b799092964efbb" kindref="member">IsValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.IsNaN(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>)<sp/>||<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.IsInfinity(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>)<sp/>||</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.IsNaN(<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>)<sp/>||<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.IsInfinity(<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>)<sp/>||</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.IsNaN(<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>)<sp/>||<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.IsInfinity(<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="struct_leap_1_1_vector_1af92a9eb06277dd8eebbf3e1cf61360ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">[uint<sp/>index]<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IndexOutOfRangeException();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IndexOutOfRangeException();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="220" refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="221" refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="struct_leap_1_1_vector_1afd51a6a7664efda2e5dde7a5e6a5313a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1afd51a6a7664efda2e5dde7a5e6a5313a" kindref="member">Magnitude</ref><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)Math.Sqrt(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>*<sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>+<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>*<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>+<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>*<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143" kindref="member">MagnitudeSquared</ref><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>*<sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>+<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>*<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>+<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>*<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>;<sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="struct_leap_1_1_vector_1acc5105f55edfdc7a3d5cc6cd6cb8dc8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1acc5105f55edfdc7a3d5cc6cd6cb8dc8f" kindref="member">Pitch</ref><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)Math.Atan2(<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>,<sp/>-<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);<sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="struct_leap_1_1_vector_1afa775e6c104537383493e027f6a462f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1afa775e6c104537383493e027f6a462f7" kindref="member">Roll</ref><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)Math.Atan2(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/>-<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>);<sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="struct_leap_1_1_vector_1ac6f5feaf332862e1ebc0d5b219e55eaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1ac6f5feaf332862e1ebc0d5b219e55eaa" kindref="member">Yaw</ref><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)Math.Atan2(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>,<sp/>-<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>);<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="struct_leap_1_1_vector_1a14c14f9559420ad1f1a9e1b8884859c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a14c14f9559420ad1f1a9e1b8884859c4" kindref="member">Normalized</ref><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/><ref refid="struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143" kindref="member">MagnitudeSquared</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denom<sp/>&lt;=<sp/>Constants.EPSILON)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b" kindref="member">Zero</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denom<sp/>=<sp/>1.0f<sp/>/<sp/>(float)Math.Sqrt(denom);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>*<sp/>denom,<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>*<sp/>denom,<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>*<sp/>denom);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b" kindref="member">Zero</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d" kindref="member">Ones</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="struct_leap_1_1_vector_1ad62a202318bf591b431928859449b19c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1ad62a202318bf591b431928859449b19c" kindref="member">XAxis</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="struct_leap_1_1_vector_1abf07de0f419b3de5776e046d35c0843e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1abf07de0f419b3de5776e046d35c0843e" kindref="member">YAxis</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="struct_leap_1_1_vector_1a2b2f1a3a9334e812e832e3b1b6cd4384" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a2b2f1a3a9334e812e832e3b1b6cd4384" kindref="member">ZAxis</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="struct_leap_1_1_vector_1a2ec88fe91f8086e18e78ee2dcc078525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a2ec88fe91f8086e18e78ee2dcc078525" kindref="member">Forward</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="struct_leap_1_1_vector_1ad8dd1ac8e87611c590c9dcc58f8fdf8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1ad8dd1ac8e87611c590c9dcc58f8fdf8c" kindref="member">Backward</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="struct_leap_1_1_vector_1a62b9bbd54a4b89f695a106f42fcff881" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a62b9bbd54a4b89f695a106f42fcff881" kindref="member">Left</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(-1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="struct_leap_1_1_vector_1aa2cefa3d6f93e552fcd95621e82da158" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1aa2cefa3d6f93e552fcd95621e82da158" kindref="member">Right</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="struct_leap_1_1_vector_1ad90a5266422b507db81c857829b9a915" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1ad90a5266422b507db81c857829b9a915" kindref="member">Up</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="struct_leap_1_1_vector_1a5f080cc88e908cd5d4c3e593767cdb17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a5f080cc88e908cd5d4c3e593767cdb17" kindref="member">Down</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(0,<sp/>-1,<sp/>0);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="struct_leap_1_1_vector_1a5732837cc5c84d689d44d9f3836fe639" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/><ref refid="struct_leap_1_1_vector_1a5732837cc5c84d689d44d9f3836fe639" kindref="member">Lerp</ref>(<ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>a,<sp/><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d" kindref="member">Vector</ref>(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>+<sp/>t<sp/>*<sp/>(b.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref><sp/>-<sp/>a.<ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>+<sp/>t<sp/>*<sp/>(b.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref><sp/>-<sp/>a.<ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>+<sp/>t<sp/>*<sp/>(b.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref><sp/>-<sp/>a.<ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="struct_leap_1_1_vector_1aa95778cb029f0b2b59e7077eb1c3c980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_leap_1_1_vector_1aa95778cb029f0b2b59e7077eb1c3c980" kindref="member">GetHashCode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unchecked<sp/></highlight><highlight class="comment">//<sp/>Overflow<sp/>is<sp/>fine,<sp/>just<sp/>wrap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>hash<sp/>*<sp/>23<sp/>+<sp/><ref refid="struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828" kindref="member">x</ref>.GetHashCode();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>hash<sp/>*<sp/>23<sp/>+<sp/><ref refid="struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d" kindref="member">y</ref>.GetHashCode();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>hash<sp/>*<sp/>23<sp/>+<sp/><ref refid="struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658" kindref="member">z</ref>.GetHashCode();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs"/>
  </compounddef>
</doxygen>
