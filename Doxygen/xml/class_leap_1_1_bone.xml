<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_bone" kind="class" language="C#" prot="public">
    <compoundname>Leap::Bone</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IEquatable&lt; Bone &gt;</basecompoundref>
    <derivedcompoundref refid="class_leap_1_1_arm" prot="public" virt="non-virtual">Leap.Arm</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" prot="public" static="no" strong="yes">
        <type></type>
        <name>BoneType</name>
        <enumvalue id="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1ba0fec0d0c3308929a666b6e0e02f94a6d" prot="public">
          <name>TYPE_INVALID</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1ba711438f98489249610b9a4af0fd4c684" prot="public">
          <name>TYPE_METACARPAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1ba703123d4643846a00cc1fa9918555ea3" prot="public">
          <name>TYPE_PROXIMAL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1ba8d41e97ce589f9fae8052d4c604bf6a7" prot="public">
          <name>TYPE_INTERMEDIATE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1bac2d342e17f0c97e224c258a3ba1f7e0c" prot="public">
          <name>TYPE_DISTAL</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerates the type of bones. </para>
        </briefdescription>
        <detaileddescription>
<para>Members of this enumeration are returned by <ref refid="class_leap_1_1_bone_1a45b59267b7a357e45ccf28a8c2daf0a6" kindref="member">Bone.Type()</ref> to identify a <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> object. <simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="169" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="169" bodyend="175"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_leap_1_1_bone_1a9bf9d79aa10edd70baa3d27e8bac0730" prot="public" static="no" mutable="no">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Leap.Bone.PrevJoint</definition>
        <argsstring></argsstring>
        <name>PrevJoint</name>
        <briefdescription>
<para>The base of the bone, closest to the wrist. In anatomical terms, this is the proximal end of the bone. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="84" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_bone_1ac0923c0228d11208289b81ff8ed208b7" prot="public" static="no" mutable="no">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Leap.Bone.NextJoint</definition>
        <argsstring></argsstring>
        <name>NextJoint</name>
        <briefdescription>
<para>The end of the bone, closest to the finger tip. In anatomical terms, this is the distal end of the bone. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="91" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_bone_1a820e1a7a9975c41ca14aec7c806b9c65" prot="public" static="no" mutable="no">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Leap.Bone.Center</definition>
        <argsstring></argsstring>
        <name>Center</name>
        <briefdescription>
<para>The midpoint of the bone. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="97" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_bone_1a15e47cfdff3b474b9da055ae15aec82e" prot="public" static="no" mutable="no">
        <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector Leap.Bone.Direction</definition>
        <argsstring></argsstring>
        <name>Direction</name>
        <briefdescription>
<para>The normalized direction of the bone from base to tip. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="103" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_bone_1ab10b9823a94b21069ded7fe9cbf92dc8" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Leap.Bone.Length</definition>
        <argsstring></argsstring>
        <name>Length</name>
        <briefdescription>
<para>The estimated length of the bone. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="109" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_bone_1a1bea3ae48af0c138e0423276191ed8ab" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Leap.Bone.Width</definition>
        <argsstring></argsstring>
        <name>Width</name>
        <briefdescription>
<para>The average width of the flesh around the bone. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="115" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_bone_1a45b59267b7a357e45ccf28a8c2daf0a6" prot="public" static="no" mutable="no">
        <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">BoneType</ref></type>
        <definition>BoneType Leap.Bone.Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
<para>The type of this bone. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="121" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_bone_1a1531c2eecaace7d4532e78f903f3b59a" prot="public" static="no" mutable="no">
        <type><ref refid="struct_leap_1_1_leap_quaternion" kindref="compound">LeapQuaternion</ref></type>
        <definition>LeapQuaternion Leap.Bone.Rotation</definition>
        <argsstring></argsstring>
        <name>Rotation</name>
        <briefdescription>
<para>The orientation of this <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> as a Quaternion. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="127" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_leap_1_1_bone_1a3918f3a7fe8406e54c4715aed7504ab9" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="struct_leap_1_1_leap_transform" kindref="compound">LeapTransform</ref></type>
        <definition>LeapTransform Leap.Bone.Basis</definition>
        <argsstring></argsstring>
        <name>Basis</name>
        <briefdescription>
<para>The orthonormal basis vectors for this <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> as a <ref refid="struct_leap_1_1_matrix" kindref="compound">Matrix</ref>. The orientation of this <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> as a Quaternion. </para>
        </briefdescription>
        <detaileddescription>
<para>Basis vectors specify the orientation of a bone.</para>
<para><bold>xBasis</bold> Perpendicular to the longitudinal axis of the bone; exits the sides of the finger.</para>
<para><bold>yBasis or up vector</bold> Perpendicular to the longitudinal axis of the bone; exits the top and bottom of the finger. More positive in the upward direction.</para>
<para><bold>zBasis</bold> Aligned with the longitudinal axis of the bone. More positive toward the base of the finger.</para>
<para>The bases provided for the right hand use the right-hand rule; those for the left hand use the left-hand rule. Thus, the positive direction of the x-basis is to the right for the right hand and to the left for the left hand. You can change from right-hand to left-hand rule by multiplying the z basis vector by -1.</para>
<para>You can use the basis vectors for such purposes as measuring complex finger poses and skeletal animation.</para>
<para>Note that converting the basis vectors directly into a quaternion representation is not mathematically valid. If you use quaternions, create them from the derived rotation matrix not directly from the bases.</para>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="160" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="160" bodyend="160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_leap_1_1_bone_1aa9d04e2a54120f2981563db7cdf2a401" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Bone.Bone</definition>
        <argsstring>()</argsstring>
        <name>Bone</name>
        <briefdescription>
<para>Constructs a default invalid <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="34" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_bone_1adf72dc85b5d6205d225a7b5b72e2cb9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Bone.Bone</definition>
        <argsstring>(Vector prevJoint, Vector nextJoint, Vector center, Vector direction, float length, float width, Bone.BoneType type, LeapQuaternion rotation)</argsstring>
        <name>Bone</name>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>prevJoint</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>nextJoint</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>center</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>float</type>
          <declname>length</declname>
        </param>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">Bone.BoneType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct_leap_1_1_leap_quaternion" kindref="compound">LeapQuaternion</ref></type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>3.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="42" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="42" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_bone_1a12466a8894f026da28e3ff013f305e0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Leap.Bone.Equals</definition>
        <argsstring>(Bone other)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> object equality. </para>
        </briefdescription>
        <detaileddescription>
<para>Two <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> objects are equal if and only if both <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> objects represent the exact same physical bone in the same frame and both <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> objects are valid. <simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="67" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_bone_1a989b912919381795458a53dcb01dae74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override string</type>
        <definition>override string Leap.Bone.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>A string containing a brief, human readable description of the <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="75" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="75" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> class represents a tracked bone. </para>
    </briefdescription>
    <detaileddescription>
<para>All fingers contain 4 bones that make up the anatomy of the finger. Get valid <ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref> objects from a <ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref> object.</para>
<para>Bones are ordered from base to tip, indexed from 0 to 3. Additionally, the bone&apos;s Type enum may be used to index a specific bone anatomically.</para>
<para>The thumb does not have a base metacarpal bone and therefore contains a valid, zero length bone at that location. <simplesect kind="since"><para>2.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="341">
        <label>Leap.Bone</label>
        <link refid="class_leap_1_1_bone"/>
        <childnode refid="342" relation="public-inheritance">
        </childnode>
      </node>
      <node id="342">
        <label>IEquatable&lt; Bone &gt;</label>
      </node>
      <node id="343">
        <label>Leap.Arm</label>
        <link refid="class_leap_1_1_arm"/>
        <childnode refid="341" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="348">
        <label>Leap.Vector</label>
        <link refid="struct_leap_1_1_vector"/>
        <childnode refid="349" relation="public-inheritance">
        </childnode>
        <childnode refid="348" relation="usage">
          <edgelabel>Down</edgelabel>
          <edgelabel>XAxis</edgelabel>
          <edgelabel>YAxis</edgelabel>
          <edgelabel>Backward</edgelabel>
          <edgelabel>ZAxis</edgelabel>
          <edgelabel>Forward</edgelabel>
          <edgelabel>Left</edgelabel>
          <edgelabel>Right</edgelabel>
          <edgelabel>Zero</edgelabel>
          <edgelabel>Up</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="344">
        <label>Leap.Bone</label>
        <link refid="class_leap_1_1_bone"/>
        <childnode refid="345" relation="public-inheritance">
        </childnode>
        <childnode refid="346" relation="usage">
          <edgelabel>Rotation</edgelabel>
        </childnode>
        <childnode refid="348" relation="usage">
          <edgelabel>Center</edgelabel>
          <edgelabel>PrevJoint</edgelabel>
          <edgelabel>Direction</edgelabel>
          <edgelabel>NextJoint</edgelabel>
        </childnode>
      </node>
      <node id="345">
        <label>IEquatable&lt; Bone &gt;</label>
      </node>
      <node id="349">
        <label>IEquatable&lt; Vector &gt;</label>
      </node>
      <node id="347">
        <label>IEquatable&lt; LeapQuaternion &gt;</label>
      </node>
      <node id="346">
        <label>Leap.LeapQuaternion</label>
        <link refid="struct_leap_1_1_leap_quaternion"/>
        <childnode refid="347" relation="public-inheritance">
        </childnode>
        <childnode refid="346" relation="usage">
          <edgelabel>Identity</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" line="27" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Bone.cs" bodystart="27" bodyend="176"/>
    <listofallmembers>
      <member refid="class_leap_1_1_bone_1a3918f3a7fe8406e54c4715aed7504ab9" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Basis</name></member>
      <member refid="class_leap_1_1_bone_1aa9d04e2a54120f2981563db7cdf2a401" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Bone</name></member>
      <member refid="class_leap_1_1_bone_1adf72dc85b5d6205d225a7b5b72e2cb9e" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Bone</name></member>
      <member refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>BoneType</name></member>
      <member refid="class_leap_1_1_bone_1a820e1a7a9975c41ca14aec7c806b9c65" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Center</name></member>
      <member refid="class_leap_1_1_bone_1a15e47cfdff3b474b9da055ae15aec82e" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Direction</name></member>
      <member refid="class_leap_1_1_bone_1a12466a8894f026da28e3ff013f305e0d" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Equals</name></member>
      <member refid="class_leap_1_1_bone_1ab10b9823a94b21069ded7fe9cbf92dc8" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Length</name></member>
      <member refid="class_leap_1_1_bone_1ac0923c0228d11208289b81ff8ed208b7" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>NextJoint</name></member>
      <member refid="class_leap_1_1_bone_1a9bf9d79aa10edd70baa3d27e8bac0730" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>PrevJoint</name></member>
      <member refid="class_leap_1_1_bone_1a1531c2eecaace7d4532e78f903f3b59a" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Rotation</name></member>
      <member refid="class_leap_1_1_bone_1a989b912919381795458a53dcb01dae74" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>ToString</name></member>
      <member refid="class_leap_1_1_bone_1a45b59267b7a357e45ccf28a8c2daf0a6" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Type</name></member>
      <member refid="class_leap_1_1_bone_1a1bea3ae48af0c138e0423276191ed8ab" prot="public" virt="non-virtual"><scope>Leap::Bone</scope><name>Width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
