<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Action_Vibration_Source</compoundname>
    <basecompoundref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___out___source" prot="public" virt="non-virtual">Valve.VR.SteamVR_Action_Out_Source</basecompoundref>
      <sectiondef kind="event">
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a231dc12e70ed1fae1efb7b3ae18332e3" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration_1a7706b3c9b71de3bea16a3fab8a882f0b" kindref="member">SteamVR_Action_Vibration.ActiveChangeHandler</ref></type>
        <definition>SteamVR_Action_Vibration.ActiveChangeHandler Valve.VR.SteamVR_Action_Vibration_Source.onActiveChange</definition>
        <argsstring></argsstring>
        <name>onActiveChange</name>
        <briefdescription>
<para>Event fires when the active state (ActionSet active and binding active) changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="138" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a5c652e9aaf0ceb77d49e033bae6ed6bb" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration_1a7706b3c9b71de3bea16a3fab8a882f0b" kindref="member">SteamVR_Action_Vibration.ActiveChangeHandler</ref></type>
        <definition>SteamVR_Action_Vibration.ActiveChangeHandler Valve.VR.SteamVR_Action_Vibration_Source.onActiveBindingChange</definition>
        <argsstring></argsstring>
        <name>onActiveBindingChange</name>
        <briefdescription>
<para>Event fires when the active state of the binding changes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="141" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a926343ccb67835caf49722a792e2b49b" prot="public" static="no" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration_1ac075e9e8f3e9eea89be32c403e6f86d5" kindref="member">SteamVR_Action_Vibration.ExecuteHandler</ref></type>
        <definition>SteamVR_Action_Vibration.ExecuteHandler Valve.VR.SteamVR_Action_Vibration_Source.onExecute</definition>
        <argsstring></argsstring>
        <name>onExecute</name>
        <briefdescription>
<para>Event fires whenever this action is executed </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="144" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a82d5c3aea68157b88ea8693b888b67bf" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Vibration_Source.active</definition>
        <argsstring></argsstring>
        <name>active</name>
        <briefdescription>
<para>Returns true if this action is bound and the ActionSet is active </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="148" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a70fcfe02e0523d10e61c7008787c8121" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Vibration_Source.activeBinding</definition>
        <argsstring></argsstring>
        <name>activeBinding</name>
        <briefdescription>
<para>Returns true if the action is bound </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="151" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a6e6f97ddcab58758406ca07a89229cc6" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Vibration_Source.lastActive</definition>
        <argsstring></argsstring>
        <name>lastActive</name>
        <briefdescription>
<para>Returns true if the action was bound and the ActionSet was active during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="155" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1ab8c8888abdaff13495a29b745eef570c" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>override bool</type>
        <definition>override bool Valve.VR.SteamVR_Action_Vibration_Source.lastActiveBinding</definition>
        <argsstring></argsstring>
        <name>lastActiveBinding</name>
        <briefdescription>
<para>Returns true if the action was bound during the previous update </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="158" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a2f425ed7a25b1835ff7a4e601494999b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="yes">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_Action_Vibration_Source.timeLastExecuted</definition>
        <argsstring></argsstring>
        <name>timeLastExecuted</name>
        <briefdescription>
<para>The last time the execute method was called on this action </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="161" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="161" bodyend="161"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a8f0e168bf7b928aa71c8d02d7ec6d7fd" prot="protected" static="no" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration" kindref="compound">SteamVR_Action_Vibration</ref></type>
        <definition>SteamVR_Action_Vibration Valve.VR.SteamVR_Action_Vibration_Source.vibrationAction</definition>
        <argsstring></argsstring>
        <name>vibrationAction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="163" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1afb6813404b87deef9ec2352046d739eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Vibration_Source.Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa4784c092cc0a4372812834bfcceab6d">Initialize</reimplements>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Initializes the handle for the inputSource, and any other related <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="170" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="170" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a4fcbc01468b2bfd6be93ef24f6ae1aa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void Valve.VR.SteamVR_Action_Vibration_Source.Preinitialize</definition>
        <argsstring>(SteamVR_Action wrappingAction, SteamVR_Input_Sources forInputSource)</argsstring>
        <name>Preinitialize</name>
        <reimplements refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa2bec7f32b37595de01f1456a3fa5bfe">Preinitialize</reimplements>
        <param>
          <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
          <declname>wrappingAction</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>forInputSource</declname>
        </param>
        <briefdescription>
<para><bold>[Should not be called by user code]</bold> Sets up the internals of the action source before <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="177" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="177" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a657db1c2eaf70175fb41b3f28d215edb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_Action_Vibration_Source.Execute</definition>
        <argsstring>(float secondsFromNow, float durationSeconds, float frequency, float amplitude)</argsstring>
        <name>Execute</name>
        <param>
          <type>float</type>
          <declname>secondsFromNow</declname>
        </param>
        <param>
          <type>float</type>
          <declname>durationSeconds</declname>
        </param>
        <param>
          <type>float</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amplitude</declname>
        </param>
        <briefdescription>
<para>Trigger the haptics at a certain time for a certain length </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secondsFromNow</parametername>
</parameternamelist>
<parameterdescription>
<para>How long from the current time to execute the action (in seconds - can be 0)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>durationSeconds</parametername>
</parameternamelist>
<parameterdescription>
<para>How long the haptic action should last (in seconds)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>How often the haptic motor should bounce (0 - 320 in hz. The lower end being more useful)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amplitude</parametername>
</parameternamelist>
<parameterdescription>
<para>How intense the haptic action should be (0 - 1)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The device you would like to execute the haptic action. Any if the action is not device specific.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="193" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="193" bodyend="209"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5026">
        <label>SteamVR_Action_Out_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___out___source"/>
        <childnode refid="5027" relation="public-inheritance">
        </childnode>
        <childnode refid="5029" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5028">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="5029">
        <label>ISteamVR_Action_Out_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out___source"/>
        <childnode refid="5028" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5027">
        <label>SteamVR_Action_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source"/>
        <childnode refid="5028" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5025">
        <label>Valve.VR.SteamVR_Action_Vibration_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source"/>
        <childnode refid="5026" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5039">
        <label>Valve.VR.SteamVR_Action_Vibration</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration"/>
        <childnode refid="5040" relation="public-inheritance">
        </childnode>
        <childnode refid="5041" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5031">
        <label>SteamVR_Action_Out_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___out___source"/>
        <childnode refid="5032" relation="public-inheritance">
        </childnode>
        <childnode refid="5038" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5033">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="5038">
        <label>ISteamVR_Action_Out_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out___source"/>
        <childnode refid="5033" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5040">
        <label>SteamVR_Action_Out&lt; SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___out"/>
      </node>
      <node id="5041">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="5036">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="5033" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5032">
        <label>SteamVR_Action_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source"/>
        <childnode refid="5033" relation="public-inheritance">
        </childnode>
        <childnode refid="5034" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="5034">
        <label>Valve.VR.SteamVR_Action&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action"/>
        <childnode refid="5035" relation="public-inheritance">
        </childnode>
        <childnode refid="5036" relation="public-inheritance">
        </childnode>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
        <childnode refid="5036" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5030">
        <label>Valve.VR.SteamVR_Action_Vibration_Source</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source"/>
        <childnode refid="5031" relation="public-inheritance">
        </childnode>
        <childnode refid="5039" relation="usage">
          <edgelabel>vibrationAction</edgelabel>
        </childnode>
      </node>
      <node id="5035">
        <label>IEquatable&lt; SteamVR_Action &gt;</label>
      </node>
      <node id="5037">
        <label>SteamVR_Action</label>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" line="136" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Action_Vibration.cs" bodystart="135" bodyend="210"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa38bfb4ea2779a73aa3285f861e2462e" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aa26748aead4336e028834777336636bb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>actionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a82d5c3aea68157b88ea8693b888b67bf" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>active</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a70fcfe02e0523d10e61c7008787c8121" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>activeBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a67903c42bb717287d4a1a4a0f972537a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>direction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a657db1c2eaf70175fb41b3f28d215edb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>Execute</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1acc5b9a83a017ceda67f3454bb6cefe25" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a3b11b02fd911ae14ceac84478c5fe986" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1afb6813404b87deef9ec2352046d739eb" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a8610e78de0430e918d74119fe0913697" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>inputSource</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1a427286fbd3c70da9333dc3f513e30e1c" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>inputSourceHandle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a6e6f97ddcab58758406ca07a89229cc6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>lastActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1ab8c8888abdaff13495a29b745eef570c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>lastActiveBinding</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a5c652e9aaf0ceb77d49e033bae6ed6bb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>onActiveBindingChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a231dc12e70ed1fae1efb7b3ae18332e3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>onActiveChange</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a926343ccb67835caf49722a792e2b49b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>onExecute</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a4fcbc01468b2bfd6be93ef24f6ae1aa3" prot="public" virt="virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>Preinitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1aafaed73b850687ab90ecbb2398df57e2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>setActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___source_1afe35f80548857d2da588f8a0c036e3e3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>SteamVR_Action_Source</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a2f425ed7a25b1835ff7a4e601494999b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>timeLastExecuted</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source_1a8f0e168bf7b928aa71c8d02d7ec6d7fd" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Action_Vibration_Source</scope><name>vibrationAction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
