<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_open_v_r_interop" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::OpenVRInterop</compoundname>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1a8f4ca0f27f387edc67d1a82a827f97be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal uint</type>
        <definition>static internal uint Valve.VR.OpenVRInterop.InitInternal</definition>
        <argsstring>(ref EVRInitError peError, EVRApplicationType eApplicationType)</argsstring>
        <name>InitInternal</name>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a5d8a20b60549ae5b7668d73452c7e83e" kindref="member">EVRInitError</ref></type>
          <declname>peError</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a75c95b1b332a3c064198f2eac92ffe07" kindref="member">EVRApplicationType</ref></type>
          <declname>eApplicationType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1a6746e41f6bb62ddabc0937652da72057" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal uint</type>
        <definition>static internal uint Valve.VR.OpenVRInterop.InitInternal2</definition>
        <argsstring>(ref EVRInitError peError, EVRApplicationType eApplicationType, [In, MarshalAs(UnmanagedType.LPStr)] string pStartupInfo)</argsstring>
        <name>InitInternal2</name>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a5d8a20b60549ae5b7668d73452c7e83e" kindref="member">EVRInitError</ref></type>
          <declname>peError</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a75c95b1b332a3c064198f2eac92ffe07" kindref="member">EVRApplicationType</ref></type>
          <declname>eApplicationType</declname>
        </param>
        <param>
          <attributes>[In, MarshalAs(UnmanagedType.LPStr)]</attributes>
          <type>string</type>
          <declname>pStartupInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3675" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1a2cb7442073ee778c5284af2b5ab05c85" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal void</type>
        <definition>static internal void Valve.VR.OpenVRInterop.ShutdownInternal</definition>
        <argsstring>()</argsstring>
        <name>ShutdownInternal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1aa2016321b864f6433c265cdbac8a5584" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal bool</type>
        <definition>static internal bool Valve.VR.OpenVRInterop.IsHmdPresent</definition>
        <argsstring>()</argsstring>
        <name>IsHmdPresent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3679" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1ab73ee9b06c85438a81bfaafcc304c794" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal bool</type>
        <definition>static internal bool Valve.VR.OpenVRInterop.IsRuntimeInstalled</definition>
        <argsstring>()</argsstring>
        <name>IsRuntimeInstalled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3681" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1a5ff7b844bd997849d56af4d102571366" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal string</type>
        <definition>static internal string Valve.VR.OpenVRInterop.RuntimePath</definition>
        <argsstring>()</argsstring>
        <name>RuntimePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3683" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1a888b721c195881bec0009bdc7b51be33" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal IntPtr</type>
        <definition>static internal IntPtr Valve.VR.OpenVRInterop.GetStringForHmdError</definition>
        <argsstring>(EVRInitError error)</argsstring>
        <name>GetStringForHmdError</name>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a5d8a20b60549ae5b7668d73452c7e83e" kindref="member">EVRInitError</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1ab05dc7bfe0dbc66c805f7ff160181d86" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal IntPtr</type>
        <definition>static internal IntPtr Valve.VR.OpenVRInterop.GetGenericInterface</definition>
        <argsstring>([In, MarshalAs(UnmanagedType.LPStr)] string pchInterfaceVersion, ref EVRInitError peError)</argsstring>
        <name>GetGenericInterface</name>
        <param>
          <attributes>[In, MarshalAs(UnmanagedType.LPStr)]</attributes>
          <type>string</type>
          <declname>pchInterfaceVersion</declname>
        </param>
        <param>
          <type>ref <ref refid="namespace_valve_1_1_v_r_1a5d8a20b60549ae5b7668d73452c7e83e" kindref="member">EVRInitError</ref></type>
          <declname>peError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3687" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1ad8290c4d1229fac7e6f61ea4007e5919" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal bool</type>
        <definition>static internal bool Valve.VR.OpenVRInterop.IsInterfaceVersionValid</definition>
        <argsstring>([In, MarshalAs(UnmanagedType.LPStr)] string pchInterfaceVersion)</argsstring>
        <name>IsInterfaceVersionValid</name>
        <param>
          <attributes>[In, MarshalAs(UnmanagedType.LPStr)]</attributes>
          <type>string</type>
          <declname>pchInterfaceVersion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_open_v_r_interop_1af0c03d326c1aae4e32231ee4e0415e51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal uint</type>
        <definition>static internal uint Valve.VR.OpenVRInterop.GetInitToken</definition>
        <argsstring>()</argsstring>
        <name>GetInitToken</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3691" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="3671" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="3670" bodyend="3692"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1ab05dc7bfe0dbc66c805f7ff160181d86" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>GetGenericInterface</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1af0c03d326c1aae4e32231ee4e0415e51" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>GetInitToken</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1a888b721c195881bec0009bdc7b51be33" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>GetStringForHmdError</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1a8f4ca0f27f387edc67d1a82a827f97be" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>InitInternal</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1a6746e41f6bb62ddabc0937652da72057" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>InitInternal2</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1aa2016321b864f6433c265cdbac8a5584" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>IsHmdPresent</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1ad8290c4d1229fac7e6f61ea4007e5919" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>IsInterfaceVersionValid</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1ab73ee9b06c85438a81bfaafcc304c794" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>IsRuntimeInstalled</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1a5ff7b844bd997849d56af4d102571366" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>RuntimePath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_open_v_r_interop_1a2cb7442073ee778c5284af2b5ab05c85" prot="private" virt="non-virtual"><scope>Valve::VR::OpenVRInterop</scope><name>ShutdownInternal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
