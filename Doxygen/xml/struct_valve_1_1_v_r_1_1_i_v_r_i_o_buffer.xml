<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer" kind="struct" language="C#" prot="public">
    <compoundname>Valve::VR::IVRIOBuffer</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1afa5dd11baf2340160cdd72fb38c4e384" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a95ed10b524750552d8ae33a0ed369da2" kindref="member">_Open</ref></type>
        <definition>internal _Open Valve.VR.IVRIOBuffer.Open</definition>
        <argsstring></argsstring>
        <name>Open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1671" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a6e5984e04b851d1a0ec667f57435bfa6" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a3c467ee9ea9833cef96b30c7dbbd933d" kindref="member">_Close</ref></type>
        <definition>internal _Close Valve.VR.IVRIOBuffer.Close</definition>
        <argsstring></argsstring>
        <name>Close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1676" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a8cc96fd2f132261d368e4169394cbcc3" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1ae347b94fa06c9a91e3f7bb3baa432c6a" kindref="member">_Read</ref></type>
        <definition>internal _Read Valve.VR.IVRIOBuffer.Read</definition>
        <argsstring></argsstring>
        <name>Read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1681" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1aa8e58f602438f05b2dc53bd3622320d4" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a54b193825077c30de700adf41e81b975" kindref="member">_Write</ref></type>
        <definition>internal _Write Valve.VR.IVRIOBuffer.Write</definition>
        <argsstring></argsstring>
        <name>Write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1686" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a29bd68b3897ea39ee4bc7a8510c58a4e" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1abbf839546716805d584e6cba3040013a" kindref="member">_PropertyContainer</ref></type>
        <definition>internal _PropertyContainer Valve.VR.IVRIOBuffer.PropertyContainer</definition>
        <argsstring></argsstring>
        <name>PropertyContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1691" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1ad81daaba6ab6af0d8c4b67d9349170b3" prot="public" static="no" mutable="no">
        <type>internal <ref refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a6a33628dafbef18c06553fe1ba31e8cc" kindref="member">_HasReaders</ref></type>
        <definition>internal _HasReaders Valve.VR.IVRIOBuffer.HasReaders</definition>
        <argsstring></argsstring>
        <name>HasReaders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1696" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1696" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a95ed10b524750552d8ae33a0ed369da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a11d6c73dbb80923b10779c007bb8c154" kindref="member">EIOBufferError</ref></type>
        <definition>internal delegate EIOBufferError Valve.VR.IVRIOBuffer._Open</definition>
        <argsstring>(string pchPath, EIOBufferMode mode, uint unElementSize, uint unElements, ref ulong pulBuffer)</argsstring>
        <name>_Open</name>
        <param>
          <type>string</type>
          <declname>pchPath</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a59487dd6eb3684570995a3bea405db2e" kindref="member">EIOBufferMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unElementSize</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unElements</declname>
        </param>
        <param>
          <type>ref ulong</type>
          <declname>pulBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1669" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a3c467ee9ea9833cef96b30c7dbbd933d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a11d6c73dbb80923b10779c007bb8c154" kindref="member">EIOBufferError</ref></type>
        <definition>internal delegate EIOBufferError Valve.VR.IVRIOBuffer._Close</definition>
        <argsstring>(ulong ulBuffer)</argsstring>
        <name>_Close</name>
        <param>
          <type>ulong</type>
          <declname>ulBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1674" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1ae347b94fa06c9a91e3f7bb3baa432c6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a11d6c73dbb80923b10779c007bb8c154" kindref="member">EIOBufferError</ref></type>
        <definition>internal delegate EIOBufferError Valve.VR.IVRIOBuffer._Read</definition>
        <argsstring>(ulong ulBuffer, IntPtr pDst, uint unBytes, ref uint punRead)</argsstring>
        <name>_Read</name>
        <param>
          <type>ulong</type>
          <declname>ulBuffer</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unBytes</declname>
        </param>
        <param>
          <type>ref uint</type>
          <declname>punRead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1679" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a54b193825077c30de700adf41e81b975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate <ref refid="namespace_valve_1_1_v_r_1a11d6c73dbb80923b10779c007bb8c154" kindref="member">EIOBufferError</ref></type>
        <definition>internal delegate EIOBufferError Valve.VR.IVRIOBuffer._Write</definition>
        <argsstring>(ulong ulBuffer, IntPtr pSrc, uint unBytes)</argsstring>
        <name>_Write</name>
        <param>
          <type>ulong</type>
          <declname>ulBuffer</declname>
        </param>
        <param>
          <type>IntPtr</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>unBytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1abbf839546716805d584e6cba3040013a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate ulong</type>
        <definition>internal delegate ulong Valve.VR.IVRIOBuffer._PropertyContainer</definition>
        <argsstring>(ulong ulBuffer)</argsstring>
        <name>_PropertyContainer</name>
        <param>
          <type>ulong</type>
          <declname>ulBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a6a33628dafbef18c06553fe1ba31e8cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>internal delegate bool</type>
        <definition>internal delegate bool Valve.VR.IVRIOBuffer._HasReaders</definition>
        <argsstring>(ulong ulBuffer)</argsstring>
        <name>_HasReaders</name>
        <param>
          <type>ulong</type>
          <declname>ulBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1694" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" line="1667" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/openvr_api.cs" bodystart="1666" bodyend="1698"/>
    <listofallmembers>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a3c467ee9ea9833cef96b30c7dbbd933d" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>_Close</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a6a33628dafbef18c06553fe1ba31e8cc" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>_HasReaders</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a95ed10b524750552d8ae33a0ed369da2" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>_Open</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1abbf839546716805d584e6cba3040013a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>_PropertyContainer</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1ae347b94fa06c9a91e3f7bb3baa432c6a" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>_Read</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a54b193825077c30de700adf41e81b975" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>_Write</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a6e5984e04b851d1a0ec667f57435bfa6" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>Close</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1ad81daaba6ab6af0d8c4b67d9349170b3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>HasReaders</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1afa5dd11baf2340160cdd72fb38c4e384" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>Open</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a29bd68b3897ea39ee4bc7a8510c58a4e" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>PropertyContainer</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1a8cc96fd2f132261d368e4169394cbcc3" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>Read</name></member>
      <member refid="struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer_1aa8e58f602438f05b2dc53bd3622320d4" prot="public" virt="non-virtual"><scope>Valve::VR::IVRIOBuffer</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
