<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_copy_from_leap_c_extensions_8cs" kind="file" language="C#">
    <compoundname>CopyFromLeapCExtensions.cs</compoundname>
    <innerclass refid="class_leap_internal_1_1_copy_from_leap_c_extensions" prot="public">LeapInternal::CopyFromLeapCExtensions</innerclass>
    <innernamespace refid="namespace_leap_internal">LeapInternal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_internal" kindref="compound">LeapInternal</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CopyFromLeapCExtensions<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Frame<sp/>CopyFrom(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Frame<sp/>frame,<sp/>ref<sp/>LEAP_TRACKING_EVENT<sp/>trackingMsg)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frame.Id<sp/>=<sp/>(long)trackingMsg.info.frame_id;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frame.Timestamp<sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)trackingMsg.info.timestamp;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frame.CurrentFramesPerSecond<sp/>=<sp/>trackingMsg.framerate;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frame.ResizeHandList((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)trackingMsg.nHands);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>frame.Hands.Count;<sp/>i--<sp/>!=<sp/>0;)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEAP_HAND<sp/>hand;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StructMarshal&lt;LEAP_HAND&gt;.ArrayElementToStruct(trackingMsg.pHands,<sp/>i,<sp/>out<sp/>hand);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame.Hands[i].CopyFrom(ref<sp/>hand,<sp/>frame.Id);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6baa78b1ac16c0cd02168097fc9a9bd7604" kindref="member">Hand</ref><sp/>CopyFrom(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Hand<sp/>hand,<sp/>ref<sp/>LEAP_HAND<sp/>leapHand,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameId)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.FrameId<sp/>=<sp/>frameId;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Id<sp/>=<sp/>(int)leapHand.id;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Arm.CopyFrom(leapHand.arm,<sp/>Bone.BoneType.TYPE_INVALID);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Confidence<sp/>=<sp/>leapHand.confidence;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.GrabStrength<sp/>=<sp/>leapHand.grab_strength;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.GrabAngle<sp/>=<sp/>leapHand.grab_angle;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.PinchStrength<sp/>=<sp/>leapHand.pinch_strength;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.PinchDistance<sp/>=<sp/>leapHand.pinch_distance;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.PalmWidth<sp/>=<sp/>leapHand.palm.width;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.IsLeft<sp/>=<sp/>leapHand.type<sp/>==<sp/><ref refid="namespace_leap_internal_1a937dea95e06bb1e2723e0dbb486c9b34" kindref="member">eLeapHandType</ref>.eLeapHandType_Left;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.TimeVisible<sp/>=<sp/>(float)(leapHand.visible_time<sp/>*<sp/>1e-6);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.PalmPosition<sp/>=<sp/>leapHand.palm.position.ToLeapVector();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.StabilizedPalmPosition<sp/>=<sp/>leapHand.palm.stabilized_position.ToLeapVector();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.PalmVelocity<sp/>=<sp/>leapHand.palm.velocity.ToLeapVector();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.PalmNormal<sp/>=<sp/>leapHand.palm.normal.ToLeapVector();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Rotation<sp/>=<sp/>leapHand.palm.orientation.ToLeapQuaternion();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Direction<sp/>=<sp/>leapHand.palm.direction.ToLeapVector();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.WristPosition<sp/>=<sp/>hand.Arm.NextJoint;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Fingers[0].CopyFrom(leapHand.thumb,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_THUMB,<sp/>hand.Id,<sp/>hand.TimeVisible);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Fingers[1].CopyFrom(leapHand.index,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_INDEX,<sp/>hand.Id,<sp/>hand.TimeVisible);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Fingers[2].CopyFrom(leapHand.middle,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_MIDDLE,<sp/>hand.Id,<sp/>hand.TimeVisible);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Fingers[3].CopyFrom(leapHand.ring,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_RING,<sp/>hand.Id,<sp/>hand.TimeVisible);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hand.Fingers[4].CopyFrom(leapHand.pinky,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_finger" kindref="compound">Finger</ref>.<ref refid="class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba" kindref="member">FingerType</ref>.TYPE_PINKY,<sp/>hand.Id,<sp/>hand.TimeVisible);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hand;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Finger<sp/>CopyFrom(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Finger<sp/>finger,<sp/>LEAP_DIGIT<sp/>leapBone,<sp/>Finger.FingerType<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>handId,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeVisible)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.Id<sp/>=<sp/>(handId<sp/>*<sp/>10)<sp/>+<sp/>leapBone.finger_id;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.HandId<sp/>=<sp/>handId;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.TimeVisible<sp/>=<sp/>timeVisible;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bone<sp/>metacarpal<sp/>=<sp/>finger.bones[0];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bone<sp/>proximal<sp/>=<sp/>finger.bones[1];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bone<sp/>intermediate<sp/>=<sp/>finger.bones[2];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bone<sp/>distal<sp/>=<sp/>finger.bones[3];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metacarpal.CopyFrom(leapBone.metacarpal,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref>.<ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">BoneType</ref>.TYPE_METACARPAL);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>proximal.CopyFrom(leapBone.proximal,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref>.<ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">BoneType</ref>.TYPE_PROXIMAL);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>intermediate.CopyFrom(leapBone.intermediate,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref>.<ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">BoneType</ref>.TYPE_INTERMEDIATE);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distal.CopyFrom(leapBone.distal,<sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="class_leap_1_1_bone" kindref="compound">Bone</ref>.<ref refid="class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b" kindref="member">BoneType</ref>.TYPE_DISTAL);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.TipPosition<sp/>=<sp/>distal.NextJoint;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.Direction<sp/>=<sp/>intermediate.Direction;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.Width<sp/>=<sp/>intermediate.Width;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.Length<sp/>=<sp/>(leapBone.finger_id<sp/>==<sp/>0<sp/>?<sp/>0.0f<sp/>:<sp/>0.5f<sp/>*<sp/>proximal.Length)<sp/>+<sp/>intermediate.Length<sp/>+<sp/>0.77f<sp/>*<sp/>distal.Length;<sp/></highlight><highlight class="comment">//The<sp/>values<sp/>0.5<sp/>for<sp/>proximal<sp/>and<sp/>0.77<sp/>for<sp/>distal<sp/>are<sp/>used<sp/>in<sp/>platform<sp/>code<sp/>for<sp/>this<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.IsExtended<sp/>=<sp/>leapBone.is_extended<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finger.Type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finger;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Bone<sp/>CopyFrom(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Bone<sp/>bone,<sp/>LEAP_BONE<sp/>leapBone,<sp/>Bone.BoneType<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bone.Type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bone.PrevJoint<sp/>=<sp/>leapBone.prev_joint.ToLeapVector();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bone.NextJoint<sp/>=<sp/>leapBone.next_joint.ToLeapVector();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bone.Direction<sp/>=<sp/>(bone.NextJoint<sp/>-<sp/>bone.PrevJoint);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bone.Length<sp/>=<sp/>bone.Direction.Magnitude;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bone.Length<sp/>&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">.Epsilon)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bone.Direction<sp/>=<sp/>Vector.Zero;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bone.Direction<sp/>/=<sp/>bone.Length;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bone.Center<sp/>=<sp/>(bone.PrevJoint<sp/>+<sp/>bone.NextJoint)<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bone.Rotation<sp/>=<sp/>leapBone.rotation.ToLeapQuaternion();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bone.Width<sp/>=<sp/>leapBone.width;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bone;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/CopyFromLeapCExtensions.cs"/>
  </compounddef>
</doxygen>
