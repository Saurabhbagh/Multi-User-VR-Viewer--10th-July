<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___input" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_Input</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aae772d64b091f820acca71586e36e623" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>const string Valve.VR.SteamVR_Input.defaultInputGameObjectName</definition>
        <argsstring></argsstring>
        <name>defaultInputGameObjectName</name>
        <initializer>= &quot;[SteamVR Input]&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="17" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad43dd6aed5b9d57ea3b1cc699d0fc27e" prot="private" static="no" mutable="no">
        <type>const string</type>
        <definition>const string Valve.VR.SteamVR_Input.localizationKeyName</definition>
        <argsstring></argsstring>
        <name>localizationKeyName</name>
        <initializer>= &quot;localization&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="18" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1abe954f3809b1dc96cc8e337a1f80d35e" prot="public" static="yes" mutable="no">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_Input.actionsFilePath</definition>
        <argsstring></argsstring>
        <name>actionsFilePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="19" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad2462a9ce2841cd0dab1a79fd176568b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Input.fileInitialized</definition>
        <argsstring></argsstring>
        <name>fileInitialized</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if the actions file has been initialized </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="22" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a2a5ac88955294a891324af8121e02f3e" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Input.initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if the steamvr input system initialization process has completed successfully </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="25" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae02e7c3deb284bc92aaf7ac005e6afbe" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Input.preInitialized</definition>
        <argsstring></argsstring>
        <name>preInitialized</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if the preinitialization process (setting up dictionaries, etc) has completed successfully </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="28" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a72db21f575efb1323adffa0a93c70471" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_file" kindref="compound">SteamVR_Input_ActionFile</ref></type>
        <definition>SteamVR_Input_ActionFile Valve.VR.SteamVR_Input.actionFile</definition>
        <argsstring></argsstring>
        <name>actionFile</name>
        <briefdescription>
<para>The serialized version of the actions file we&apos;re currently using (only used in editor) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="31" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae24acec08f56ba0533c424fd8fed4f2c" prot="public" static="yes" mutable="no">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_Input.actionFileHash</definition>
        <argsstring></argsstring>
        <name>actionFileHash</name>
        <briefdescription>
<para>The hash of the current action file on disk </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="34" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab466c62bf633cec28ba1c4917f46cea9" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref> []</type>
        <definition>SteamVR_ActionSet [] Valve.VR.SteamVR_Input.actionSets</definition>
        <argsstring></argsstring>
        <name>actionSets</name>
        <briefdescription>
<para>An array of all action sets </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="60" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad3cc52ba6a3fe1eb4c49fb00d49439eb" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref> []</type>
        <definition>SteamVR_Action [] Valve.VR.SteamVR_Input.actions</definition>
        <argsstring></argsstring>
        <name>actions</name>
        <briefdescription>
<para>An array of all actions (in all action sets) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="63" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac04e5705019bed32bae4a7d502d862b7" prot="public" static="yes" mutable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in" kindref="compound">ISteamVR_Action_In</ref> []</type>
        <definition>ISteamVR_Action_In [] Valve.VR.SteamVR_Input.actionsIn</definition>
        <argsstring></argsstring>
        <name>actionsIn</name>
        <briefdescription>
<para>An array of all input actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="66" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aefbdcd03e7607dc2d129578b59be3d12" prot="public" static="yes" mutable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out" kindref="compound">ISteamVR_Action_Out</ref> []</type>
        <definition>ISteamVR_Action_Out [] Valve.VR.SteamVR_Input.actionsOut</definition>
        <argsstring></argsstring>
        <name>actionsOut</name>
        <briefdescription>
<para>An array of all output actions (haptic) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="69" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aad6fcf2a2f0e959e95a7021a70870bc2" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref> []</type>
        <definition>SteamVR_Action_Boolean [] Valve.VR.SteamVR_Input.actionsBoolean</definition>
        <argsstring></argsstring>
        <name>actionsBoolean</name>
        <briefdescription>
<para>An array of all the boolean actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="72" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a3a9ab2b76d747b4f16f984b6963f4bc1" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kindref="compound">SteamVR_Action_Single</ref> []</type>
        <definition>SteamVR_Action_Single [] Valve.VR.SteamVR_Input.actionsSingle</definition>
        <argsstring></argsstring>
        <name>actionsSingle</name>
        <briefdescription>
<para>An array of all the single actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="75" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a470c062f3b57842e415c127f0b3d8e30" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kindref="compound">SteamVR_Action_Vector2</ref> []</type>
        <definition>SteamVR_Action_Vector2 [] Valve.VR.SteamVR_Input.actionsVector2</definition>
        <argsstring></argsstring>
        <name>actionsVector2</name>
        <briefdescription>
<para>An array of all the vector2 actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="78" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6a25b2f5d1f958d75e18445b21043968" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kindref="compound">SteamVR_Action_Vector3</ref> []</type>
        <definition>SteamVR_Action_Vector3 [] Valve.VR.SteamVR_Input.actionsVector3</definition>
        <argsstring></argsstring>
        <name>actionsVector3</name>
        <briefdescription>
<para>An array of all the vector3 actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="81" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9b9ca9a53455596fcd7dd197aa892b40" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> []</type>
        <definition>SteamVR_Action_Pose [] Valve.VR.SteamVR_Input.actionsPose</definition>
        <argsstring></argsstring>
        <name>actionsPose</name>
        <briefdescription>
<para>An array of all the pose actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="84" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa5b9aa75ec82e6a6ab8b1e4198fd7445" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref> []</type>
        <definition>SteamVR_Action_Skeleton [] Valve.VR.SteamVR_Input.actionsSkeleton</definition>
        <argsstring></argsstring>
        <name>actionsSkeleton</name>
        <briefdescription>
<para>An array of all the skeleton actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="87" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a784d20fd1bef89b38a16349bee0c0ce1" prot="public" static="yes" mutable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration" kindref="compound">SteamVR_Action_Vibration</ref> []</type>
        <definition>SteamVR_Action_Vibration [] Valve.VR.SteamVR_Input.actionsVibration</definition>
        <argsstring></argsstring>
        <name>actionsVibration</name>
        <briefdescription>
<para>An array of all the vibration (haptic) actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="90" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad0f4a157c015d646f1239070f12cd565" prot="public" static="yes" mutable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in" kindref="compound">ISteamVR_Action_In</ref> []</type>
        <definition>ISteamVR_Action_In [] Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn</definition>
        <argsstring></argsstring>
        <name>actionsNonPoseNonSkeletonIn</name>
        <briefdescription>
<para>An array of all the input actions that are not pose or skeleton actions (boolean, single, vector2, vector3) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="93" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="event">
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a41fa3f6c1ba5a5464ce99167780db227" prot="public" static="yes" add="no" remove="no" raise="no">
        <type>Action</type>
        <definition>Action Valve.VR.SteamVR_Input.onNonVisualActionsUpdated</definition>
        <argsstring></argsstring>
        <name>onNonVisualActionsUpdated</name>
        <briefdescription>
<para>An event that fires when the non visual actions (everything except poses / skeletons) have been updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="37" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a930229f4a6d398c4c911f45063592e28" prot="public" static="yes" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1acfd43d7f2d9763ec0aff8e11dfdcf15d" kindref="member">PosesUpdatedHandler</ref></type>
        <definition>PosesUpdatedHandler Valve.VR.SteamVR_Input.onPosesUpdated</definition>
        <argsstring></argsstring>
        <name>onPosesUpdated</name>
        <briefdescription>
<para>An event that fires when the pose actions have been updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="40" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="event" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aca21226a9a9cd62d3039f0b378606a39" prot="public" static="yes" add="no" remove="no" raise="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a1880748ba2acc071a2a1e6eaa2ca2fd5" kindref="member">SkeletonsUpdatedHandler</ref></type>
        <definition>SkeletonsUpdatedHandler Valve.VR.SteamVR_Input.onSkeletonsUpdated</definition>
        <argsstring></argsstring>
        <name>onSkeletonsUpdated</name>
        <briefdescription>
<para>An event that fires when the skeleton actions have been updated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="44" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6fe24069d4c06479c3e9ee90dd26334e" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Input.initializing</definition>
        <argsstring></argsstring>
        <name>initializing</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="47" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae054a21282786691c33b1cc1354c4cda" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int Valve.VR.SteamVR_Input.startupFrame</definition>
        <argsstring></argsstring>
        <name>startupFrame</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="49" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1acfb4f250bcffea97de00849dc65b00f2" prot="protected" static="yes" mutable="no">
        <type>Dictionary&lt; string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref> &gt;</type>
        <definition>Dictionary&lt;string, SteamVR_ActionSet&gt; Valve.VR.SteamVR_Input.actionSetsByPath</definition>
        <argsstring></argsstring>
        <name>actionSetsByPath</name>
        <initializer>= new Dictionary&lt;string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="95" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a7e426703cdad469de33294378460572a" prot="protected" static="yes" mutable="no">
        <type>Dictionary&lt; string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref> &gt;</type>
        <definition>Dictionary&lt;string, SteamVR_ActionSet&gt; Valve.VR.SteamVR_Input.actionSetsByPathLowered</definition>
        <argsstring></argsstring>
        <name>actionSetsByPathLowered</name>
        <initializer>= new Dictionary&lt;string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="96" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a01fc292d2f7dc293fa90804aad062888" prot="protected" static="yes" mutable="no">
        <type>Dictionary&lt; string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref> &gt;</type>
        <definition>Dictionary&lt;string, SteamVR_Action&gt; Valve.VR.SteamVR_Input.actionsByPath</definition>
        <argsstring></argsstring>
        <name>actionsByPath</name>
        <initializer>= new Dictionary&lt;string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="97" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1add287ffec4527232bc96e7282a04825c" prot="protected" static="yes" mutable="no">
        <type>Dictionary&lt; string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref> &gt;</type>
        <definition>Dictionary&lt;string, SteamVR_Action&gt; Valve.VR.SteamVR_Input.actionsByPathLowered</definition>
        <argsstring></argsstring>
        <name>actionsByPathLowered</name>
        <initializer>= new Dictionary&lt;string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="98" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a319debe0fd717b52106c4006efb69f3d" prot="protected" static="yes" mutable="no">
        <type>Dictionary&lt; string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref> &gt;</type>
        <definition>Dictionary&lt;string, SteamVR_ActionSet&gt; Valve.VR.SteamVR_Input.actionSetsByPathCache</definition>
        <argsstring></argsstring>
        <name>actionSetsByPathCache</name>
        <initializer>= new Dictionary&lt;string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="100" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa5d9bed4bfa6fa55db30255a164f449f" prot="protected" static="yes" mutable="no">
        <type>Dictionary&lt; string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref> &gt;</type>
        <definition>Dictionary&lt;string, SteamVR_Action&gt; Valve.VR.SteamVR_Input.actionsByPathCache</definition>
        <argsstring></argsstring>
        <name>actionsByPathCache</name>
        <initializer>= new Dictionary&lt;string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="101" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9e6c74166dfeb1c00d27af76c6af26b0" prot="protected" static="yes" mutable="no">
        <type>Dictionary&lt; string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref> &gt;</type>
        <definition>Dictionary&lt;string, SteamVR_Action&gt; Valve.VR.SteamVR_Input.actionsByNameCache</definition>
        <argsstring></argsstring>
        <name>actionsByNameCache</name>
        <initializer>= new Dictionary&lt;string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="103" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a529087e098ae53b525c0e6628803f6b5" prot="protected" static="yes" mutable="no">
        <type>Dictionary&lt; string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref> &gt;</type>
        <definition>Dictionary&lt;string, SteamVR_ActionSet&gt; Valve.VR.SteamVR_Input.actionSetsByNameCache</definition>
        <argsstring></argsstring>
        <name>actionSetsByNameCache</name>
        <initializer>= new Dictionary&lt;string, <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="104" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa029ce204a4aa36e6a3bd6ba3ee14bb3" prot="public" static="yes" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_Input.isStartupFrame</definition>
        <argsstring></argsstring>
        <name>isStartupFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="50" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="51" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1acfd43d7f2d9763ec0aff8e11dfdcf15d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Input.PosesUpdatedHandler</definition>
        <argsstring>(bool skipSendingEvents)</argsstring>
        <name>PosesUpdatedHandler</name>
        <param>
          <type>bool</type>
          <declname>skipSendingEvents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a1880748ba2acc071a2a1e6eaa2ca2fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Valve.VR.SteamVR_Input.SkeletonsUpdatedHandler</definition>
        <argsstring>(bool skipSendingEvents)</argsstring>
        <name>SkeletonsUpdatedHandler</name>
        <param>
          <type>bool</type>
          <declname>skipSendingEvents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1afeca44f3e47e82cc8fb08fb01aeb4162" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Valve.VR.SteamVR_Input.SteamVR_Input</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_Input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="107" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="107" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae879615807d3e4ecc454f698d8b333ec" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.FindPreinitializeMethod</definition>
        <argsstring>()</argsstring>
        <name>FindPreinitializeMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="122" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="122" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8a3341db9dfea4cbda0f3519c381e268" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Valve.VR.SteamVR_Input.CreateFakeAction&lt; T &gt;</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive)</argsstring>
        <name>CreateFakeAction&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="637" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="637" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1af3dcfcb872d99e4e7830a5165a2b58a9" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Valve.VR.SteamVR_Input.CreateFakeAction&lt; T &gt;</definition>
        <argsstring>(string actionPath, bool caseSensitive)</argsstring>
        <name>CreateFakeAction&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>actionPath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="649" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="649" bodyend="652"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a305a60db4634439fc9cbbe0a64b0c5fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.ForcePreinitialize</definition>
        <argsstring>()</argsstring>
        <name>ForcePreinitialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="117" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac9a4c04c5c0da11d4b52b2b9cca9b120" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.Initialize</definition>
        <argsstring>(bool force=false)</argsstring>
        <name>Initialize</name>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get all the handles for actions and action sets. Initialize our dictionaries of action / action set names. Setup the tracking space universe origin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="146" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="146" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a84cea4c4f233d2a4c1576404af92c106" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.PreinitializeFinishActionSets</definition>
        <argsstring>()</argsstring>
        <name>PreinitializeFinishActionSets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="194" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="194" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a0f7555c8c991d837c557a0f875faa73c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.PreinitializeActionSetDictionaries</definition>
        <argsstring>()</argsstring>
        <name>PreinitializeActionSetDictionaries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="203" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="203" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a407e1e3d417f1555b8b32efb54e08eca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.PreinitializeActionDictionaries</definition>
        <argsstring>()</argsstring>
        <name>PreinitializeActionDictionaries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="217" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="217" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a44aeadc921fc991c03d70db06fbfad0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <briefdescription>
<para>Gets called by <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour" kindref="compound">SteamVR_Behaviour</ref> every Update and updates actions if the steamvr settings are configured to update then. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="232" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="232" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a1a82a3a13e2455a0b4bde911d01fb4ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.LateUpdate</definition>
        <argsstring>()</argsstring>
        <name>LateUpdate</name>
        <briefdescription>
<para>Gets called by <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour" kindref="compound">SteamVR_Behaviour</ref> every LateUpdate and updates actions if the steamvr settings are configured to update then. Also updates skeletons regardless of settings are configured to so we can account for animations on the skeletons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="251" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="251" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac2be0c217bd7a2ee78bf0e8e33718247" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.FixedUpdate</definition>
        <argsstring>()</argsstring>
        <name>FixedUpdate</name>
        <briefdescription>
<para>Gets called by <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour" kindref="compound">SteamVR_Behaviour</ref> every FixedUpdate and updates actions if the steamvr settings are configured to update then. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="274" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="274" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab538ac35afe693bc10ea6c9f25812068" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.OnPreCull</definition>
        <argsstring>()</argsstring>
        <name>OnPreCull</name>
        <briefdescription>
<para>Gets called by <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___behaviour" kindref="compound">SteamVR_Behaviour</ref> every OnPreCull and updates actions if the steamvr settings are configured to update then. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="291" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="291" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6e0cac70d4cca2721d8be761b238da4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.UpdateVisualActions</definition>
        <argsstring>(bool skipStateAndEventUpdates=false)</argsstring>
        <name>UpdateVisualActions</name>
        <param>
          <type>bool</type>
          <declname>skipStateAndEventUpdates</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Updates the states of all the visual actions (pose / skeleton) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>skipStateAndEventUpdates</parametername>
</parameternamelist>
<parameterdescription>
<para>Controls whether or not events are fired from this update call</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="310" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="310" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a330caa435d2e10df76e907ac6bf05f84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.UpdatePoseActions</definition>
        <argsstring>(bool skipSendingEvents=false)</argsstring>
        <name>UpdatePoseActions</name>
        <param>
          <type>bool</type>
          <declname>skipSendingEvents</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Updates the states of all the pose actions </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>skipSendingEvents</parametername>
</parameternamelist>
<parameterdescription>
<para>Controls whether or not events are fired from this update call</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="326" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="326" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a89a291058bb1162ddb8f2da57847bd7e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.UpdateSkeletonActions</definition>
        <argsstring>(bool skipSendingEvents=false)</argsstring>
        <name>UpdateSkeletonActions</name>
        <param>
          <type>bool</type>
          <declname>skipSendingEvents</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Updates the states of all the skeleton actions </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>skipSendingEvents</parametername>
</parameternamelist>
<parameterdescription>
<para>Controls whether or not events are fired from this update call</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="346" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="346" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab9f7ee5abcd2dd6a91125f5759e728a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.UpdateNonVisualActions</definition>
        <argsstring>()</argsstring>
        <name>UpdateNonVisualActions</name>
        <briefdescription>
<para>Updates the states of all the non visual actions (boolean, single, vector2, vector3) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="366" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="366" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a364b175a0b854190e86408807800cbe6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Valve.VR.SteamVR_Input.GetActionDataFromPath&lt; T &gt;</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetActionDataFromPath&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action&apos;s action data by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="394" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="394" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a85aeba67ee34a71320cf1ed2d6544ca0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data" kindref="compound">SteamVR_ActionSet_Data</ref></type>
        <definition>static SteamVR_ActionSet_Data Valve.VR.SteamVR_Input.GetActionSetDataFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetActionSetDataFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action set&apos;s data by the full path to that action. Action set paths are in the format /actions/[actionSet] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action set paths are in the format /actions/[actionSet])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="411" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="411" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1af951439eb937586e0f5975a8ee160af3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Valve.VR.SteamVR_Input.GetActionFromPath&lt; T &gt;</definition>
        <argsstring>(string path, bool caseSensitive=false, bool returnNulls=false)</argsstring>
        <name>GetActionFromPath&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>returnNulls</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="428" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="428" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab209d6c5f511a9a334f1138cb66aa2fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
        <definition>static SteamVR_Action Valve.VR.SteamVR_Input.GetBaseActionFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetBaseActionFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="441" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="441" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa27da7ef81397ed3fb0e6ef12e13a2c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.HasActionPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>HasActionPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="482" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="482" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a06b62e993650c4186256d2206702ffa7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.HasAction</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>HasAction</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="488" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="488" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a04fc7868c6a4a357bc5f313a8b9096bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.HasAction</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>HasAction</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="494" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="494" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a98161a36c23334e4f8d303d02bc757aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
        <definition>static SteamVR_Action_Boolean Valve.VR.SteamVR_Input.GetBooleanActionFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetBooleanActionFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="505" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1af5c12a8ff1d1f55fd17d93fc45f76511" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kindref="compound">SteamVR_Action_Single</ref></type>
        <definition>static SteamVR_Action_Single Valve.VR.SteamVR_Input.GetSingleActionFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetSingleActionFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="515" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="515" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1afee92f1a25149c18f7a437ce301eb43b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kindref="compound">SteamVR_Action_Vector2</ref></type>
        <definition>static SteamVR_Action_Vector2 Valve.VR.SteamVR_Input.GetVector2ActionFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetVector2ActionFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="525" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="525" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1af643be6e485a604b8155880d41fe1ace" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kindref="compound">SteamVR_Action_Vector3</ref></type>
        <definition>static SteamVR_Action_Vector3 Valve.VR.SteamVR_Input.GetVector3ActionFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetVector3ActionFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="535" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="535" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad17ec850cff6999077412a0a2a09c317" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration" kindref="compound">SteamVR_Action_Vibration</ref></type>
        <definition>static SteamVR_Action_Vibration Valve.VR.SteamVR_Input.GetVibrationActionFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetVibrationActionFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="545" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="545" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a5843e47aa0df15b89b76113dc191228d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
        <definition>static SteamVR_Action_Pose Valve.VR.SteamVR_Input.GetPoseActionFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetPoseActionFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="555" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="555" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a43955478497bd79185e2e990b1fe43d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
        <definition>static SteamVR_Action_Skeleton Valve.VR.SteamVR_Input.GetSkeletonActionFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetSkeletonActionFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="565" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1acfe21ace1b5f5466da7849026be2eeff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Valve.VR.SteamVR_Input.GetAction&lt; T &gt;</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false, bool returnNulls=false)</argsstring>
        <name>GetAction&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>returnNulls</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnNulls</parametername>
</parameternamelist>
<parameterdescription>
<para>returns null if the action does not exist</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="577" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="577" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a635ec3bc7211d524ccd9bf463b5346e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref></type>
        <definition>static SteamVR_Action Valve.VR.SteamVR_Input.GetBaseAction</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>GetBaseAction</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="589" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="589" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a3e5281b6293539de5de4ba4de967d72b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Valve.VR.SteamVR_Input.GetAction&lt; T &gt;</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>GetAction&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="660" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="660" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a1442b5592282c75d7caeb91fe3509124" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
        <definition>static SteamVR_Action_Boolean Valve.VR.SteamVR_Input.GetBooleanAction</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>GetBooleanAction</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="671" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="671" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad899a1104e3be4772cae55c0eb6e350e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean" kindref="compound">SteamVR_Action_Boolean</ref></type>
        <definition>static SteamVR_Action_Boolean Valve.VR.SteamVR_Input.GetBooleanAction</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>GetBooleanAction</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="682" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="682" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9880b4d24247606b61c26c5efcd2e803" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kindref="compound">SteamVR_Action_Single</ref></type>
        <definition>static SteamVR_Action_Single Valve.VR.SteamVR_Input.GetSingleAction</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>GetSingleAction</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="693" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="693" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1afe873662970a8590722180d656847fb2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single" kindref="compound">SteamVR_Action_Single</ref></type>
        <definition>static SteamVR_Action_Single Valve.VR.SteamVR_Input.GetSingleAction</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>GetSingleAction</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="704" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="704" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a10c56b6e9e99bca06abc8a9337b89e82" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kindref="compound">SteamVR_Action_Vector2</ref></type>
        <definition>static SteamVR_Action_Vector2 Valve.VR.SteamVR_Input.GetVector2Action</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>GetVector2Action</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="715" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="715" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1abb8ad8e823781ceec0aac7ebc7db1125" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2" kindref="compound">SteamVR_Action_Vector2</ref></type>
        <definition>static SteamVR_Action_Vector2 Valve.VR.SteamVR_Input.GetVector2Action</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>GetVector2Action</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="726" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad1b586b8d732a3d58754705dc828cccf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kindref="compound">SteamVR_Action_Vector3</ref></type>
        <definition>static SteamVR_Action_Vector3 Valve.VR.SteamVR_Input.GetVector3Action</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>GetVector3Action</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="737" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="737" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1add35bdec1632c00a3b3110f049e93129" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3" kindref="compound">SteamVR_Action_Vector3</ref></type>
        <definition>static SteamVR_Action_Vector3 Valve.VR.SteamVR_Input.GetVector3Action</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>GetVector3Action</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="748" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="748" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a356eb935355089208399a963fe717b66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
        <definition>static SteamVR_Action_Pose Valve.VR.SteamVR_Input.GetPoseAction</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>GetPoseAction</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="759" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="759" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa5711fcd08017cef2fd97a8eed2770a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref></type>
        <definition>static SteamVR_Action_Pose Valve.VR.SteamVR_Input.GetPoseAction</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>GetPoseAction</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="770" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="770" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a3484935c1c72b595c5571659dee23f99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
        <definition>static SteamVR_Action_Skeleton Valve.VR.SteamVR_Input.GetSkeletonAction</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>GetSkeletonAction</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="781" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="781" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a55798ec9f2be11a482869809b315e825" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref></type>
        <definition>static SteamVR_Action_Skeleton Valve.VR.SteamVR_Input.GetSkeletonAction</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>GetSkeletonAction</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="792" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1addb242c75f24ea3622e5960a74d345ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration" kindref="compound">SteamVR_Action_Vibration</ref></type>
        <definition>static SteamVR_Action_Vibration Valve.VR.SteamVR_Input.GetVibrationAction</definition>
        <argsstring>(string actionSetName, string actionName, bool caseSensitive=false)</argsstring>
        <name>GetVibrationAction</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="803" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="803" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9ebbd824b3b2e03863a1227dd875ea02" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration" kindref="compound">SteamVR_Action_Vibration</ref></type>
        <definition>static SteamVR_Action_Vibration Valve.VR.SteamVR_Input.GetVibrationAction</definition>
        <argsstring>(string actionName, bool caseSensitive=false)</argsstring>
        <name>GetVibrationAction</name>
        <param>
          <type>string</type>
          <declname>actionName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action by the full path to that action. Action paths are in the format /actions/[actionSet]/[direction]/[actionName] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action you want (Action paths are in the format /actions/[actionSet]/[direction]/[actionName])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="814" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="814" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8c97236e06841de3c07e5685aa875359" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Valve.VR.SteamVR_Input.GetActionSet&lt; T &gt;</definition>
        <argsstring>(string actionSetName, bool caseSensitive=false, bool returnNulls=false)</argsstring>
        <name>GetActionSet&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>returnNulls</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action set by the full path to that action set. Action set paths are in the format /actions/[actionSet] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action set you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSetName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to the action set you want</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnNulls</parametername>
</parameternamelist>
<parameterdescription>
<para>returns a null if the set does not exist</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="826" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="826" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a645e9f34de97217c31c20ba913c8d3e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
        <definition>static SteamVR_ActionSet Valve.VR.SteamVR_Input.GetActionSet</definition>
        <argsstring>(string actionSetName, bool caseSensitive=false, bool returnsNulls=false)</argsstring>
        <name>GetActionSet</name>
        <param>
          <type>string</type>
          <declname>actionSetName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>returnsNulls</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action set by the full path to that action set. Action set paths are in the format /actions/[actionSet] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action set you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSetName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to the action set you want</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="862" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="862" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a159b8db4e142e2250aaa1b2e1d1e38b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>static T Valve.VR.SteamVR_Input.GetActionSetFromPath&lt; T &gt;</definition>
        <argsstring>(string path, bool caseSensitive=false, bool returnsNulls=false)</argsstring>
        <name>GetActionSetFromPath&lt; T &gt;</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>returnsNulls</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action set by the full path to that action set. Action set paths are in the format /actions/[actionSet] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of action set you&apos;re expecting to get back</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action set you want (Action paths are in the format /actions/[actionSet])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="879" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="879" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae8457bd35fd6eb86e62371d56af44254" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref></type>
        <definition>static SteamVR_ActionSet Valve.VR.SteamVR_Input.GetActionSetFromPath</definition>
        <argsstring>(string path, bool caseSensitive=false)</argsstring>
        <name>GetActionSetFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get an action set by the full path to that action set. Action set paths are in the format /actions/[actionSet] </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The full path to the action set you want (Action paths are in the format /actions/[actionSet])</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>case sensitive searches are faster</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="937" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="937" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1aca0c5b17c9729bd900e7132fa98b3a36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.GetState</definition>
        <argsstring>(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetState</name>
        <param>
          <type>string</type>
          <declname>actionSet</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the state of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action set the action is contained in</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="951" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="951" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab69880cc4e27624b6457412ac174887b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.GetState</definition>
        <argsstring>(string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetState</name>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the state of an action by the action name and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="968" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="968" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a7e07d6cb414b57fb9adafdb25a18a7cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.GetStateDown</definition>
        <argsstring>(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetStateDown</name>
        <param>
          <type>string</type>
          <declname>actionSet</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the state down of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action set the action is contained in</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True when the action was false last update and is now true. Returns false again afterwards.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="981" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="981" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8f579cd67ec947e3049a5e8551d54b67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.GetStateDown</definition>
        <argsstring>(string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetStateDown</name>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the state down of an action by the action name and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True when the action was false last update and is now true. Returns false again afterwards.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="999" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="999" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a3cab34370f541034f4ad7cb2f3850019" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.GetStateUp</definition>
        <argsstring>(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetStateUp</name>
        <param>
          <type>string</type>
          <declname>actionSet</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the state up of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action set the action is contained in</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True when the action was true last update and is now false. Returns false again afterwards.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1012" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1012" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a799db7338f4c49ed8fd862f0870bd8de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.GetStateUp</definition>
        <argsstring>(string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetStateUp</name>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the state up of an action by the action name and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True when the action was true last update and is now false. Returns false again afterwards.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1031" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1031" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6528f5369dfdfe6c3b853a9135b29a68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Valve.VR.SteamVR_Input.GetFloat</definition>
        <argsstring>(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetFloat</name>
        <param>
          <type>string</type>
          <declname>actionSet</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the float value of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results). (same as GetSingle) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action set the action is contained in</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1045" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1045" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1af7db6783a8eca53004a0278cc547de1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Valve.VR.SteamVR_Input.GetFloat</definition>
        <argsstring>(string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetFloat</name>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the float value of an action by the action name and input source. Optionally case sensitive (for faster results). (same as GetSingle) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1062" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1062" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a4492764f7a824b7c1a073c05bb8bc145" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Valve.VR.SteamVR_Input.GetSingle</definition>
        <argsstring>(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetSingle</name>
        <param>
          <type>string</type>
          <declname>actionSet</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the float value of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results). (same as GetFloat) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action set the action is contained in</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1074" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1074" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a28baa91d2535512c1d9abafc38fa715e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float Valve.VR.SteamVR_Input.GetSingle</definition>
        <argsstring>(string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetSingle</name>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the float value of an action by the action name and input source. Optionally case sensitive (for faster results). (same as GetFloat) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1091" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1091" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a247ed60610c296f131fbed9e62f8628c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>static Vector2 Valve.VR.SteamVR_Input.GetVector2</definition>
        <argsstring>(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetVector2</name>
        <param>
          <type>string</type>
          <declname>actionSet</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the Vector2 value of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action set the action is contained in</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1103" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1103" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9b7191614c93cbd5f60c37e3215be5da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2</type>
        <definition>static Vector2 Valve.VR.SteamVR_Input.GetVector2</definition>
        <argsstring>(string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetVector2</name>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the Vector2 value of an action by the action name and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1120" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1120" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac3cca4444dffe8400eddcec5fd8a003d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Valve.VR.SteamVR_Input.GetVector3</definition>
        <argsstring>(string actionSet, string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetVector3</name>
        <param>
          <type>string</type>
          <declname>actionSet</declname>
        </param>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the Vector3 value of an action by the action set name, action name, and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionSet</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action set the action is contained in</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1132" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1132" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6faee3b08cec574fc440a2ecbbf6a7ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Valve.VR.SteamVR_Input.GetVector3</definition>
        <argsstring>(string action, SteamVR_Input_Sources inputSource, bool caseSensitive=false)</argsstring>
        <name>GetVector3</name>
        <param>
          <type>string</type>
          <declname>action</declname>
        </param>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the Vector3 value of an action by the action name and input source. Optionally case sensitive (for faster results) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action to get the state of</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The input source to get the action state from</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caseSensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not the action set and action name searches should be case sensitive (case sensitive searches are faster)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1149" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1149" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a936c76ec182f18ace45ad74c95ce7629" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set" kindref="compound">SteamVR_ActionSet</ref> []</type>
        <definition>static SteamVR_ActionSet [] Valve.VR.SteamVR_Input.GetActionSets</definition>
        <argsstring>()</argsstring>
        <name>GetActionSets</name>
        <briefdescription>
<para>Returns all of the action sets. If we&apos;re in the editor, doesn&apos;t rely on the actionSets field being filled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1160" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1160" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a7a089fd07a7a18392f2e6b263a77ec96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T []</type>
        <definition>static T [] Valve.VR.SteamVR_Input.GetActions&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>GetActions&lt; T &gt;</name>
        <briefdescription>
<para>Returns all of the actions of the specified type. If we&apos;re in the editor, doesn&apos;t rely on the arrays being filled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of actions you want to get</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1169" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1169" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a108f58e0227aff15784fbc0a3bb94fe2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>static string Valve.VR.SteamVR_Input.GetLocalizedName</definition>
        <argsstring>(ulong originHandle, params EVRInputStringBits[] localizedParts)</argsstring>
        <name>GetLocalizedName</name>
        <param>
          <type>ulong</type>
          <declname>originHandle</declname>
        </param>
        <param>
          <type>params <ref refid="namespace_valve_1_1_v_r_1a05e76187bbc5846b9bfb44f6acf13912" kindref="member">EVRInputStringBits</ref> []</type>
          <declname>localizedParts</declname>
        </param>
        <briefdescription>
<para>Gets the localized name of the device that the action corresponds to. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSource</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>localizedParts</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem>
<para>VRInputString_Hand - Which hand the origin is in. E.g. &quot;Left Hand&quot; </para>
</listitem>
<listitem>
<para>VRInputString_ControllerType - What kind of controller the user has in that hand.E.g. &quot;Vive Controller&quot; </para>
</listitem>
<listitem>
<para>VRInputString_InputSource - What part of that controller is the origin. E.g. &quot;Trackpad&quot; </para>
</listitem>
<listitem>
<para>VRInputString_All - All of the above. E.g. &quot;Left Hand Vive Controller Trackpad&quot; </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1233" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1233" bodyend="1244"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac4a27fa036690fecc3a65422681c5703" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Valve.VR.SteamVR_Input.IdentifyActionsFile</definition>
        <argsstring>(bool showLogs=true)</argsstring>
        <name>IdentifyActionsFile</name>
        <param>
          <type>bool</type>
          <declname>showLogs</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Tell <ref refid="class_valve_1_1_v_r_1_1_steam_v_r" kindref="compound">SteamVR</ref> that we&apos;re using the actions file at the path defined in <ref refid="class_valve_1_1_v_r_1_1_steam_v_r___settings" kindref="compound">SteamVR_Settings</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1248" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1248" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a7dcd55f6d1d832f6bff18860868d70ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.HasFileInMemoryBeenModified</definition>
        <argsstring>()</argsstring>
        <name>HasFileInMemoryBeenModified</name>
        <briefdescription>
<para>Does the actions file in memory differ from the one on disk as determined by a md5 hash </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1289" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1289" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8926553c62a1d68cdd22f78cbe03a2e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.CreateEmptyActionsFile</definition>
        <argsstring>(bool completelyEmpty=false)</argsstring>
        <name>CreateEmptyActionsFile</name>
        <param>
          <type>bool</type>
          <declname>completelyEmpty</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1316" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1316" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8ec782e1242f6f3179c4f361f4604db6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.DoesActionsFileExist</definition>
        <argsstring>()</argsstring>
        <name>DoesActionsFileExist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1347" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1347" bodyend="1355"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a45c0fb7aca33a1e2db7c4f5730ac8189" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.InitializeFile</definition>
        <argsstring>(bool force=false, bool showErrors=true)</argsstring>
        <name>InitializeFile</name>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>showErrors</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Load from disk and deserialize the actions file </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Force a refresh of this file from disk</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1361" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1361" bodyend="1395"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8f968e5a31e70c560ee75b6f7734ca47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.DeleteManifestAndBindings</definition>
        <argsstring>()</argsstring>
        <name>DeleteManifestAndBindings</name>
        <briefdescription>
<para>Deletes the action manifest file and all the default bindings it had listed in the default bindings section </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if we deleted an action file, false if not.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="1401" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="1401" bodyend="1429"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9d83c5f21feffcfa97e519178b01339e" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Valve.VR.SteamVR_Input.HasActionSet</definition>
        <argsstring>(string name, bool caseSensitive=false)</argsstring>
        <name>HasActionSet</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>caseSensitive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="867" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="867" bodyend="871"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5347">
        <label>Valve.VR.SteamVR_Action_Vibration</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vibration"/>
        <childnode refid="5348" relation="public-inheritance">
        </childnode>
        <childnode refid="5325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5324">
        <label>ISteamVR_Action_Skeleton_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___skeleton___source"/>
      </node>
      <node id="5341">
        <label>IEquatable&lt; SteamVR_ActionSet &gt;</label>
      </node>
      <node id="5330">
        <label>ISteamVR_Action_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source"/>
      </node>
      <node id="5332">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Vector3_Source_Map, SteamVR_Action_Vector3_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
      <node id="5339">
        <label>ISteamVR_Action_Out_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out___source"/>
        <childnode refid="5330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5348">
        <label>SteamVR_Action_Out&lt; SteamVR_Action_Vibration_Source_Map, SteamVR_Action_Vibration_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___out"/>
      </node>
      <node id="5334">
        <label>Valve.VR.SteamVR_Action_Boolean</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___boolean"/>
        <childnode refid="5335" relation="public-inheritance">
        </childnode>
        <childnode refid="5336" relation="public-inheritance">
        </childnode>
        <childnode refid="5325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5353">
        <label>Valve.VR.SteamVR_Action_Pose</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose"/>
        <childnode refid="5354" relation="public-inheritance">
        </childnode>
        <childnode refid="5325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5329">
        <label>ISteamVR_Action_In_Source</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source"/>
        <childnode refid="5330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5352">
        <label>Valve.VR.SteamVR_Input_ActionFile</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___input___action_file"/>
      </node>
      <node id="5346">
        <label>ISteamVR_Action_Single</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___single"/>
        <childnode refid="5329" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5354">
        <label>SteamVR_Action_Pose_Base&lt; SteamVR_Action_Pose_Source_Map&lt; SteamVR_Action_Pose_Source &gt;, SteamVR_Action_Pose_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
      </node>
      <node id="5325">
        <label>ISerializationCallbackReceiver</label>
      </node>
      <node id="5343">
        <label>Valve.VR.SteamVR_ActionSet_Data</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data"/>
        <childnode refid="5342" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5338">
        <label>ISteamVR_Action</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action"/>
        <childnode refid="5330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5328">
        <label>ISteamVR_Action_Vector2</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector2"/>
        <childnode refid="5329" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5333">
        <label>ISteamVR_Action_Vector3</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector3"/>
        <childnode refid="5329" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5322">
        <label>Valve.VR.SteamVR_Action_Skeleton</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton"/>
        <childnode refid="5323" relation="public-inheritance">
        </childnode>
        <childnode refid="5324" relation="public-inheritance">
        </childnode>
        <childnode refid="5325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5344">
        <label>Valve.VR.SteamVR_Action_Single</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___single"/>
        <childnode refid="5345" relation="public-inheritance">
        </childnode>
        <childnode refid="5346" relation="public-inheritance">
        </childnode>
        <childnode refid="5325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5349">
        <label>Valve.VR.SteamVR_Action&lt; SourceMap, SourceElement &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action"/>
        <childnode refid="5350" relation="public-inheritance">
        </childnode>
        <childnode refid="5338" relation="public-inheritance">
        </childnode>
        <childnode refid="5351" relation="public-inheritance">
        </childnode>
        <childnode refid="5338" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5355">
        <label>Valve.VR.ISteamVR_Action_In</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in"/>
        <childnode refid="5338" relation="public-inheritance">
        </childnode>
        <childnode refid="5329" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5340">
        <label>Valve.VR.SteamVR_ActionSet</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set"/>
        <childnode refid="5341" relation="public-inheritance">
        </childnode>
        <childnode refid="5342" relation="public-inheritance">
        </childnode>
        <childnode refid="5325" relation="public-inheritance">
        </childnode>
        <childnode refid="5343" relation="usage">
          <edgelabel>setData</edgelabel>
        </childnode>
      </node>
      <node id="5323">
        <label>SteamVR_Action_Pose_Base&lt; SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base"/>
      </node>
      <node id="5321">
        <label>Valve.VR.SteamVR_Input</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___input"/>
        <childnode refid="5322" relation="usage">
          <edgelabel>actionsSkeleton</edgelabel>
        </childnode>
        <childnode refid="5326" relation="usage">
          <edgelabel>actionsVector2</edgelabel>
        </childnode>
        <childnode refid="5331" relation="usage">
          <edgelabel>actionsVector3</edgelabel>
        </childnode>
        <childnode refid="5334" relation="usage">
          <edgelabel>actionsBoolean</edgelabel>
        </childnode>
        <childnode refid="5337" relation="usage">
          <edgelabel>actionsOut</edgelabel>
        </childnode>
        <childnode refid="5340" relation="usage">
          <edgelabel>actionSets</edgelabel>
        </childnode>
        <childnode refid="5344" relation="usage">
          <edgelabel>actionsSingle</edgelabel>
        </childnode>
        <childnode refid="5347" relation="usage">
          <edgelabel>actionsVibration</edgelabel>
        </childnode>
        <childnode refid="5349" relation="usage">
          <edgelabel>actions</edgelabel>
        </childnode>
        <childnode refid="5352" relation="usage">
          <edgelabel>actionFile</edgelabel>
        </childnode>
        <childnode refid="5353" relation="usage">
          <edgelabel>actionsPose</edgelabel>
        </childnode>
        <childnode refid="5355" relation="usage">
          <edgelabel>actionsIn</edgelabel>
          <edgelabel>actionsNonPoseNonSkeletonIn</edgelabel>
        </childnode>
      </node>
      <node id="5337">
        <label>Valve.VR.ISteamVR_Action_Out</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out"/>
        <childnode refid="5338" relation="public-inheritance">
        </childnode>
        <childnode refid="5339" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5327">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Vector2_Source_Map, SteamVR_Action_Vector2_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
      <node id="5336">
        <label>ISteamVR_Action_Boolean</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean"/>
        <childnode refid="5329" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5342">
        <label>ISteamVR_ActionSet</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set"/>
      </node>
      <node id="5345">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Single_Source_Map, SteamVR_Action_Single_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
      <node id="5350">
        <label>IEquatable&lt; SteamVR_Action &gt;</label>
      </node>
      <node id="5351">
        <label>SteamVR_Action</label>
      </node>
      <node id="5326">
        <label>Valve.VR.SteamVR_Action_Vector2</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector2"/>
        <childnode refid="5327" relation="public-inheritance">
        </childnode>
        <childnode refid="5328" relation="public-inheritance">
        </childnode>
        <childnode refid="5325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5331">
        <label>Valve.VR.SteamVR_Action_Vector3</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___vector3"/>
        <childnode refid="5332" relation="public-inheritance">
        </childnode>
        <childnode refid="5333" relation="public-inheritance">
        </childnode>
        <childnode refid="5325" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5335">
        <label>SteamVR_Action_In&lt; SteamVR_Action_Boolean_Source_Map, SteamVR_Action_Boolean_Source &gt;</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action___in"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" line="16" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_Input.cs" bodystart="15" bodyend="1507"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a72db21f575efb1323adffa0a93c70471" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionFile</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae24acec08f56ba0533c424fd8fed4f2c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionFileHash</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad3cc52ba6a3fe1eb4c49fb00d49439eb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aad6fcf2a2f0e959e95a7021a70870bc2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsBoolean</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9e6c74166dfeb1c00d27af76c6af26b0" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsByNameCache</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a01fc292d2f7dc293fa90804aad062888" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsByPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa5d9bed4bfa6fa55db30255a164f449f" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsByPathCache</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1add287ffec4527232bc96e7282a04825c" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsByPathLowered</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab466c62bf633cec28ba1c4917f46cea9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionSets</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a529087e098ae53b525c0e6628803f6b5" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionSetsByNameCache</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1acfb4f250bcffea97de00849dc65b00f2" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionSetsByPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a319debe0fd717b52106c4006efb69f3d" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionSetsByPathCache</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a7e426703cdad469de33294378460572a" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionSetsByPathLowered</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1abe954f3809b1dc96cc8e337a1f80d35e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsFilePath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac04e5705019bed32bae4a7d502d862b7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsIn</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad0f4a157c015d646f1239070f12cd565" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsNonPoseNonSkeletonIn</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aefbdcd03e7607dc2d129578b59be3d12" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsOut</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9b9ca9a53455596fcd7dd197aa892b40" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsPose</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a3a9ab2b76d747b4f16f984b6963f4bc1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsSingle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa5b9aa75ec82e6a6ab8b1e4198fd7445" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsSkeleton</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a470c062f3b57842e415c127f0b3d8e30" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsVector2</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6a25b2f5d1f958d75e18445b21043968" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsVector3</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a784d20fd1bef89b38a16349bee0c0ce1" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>actionsVibration</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8926553c62a1d68cdd22f78cbe03a2e2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>CreateEmptyActionsFile</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8a3341db9dfea4cbda0f3519c381e268" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>CreateFakeAction&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1af3dcfcb872d99e4e7830a5165a2b58a9" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>CreateFakeAction&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aae772d64b091f820acca71586e36e623" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>defaultInputGameObjectName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8f968e5a31e70c560ee75b6f7734ca47" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>DeleteManifestAndBindings</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8ec782e1242f6f3179c4f361f4604db6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>DoesActionsFileExist</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad2462a9ce2841cd0dab1a79fd176568b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>fileInitialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae879615807d3e4ecc454f698d8b333ec" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>FindPreinitializeMethod</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac2be0c217bd7a2ee78bf0e8e33718247" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>FixedUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a305a60db4634439fc9cbbe0a64b0c5fb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>ForcePreinitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1acfe21ace1b5f5466da7849026be2eeff" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetAction&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a3e5281b6293539de5de4ba4de967d72b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetAction&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a364b175a0b854190e86408807800cbe6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActionDataFromPath&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1af951439eb937586e0f5975a8ee160af3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActionFromPath&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a7a089fd07a7a18392f2e6b263a77ec96" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActions&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a645e9f34de97217c31c20ba913c8d3e6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8c97236e06841de3c07e5685aa875359" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActionSet&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a85aeba67ee34a71320cf1ed2d6544ca0" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActionSetDataFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae8457bd35fd6eb86e62371d56af44254" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActionSetFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a159b8db4e142e2250aaa1b2e1d1e38b9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActionSetFromPath&lt; T &gt;</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a936c76ec182f18ace45ad74c95ce7629" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetActionSets</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a635ec3bc7211d524ccd9bf463b5346e3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetBaseAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab209d6c5f511a9a334f1138cb66aa2fb" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetBaseActionFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a1442b5592282c75d7caeb91fe3509124" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetBooleanAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad899a1104e3be4772cae55c0eb6e350e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetBooleanAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a98161a36c23334e4f8d303d02bc757aa" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetBooleanActionFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6528f5369dfdfe6c3b853a9135b29a68" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetFloat</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1af7db6783a8eca53004a0278cc547de1a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetFloat</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a108f58e0227aff15784fbc0a3bb94fe2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetLocalizedName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a356eb935355089208399a963fe717b66" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetPoseAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa5711fcd08017cef2fd97a8eed2770a9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetPoseAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a5843e47aa0df15b89b76113dc191228d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetPoseActionFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a4492764f7a824b7c1a073c05bb8bc145" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetSingle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a28baa91d2535512c1d9abafc38fa715e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetSingle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9880b4d24247606b61c26c5efcd2e803" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetSingleAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1afe873662970a8590722180d656847fb2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetSingleAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1af5c12a8ff1d1f55fd17d93fc45f76511" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetSingleActionFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a3484935c1c72b595c5571659dee23f99" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetSkeletonAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a55798ec9f2be11a482869809b315e825" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetSkeletonAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a43955478497bd79185e2e990b1fe43d8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetSkeletonActionFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aca0c5b17c9729bd900e7132fa98b3a36" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab69880cc4e27624b6457412ac174887b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetState</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a7e07d6cb414b57fb9adafdb25a18a7cf" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a8f579cd67ec947e3049a5e8551d54b67" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetStateDown</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a3cab34370f541034f4ad7cb2f3850019" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a799db7338f4c49ed8fd862f0870bd8de" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetStateUp</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a247ed60610c296f131fbed9e62f8628c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector2</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9b7191614c93cbd5f60c37e3215be5da" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector2</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a10c56b6e9e99bca06abc8a9337b89e82" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector2Action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1abb8ad8e823781ceec0aac7ebc7db1125" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector2Action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1afee92f1a25149c18f7a437ce301eb43b" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector2ActionFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac3cca4444dffe8400eddcec5fd8a003d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector3</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6faee3b08cec574fc440a2ecbbf6a7ad" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector3</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad1b586b8d732a3d58754705dc828cccf" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector3Action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1add35bdec1632c00a3b3110f049e93129" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector3Action</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1af643be6e485a604b8155880d41fe1ace" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVector3ActionFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1addb242c75f24ea3622e5960a74d345ee" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVibrationAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9ebbd824b3b2e03863a1227dd875ea02" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVibrationAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad17ec850cff6999077412a0a2a09c317" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>GetVibrationActionFromPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a06b62e993650c4186256d2206702ffa7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>HasAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a04fc7868c6a4a357bc5f313a8b9096bf" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>HasAction</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa27da7ef81397ed3fb0e6ef12e13a2c7" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>HasActionPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a9d83c5f21feffcfa97e519178b01339e" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>HasActionSet</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a7dcd55f6d1d832f6bff18860868d70ba" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>HasFileInMemoryBeenModified</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac4a27fa036690fecc3a65422681c5703" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>IdentifyActionsFile</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ac9a4c04c5c0da11d4b52b2b9cca9b120" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a2a5ac88955294a891324af8121e02f3e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>initialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a45c0fb7aca33a1e2db7c4f5730ac8189" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>InitializeFile</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6fe24069d4c06479c3e9ee90dd26334e" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>initializing</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aa029ce204a4aa36e6a3bd6ba3ee14bb3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>isStartupFrame</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a1a82a3a13e2455a0b4bde911d01fb4ef" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>LateUpdate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ad43dd6aed5b9d57ea3b1cc699d0fc27e" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>localizationKeyName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a41fa3f6c1ba5a5464ce99167780db227" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>onNonVisualActionsUpdated</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a930229f4a6d398c4c911f45063592e28" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>onPosesUpdated</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab538ac35afe693bc10ea6c9f25812068" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>OnPreCull</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1aca21226a9a9cd62d3039f0b378606a39" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>onSkeletonsUpdated</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1acfd43d7f2d9763ec0aff8e11dfdcf15d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>PosesUpdatedHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a407e1e3d417f1555b8b32efb54e08eca" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>PreinitializeActionDictionaries</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a0f7555c8c991d837c557a0f875faa73c" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>PreinitializeActionSetDictionaries</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae02e7c3deb284bc92aaf7ac005e6afbe" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>preInitialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a84cea4c4f233d2a4c1576404af92c106" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>PreinitializeFinishActionSets</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a1880748ba2acc071a2a1e6eaa2ca2fd5" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>SkeletonsUpdatedHandler</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ae054a21282786691c33b1cc1354c4cda" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>startupFrame</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1afeca44f3e47e82cc8fb08fb01aeb4162" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>SteamVR_Input</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a44aeadc921fc991c03d70db06fbfad0a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>Update</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1ab9f7ee5abcd2dd6a91125f5759e728a9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>UpdateNonVisualActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a330caa435d2e10df76e907ac6bf05f84" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>UpdatePoseActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a89a291058bb1162ddb8f2da57847bd7e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>UpdateSkeletonActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___input_1a6e0cac70d4cca2721d8be761b238da4f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_Input</scope><name>UpdateVisualActions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
