<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::Encoding::VectorHand</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1afb1b5d7cec5a6234155fce74756b45bc" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Leap.Unity.Encoding.VectorHand.NUM_JOINT_POSITIONS</definition>
        <argsstring></argsstring>
        <name>NUM_JOINT_POSITIONS</name>
        <initializer>= 25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="30" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Leap.Unity.Encoding.VectorHand.isLeft</definition>
        <argsstring></argsstring>
        <name>isLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="32" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3" prot="public" static="no" mutable="no">
        <type>Vector3</type>
        <definition>Vector3 Leap.Unity.Encoding.VectorHand.palmPos</definition>
        <argsstring></argsstring>
        <name>palmPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="33" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046" prot="public" static="no" mutable="no">
        <type>Quaternion</type>
        <definition>Quaternion Leap.Unity.Encoding.VectorHand.palmRot</definition>
        <argsstring></argsstring>
        <name>palmRot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="34" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a7f524afe3f7107a25a35a57bbda80bd9" prot="private" static="no" mutable="no">
        <type>Vector3 []</type>
        <definition>Vector3 [] Leap.Unity.Encoding.VectorHand._backingJointPositions</definition>
        <argsstring></argsstring>
        <name>_backingJointPositions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="37" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>Vector3 []</type>
        <definition>Vector3 [] Leap.Unity.Encoding.VectorHand.jointPositions</definition>
        <argsstring></argsstring>
        <name>jointPositions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="38" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="property" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a43a43bf6a938dda526d2114392447bba" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Leap.Unity.Encoding.VectorHand.numBytesRequired</definition>
        <argsstring></argsstring>
        <name>numBytesRequired</name>
        <briefdescription>
<para>The number of bytes required to encode a <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref> into its byte representation. The byte representation is compressed to 86 bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>The first byte determines chirality, the camera-local hand position uses 6 bytes, the camera-local hand rotation uses 4 bytes, and each joint position component is encoded in hand-local space using 3 bytes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="179" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="179" bodyend="179"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aca6ce4326fca4d753305b08cdf7f4e68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Unity.Encoding.VectorHand.VectorHand</definition>
        <argsstring>()</argsstring>
        <name>VectorHand</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="49" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ad68f6c62830b01f9dc778b2bfb6e778a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Leap.Unity.Encoding.VectorHand.VectorHand</definition>
        <argsstring>(Hand hand)</argsstring>
        <name>VectorHand</name>
        <param>
          <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>hand</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref> representation from a <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> hand. This allocates a vector array for the encoded hand data. </para>
        </briefdescription>
        <detaileddescription>
<para>Use a pooling strategy to avoid unnecessary allocation in runtime contexts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="57" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aa949217613221d04f753a3df29c5dd75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Encoding.VectorHand.Encode</definition>
        <argsstring>(Hand fromHand)</argsstring>
        <name>Encode</name>
        <param>
          <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>fromHand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="63" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="63" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae9ced40bf71da643264a1b750bd52e35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Encoding.VectorHand.Decode</definition>
        <argsstring>(Hand intoHand)</argsstring>
        <name>Decode</name>
        <param>
          <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>intoHand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="81" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="81" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a06142cb2d22e73457ebfdfdbbe8329d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Encoding.VectorHand.ReadBytes</definition>
        <argsstring>(byte[] bytes, ref int offset)</argsstring>
        <name>ReadBytes</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Fills this <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref> with data read from the provided byte array, starting at the provided offset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="185" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="185" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a05ef96613b46f48f93ac66fe23294b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Encoding.VectorHand.FillBytes</definition>
        <argsstring>(byte[] bytesToFill, ref int offset)</argsstring>
        <name>FillBytes</name>
        <param>
          <type>byte []</type>
          <declname>bytesToFill</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Fills the provided byte array with a compressed, 86-byte form of this <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref>, starting at the provided offset. </para>
        </briefdescription>
        <detaileddescription>
<para>Throws an IndexOutOfRangeException if the provided byte array doesn&apos;t have enough space (starting from the offset) to write the number of bytes required. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="219" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="219" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1af5ad73d71bf71937153af3c6049ead52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Encoding.VectorHand.FillBytes</definition>
        <argsstring>(byte[] bytesToFill)</argsstring>
        <name>FillBytes</name>
        <param>
          <type>byte []</type>
          <declname>bytesToFill</declname>
        </param>
        <briefdescription>
<para>Fills the provided byte array with a compressed, 86-byte form of this <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Throws an IndexOutOfRangeException if the provided byte array doesn&apos;t have enough space to write the number of bytes required (see VectorHand.BYTE_ENCODING_SIZE). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="261" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a933acd17a4ff101050a616f294e2c46c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Encoding.VectorHand.ReadBytes</definition>
        <argsstring>(byte[] bytes, ref int offset, Hand intoHand)</argsstring>
        <name>ReadBytes</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>intoHand</declname>
        </param>
        <briefdescription>
<para>Shortcut for reading a VectorHand-encoded byte representation of a <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> hand and decoding it immediately into a <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="271" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a3283b0824ff4862ef5a19f188432c4d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Leap.Unity.Encoding.VectorHand.FillBytes</definition>
        <argsstring>(byte[] bytes, ref int offset, Hand fromHand)</argsstring>
        <name>FillBytes</name>
        <param>
          <type>byte []</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>ref int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref></type>
          <declname>fromHand</declname>
        </param>
        <briefdescription>
<para>Shortcut for encoding a <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> hand into a <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref> representation and compressing it immediately into a byte representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="280" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="280" bodyend="283"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Encoding.VectorHand.ToWorld</definition>
        <argsstring>(Vector3 localPoint, Vector3 localOrigin, Quaternion localRot)</argsstring>
        <name>ToWorld</name>
        <param>
          <type>Vector3</type>
          <declname>localPoint</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>localOrigin</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>localRot</declname>
        </param>
        <briefdescription>
<para>Converts a local-space point to a world-space point given the local space&apos;s origin and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="293" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a722895d0b8abc8e2226a4591c3708c7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3</type>
        <definition>static Vector3 Leap.Unity.Encoding.VectorHand.ToLocal</definition>
        <argsstring>(Vector3 worldPoint, Vector3 localOrigin, Quaternion localRot)</argsstring>
        <name>ToLocal</name>
        <param>
          <type>Vector3</type>
          <declname>worldPoint</declname>
        </param>
        <param>
          <type>Vector3</type>
          <declname>localOrigin</declname>
        </param>
        <param>
          <type>Quaternion</type>
          <declname>localRot</declname>
        </param>
        <briefdescription>
<para>Converts a world-space point to a local-space point given the local space&apos;s origin and rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="302" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="302" bodyend="305"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A Vector-based encoding of a <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> <ref refid="class_leap_1_1_hand" kindref="compound">Hand</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>You can Encode a <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref> from a <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> hand, Decode a <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref> into a <ref refid="namespace_leap_1_1_unity_1_1_leap" kindref="compound">Leap</ref> hand, convert the <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref> to a compressed byte representation using FillBytes, and decompress back into a <ref refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand" kindref="compound">VectorHand</ref> using FromBytes.</para>
<para>Also see CurlHand for a more compressed but slightly less articulated encoding. TODO: CurlHand not yet brought in from Networking module! </para>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" line="26" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs" bodystart="26" bodyend="309"/>
    <listofallmembers>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a7f524afe3f7107a25a35a57bbda80bd9" prot="private" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>_backingJointPositions</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae9ced40bf71da643264a1b750bd52e35" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>Decode</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aa949217613221d04f753a3df29c5dd75" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>Encode</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a05ef96613b46f48f93ac66fe23294b23" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>FillBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1af5ad73d71bf71937153af3c6049ead52" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>FillBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a3283b0824ff4862ef5a19f188432c4d2" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>FillBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>isLeft</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>jointPositions</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1afb1b5d7cec5a6234155fce74756b45bc" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>NUM_JOINT_POSITIONS</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a43a43bf6a938dda526d2114392447bba" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>numBytesRequired</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>palmPos</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>palmRot</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a06142cb2d22e73457ebfdfdbbe8329d6" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>ReadBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a933acd17a4ff101050a616f294e2c46c" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>ReadBytes</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a722895d0b8abc8e2226a4591c3708c7a" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>ToLocal</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>ToWorld</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aca6ce4326fca4d753305b08cdf7f4e68" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>VectorHand</name></member>
      <member refid="class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ad68f6c62830b01f9dc778b2bfb6e778a" prot="public" virt="non-virtual"><scope>Leap::Unity::Encoding::VectorHand</scope><name>VectorHand</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
