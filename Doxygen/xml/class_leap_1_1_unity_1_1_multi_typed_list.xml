<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_leap_1_1_unity_1_1_multi_typed_list" kind="class" language="C#" prot="public">
    <compoundname>Leap::Unity::MultiTypedList</compoundname>
    <innerclass refid="struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator" prot="public">Leap::Unity::MultiTypedList::Enumerator</innerclass>
    <templateparamlist>
      <param>
        <type>BaseType</type>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Represents an ordered collection of objects of type BaseType. </para>
    </briefdescription>
    <detaileddescription>
<para>Unlike normal List objects, when <ref refid="class_leap_1_1_unity_1_1_multi_typed_list" kindref="compound">MultiTypedList</ref> is serialized it is able to support a certain amount of polymorphism. To use <ref refid="class_leap_1_1_unity_1_1_multi_typed_list" kindref="compound">MultiTypedList</ref> you must specify exactly which types could possibly added. You must also pre-declare a non-generic version of the chosen class, much in the same style as UnityEvent. </para>
    </detaileddescription>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/MultiTypedList.cs" line="37" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/MultiTypedList.cs" bodystart="37" bodyend="144"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
