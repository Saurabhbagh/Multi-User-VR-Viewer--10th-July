<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data" kind="class" language="C#" prot="public">
    <compoundname>Valve::VR::SteamVR_ActionSet_Data</compoundname>
    <basecompoundref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set" prot="public" virt="non-virtual">Valve.VR.ISteamVR_ActionSet</basecompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a33aa78a713eee29f33de114f12f4ed99" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action" kindref="compound">SteamVR_Action</ref> []</type>
        <definition>SteamVR_Action [] Valve.VR.SteamVR_ActionSet_Data.allActions</definition>
        <argsstring></argsstring>
        <name>allActions</name>
        <briefdescription>
<para>All actions within this set (including out actions) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="358" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="358" bodyend="358"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ad4be45256c30ef6a6a3ffb3720ff477d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in" kindref="compound">ISteamVR_Action_In</ref> []</type>
        <definition>ISteamVR_Action_In [] Valve.VR.SteamVR_ActionSet_Data.nonVisualInActions</definition>
        <argsstring></argsstring>
        <name>nonVisualInActions</name>
        <briefdescription>
<para>All IN actions within this set that are NOT pose or skeleton actions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="361" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="361" bodyend="361"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a16fdd46dfe641ebedacfb06d46cc1749" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in" kindref="compound">ISteamVR_Action_In</ref> []</type>
        <definition>ISteamVR_Action_In [] Valve.VR.SteamVR_ActionSet_Data.visualActions</definition>
        <argsstring></argsstring>
        <name>visualActions</name>
        <briefdescription>
<para>All pose and skeleton actions within this set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="364" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="364" bodyend="364"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a8a160d48ee6e95f8d4208dc269731cb2" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___pose" kindref="compound">SteamVR_Action_Pose</ref> []</type>
        <definition>SteamVR_Action_Pose [] Valve.VR.SteamVR_ActionSet_Data.poseActions</definition>
        <argsstring></argsstring>
        <name>poseActions</name>
        <briefdescription>
<para>All pose actions within this set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="367" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="367" bodyend="367"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a5adc54b82c2104cfd5ff0795c3b068d9" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton" kindref="compound">SteamVR_Action_Skeleton</ref> []</type>
        <definition>SteamVR_Action_Skeleton [] Valve.VR.SteamVR_ActionSet_Data.skeletonActions</definition>
        <argsstring></argsstring>
        <name>skeletonActions</name>
        <briefdescription>
<para>All skeleton actions within this set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="370" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a907d1af05e4af1621ddf864a3835ac6f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type><ref refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out" kindref="compound">ISteamVR_Action_Out</ref> []</type>
        <definition>ISteamVR_Action_Out [] Valve.VR.SteamVR_ActionSet_Data.outActionArray</definition>
        <argsstring></argsstring>
        <name>outActionArray</name>
        <briefdescription>
<para>All out actions within this set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="373" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="373" bodyend="373"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a4d57b53a9d1c1e38da8f48928d3ca244" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet_Data.fullPath</definition>
        <argsstring></argsstring>
        <name>fullPath</name>
        <briefdescription>
<para>The full path to this action set (ex: /actions/in/default) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="377" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="377" bodyend="377"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a6baa50a7aac716829461d1513667bbdf" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet_Data.usage</definition>
        <argsstring></argsstring>
        <name>usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="378" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="378" bodyend="378"/>
      </memberdef>
      <memberdef kind="property" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a14fa7b2b025cf473f20a366ebe96ba5e" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>ulong</type>
        <definition>ulong Valve.VR.SteamVR_ActionSet_Data.handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="381" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="381" bodyend="381"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ac472dc40ce5ea1b5b57f9f8297623ac2" prot="protected" static="no" mutable="no">
        <type>Dictionary&lt; <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>, bool &gt;</type>
        <definition>Dictionary&lt;SteamVR_Input_Sources, bool&gt; Valve.VR.SteamVR_ActionSet_Data.rawSetActive</definition>
        <argsstring></argsstring>
        <name>rawSetActive</name>
        <initializer>= new Dictionary&lt;<ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>, bool&gt;(new <ref refid="struct_valve_1_1_v_r_1_1_steam_v_r___input___sources___comparer" kindref="compound">SteamVR_Input_Sources_Comparer</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="383" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a86b35b411ada16bc16d9473b617bb19b" prot="protected" static="no" mutable="no">
        <type>Dictionary&lt; <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>, float &gt;</type>
        <definition>Dictionary&lt;SteamVR_Input_Sources, float&gt; Valve.VR.SteamVR_ActionSet_Data.rawSetLastChanged</definition>
        <argsstring></argsstring>
        <name>rawSetLastChanged</name>
        <initializer>= new Dictionary&lt;<ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>, float&gt;(new <ref refid="struct_valve_1_1_v_r_1_1_steam_v_r___input___sources___comparer" kindref="compound">SteamVR_Input_Sources_Comparer</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="385" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1abcd0319e66f185136fb2be11959d4dc0" prot="protected" static="no" mutable="no">
        <type>Dictionary&lt; <ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>, int &gt;</type>
        <definition>Dictionary&lt;SteamVR_Input_Sources, int&gt; Valve.VR.SteamVR_ActionSet_Data.rawSetPriority</definition>
        <argsstring></argsstring>
        <name>rawSetPriority</name>
        <initializer>= new Dictionary&lt;<ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref>, int&gt;(new <ref refid="struct_valve_1_1_v_r_1_1_steam_v_r___input___sources___comparer" kindref="compound">SteamVR_Input_Sources_Comparer</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="387" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a8ed7a27af3d170ad74d3904278da4a9e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_ActionSet_Data.initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="389" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="389" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1af0c27a67545f6c77a6b00d6d3a16484a" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet_Data.cachedShortName</definition>
        <argsstring></argsstring>
        <name>cachedShortName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="538" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="538" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a9a42fdc5c1399070dfcab2007a15ce05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Valve.VR.SteamVR_ActionSet_Data.SteamVR_ActionSet_Data</definition>
        <argsstring>()</argsstring>
        <name>SteamVR_ActionSet_Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="355" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="355" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1aa8f10fb84c2bb84d8d397bca87a26448" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_ActionSet_Data.PreInitialize</definition>
        <argsstring>()</argsstring>
        <name>PreInitialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="391" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="391" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a22949235abc84877f74d3b31a853d4d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_ActionSet_Data.FinishPreInitialize</definition>
        <argsstring>()</argsstring>
        <name>FinishPreInitialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="404" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="404" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a6a9598330da834f7f477b76a5b2f73c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_ActionSet_Data.Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="460" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="460" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a6965315cd2efbcf52a7aa7989c0056ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_ActionSet_Data.IsActive</definition>
        <argsstring>(SteamVR_Input_Sources source=SteamVR_Input_Sources.Any)</argsstring>
        <name>IsActive</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1aa56bf951c356649897b7ebf385ff4804">IsActive</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>source</declname>
          <defval><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref></defval>
        </param>
        <briefdescription>
<para>Returns whether the set is currently active or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to check. Any means all devices here (not left or right, but all)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="476" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="476" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ac46c58ac022a390e56338df2c469c79a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_ActionSet_Data.GetTimeLastChanged</definition>
        <argsstring>(SteamVR_Input_Sources source=SteamVR_Input_Sources.Any)</argsstring>
        <name>GetTimeLastChanged</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a7c8434a48c12c5b70f6cbfd1f2bca5be">GetTimeLastChanged</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>source</declname>
          <defval><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref></defval>
        </param>
        <briefdescription>
<para>Returns the last time this action set was changed (set to active or inactive) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The device to check. Any means all devices here (not left or right, but all)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="488" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="488" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ad085a17ebd6286a224d27d38ac913597" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_ActionSet_Data.Activate</definition>
        <argsstring>(SteamVR_Input_Sources activateForSource=SteamVR_Input_Sources.Any, int priority=0, bool disableAllOtherActionSets=false)</argsstring>
        <name>Activate</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1ad7a3807ce56c1ace0e0dba9c666380c4">Activate</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>activateForSource</declname>
          <defval><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>disableAllOtherActionSets</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Activate this set so its actions can be called </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>disableAllOtherActionSets</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable all other action sets at the same time</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>The priority of this action set. If you have two actions bound to the same input (button) the higher priority set will override the lower priority. If they are the same priority both will execute.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>activateForSource</parametername>
</parameternamelist>
<parameterdescription>
<para>Will activate this action set only for the specified source. Any if you want to activate for everything</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="501" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="501" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ab1c62e54114fb68c3f6c8f5a80f96cc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Valve.VR.SteamVR_ActionSet_Data.Deactivate</definition>
        <argsstring>(SteamVR_Input_Sources forSource=SteamVR_Input_Sources.Any)</argsstring>
        <name>Deactivate</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a7f2befeb3e536b020c6a9a72ac16597b">Deactivate</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>forSource</declname>
          <defval><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853faed36a1ef76a59ee3f15180e0441188ad" kindref="member">SteamVR_Input_Sources.Any</ref></defval>
        </param>
        <briefdescription>
<para>Deactivate the action set so its actions can no longer be called </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="526" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="526" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a6e9b13d26ad3b0743b76564e76a60ffc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Valve.VR.SteamVR_ActionSet_Data.GetShortName</definition>
        <argsstring>()</argsstring>
        <name>GetShortName</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a695b72b2db2413a2ee8b7b2797f83240">GetShortName</reimplements>
        <briefdescription>
<para>Gets the last part of the path for this action. Removes &quot;actions&quot; and direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="541" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="541" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a24bdfaf2e0d0505b09055633ac7cfbc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Valve.VR.SteamVR_ActionSet_Data.ReadRawSetActive</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>ReadRawSetActive</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a7db619853c00ffb7ac16ba370921ac4e">ReadRawSetActive</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="551" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="551" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a86331a88d9eddc152fccc295a6c090d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Valve.VR.SteamVR_ActionSet_Data.ReadRawSetLastChanged</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>ReadRawSetLastChanged</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a7647555ffdd2708516296e140100a8ae">ReadRawSetLastChanged</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="556" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1af564cf8c2a12fe9bfab5b801db820f84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Valve.VR.SteamVR_ActionSet_Data.ReadRawSetPriority</definition>
        <argsstring>(SteamVR_Input_Sources inputSource)</argsstring>
        <name>ReadRawSetPriority</name>
        <reimplements refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set_1a79f6520e36cd4bfa4ddb1388a8ff1b51">ReadRawSetPriority</reimplements>
        <param>
          <type><ref refid="namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f" kindref="member">SteamVR_Input_Sources</ref></type>
          <declname>inputSource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="561" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="561" bodyend="564"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Action sets are logical groupings of actions. Multiple sets can be active at one time. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5066">
        <label>Valve.VR.SteamVR_ActionSet_Data</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data"/>
        <childnode refid="5067" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5067">
        <label>ISteamVR_ActionSet</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5068">
        <label>Valve.VR.SteamVR_ActionSet_Data</label>
        <link refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data"/>
        <childnode refid="5069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5069">
        <label>ISteamVR_ActionSet</label>
        <link refid="interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set"/>
      </node>
    </collaborationgraph>
    <location file="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" line="354" column="1" bodyfile="O:/GitHUBMINIPRoject/Assets/SteamVR/Input/SteamVR_ActionSet.cs" bodystart="353" bodyend="565"/>
    <listofallmembers>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ad085a17ebd6286a224d27d38ac913597" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>Activate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a33aa78a713eee29f33de114f12f4ed99" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>allActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1af0c27a67545f6c77a6b00d6d3a16484a" prot="private" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>cachedShortName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ab1c62e54114fb68c3f6c8f5a80f96cc8" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>Deactivate</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a22949235abc84877f74d3b31a853d4d6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>FinishPreInitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a4d57b53a9d1c1e38da8f48928d3ca244" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>fullPath</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a6e9b13d26ad3b0743b76564e76a60ffc" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>GetShortName</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ac46c58ac022a390e56338df2c469c79a" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>GetTimeLastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a14fa7b2b025cf473f20a366ebe96ba5e" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>handle</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a6a9598330da834f7f477b76a5b2f73c2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>Initialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a8ed7a27af3d170ad74d3904278da4a9e" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>initialized</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a6965315cd2efbcf52a7aa7989c0056ec" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>IsActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ad4be45256c30ef6a6a3ffb3720ff477d" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>nonVisualInActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a907d1af05e4af1621ddf864a3835ac6f" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>outActionArray</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a8a160d48ee6e95f8d4208dc269731cb2" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>poseActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1aa8f10fb84c2bb84d8d397bca87a26448" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>PreInitialize</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1ac472dc40ce5ea1b5b57f9f8297623ac2" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>rawSetActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a86b35b411ada16bc16d9473b617bb19b" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>rawSetLastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1abcd0319e66f185136fb2be11959d4dc0" prot="protected" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>rawSetPriority</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a24bdfaf2e0d0505b09055633ac7cfbc3" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>ReadRawSetActive</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a86331a88d9eddc152fccc295a6c090d6" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>ReadRawSetLastChanged</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1af564cf8c2a12fe9bfab5b801db820f84" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>ReadRawSetPriority</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a5adc54b82c2104cfd5ff0795c3b068d9" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>skeletonActions</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a9a42fdc5c1399070dfcab2007a15ce05" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>SteamVR_ActionSet_Data</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a6baa50a7aac716829461d1513667bbdf" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>usage</name></member>
      <member refid="class_valve_1_1_v_r_1_1_steam_v_r___action_set___data_1a16fdd46dfe641ebedacfb06d46cc1749" prot="public" virt="non-virtual"><scope>Valve::VR::SteamVR_ActionSet_Data</scope><name>visualActions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
