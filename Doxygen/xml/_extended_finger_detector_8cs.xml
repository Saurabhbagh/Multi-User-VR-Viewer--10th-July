<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_extended_finger_detector_8cs" kind="file" language="C#">
    <compoundname>ExtendedFingerDetector.cs</compoundname>
    <innerclass refid="class_leap_1_1_unity_1_1_extended_finger_detector" prot="public">Leap::Unity::ExtendedFingerDetector</innerclass>
    <innernamespace refid="namespace_leap">Leap</innernamespace>
    <innernamespace refid="namespace_leap_1_1_unity">Leap::Unity</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Leap<sp/>Motion,<sp/>Inc.<sp/>2011-2018.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Leap<sp/>Motion<sp/>proprietary<sp/>and<sp/>confidential.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Use<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Leap<sp/>Motion<sp/>SDK<sp/>Agreement<sp/>available<sp/>at<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>https://developer.leapmotion.com/sdk_agreement,<sp/>or<sp/>another<sp/>agreement<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>between<sp/>Leap<sp/>Motion<sp/>and<sp/>you,<sp/>your<sp/>company<sp/>or<sp/>other<sp/>organization.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23" kindref="member">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_leap" kindref="compound">Leap</ref>.<ref refid="namespace_leap_1_1_unity" kindref="compound">Unity</ref>.<ref refid="namespace_leap_1_1_unity_1_1_attributes" kindref="compound">Attributes</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_leap_1_1_unity" kindref="compound">Leap.Unity</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_leap_1_1_unity_1_1_extended_finger_detector" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector" kindref="compound">ExtendedFingerDetector</ref><sp/>:<sp/><ref refid="class_leap_1_1_unity_1_1_detector" kindref="compound">Detector</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>interval<sp/>in<sp/>seconds<sp/>at<sp/>which<sp/>to<sp/>check<sp/>this<sp/>detector&apos;s<sp/>conditions.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>[Units(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>[<ref refid="class_leap_1_1_unity_1_1_attributes_1_1_min_value" kindref="compound">MinValue</ref>(0)]</highlight></codeline>
<codeline lineno="38" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a0e8262d14702fa8b2e7dc55c721d651e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a0e8262d14702fa8b2e7dc55c721d651e" kindref="member">Period</ref><sp/>=<sp/>.1f;<sp/></highlight><highlight class="comment">//seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>hand<sp/>model<sp/>to<sp/>watch.<sp/>Set<sp/>automatically<sp/>if<sp/>detector<sp/>is<sp/>on<sp/>a<sp/>hand.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="46" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model_base" kindref="compound">HandModelBase</ref><sp/><ref refid="class_leap_1_1_unity_1_1_hand_model" kindref="compound">HandModel</ref><sp/>=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Finger<sp/>States&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Required<sp/>state<sp/>of<sp/>the<sp/>thumb.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="51" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1abf3b43c9d475e3241d6b1111c990d1de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1abf3b43c9d475e3241d6b1111c990d1de" kindref="member">Thumb</ref><sp/>=<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.Either;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Required<sp/>state<sp/>of<sp/>the<sp/>index<sp/>finger.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="54" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ae24e39831917ad570db7975b8454c4ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ae24e39831917ad570db7975b8454c4ac" kindref="member">Index</ref><sp/>=<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.Either;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Required<sp/>state<sp/>of<sp/>the<sp/>middle<sp/>finger.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="57" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a15d5d4abb98b316c98ef8bdeb369d97a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a15d5d4abb98b316c98ef8bdeb369d97a" kindref="member">Middle</ref><sp/>=<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.Either;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Required<sp/>state<sp/>of<sp/>the<sp/>ring<sp/>finger.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="60" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a08e096dca12e0dc50f7ddf831cdff192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a08e096dca12e0dc50f7ddf831cdff192" kindref="member">Ring</ref><sp/>=<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.Either;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Required<sp/>state<sp/>of<sp/>the<sp/>little<sp/>finger.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="63" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a8cb8f984382c8c7fae991073aa7ff232" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a8cb8f984382c8c7fae991073aa7ff232" kindref="member">Pinky</ref><sp/>=<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.Either;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;Min<sp/>and<sp/>Max<sp/>Finger<sp/>Counts&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0,5)]</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>minimum<sp/>number<sp/>of<sp/>fingers<sp/>extended.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="69" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ab5759c120d7bcc6c3c2d779089689b3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ab5759c120d7bcc6c3c2d779089689b3a" kindref="member">MinimumExtendedCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>[Range(0,<sp/>5)]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;The<sp/>maximum<sp/>number<sp/>of<sp/>fingers<sp/>extended.&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="73" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a53da535a860f85c42cd383bbea4c3e67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a53da535a860f85c42cd383bbea4c3e67" kindref="member">MaximumExtendedCount</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>[Header(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>[Tooltip(</highlight><highlight class="stringliteral">&quot;Draw<sp/>this<sp/>detector&apos;s<sp/>Gizmos,<sp/>if<sp/>any.<sp/>(Gizmos<sp/>must<sp/>be<sp/>on<sp/>in<sp/>Unity<sp/>edtor,<sp/>too.)&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="79" refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ae8f83315871432527c288cdfef9f7d4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ae8f83315871432527c288cdfef9f7d4b" kindref="member">ShowGizmos</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IEnumerator<sp/>watcherCoroutine;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnValidate()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>required<sp/>=<sp/>0,<sp/>forbidden<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>[]<sp/>stateArray<sp/>=<sp/>{<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1abf3b43c9d475e3241d6b1111c990d1de" kindref="member">Thumb</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ae24e39831917ad570db7975b8454c4ac" kindref="member">Index</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a15d5d4abb98b316c98ef8bdeb369d97a" kindref="member">Middle</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a08e096dca12e0dc50f7ddf831cdff192" kindref="member">Ring</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a8cb8f984382c8c7fae991073aa7ff232" kindref="member">Pinky</ref><sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;stateArray.Length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>state<sp/>=<sp/>stateArray[i];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.Extended:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required++;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.NotExtended:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forbidden++;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ab5759c120d7bcc6c3c2d779089689b3a" kindref="member">MinimumExtendedCount</ref><sp/>=<sp/>Math.Max(required,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ab5759c120d7bcc6c3c2d779089689b3a" kindref="member">MinimumExtendedCount</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a53da535a860f85c42cd383bbea4c3e67" kindref="member">MaximumExtendedCount</ref><sp/>=<sp/>Math.Min(5<sp/>-<sp/>forbidden,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a53da535a860f85c42cd383bbea4c3e67" kindref="member">MaximumExtendedCount</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a53da535a860f85c42cd383bbea4c3e67" kindref="member">MaximumExtendedCount</ref><sp/>=<sp/>Math.Max(required,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a53da535a860f85c42cd383bbea4c3e67" kindref="member">MaximumExtendedCount</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Awake<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>watcherCoroutine<sp/>=<sp/>extendedFingerWatcher();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnEnable<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StartCoroutine(watcherCoroutine);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDisable<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StopCoroutine(watcherCoroutine);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" kindref="member">Deactivate</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>IEnumerator<sp/>extendedFingerWatcher()<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6baa78b1ac16c0cd02168097fc9a9bd7604" kindref="member">Hand</ref><sp/>hand;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fingerState<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" kindref="member">HandModel</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" kindref="member">IsTracked</ref>){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hand<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1aa24ca02bf4a64ba33b0370ad6da8731f" kindref="member">GetLeapHand</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hand<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fingerState<sp/>=<sp/>matchFingerState(hand.Fingers[0],<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1abf3b43c9d475e3241d6b1111c990d1de" kindref="member">Thumb</ref>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>matchFingerState(hand.Fingers[1],<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ae24e39831917ad570db7975b8454c4ac" kindref="member">Index</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>matchFingerState(hand.Fingers[2],<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a15d5d4abb98b316c98ef8bdeb369d97a" kindref="member">Middle</ref>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>matchFingerState(hand.Fingers[3],<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a08e096dca12e0dc50f7ddf831cdff192" kindref="member">Ring</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>matchFingerState(hand.Fingers[4],<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a8cb8f984382c8c7fae991073aa7ff232" kindref="member">Pinky</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extendedCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>5;<sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hand.Fingers[f].IsExtended)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extendedCount++;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fingerState<sp/>=<sp/>fingerState<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(extendedCount<sp/>&lt;=<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a53da535a860f85c42cd383bbea4c3e67" kindref="member">MaximumExtendedCount</ref>)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(extendedCount<sp/>&gt;=<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ab5759c120d7bcc6c3c2d779089689b3a" kindref="member">MinimumExtendedCount</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" kindref="member">IsTracked</ref><sp/>&amp;&amp;<sp/>fingerState){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8" kindref="member">Activate</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" kindref="member">IsTracked</ref><sp/>||<sp/>!fingerState)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" kindref="member">Deactivate</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_leap_1_1_unity_1_1_detector_1a89e15d17ea95587d9edf49c42473264d" kindref="member">IsActive</ref>){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59" kindref="member">Deactivate</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WaitForSeconds(<ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a0e8262d14702fa8b2e7dc55c721d651e" kindref="member">Period</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchFingerState<sp/>(Finger<sp/>finger,<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref><sp/>requiredState)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(requiredState<sp/>==<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.Either)<sp/>||</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(requiredState<sp/>==<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.Extended<sp/>&amp;&amp;<sp/>finger.IsExtended)<sp/>||</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(requiredState<sp/>==<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>.NotExtended<sp/>&amp;&amp;<sp/>!finger.IsExtended);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>UNITY_EDITOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDrawGizmos<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ae8f83315871432527c288cdfef9f7d4b" kindref="member">ShowGizmos</ref><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" kindref="member">HandModel</ref><sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a" kindref="member">IsTracked</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>[]<sp/>state<sp/>=<sp/>{<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1abf3b43c9d475e3241d6b1111c990d1de" kindref="member">Thumb</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ae24e39831917ad570db7975b8454c4ac" kindref="member">Index</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a15d5d4abb98b316c98ef8bdeb369d97a" kindref="member">Middle</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a08e096dca12e0dc50f7ddf831cdff192" kindref="member">Ring</ref>,<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a8cb8f984382c8c7fae991073aa7ff232" kindref="member">Pinky</ref><sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6baa78b1ac16c0cd02168097fc9a9bd7604" kindref="member">Hand</ref><sp/>hand<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a1ce4d883132d6a9fa84370ff12c8b0bc" kindref="member">HandModel</ref>.<ref refid="class_leap_1_1_unity_1_1_hand_model_base_1aa24ca02bf4a64ba33b0370ad6da8731f" kindref="member">GetLeapHand</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extendedCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>notExtendedCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>5;<sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Finger<sp/>finger<sp/>=<sp/>hand.<ref refid="class_leap_1_1_hand_1ac9f68349507bfa13e3ac24738382bea6" kindref="member">Fingers</ref>[f];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finger.IsExtended)<sp/>extendedCount++;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>notExtendedCount++;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matchFingerState(finger,<sp/>state[f])<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(extendedCount<sp/>&lt;=<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1a53da535a860f85c42cd383bbea4c3e67" kindref="member">MaximumExtendedCount</ref>)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(extendedCount<sp/>&gt;=<sp/><ref refid="class_leap_1_1_unity_1_1_extended_finger_detector_1ab5759c120d7bcc6c3c2d779089689b3a" kindref="member">MinimumExtendedCount</ref>))<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.color<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_detector_1ad922f873e3c07f9128d6438332e7b9c7" kindref="member">OnColor</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.color<sp/>=<sp/><ref refid="class_leap_1_1_unity_1_1_detector_1a976fc8d66dd98aaea15196d861df429c" kindref="member">OffColor</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gizmos.DrawWireSphere(finger.TipPosition.ToVector3(),<sp/>finger.Width);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fc" kindref="member">PointingState</ref>{<ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fcaf23578fcd2a868168854ab714e7de537" kindref="member">Extended</ref>,<sp/><ref refid="namespace_leap_1_1_unity_1a1d316bf483102971171646a20de176fca8eff020959c41ba903e16d966855ce03" kindref="member">NotExtended</ref>,<sp/><ref refid="struct_leap_1_1_unity_1_1_either" kindref="compound">Either</ref>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/ExtendedFingerDetector.cs"/>
  </compounddef>
</doxygen>
