<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__analytics_event_tests_8cs_source">
<title>AnalyticsEventTests.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.analytics@3.2.2/Tests/Editor/Unity.Analytics.StandardEvents/AnalyticsEventTests.cs</primary></indexterm>
<programlisting>00001 <emphasis role="preprocessor">#pragma&#32;warning&#32;disable&#32;0612,&#32;0618</emphasis>
00002 
00003 <emphasis role="keyword">using</emphasis>&#32;System;
00004 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00005 <emphasis role="keyword">using</emphasis>&#32;NUnit.Framework;
00006 
00007 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_unity_engine_1_1_analytics_1_1_tests">UnityEngine.Analytics.Tests</link>
00008 {
00009 &#32;&#32;&#32;&#32;[TestFixture,&#32;Category(<emphasis role="stringliteral">&quot;Standard&#32;Event&#32;SDK&quot;</emphasis>)]
00010 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis>AnalyticsEventTests
00011 &#32;&#32;&#32;&#32;{
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;readonly&#32;Dictionary&lt;string,&#32;object&gt;&#32;m_CustomData&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;object&gt;();
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnalyticsResult&#32;m_Result&#32;=&#32;AnalyticsResult.Ok;
00014 
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SetUp]
<anchor xml:id="__analytics_event_tests_8cs_source_1l00016"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a553b95270ae65bec0dd15863d17f22ea">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a553b95270ae65bec0dd15863d17f22ea">TestCaseSetUp</link>()
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Result&#32;=&#32;AnalyticsResult.Ok;
00019 
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_CustomData.Clear();
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_CustomData.Add(<emphasis role="stringliteral">&quot;custom_param&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>);
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00023 
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__analytics_event_tests_8cs_source_1l00025"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1ab9cd8ef42fd7277fd37f5e264f1cbc69">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1ab9cd8ef42fd7277fd37f5e264f1cbc69">SdkVersion_FormatTest</link>()
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;major,&#32;minor,&#32;patch;
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;versions&#32;=&#32;AnalyticsEvent.sdkVersion.Split(<emphasis role="charliteral">&apos;.&apos;</emphasis>);
00029 
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(3,&#32;versions.Length,&#32;<emphasis role="stringliteral">&quot;Number&#32;of&#32;integer&#32;fields&#32;in&#32;version&#32;format&quot;</emphasis>);
00031 
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(<emphasis role="keywordtype">int</emphasis>.TryParse(versions[0],&#32;out&#32;major),&#32;<emphasis role="stringliteral">&quot;Major&#32;version&#32;is&#32;an&#32;integer&quot;</emphasis>);
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(<emphasis role="keywordtype">int</emphasis>.TryParse(versions[1],&#32;out&#32;minor),&#32;<emphasis role="stringliteral">&quot;Minor&#32;version&#32;is&#32;an&#32;integer&quot;</emphasis>);
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(<emphasis role="keywordtype">int</emphasis>.TryParse(versions[2],&#32;out&#32;patch),&#32;<emphasis role="stringliteral">&quot;Patch&#32;version&#32;is&#32;an&#32;integer&quot;</emphasis>);
00035 
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.LessOrEqual(0,&#32;major,&#32;<emphasis role="stringliteral">&quot;Major&#32;version&quot;</emphasis>);
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.LessOrEqual(0,&#32;minor,&#32;<emphasis role="stringliteral">&quot;Minor&#32;version&quot;</emphasis>);
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.LessOrEqual(0,&#32;patch,&#32;<emphasis role="stringliteral">&quot;Patch&#32;version&quot;</emphasis>);
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__analytics_event_tests_8cs_source_1l00042"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a0b766c186a91a0e151a63377c83c4821">00042</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a0b766c186a91a0e151a63377c83c4821">Custom_EventNameTest</link>(
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;custom_event&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;eventName
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(eventName))
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Throws&lt;ArgumentException&gt;(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.Custom(eventName));
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.Custom(eventName));
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00056 
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__analytics_event_tests_8cs_source_1l00058"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a8089da4c2a1bc5acbe6684e7646c02a8">00058</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a8089da4c2a1bc5acbe6684e7646c02a8">Custom_EventDataTest</link>()
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;eventName&#32;=&#32;<emphasis role="stringliteral">&quot;custom_event&quot;</emphasis>;
00061 
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.Custom(eventName,&#32;m_CustomData));
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1addfce5dc50d03ecdb8b9791b06450b2b">EvaluateCustomData</link>(m_CustomData);
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00066 
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__analytics_event_tests_8cs_source_1l00068"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a993564f0d45efa87f1b097b2ddfa87e5">00068</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a993564f0d45efa87f1b097b2ddfa87e5">Custom_RegisterUnregisterUnnamedTest</link>()
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Action&lt;IDictionary&lt;string,&#32;object&gt;&gt;&#32;myAction&#32;=
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eventData&#32;=&gt;&#32;eventData.Add(<emphasis role="stringliteral">&quot;my_key&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;my_value&quot;</emphasis>);
00072 
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnalyticsEvent.Register(myAction);&#32;<emphasis role="comment">//&#32;Registering&#32;for&#32;a&#32;named&#32;AnalyticsEvent</emphasis>
00074 
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;eventName&#32;=&#32;<emphasis role="stringliteral">&quot;custom_event&quot;</emphasis>;
00076 
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.Custom(eventName,&#32;m_CustomData));
00078 
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a8815a2181a2c1701bb2fee08d3345708">EvaluateRegisteredCustomData</link>(m_CustomData);
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00081 
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnalyticsEvent.Unregister(myAction);
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00084 
<anchor xml:id="__analytics_event_tests_8cs_source_1l00086"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1addfce5dc50d03ecdb8b9791b06450b2b">00086</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1addfce5dc50d03ecdb8b9791b06450b2b">EvaluateCustomData</link>(IDictionary&lt;string,&#32;object&gt;&#32;customData)
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(1,&#32;customData.Count,&#32;<emphasis role="stringliteral">&quot;Custom&#32;param&#32;count&quot;</emphasis>);
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00090 
<anchor xml:id="__analytics_event_tests_8cs_source_1l00092"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a8815a2181a2c1701bb2fee08d3345708">00092</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a8815a2181a2c1701bb2fee08d3345708">EvaluateRegisteredCustomData</link>(IDictionary&lt;string,&#32;object&gt;&#32;customData)
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(2,&#32;customData.Count,&#32;<emphasis role="stringliteral">&quot;Custom&#32;param&#32;count&quot;</emphasis>);
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00096 
<anchor xml:id="__analytics_event_tests_8cs_source_1l00097"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">00097</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(AnalyticsResult&#32;result)
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(result)
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnalyticsResult.Ok:
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnalyticsResult.InvalidData:
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Fail(<emphasis role="stringliteral">&quot;Event&#32;data&#32;is&#32;invalid.&quot;</emphasis>);
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;AnalyticsResult.TooManyItems:
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Fail(<emphasis role="stringliteral">&quot;Event&#32;data&#32;consists&#32;of&#32;too&#32;many&#32;parameters.&quot;</emphasis>);
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogFormat(<emphasis role="stringliteral">&quot;A&#32;result&#32;of&#32;{0}&#32;is&#32;passable&#32;for&#32;the&#32;purpose&#32;of&#32;this&#32;test.&quot;</emphasis>,&#32;result);
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00114 &#32;&#32;&#32;&#32;}
00115 }
</programlisting></section>
