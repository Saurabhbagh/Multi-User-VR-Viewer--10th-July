<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__value_interpolators_8cs_source">
<title>ValueInterpolators.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/ValueInterpolators.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_animation">Leap.Unity.Animation</link>&#32;{
00014 &#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="__extensions_8cs_1a9c5bf76bfa43f056e154ec8661c9f586">Internal</link>;
00015 
00016 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;partial&#32;<emphasis role="keyword">struct&#32;</emphasis>Tween&#32;{
00017 
00018 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;FLOAT</emphasis>
<anchor xml:id="__value_interpolators_8cs_source_1l00019"/><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a831691155a74d63fe5a0a8c07bce6d13">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a831691155a74d63fe5a0a8c07bce6d13">Value</link>(<emphasis role="keywordtype">float</emphasis>&#32;a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;Action&lt;float&gt;&#32;onValue)&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c">AddInterpolator</link>(Pool&lt;FloatInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;onValue));
00021 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
00022 &#32;&#32;&#32;&#32;}
00023 
00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>FloatInterpolator&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_float_interpolator_base">FloatInterpolatorBase</link>&lt;Action&lt;float&gt;&gt;&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target(_a&#32;+&#32;_b&#32;*&#32;percent);
00027 &#32;&#32;&#32;&#32;&#32;&#32;}
00028 
00029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;FloatInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00032 &#32;&#32;&#32;&#32;&#32;&#32;}
00033 
00034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891">isValid</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}&#32;}
00035 &#32;&#32;&#32;&#32;}
00036 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00037 
00038 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;VECTOR2</emphasis>
<anchor xml:id="__value_interpolators_8cs_source_1l00039"/><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4b8b8872079eed40ed3565488390768b">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4b8b8872079eed40ed3565488390768b">Value</link>(Vector2&#32;a,&#32;Vector2&#32;b,&#32;Action&lt;Vector2&gt;&#32;onValue)&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c">AddInterpolator</link>(Pool&lt;Vector2Interpolator&gt;.Spawn().Init(a,&#32;b,&#32;onValue));
00041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
00042 &#32;&#32;&#32;&#32;}
00043 
00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>Vector2Interpolator&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_vector2_interpolator_base">Vector2InterpolatorBase</link>&lt;Action&lt;Vector2&gt;&gt;&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target(_a&#32;+&#32;_b&#32;*&#32;percent);
00047 &#32;&#32;&#32;&#32;&#32;&#32;}
00048 
00049 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;Vector2Interpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00052 &#32;&#32;&#32;&#32;&#32;&#32;}
00053 
00054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891">isValid</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}&#32;}
00055 &#32;&#32;&#32;&#32;}
00056 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00057 
00058 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;VECTOR3</emphasis>
<anchor xml:id="__value_interpolators_8cs_source_1l00059"/><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad8eaac902159cb11727ed3fdb9b29f8a">00059</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad8eaac902159cb11727ed3fdb9b29f8a">Value</link>(Vector3&#32;a,&#32;Vector3&#32;b,&#32;Action&lt;Vector3&gt;&#32;onValue)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c">AddInterpolator</link>(Pool&lt;Vector3Interpolator&gt;.Spawn().Init(a,&#32;b,&#32;onValue));
00061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
00062 &#32;&#32;&#32;&#32;}
00063 
00064 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>Vector3Interpolator&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_vector3_interpolator_base">Vector3InterpolatorBase</link>&lt;Action&lt;Vector3&gt;&gt;&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target(_a&#32;+&#32;_b&#32;*&#32;percent);
00067 &#32;&#32;&#32;&#32;&#32;&#32;}
00068 
00069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;Vector3Interpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00072 &#32;&#32;&#32;&#32;&#32;&#32;}
00073 
00074 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891">isValid</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}&#32;}
00075 &#32;&#32;&#32;&#32;}
00076 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00077 
00078 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;QUATERNION</emphasis>
<anchor xml:id="__value_interpolators_8cs_source_1l00079"/><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4877dc9c6bc0010523f51d21549098fa">00079</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4877dc9c6bc0010523f51d21549098fa">Value</link>(Quaternion&#32;a,&#32;Quaternion&#32;b,&#32;Action&lt;Quaternion&gt;&#32;onValue)&#32;{
00080 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c">AddInterpolator</link>(Pool&lt;QuaternionInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;onValue));
00081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
00082 &#32;&#32;&#32;&#32;}
00083 
00084 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>QuaternionInterpolator&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_quaternion_interpolator_base">QuaternionInterpolatorBase</link>&lt;Action&lt;Quaternion&gt;&gt;&#32;{
00085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target(Quaternion.Slerp(_a,&#32;_b,&#32;percent));
00087 &#32;&#32;&#32;&#32;&#32;&#32;}
00088 
00089 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;QuaternionInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00092 &#32;&#32;&#32;&#32;&#32;&#32;}
00093 
00094 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891">isValid</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}&#32;}
00095 &#32;&#32;&#32;&#32;}
00096 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00097 
00098 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;COLOR</emphasis>
<anchor xml:id="__value_interpolators_8cs_source_1l00099"/><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aab3b83bfba4ff98c4ddb8129501e731b">00099</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aab3b83bfba4ff98c4ddb8129501e731b">Value</link>(Color&#32;a,&#32;Color&#32;b,&#32;Action&lt;Color&gt;&#32;onValue)&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c">AddInterpolator</link>(Pool&lt;ColorInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;onValue));
00101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
00102 &#32;&#32;&#32;&#32;}
00103 
00104 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>ColorInterpolator&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_color_interpolator_base">ColorInterpolatorBase</link>&lt;Action&lt;Color&gt;&gt;&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target(_a&#32;+&#32;_b&#32;*&#32;percent);
00107 &#32;&#32;&#32;&#32;&#32;&#32;}
00108 
00109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;ColorInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00112 &#32;&#32;&#32;&#32;&#32;&#32;}
00113 
00114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891">isValid</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;&#32;}&#32;}
00115 &#32;&#32;&#32;&#32;}
00116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00117 &#32;&#32;}
00118 }
</programlisting></section>
