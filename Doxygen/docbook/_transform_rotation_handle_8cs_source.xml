<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__transform_rotation_handle_8cs_source">
<title>TransformRotationHandle.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Examples/3. Interaction Callbacks/Scripts/TransformRotationHandle.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00014 
00015 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_examples">Leap.Unity.Examples</link>&#32;{
00016 
00017 &#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
<anchor xml:id="__transform_rotation_handle_8cs_source_1l00018"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_rotation_handle">00018</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_rotation_handle">TransformRotationHandle</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle">TransformHandle</link>&#32;{
00019 
<anchor xml:id="__transform_rotation_handle_8cs_source_1l00020"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_rotation_handle_1a37171ac787856ac86358e300c11f4707">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_rotation_handle_1a37171ac787856ac86358e300c11f4707">Start</link>()&#32;{
00021 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Populates&#32;_intObj&#32;with&#32;the&#32;InteractionBehaviour,&#32;and&#32;_tool&#32;with&#32;the&#32;TransformTool.</emphasis>
00022 &#32;&#32;&#32;&#32;&#32;&#32;base.Start();
00023 
00024 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Subscribe&#32;to&#32;OnGraspedMovement;&#32;all&#32;of&#32;the&#32;logic&#32;will&#32;happen&#32;when&#32;the&#32;handle&#32;is&#32;moved&#32;via&#32;grasping.</emphasis>
00025 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle_1a4d4e476a89c1c3382524ef991fac85e7">_intObj</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1aac5b0f2f21a26369d70314363e18af3f">OnGraspedMovement</link>&#32;+=&#32;onGraspedMovement;
00026 &#32;&#32;&#32;&#32;}
00027 
00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;onGraspedMovement(Vector3&#32;presolvePos,&#32;Quaternion&#32;presolveRot,&#32;Vector3&#32;solvedPos,&#32;Quaternion&#32;solvedRot,&#32;List&lt;InteractionController&gt;&#32;controllers)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;</emphasis>
00030 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;The&#32;RotationHandle&#32;works&#32;very&#32;similarly&#32;to&#32;the&#32;TranslationHandle.</emphasis>
00031 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;</emphasis>
00032 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;We&#32;use&#32;OnGraspedMovement&#32;to&#32;get&#32;the&#32;position&#32;and&#32;rotation&#32;of&#32;this&#32;object</emphasis>
00033 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;before&#32;and&#32;after&#32;it&#32;was&#32;moved&#32;by&#32;its&#32;grapsing&#32;hand.&#32;We&#32;calculate&#32;how&#32;the&#32;handle</emphasis>
00034 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;would&#32;have&#32;rotated&#32;and&#32;report&#32;that&#32;to&#32;the&#32;Transform&#32;Tool,&#32;and&#32;then&#32;we&#32;move</emphasis>
00035 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;the&#32;handle&#32;back&#32;where&#32;it&#32;was&#32;before&#32;it&#32;was&#32;moved,&#32;because&#32;the&#32;Tool&#32;will</emphasis>
00036 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;actually&#32;move&#32;all&#32;of&#32;its&#32;handles&#32;at&#32;the&#32;end&#32;of&#32;the&#32;frame.</emphasis>
00037 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00038 
00039 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Constrain&#32;the&#32;position&#32;of&#32;the&#32;handle&#32;and&#32;determine&#32;the&#32;resulting&#32;rotation&#32;required&#32;to&#32;get&#32;there.</emphasis>
00040 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;presolveToolToHandle&#32;=&#32;presolvePos&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle_1abe8b50e9b861797f1347cbf9e4f0aa4b">_tool</link>.transform.position;
00041 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;solvedToolToHandleDirection&#32;=&#32;(solvedPos&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle_1abe8b50e9b861797f1347cbf9e4f0aa4b">_tool</link>.transform.position).normalized;
00042 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;constrainedToolToHandle&#32;=&#32;Vector3.ProjectOnPlane(solvedToolToHandleDirection,&#32;(presolveRot&#32;*&#32;Vector3.up)).normalized&#32;*&#32;presolveToolToHandle.magnitude;
00043 &#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;deltaRotation&#32;=&#32;Quaternion.FromToRotation(presolveToolToHandle,&#32;constrainedToolToHandle);
00044 
00045 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Notify&#32;the&#32;tool&#32;about&#32;the&#32;calculated&#32;rotation.</emphasis>
00046 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle_1abe8b50e9b861797f1347cbf9e4f0aa4b">_tool</link>.<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_tool_1a3c43fb470f2e6fcaadfbf05aba33d8ca">NotifyHandleRotation</link>(deltaRotation);
00047 
00048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;the&#32;object&#32;back&#32;to&#32;its&#32;original&#32;position,&#32;to&#32;be&#32;moved&#32;correctly&#32;later&#32;on&#32;by&#32;the&#32;Transform&#32;Tool.</emphasis>
00049 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle_1a4d4e476a89c1c3382524ef991fac85e7">_intObj</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c">rigidbody</link>.position&#32;=&#32;presolvePos;
00050 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle_1a4d4e476a89c1c3382524ef991fac85e7">_intObj</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a4f54f1794944882d8cf51bd641a5341c">rigidbody</link>.rotation&#32;=&#32;presolveRot;
00051 &#32;&#32;&#32;&#32;}
00052 
00053 &#32;&#32;}
00054 
00055 }
</programlisting></section>
