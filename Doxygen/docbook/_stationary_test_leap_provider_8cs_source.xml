<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__stationary_test_leap_provider_8cs_source">
<title>StationaryTestLeapProvider.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Testing/StationaryTestLeapProvider.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00011 
<anchor xml:id="__stationary_test_leap_provider_8cs_source_1l00012"/><link linkend="_class_leap_1_1_unity_1_1_stationary_test_leap_provider">00012</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_stationary_test_leap_provider">StationaryTestLeapProvider</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_provider">LeapProvider</link>&#32;{
00013 
00014 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;_curFrame;
00015 
00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;_leftHand;
00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;_rightHand;
00018 
<anchor xml:id="__stationary_test_leap_provider_8cs_source_1l00019"/><link linkend="_class_leap_1_1_unity_1_1_stationary_test_leap_provider_1aee23993f910db116ba13a0a06efb4bef">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_stationary_test_leap_provider_1aee23993f910db116ba13a0a06efb4bef">CurrentFrame</link>&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_curFrame;
00022 &#32;&#32;&#32;&#32;&#32;&#32;}
00023 &#32;&#32;&#32;&#32;}
00024 
<anchor xml:id="__stationary_test_leap_provider_8cs_source_1l00025"/><link linkend="_class_leap_1_1_unity_1_1_stationary_test_leap_provider_1ad14b3288247d8b694a35041f72789867">00025</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_stationary_test_leap_provider_1ad14b3288247d8b694a35041f72789867">CurrentFixedFrame</link>&#32;{
00026 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_curFrame;
00028 &#32;&#32;&#32;&#32;&#32;&#32;}
00029 &#32;&#32;&#32;&#32;}
00030 
00031 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()&#32;{
00032 &#32;&#32;&#32;&#32;&#32;&#32;refreshFrame();
00033 &#32;&#32;&#32;&#32;}
00034 
00035 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;refreshFrame()&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;_curFrame&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>();
00037 
00038 &#32;&#32;&#32;&#32;&#32;&#32;_leftHand&#32;=&#32;this.MakeTestHand(<emphasis role="keyword">true</emphasis>);
00039 &#32;&#32;&#32;&#32;&#32;&#32;_rightHand&#32;=&#32;this.MakeTestHand(<emphasis role="keyword">false</emphasis>);
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;_curFrame.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Add(_leftHand);
00042 &#32;&#32;&#32;&#32;&#32;&#32;_curFrame.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Add(_rightHand);
00043 &#32;&#32;&#32;&#32;}
00044 
00045 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;refreshFrame();
00047 
00048 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_provider_1a2b90958e448e8f556d2b9c9af4a9547c">DispatchUpdateFrameEvent</link>(_curFrame);
00049 &#32;&#32;&#32;&#32;}
00050 
00051 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FixedUpdate()&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_provider_1af7fdbc4bae6cb0508424b8c3bdbb4ce1">DispatchFixedFrameEvent</link>(_curFrame);
00053 &#32;&#32;&#32;&#32;}
00054 
00055 &#32;&#32;}
00056 
00057 }
</programlisting></section>
