<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__copy_from_other_extensions_8cs_source">
<title>CopyFromOtherExtensions.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/CopyFromOtherExtensions.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap">Leap</link>&#32;{
00011 
00012 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>CopyFromOtherExtensions&#32;{
00013 
00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Frame&#32;CopyFrom(<emphasis role="keyword">this</emphasis>&#32;Frame&#32;frame,&#32;Frame&#32;source)&#32;{
00021 &#32;&#32;&#32;&#32;&#32;&#32;frame.Id&#32;=&#32;source.Id;
00022 &#32;&#32;&#32;&#32;&#32;&#32;frame.Timestamp&#32;=&#32;source.Timestamp;
00023 &#32;&#32;&#32;&#32;&#32;&#32;frame.CurrentFramesPerSecond&#32;=&#32;source.CurrentFramesPerSecond;
00024 
00025 &#32;&#32;&#32;&#32;&#32;&#32;frame.ResizeHandList(source.Hands.Count);
00026 
00027 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;frame.Hands.Count;&#32;i--&#32;!=&#32;0;)&#32;{
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame.Hands[i].CopyFrom(source.Hands[i]);
00029 &#32;&#32;&#32;&#32;&#32;&#32;}
00030 
00031 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frame;
00032 &#32;&#32;&#32;&#32;}
00033 
00034 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00035 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Copies&#32;the&#32;data&#32;from&#32;a&#32;source&#32;hand&#32;into&#32;a&#32;hand.&#32;&#32;After&#32;the&#32;operation&#32;is</emphasis>
00036 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;complete,&#32;the&#32;hand&#32;will&#32;be&#32;identical&#32;to&#32;the&#32;source&#32;hand.</emphasis>
00037 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*</emphasis>
00038 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;@param&#32;source&#32;The&#32;source&#32;hand&#32;that&#32;is&#32;copied&#32;into&#32;a&#32;hand.</emphasis>
00039 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6baa78b1ac16c0cd02168097fc9a9bd7604">Hand</link>&#32;CopyFrom(<emphasis role="keyword">this</emphasis>&#32;Hand&#32;hand,&#32;Hand&#32;source)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;hand.Id&#32;=&#32;source.Id;
00042 &#32;&#32;&#32;&#32;&#32;&#32;hand.Confidence&#32;=&#32;source.Confidence;
00043 &#32;&#32;&#32;&#32;&#32;&#32;hand.GrabStrength&#32;=&#32;source.GrabStrength;
00044 &#32;&#32;&#32;&#32;&#32;&#32;hand.GrabAngle&#32;=&#32;source.GrabAngle;
00045 &#32;&#32;&#32;&#32;&#32;&#32;hand.Rotation&#32;=&#32;source.Rotation;
00046 &#32;&#32;&#32;&#32;&#32;&#32;hand.PinchStrength&#32;=&#32;source.PinchStrength;
00047 &#32;&#32;&#32;&#32;&#32;&#32;hand.PinchDistance&#32;=&#32;source.PinchDistance;
00048 &#32;&#32;&#32;&#32;&#32;&#32;hand.PalmWidth&#32;=&#32;source.PalmWidth;
00049 &#32;&#32;&#32;&#32;&#32;&#32;hand.IsLeft&#32;=&#32;source.IsLeft;
00050 &#32;&#32;&#32;&#32;&#32;&#32;hand.TimeVisible&#32;=&#32;source.TimeVisible;
00051 &#32;&#32;&#32;&#32;&#32;&#32;hand.PalmPosition&#32;=&#32;source.PalmPosition;
00052 &#32;&#32;&#32;&#32;&#32;&#32;hand.StabilizedPalmPosition&#32;=&#32;source.StabilizedPalmPosition;
00053 &#32;&#32;&#32;&#32;&#32;&#32;hand.PalmVelocity&#32;=&#32;source.PalmVelocity;
00054 &#32;&#32;&#32;&#32;&#32;&#32;hand.PalmNormal&#32;=&#32;source.PalmNormal;
00055 &#32;&#32;&#32;&#32;&#32;&#32;hand.Direction&#32;=&#32;source.Direction;
00056 &#32;&#32;&#32;&#32;&#32;&#32;hand.WristPosition&#32;=&#32;source.WristPosition;
00057 
00058 &#32;&#32;&#32;&#32;&#32;&#32;hand.Arm.CopyFrom(source.Arm);
00059 
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;5;&#32;i--&#32;!=&#32;0;)&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hand.Fingers[i].CopyFrom(source.Fingers[i]);
00062 &#32;&#32;&#32;&#32;&#32;&#32;}
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hand;
00065 &#32;&#32;&#32;&#32;}
00066 
00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Finger&#32;CopyFrom(<emphasis role="keyword">this</emphasis>&#32;Finger&#32;finger,&#32;Finger&#32;source)&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;4;&#32;i--&#32;!=&#32;0;)&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;finger.bones[i].CopyFrom(source.bones[i]);
00076 &#32;&#32;&#32;&#32;&#32;&#32;}
00077 
00078 &#32;&#32;&#32;&#32;&#32;&#32;finger.Id&#32;=&#32;source.Id;
00079 &#32;&#32;&#32;&#32;&#32;&#32;finger.HandId&#32;=&#32;source.HandId;
00080 &#32;&#32;&#32;&#32;&#32;&#32;finger.TimeVisible&#32;=&#32;source.TimeVisible;
00081 
00082 &#32;&#32;&#32;&#32;&#32;&#32;finger.TipPosition&#32;=&#32;source.TipPosition;
00083 &#32;&#32;&#32;&#32;&#32;&#32;finger.Direction&#32;=&#32;source.Direction;
00084 &#32;&#32;&#32;&#32;&#32;&#32;finger.Width&#32;=&#32;source.Width;
00085 &#32;&#32;&#32;&#32;&#32;&#32;finger.Length&#32;=&#32;source.Length;
00086 &#32;&#32;&#32;&#32;&#32;&#32;finger.IsExtended&#32;=&#32;source.IsExtended;
00087 &#32;&#32;&#32;&#32;&#32;&#32;finger.Type&#32;=&#32;source.Type;
00088 
00089 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;finger;
00090 &#32;&#32;&#32;&#32;}
00091 
00098 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Bone&#32;CopyFrom(<emphasis role="keyword">this</emphasis>&#32;Bone&#32;bone,&#32;Bone&#32;source)&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;bone.PrevJoint&#32;=&#32;source.PrevJoint;
00100 &#32;&#32;&#32;&#32;&#32;&#32;bone.NextJoint&#32;=&#32;source.NextJoint;
00101 &#32;&#32;&#32;&#32;&#32;&#32;bone.Direction&#32;=&#32;source.Direction;
00102 &#32;&#32;&#32;&#32;&#32;&#32;bone.Center&#32;=&#32;source.Center;
00103 &#32;&#32;&#32;&#32;&#32;&#32;bone.Length&#32;=&#32;source.Length;
00104 &#32;&#32;&#32;&#32;&#32;&#32;bone.Width&#32;=&#32;source.Width;
00105 &#32;&#32;&#32;&#32;&#32;&#32;bone.Rotation&#32;=&#32;source.Rotation;
00106 &#32;&#32;&#32;&#32;&#32;&#32;bone.Type&#32;=&#32;source.Type;
00107 
00108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bone;
00109 &#32;&#32;&#32;&#32;}
00110 &#32;&#32;}
00111 }
</programlisting></section>
