<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__animation_curve_util_8cs_source">
<title>AnimationCurveUtil.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/AnimationCurveUtil.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00012 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00014 <emphasis role="preprocessor">#endif</emphasis>
00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00016 
00017 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00018 
00019 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>DefaultCurve&#32;{
00020 
00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;Zero&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;curve&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve();
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(0,&#32;0);
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(1,&#32;0);
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;curve;
00027 &#32;&#32;&#32;&#32;&#32;&#32;}
00028 &#32;&#32;&#32;&#32;}
00029 
00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;One&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;curve&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve();
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(0,&#32;1);
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(1,&#32;1);
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;curve;
00036 &#32;&#32;&#32;&#32;&#32;&#32;}
00037 &#32;&#32;&#32;&#32;}
00038 
00039 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;LinearUp&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;curve&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve();
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(0,&#32;0,&#32;1,&#32;1));
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(1,&#32;1,&#32;1,&#32;1));
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;curve;
00045 &#32;&#32;&#32;&#32;&#32;&#32;}
00046 &#32;&#32;&#32;&#32;}
00047 
00048 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;LinearDown&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;curve&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve();
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(0,&#32;1,&#32;-1,&#32;-1));
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(1,&#32;0,&#32;-1,&#32;-1));
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;curve;
00054 &#32;&#32;&#32;&#32;&#32;&#32;}
00055 &#32;&#32;&#32;&#32;}
00056 
00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;SigmoidUp&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;curve&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve();
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(0,&#32;0,&#32;0,&#32;0));
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(1,&#32;1,&#32;0,&#32;0));
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;curve;
00063 &#32;&#32;&#32;&#32;&#32;&#32;}
00064 &#32;&#32;&#32;&#32;}
00065 
00066 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;SigmoidDown&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;curve&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve();
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(0,&#32;1,&#32;0,&#32;0));
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(1,&#32;0,&#32;0,&#32;0));
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;curve;
00072 &#32;&#32;&#32;&#32;&#32;&#32;}
00073 &#32;&#32;&#32;&#32;}
00074 
00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;SigmoidUpDown&#32;{
00076 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;curve&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve();
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(0,&#32;&#32;&#32;&#32;0,&#32;0,&#32;0));
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(0.5f,&#32;1,&#32;0,&#32;0));
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(<emphasis role="keyword">new</emphasis>&#32;Keyframe(1,&#32;&#32;&#32;&#32;0,&#32;0,&#32;0));
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;curve;
00082 &#32;&#32;&#32;&#32;&#32;&#32;}
00083 &#32;&#32;&#32;&#32;}
00084 &#32;&#32;}
00085 
00086 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>AnimationCurveUtil&#32;{
00087 
00088 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsConstant(<emphasis role="keyword">this</emphasis>&#32;AnimationCurve&#32;curve)&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;keys&#32;=&#32;curve.keys;
00090 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;first&#32;=&#32;keys[0];
00091 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;keys.Length;&#32;i++)&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;key&#32;=&#32;keys[i];
00093 
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Mathf.Approximately(first.value,&#32;key.value))&#32;{
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00097 
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Mathf.Approximately(key.inTangent,&#32;0)&#32;&amp;&amp;&#32;!<emphasis role="keywordtype">float</emphasis>.IsInfinity(key.inTangent))&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00101 
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Mathf.Approximately(key.outTangent,&#32;0)&#32;&amp;&amp;&#32;!<emphasis role="keywordtype">float</emphasis>.IsInfinity(key.outTangent))&#32;{
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00105 &#32;&#32;&#32;&#32;&#32;&#32;}
00106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00107 &#32;&#32;&#32;&#32;}
00108 
00109 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ContainsKeyAtTime(<emphasis role="keyword">this</emphasis>&#32;AnimationCurve&#32;curve,&#32;<emphasis role="keywordtype">float</emphasis>&#32;time,&#32;<emphasis role="keywordtype">float</emphasis>&#32;tolerance&#32;=&#32;0.0000001f)&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;curve.keys.Query().Any(k&#32;=&gt;&#32;Mathf.Abs(k.time&#32;-&#32;time)&#32;&lt;&#32;tolerance);
00111 &#32;&#32;&#32;&#32;}
00112 
00113 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;GetCropped(<emphasis role="keyword">this</emphasis>&#32;AnimationCurve&#32;curve,&#32;<emphasis role="keywordtype">float</emphasis>&#32;start,&#32;<emphasis role="keywordtype">float</emphasis>&#32;end,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;slideToStart&#32;=&#32;<emphasis role="keyword">true</emphasis>)&#32;{
00114 &#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;newCurve&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve();
00115 
00116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Get&#32;a&#32;copy&#32;of&#32;the&#32;latest&#32;key&#32;before&#32;start</emphasis>
00117 &#32;&#32;&#32;&#32;&#32;&#32;Keyframe?&#32;latestBeforeStart&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00118 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;keys&#32;=&#32;curve.keys;
00119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;keys.Length;&#32;i++)&#32;{
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;key&#32;=&#32;keys[i];
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(key.time&#32;&gt;=&#32;start)&#32;<emphasis role="keywordflow">break</emphasis>;
00122 
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;latestBeforeStart&#32;=&#32;key;
00124 &#32;&#32;&#32;&#32;&#32;&#32;}
00125 
00126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Remove&#32;all&#32;keys&#32;before&#32;start&#32;or&#32;after&#32;end</emphasis>
00127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;keys.Length;&#32;i--&#32;!=&#32;0;)&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(keys[i].time&#32;&lt;&#32;start&#32;||&#32;keys[i].time&#32;&gt;&#32;end)&#32;{
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;curve.RemoveKey(i);
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00131 &#32;&#32;&#32;&#32;&#32;&#32;}
00132 
00133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;alreadyHasZero&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;keys.Length;&#32;i++)&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;key&#32;=&#32;keys[i];
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(key.time&#32;&gt;=&#32;start&#32;&amp;&amp;&#32;key.time&#32;&lt;=&#32;end)&#32;{
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(slideToStart)&#32;{
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;key.time&#32;-=&#32;start;
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00140 
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Mathf.Approximately(key.time,&#32;0))&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alreadyHasZero&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00144 
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newCurve.AddKey(key);
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00147 &#32;&#32;&#32;&#32;&#32;&#32;}
00148 
00149 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(latestBeforeStart.HasValue&#32;&amp;&amp;&#32;!alreadyHasZero)&#32;{
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;toInsert&#32;=&#32;latestBeforeStart.Value;
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toInsert.time&#32;=&#32;0;
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newCurve.AddKey(toInsert);
00153 &#32;&#32;&#32;&#32;&#32;&#32;}
00154 
00155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newCurve;
00156 &#32;&#32;&#32;&#32;}
00157 
00158 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00159 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;Compress(AnimationCurve&#32;curve,&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxDelta&#32;=&#32;0.005f,&#32;<emphasis role="keywordtype">int</emphasis>&#32;checkSteps&#32;=&#32;8)&#32;{
00160 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;curveArray&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve[]&#32;{&#32;curve&#32;};
00161 
00162 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;result&#32;=&#32;CompressCurves(curveArray,
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(src,&#32;dst,&#32;t)&#32;=&gt;&#32;{
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;originalValue&#32;=&#32;src[0].Evaluate(t);
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;compressedValue&#32;=&#32;dst[0].Evaluate(t);
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Abs(originalValue&#32;-&#32;compressedValue)&#32;&lt;&#32;maxDelta;
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;checkSteps);
00169 
00170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result[0];
00171 &#32;&#32;&#32;&#32;}
00172 
00173 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CompressRotations(AnimationCurve&#32;xCurve,
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;yCurve,
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;zCurve,
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;wCurve,
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedXCurve,
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedYCurve,
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedZCurve,
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedWCurve,
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxAngleError&#32;=&#32;1,
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;checkSteps&#32;=&#32;8)&#32;{
00183 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;curveArray&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve[]&#32;{
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xCurve,
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yCurve,
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zCurve,
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wCurve
00188 &#32;&#32;&#32;&#32;&#32;&#32;};
00189 
00190 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;result&#32;=&#32;CompressCurves(curveArray,
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(src,&#32;dst,&#32;t)&#32;=&gt;&#32;{
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;srcRot;
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcRot.x&#32;=&#32;src[0].Evaluate(t);
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcRot.y&#32;=&#32;src[1].Evaluate(t);
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcRot.z&#32;=&#32;src[2].Evaluate(t);
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcRot.w&#32;=&#32;src[3].Evaluate(t);
00197 
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;dstRot;
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstRot.x&#32;=&#32;dst[0].Evaluate(t);
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstRot.y&#32;=&#32;dst[1].Evaluate(t);
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstRot.z&#32;=&#32;dst[2].Evaluate(t);
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstRot.w&#32;=&#32;dst[3].Evaluate(t);
00203 
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle;
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;axis;
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(Quaternion.Inverse(dstRot)&#32;*&#32;srcRot).ToAngleAxis(out&#32;angle,&#32;out&#32;axis);
00207 
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;angle&#32;&lt;&#32;maxAngleError;
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;checkSteps);
00211 
00212 &#32;&#32;&#32;&#32;&#32;&#32;compressedXCurve&#32;=&#32;result[0];
00213 &#32;&#32;&#32;&#32;&#32;&#32;compressedYCurve&#32;=&#32;result[1];
00214 &#32;&#32;&#32;&#32;&#32;&#32;compressedZCurve&#32;=&#32;result[2];
00215 &#32;&#32;&#32;&#32;&#32;&#32;compressedWCurve&#32;=&#32;result[3];
00216 &#32;&#32;&#32;&#32;}
00217 
00218 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CompressPositions(AnimationCurve&#32;xCurve,
00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;yCurve,
00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;zCurve,
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedXCurve,
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedYCurve,
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedZCurve,
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxDistanceError&#32;=&#32;0.005f,
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;checkSteps&#32;=&#32;8)&#32;{
00226 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;curveArray&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve[]&#32;{
00227 &#32;&#32;&#32;&#32;&#32;&#32;xCurve,
00228 &#32;&#32;&#32;&#32;&#32;&#32;yCurve,
00229 &#32;&#32;&#32;&#32;&#32;&#32;zCurve
00230 &#32;&#32;&#32;&#32;};
00231 
00232 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;results&#32;=&#32;CompressCurves(curveArray,
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(src,&#32;dst,&#32;t)&#32;=&gt;&#32;{
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;srcPos;
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcPos.x&#32;=&#32;src[0].Evaluate(t);
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcPos.y&#32;=&#32;src[1].Evaluate(t);
00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcPos.z&#32;=&#32;src[2].Evaluate(t);
00238 
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;dstPos;
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstPos.x&#32;=&#32;dst[0].Evaluate(t);
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstPos.y&#32;=&#32;dst[1].Evaluate(t);
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstPos.z&#32;=&#32;dst[2].Evaluate(t);
00243 
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Vector3.Distance(srcPos,&#32;dstPos)&#32;&lt;&#32;maxDistanceError;
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;checkSteps);
00247 
00248 &#32;&#32;&#32;&#32;&#32;&#32;compressedXCurve&#32;=&#32;results[0];
00249 &#32;&#32;&#32;&#32;&#32;&#32;compressedYCurve&#32;=&#32;results[1];
00250 &#32;&#32;&#32;&#32;&#32;&#32;compressedZCurve&#32;=&#32;results[2];
00251 &#32;&#32;&#32;&#32;}
00252 
00253 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve&#32;CompressScale(AnimationCurve&#32;curve,
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxScaleFactor,
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;checkSteps&#32;=&#32;8)&#32;{
00256 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;curveArray&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve[]&#32;{
00257 &#32;&#32;&#32;&#32;&#32;&#32;curve,
00258 &#32;&#32;&#32;&#32;};
00259 
00260 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;results&#32;=&#32;CompressCurves(curveArray,
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(src,&#32;dst,&#32;t)&#32;=&gt;&#32;{
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;srcValue&#32;=&#32;src[0].Evaluate(t);
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dstValue&#32;=&#32;dst[0].Evaluate(t);
00264 
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Mathf.Sign(srcValue)&#32;==&#32;Mathf.Sign(dstValue))&#32;{
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;srcValue&#32;/&#32;dstValue&#32;&lt;&#32;maxScaleFactor
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;dstValue&#32;/&#32;srcValue&#32;&lt;&#32;maxScaleFactor;
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;checkSteps);
00273 
00274 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;results[0];
00275 &#32;&#32;&#32;&#32;}
00276 
00277 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CompressColorsHSV(AnimationCurve&#32;rCurve,
00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;gCurve,
00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationCurve&#32;bCurve,
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedRCurve,
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedGCurve,
00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;AnimationCurve&#32;compressedBCurve,
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxHueError,
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxSaturationError,
00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxValueError,
00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;checkSteps&#32;=&#32;8)&#32;{
00287 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;curveArray&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve[]&#32;{
00288 &#32;&#32;&#32;&#32;&#32;&#32;rCurve,
00289 &#32;&#32;&#32;&#32;&#32;&#32;gCurve,
00290 &#32;&#32;&#32;&#32;&#32;&#32;bCurve
00291 &#32;&#32;&#32;&#32;};
00292 
00293 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;results&#32;=&#32;CompressCurves(curveArray,
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(src,&#32;dst,&#32;t)&#32;=&gt;&#32;{
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;srcColor;
00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcColor.r&#32;=&#32;src[0].Evaluate(t);
00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcColor.g&#32;=&#32;src[1].Evaluate(t);
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcColor.b&#32;=&#32;src[2].Evaluate(t);
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srcColor.a&#32;=&#32;1;
00300 
00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;dstColor;
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstColor.r&#32;=&#32;dst[0].Evaluate(t);
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstColor.g&#32;=&#32;dst[1].Evaluate(t);
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstColor.b&#32;=&#32;dst[2].Evaluate(t);
00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstColor.a&#32;=&#32;1;
00306 
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;sH,&#32;sS,&#32;sV;
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dH,&#32;dS,&#32;dV;
00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color.RGBToHSV(srcColor,&#32;out&#32;sH,&#32;out&#32;sS,&#32;out&#32;sV);
00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color.RGBToHSV(dstColor,&#32;out&#32;dH,&#32;out&#32;dS,&#32;out&#32;dV);
00311 
00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Abs(sH&#32;-&#32;dH)&#32;&lt;&#32;maxHueError&#32;&amp;&amp;
00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mathf.Abs(sS&#32;-&#32;dS)&#32;&lt;&#32;maxSaturationError&#32;&amp;&amp;
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mathf.Abs(sV&#32;-&#32;dV)&#32;&lt;&#32;maxValueError;
00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;checkSteps);
00317 
00318 &#32;&#32;&#32;&#32;&#32;&#32;compressedRCurve&#32;=&#32;results[0];
00319 &#32;&#32;&#32;&#32;&#32;&#32;compressedGCurve&#32;=&#32;results[1];
00320 &#32;&#32;&#32;&#32;&#32;&#32;compressedBCurve&#32;=&#32;results[2];
00321 &#32;&#32;&#32;&#32;}
00322 
00323 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;AnimationCurve[]&#32;CompressCurves(AnimationCurve[]&#32;curves,
00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Func&lt;AnimationCurve[],&#32;AnimationCurve[],&#32;<emphasis role="keywordtype">float</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&gt;&#32;isGood,
00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;checkSteps&#32;=&#32;8)&#32;{
00326 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;keyframes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Keyframe[curves.Length][];
00327 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;position&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[curves.Length];
00328 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;nextFrame&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[curves.Length];
00329 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;compressedCurves&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve[curves.Length];
00330 
00331 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;curves.Length;&#32;i++)&#32;{
00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;keys&#32;=&#32;curves[i].keys;
00333 
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;compressedCurves[i]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnimationCurve(keys);
00335 
00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;keys.Length;&#32;j++)&#32;{
00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;leftT&#32;=&#32;AnimationUtility.GetKeyLeftTangentMode(curves[i],&#32;j);
00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rightT&#32;=&#32;AnimationUtility.GetKeyRightTangentMode(curves[i],&#32;j);
00339 
00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.SetKeyLeftTangentMode(compressedCurves[i],&#32;j,&#32;leftT);
00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.SetKeyRightTangentMode(compressedCurves[i],&#32;j,&#32;rightT);
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00343 
00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keyframes[i]&#32;=&#32;keys;
00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position[i]&#32;=&#32;keys.Length&#32;-&#32;2;
00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextFrame[i]&#32;=&#32;keys.Length&#32;-&#32;1;
00347 &#32;&#32;&#32;&#32;&#32;&#32;}
00348 
00349 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;curves.Length;&#32;i++)&#32;{
00351 
00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(position[i]&#32;&gt;&#32;0)&#32;{
00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Keyframe&#32;nextKeyframe&#32;=&#32;keyframes[i][nextFrame[i]];
00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Keyframe&#32;currKeyframe&#32;=&#32;keyframes[i][position[i]];
00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Keyframe&#32;prevKeyframe&#32;=&#32;keyframes[i][position[i]&#32;-&#32;1];
00356 
00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;leftT&#32;=&#32;AnimationUtility.GetKeyLeftTangentMode(compressedCurves[i],&#32;position[i]);
00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rightT&#32;=&#32;AnimationUtility.GetKeyRightTangentMode(compressedCurves[i],&#32;position[i]);
00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;compressedCurves[i].RemoveKey(position[i]);
00360 
00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;0;&#32;k&#32;&lt;&#32;checkSteps;&#32;k++)&#32;{
00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;percent&#32;=&#32;k&#32;/&#32;(checkSteps&#32;-&#32;1.0f);
00363 
00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;prevTime&#32;=&#32;Mathf.Lerp(currKeyframe.time,&#32;prevKeyframe.time,&#32;percent);
00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;nextTime&#32;=&#32;Mathf.Lerp(currKeyframe.time,&#32;nextKeyframe.time,&#32;percent);
00366 
00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isPrevGood&#32;=&#32;isGood(curves,&#32;compressedCurves,&#32;prevTime);
00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isNextgood&#32;=&#32;isGood(curves,&#32;compressedCurves,&#32;nextTime);
00369 
00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isPrevGood&#32;||&#32;!isNextgood)&#32;{
00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a6a992d5529f459a44fee58c733255e86">index</link>&#32;=&#32;compressedCurves[i].AddKey(currKeyframe);
00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.SetKeyLeftTangentMode(compressedCurves[i],&#32;index,&#32;leftT);
00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.SetKeyRightTangentMode(compressedCurves[i],&#32;index,&#32;rightT);
00374 
00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextFrame[i]&#32;=&#32;position[i];
00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00379 
00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position[i]--;
00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00383 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(position.Query().Any(p&#32;=&gt;&#32;p&#32;&gt;&#32;0));
00384 
00385 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;compressedCurves;
00386 &#32;&#32;&#32;&#32;}
00387 <emphasis role="preprocessor">#endif</emphasis>
00388 
00389 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddBooleanKey(<emphasis role="keyword">this</emphasis>&#32;AnimationCurve&#32;curve,&#32;<emphasis role="keywordtype">float</emphasis>&#32;time,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value)&#32;{
00390 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;keyframe&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Keyframe()&#32;{&#32;time&#32;=&#32;time,&#32;value&#32;=&#32;value&#32;?&#32;1&#32;:&#32;0&#32;};
00391 
00392 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keyframeIdx&#32;=&#32;curve.AddKey(keyframe);
00394 &#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.SetKeyBroken(curve,&#32;keyframeIdx,&#32;<emphasis role="keyword">true</emphasis>);
00395 &#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.SetKeyLeftTangentMode(curve,&#32;keyframeIdx,
00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.TangentMode.Constant);
00397 &#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.SetKeyRightTangentMode(curve,&#32;keyframeIdx,
00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AnimationUtility.TangentMode.Constant);
00399 <emphasis role="preprocessor">#else</emphasis>
00400 &#32;&#32;&#32;&#32;&#32;&#32;curve.AddKey(keyframe);
00401 <emphasis role="preprocessor">#endif</emphasis>
00402 &#32;&#32;&#32;&#32;}
00403 &#32;&#32;}
00404 
00405 
00406 }
</programlisting></section>
