<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__simple_facing_camera_callbacks_8cs_source">
<title>SimpleFacingCameraCallbacks.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Examples/Common Example Assets/Scripts/SimpleFacingCameraCallbacks.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Events;
00014 
00015 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_examples">Leap.Unity.Examples</link>&#32;{
00016 
00017 &#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
<anchor xml:id="__simple_facing_camera_callbacks_8cs_source_1l00018"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks">00018</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks">SimpleFacingCameraCallbacks</link>&#32;:&#32;MonoBehaviour&#32;{
00019 
<anchor xml:id="__simple_facing_camera_callbacks_8cs_source_1l00020"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a3ff7cc54db1b55f4f532941be64f0dbd">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a3ff7cc54db1b55f4f532941be64f0dbd">toFaceCamera</link>;
00021 
00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_initialized&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_isFacingCamera&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00024 
<anchor xml:id="__simple_facing_camera_callbacks_8cs_source_1l00025"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a8602a31f6fb142345dcc21569a102110">00025</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UnityEvent&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a8602a31f6fb142345dcc21569a102110">OnBeginFacingCamera</link>;
<anchor xml:id="__simple_facing_camera_callbacks_8cs_source_1l00026"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1ac330d8b83831d418193b43e1472b1fc7">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UnityEvent&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1ac330d8b83831d418193b43e1472b1fc7">OnEndFacingCamera</link>;
00027 
00028 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a3ff7cc54db1b55f4f532941be64f0dbd">toFaceCamera</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;initialize();
00030 &#32;&#32;&#32;&#32;}
00031 
00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;initialize()&#32;{
00033 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;&quot;_isFacingCamera&quot;&#32;to&#32;be&#32;whatever&#32;the&#32;current&#32;state&#32;ISN&apos;T,&#32;so&#32;that&#32;we&#32;are</emphasis>
00034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;guaranteed&#32;to&#32;fire&#32;a&#32;UnityEvent&#32;on&#32;the&#32;first&#32;initialized&#32;Update().</emphasis>
00035 &#32;&#32;&#32;&#32;&#32;&#32;_isFacingCamera&#32;=&#32;!<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1aa9eaccb99220ec261cde010db1856ae3">GetIsFacingCamera</link>(<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a3ff7cc54db1b55f4f532941be64f0dbd">toFaceCamera</link>,&#32;Camera.main);
00036 &#32;&#32;&#32;&#32;&#32;&#32;_initialized&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00037 &#32;&#32;&#32;&#32;}
00038 
00039 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a3ff7cc54db1b55f4f532941be64f0dbd">toFaceCamera</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;!_initialized)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialize();
00042 &#32;&#32;&#32;&#32;&#32;&#32;}
00043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_initialized)&#32;<emphasis role="keywordflow">return</emphasis>;
00044 
00045 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1aa9eaccb99220ec261cde010db1856ae3">GetIsFacingCamera</link>(<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a3ff7cc54db1b55f4f532941be64f0dbd">toFaceCamera</link>,&#32;Camera.main,&#32;_isFacingCamera&#32;?&#32;0.77F&#32;:&#32;0.82F)&#32;!=&#32;_isFacingCamera)&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_isFacingCamera&#32;=&#32;!_isFacingCamera;
00047 
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_isFacingCamera)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1a8602a31f6fb142345dcc21569a102110">OnBeginFacingCamera</link>.Invoke();
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1ac330d8b83831d418193b43e1472b1fc7">OnEndFacingCamera</link>.Invoke();
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00054 &#32;&#32;&#32;&#32;&#32;&#32;}
00055 &#32;&#32;&#32;&#32;}
00056 
<anchor xml:id="__simple_facing_camera_callbacks_8cs_source_1l00057"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1aa9eaccb99220ec261cde010db1856ae3">00057</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks_1aa9eaccb99220ec261cde010db1856ae3">GetIsFacingCamera</link>(Transform&#32;facingTransform,&#32;Camera&#32;camera,&#32;<emphasis role="keywordtype">float</emphasis>&#32;minAllowedDotProduct&#32;=&#32;0.8F)&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Vector3.Dot((camera.transform.position&#32;-&#32;facingTransform.position).normalized,&#32;facingTransform.forward)&#32;&gt;&#32;minAllowedDotProduct;
00059 &#32;&#32;&#32;&#32;}
00060 
00061 &#32;&#32;}
00062 
00063 }
</programlisting></section>
