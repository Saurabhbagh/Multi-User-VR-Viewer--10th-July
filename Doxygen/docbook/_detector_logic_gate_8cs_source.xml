<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__detector_logic_gate_8cs_source">
<title>DetectorLogicGate.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/DetectorLogicGate.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Events;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00013 
00014 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00015 
<anchor xml:id="__detector_logic_gate_8cs_source_1l00029"/><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate">00029</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate">DetectorLogicGate</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_detector">Detector</link>&#32;{
00030 &#32;&#32;&#32;&#32;[SerializeField]
00031 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;list&#32;of&#32;observed&#32;detectors.&quot;</emphasis>)]
00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;Detector&gt;&#32;Detectors;
00042 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Add&#32;all&#32;detectors&#32;on&#32;this&#32;object&#32;automatically.&quot;</emphasis>)]
<anchor xml:id="__detector_logic_gate_8cs_source_1l00043"/><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1aded5589c25fc872d3f1690da8351e3f1">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1aded5589c25fc872d3f1690da8351e3f1">AddAllSiblingDetectorsOnAwake</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00044 
00049 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;type&#32;of&#32;logic&#32;used&#32;to&#32;combine&#32;detector&#32;state.&quot;</emphasis>)]
<anchor xml:id="__detector_logic_gate_8cs_source_1l00050"/><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a972e022cb5a0bdb6d3a6a3358d9190b2">00050</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1a77852b6f4a12b4cff02c45dd93e7b2b1">LogicType</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a972e022cb5a0bdb6d3a6a3358d9190b2">GateType</link>&#32;=&#32;<link linkend="_namespace_leap_1_1_unity_1a77852b6f4a12b4cff02c45dd93e7b2b1">LogicType</link>.AndGate;
00051 
00056 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Whether&#32;to&#32;negate&#32;the&#32;gate&#32;output.&quot;</emphasis>)]
<anchor xml:id="__detector_logic_gate_8cs_source_1l00057"/><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a0c78e1045905a4dd1c349aa677a8a97d">00057</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a0c78e1045905a4dd1c349aa677a8a97d">Negate</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00058 
<anchor xml:id="__detector_logic_gate_8cs_source_1l00066"/><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1af4ae12b9708b39ea714111658a70c2df">00066</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1af4ae12b9708b39ea714111658a70c2df">AddDetector</link>(<link linkend="_class_leap_1_1_unity_1_1_detector">Detector</link>&#32;detector){
00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Detectors.Contains(detector)){
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Detectors.Add(detector);
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;activateDetector(detector);
00070 &#32;&#32;&#32;&#32;&#32;&#32;}
00071 &#32;&#32;&#32;&#32;}
00072 
<anchor xml:id="__detector_logic_gate_8cs_source_1l00079"/><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a91e6fa77ae70a62f92afd1016b0d738e">00079</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a91e6fa77ae70a62f92afd1016b0d738e">RemoveDetector</link>(<link linkend="_class_leap_1_1_unity_1_1_detector">Detector</link>&#32;detector){
00080 &#32;&#32;&#32;&#32;&#32;&#32;detector.<link linkend="_class_leap_1_1_unity_1_1_detector_1a55b5828df6cfa7321ccbf04dcf027ff9">OnActivate</link>.RemoveListener(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">CheckDetectors</link>);
00081 &#32;&#32;&#32;&#32;&#32;&#32;detector.<link linkend="_class_leap_1_1_unity_1_1_detector_1a786623564f0d001aa6869bb136786822">OnDeactivate</link>.RemoveListener(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">CheckDetectors</link>);
00082 &#32;&#32;&#32;&#32;&#32;&#32;Detectors.Remove(detector);
00083 &#32;&#32;&#32;&#32;}
00084 
<anchor xml:id="__detector_logic_gate_8cs_source_1l00092"/><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a68c43209a42021b8b4e8d5cfecc29d5b">00092</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a68c43209a42021b8b4e8d5cfecc29d5b">AddAllSiblingDetectors</link>(){
00093 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector">Detector</link>[]&#32;detectors&#32;=&#32;GetComponents&lt;Detector&gt;();
00094 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;g&#32;=&#32;0;&#32;g&#32;&lt;&#32;detectors.Length;&#32;g++){
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;detectors[g]&#32;!=&#32;<emphasis role="keyword">this</emphasis>&#32;&amp;&amp;&#32;detectors[g].enabled)&#32;{
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1af4ae12b9708b39ea714111658a70c2df">AddDetector</link>(detectors[g]);
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00098 &#32;&#32;&#32;&#32;&#32;&#32;}
00099 &#32;&#32;&#32;&#32;}
00100 
00101 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake(){
00102 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;d&#32;=&#32;0;&#32;d&#32;&lt;&#32;Detectors.Count;&#32;d++)&#32;{
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;activateDetector(Detectors[d]);
00104 &#32;&#32;&#32;&#32;&#32;&#32;}
00105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1aded5589c25fc872d3f1690da8351e3f1">AddAllSiblingDetectorsOnAwake</link>)&#32;{
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a68c43209a42021b8b4e8d5cfecc29d5b">AddAllSiblingDetectors</link>();
00107 &#32;&#32;&#32;&#32;&#32;&#32;}
00108 &#32;&#32;&#32;&#32;}
00109 
00110 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;activateDetector(Detector&#32;detector){
00111 &#32;&#32;&#32;&#32;&#32;&#32;detector.OnActivate.RemoveListener(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">CheckDetectors</link>);&#32;<emphasis role="comment">//avoid&#32;double&#32;subscription</emphasis>
00112 &#32;&#32;&#32;&#32;&#32;&#32;detector.OnDeactivate.RemoveListener(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">CheckDetectors</link>);
00113 &#32;&#32;&#32;&#32;&#32;&#32;detector.OnActivate.AddListener(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">CheckDetectors</link>);
00114 &#32;&#32;&#32;&#32;&#32;&#32;detector.OnDeactivate.AddListener(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">CheckDetectors</link>);
00115 &#32;&#32;&#32;&#32;}
00116 
00117 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()&#32;{
00118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">CheckDetectors</link>();
00119 &#32;&#32;&#32;&#32;}
00120 
00121 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable&#32;()&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59">Deactivate</link>();
00123 &#32;&#32;&#32;&#32;}
00124 
<anchor xml:id="__detector_logic_gate_8cs_source_1l00130"/><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">00130</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1ad2a29c15734f53978d2ba432cbcec9c1">CheckDetectors</link>(){
00131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Detectors.Count&#32;&lt;&#32;1)
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;state&#32;=&#32;Detectors[0].IsActive;
00134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;a&#32;=&#32;1;&#32;a&#32;&lt;&#32;Detectors.Count;&#32;a++){
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a972e022cb5a0bdb6d3a6a3358d9190b2">GateType</link>&#32;==&#32;<link linkend="_namespace_leap_1_1_unity_1a77852b6f4a12b4cff02c45dd93e7b2b1">LogicType</link>.AndGate){
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state&#32;=&#32;state&#32;&amp;&amp;&#32;Detectors[a].IsActive;
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state&#32;=&#32;state&#32;||&#32;Detectors[a].IsActive;
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00140 &#32;&#32;&#32;&#32;&#32;&#32;}
00141 
00142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate_1a0c78e1045905a4dd1c349aa677a8a97d">Negate</link>){
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state&#32;=&#32;!state;
00144 &#32;&#32;&#32;&#32;&#32;&#32;}
00145 
00146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(state){
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8">Activate</link>();
00148 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59">Deactivate</link>();
00150 &#32;&#32;&#32;&#32;&#32;&#32;}
00151 &#32;&#32;&#32;&#32;}
00152 &#32;&#32;}
00153 
<anchor xml:id="__detector_logic_gate_8cs_source_1l00155"/><link linkend="_namespace_leap_1_1_unity_1a77852b6f4a12b4cff02c45dd93e7b2b1">00155</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1a77852b6f4a12b4cff02c45dd93e7b2b1">LogicType</link>{&#32;<link linkend="_namespace_leap_1_1_unity_1a77852b6f4a12b4cff02c45dd93e7b2b1a296b4d7851ca3e55bce82683249c4d0e">AndGate</link>,&#32;<link linkend="_namespace_leap_1_1_unity_1a77852b6f4a12b4cff02c45dd93e7b2b1a648ae48d4b4163761295a179ba20388f">OrGate</link>&#32;}
00156 }
</programlisting></section>
