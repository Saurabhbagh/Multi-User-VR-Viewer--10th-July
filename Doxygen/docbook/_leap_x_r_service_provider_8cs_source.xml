<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_x_r_service_provider_8cs_source">
<title>LeapXRServiceProvider.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/LeapXRServiceProvider.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_attributes">Attributes</link>;
00013 
00014 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00015 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00022"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider">00022</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider">LeapXRServiceProvider</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link>&#32;{
00023 
00024 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Inspector</emphasis>
00025 
00026 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Manual&#32;Device&#32;Offset</emphasis>
00027 
00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;DEFAULT_DEVICE_OFFSET_Y_AXIS&#32;=&#32;0f;
00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;DEFAULT_DEVICE_OFFSET_Z_AXIS&#32;=&#32;0.12f;
00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;DEFAULT_DEVICE_TILT_X_AXIS&#32;=&#32;5f;
00031 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00032"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>&#32;{
00033 &#32;&#32;&#32;&#32;&#32;&#32;Default,
00034 &#32;&#32;&#32;&#32;&#32;&#32;ManualHeadOffset,
00035 &#32;&#32;&#32;&#32;&#32;&#32;Transform
00036 &#32;&#32;&#32;&#32;}
00037 
00038 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Advanced&quot;</emphasis>)]
00039 
00040 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Allow&#32;manual&#32;adjustment&#32;of&#32;the&#32;Leap&#32;device&apos;s&#32;virtual&#32;offset&#32;and&#32;tilt.&#32;These&#32;&quot;</emphasis>
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;settings&#32;can&#32;be&#32;used&#32;to&#32;match&#32;the&#32;physical&#32;position&#32;and&#32;orientation&#32;of&#32;the&#32;&quot;</emphasis>
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;Leap&#32;Motion&#32;sensor&#32;on&#32;a&#32;tracked&#32;device&#32;it&#32;is&#32;mounted&#32;on&#32;(such&#32;as&#32;a&#32;VR&#32;&quot;</emphasis>
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;headset).&#32;&#32;Temporal&#32;Warping&#32;not&#32;supported&#32;in&#32;Transform&#32;Mode.&quot;</emphasis>)]
00044 &#32;&#32;&#32;&#32;[SerializeField,&#32;OnEditorChange(<emphasis role="stringliteral">&quot;deviceOffsetMode&quot;</emphasis>)]
00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>&#32;_deviceOffsetMode;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00046"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a059badc9c65f387e3bce56259d02c384">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a059badc9c65f387e3bce56259d02c384">deviceOffsetMode</link>&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_deviceOffsetMode;&#32;}
00048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_deviceOffsetMode&#32;=&#32;value;
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_deviceOffsetMode&#32;==&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Default&#32;||
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_deviceOffsetMode&#32;==&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Transform)&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a6c906e4ec5e7775596344ec87fda4681">deviceOffsetYAxis</link>&#32;=&#32;DEFAULT_DEVICE_OFFSET_Y_AXIS;
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ab78d04f47fd47ce45f7e5da319e29cee">deviceOffsetZAxis</link>&#32;=&#32;DEFAULT_DEVICE_OFFSET_Z_AXIS;
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aabddae01cbb798a7cf340a2e1676e8ed">deviceTiltXAxis</link>&#32;=&#32;DEFAULT_DEVICE_TILT_X_AXIS;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_deviceOffsetMode&#32;==&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Transform&#32;&amp;&amp;
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_temporalWarpingMode&#32;!=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Off)&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_temporalWarpingMode&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Off;
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00060 &#32;&#32;&#32;&#32;&#32;&#32;}
00061 &#32;&#32;&#32;&#32;}
00062 
00063 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Adjusts&#32;the&#32;Leap&#32;Motion&#32;device&apos;s&#32;virtual&#32;height&#32;offset&#32;from&#32;the&#32;tracked&#32;&quot;</emphasis>
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;headset&#32;position.&#32;This&#32;should&#32;match&#32;the&#32;vertical&#32;offset&#32;of&#32;the&#32;physical&#32;&quot;</emphasis>
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;device&#32;with&#32;respect&#32;to&#32;the&#32;headset&#32;in&#32;meters.&quot;</emphasis>)]
00066 &#32;&#32;&#32;&#32;[SerializeField]
00067 &#32;&#32;&#32;&#32;[Range(-0.50F,&#32;0.50F)]
00068 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_deviceOffsetYAxis&#32;=&#32;DEFAULT_DEVICE_OFFSET_Y_AXIS;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00069"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a6c906e4ec5e7775596344ec87fda4681">00069</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a6c906e4ec5e7775596344ec87fda4681">deviceOffsetYAxis</link>&#32;{
00070 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_deviceOffsetYAxis;&#32;}
00071 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;_deviceOffsetYAxis&#32;=&#32;value;&#32;}
00072 &#32;&#32;&#32;&#32;}
00073 
00074 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Adjusts&#32;the&#32;Leap&#32;Motion&#32;device&apos;s&#32;virtual&#32;depth&#32;offset&#32;from&#32;the&#32;tracked&#32;&quot;</emphasis>
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;headset&#32;position.&#32;This&#32;should&#32;match&#32;the&#32;forward&#32;offset&#32;of&#32;the&#32;physical&#32;&quot;</emphasis>
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;device&#32;with&#32;respect&#32;to&#32;the&#32;headset&#32;in&#32;meters.&quot;</emphasis>)]
00077 &#32;&#32;&#32;&#32;[SerializeField]
00078 &#32;&#32;&#32;&#32;[Range(-0.50F,&#32;0.50F)]
00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_deviceOffsetZAxis&#32;=&#32;DEFAULT_DEVICE_OFFSET_Z_AXIS;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00080"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ab78d04f47fd47ce45f7e5da319e29cee">00080</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ab78d04f47fd47ce45f7e5da319e29cee">deviceOffsetZAxis</link>&#32;{
00081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_deviceOffsetZAxis;&#32;}
00082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;&#32;_deviceOffsetZAxis&#32;=&#32;value;&#32;}
00083 &#32;&#32;&#32;&#32;}
00084 
00085 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Adjusts&#32;the&#32;Leap&#32;Motion&#32;device&apos;s&#32;virtual&#32;X&#32;axis&#32;tilt.&#32;This&#32;should&#32;match&#32;&quot;</emphasis>
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;the&#32;tilt&#32;of&#32;the&#32;physical&#32;device&#32;with&#32;respect&#32;to&#32;the&#32;headset&#32;in&#32;degrees.&quot;</emphasis>)]
00087 &#32;&#32;&#32;&#32;[SerializeField]
00088 &#32;&#32;&#32;&#32;[Range(-90.0F,&#32;90.0F)]
00089 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_deviceTiltXAxis&#32;=&#32;DEFAULT_DEVICE_TILT_X_AXIS;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00090"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aabddae01cbb798a7cf340a2e1676e8ed">00090</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aabddae01cbb798a7cf340a2e1676e8ed">deviceTiltXAxis</link>&#32;{
00091 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_deviceTiltXAxis;&#32;}
00092 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;_deviceTiltXAxis&#32;=&#32;value;&#32;}
00093 &#32;&#32;&#32;&#32;}
00094 
00095 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Allows&#32;for&#32;the&#32;manual&#32;placement&#32;of&#32;the&#32;Leap&#32;Tracking&#32;Device.&quot;</emphasis>&#32;+
00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;This&#32;device&#32;offset&#32;mode&#32;is&#32;incompatible&#32;with&#32;Temporal&#32;Warping.&quot;</emphasis>)]
00097 &#32;&#32;&#32;&#32;[SerializeField]
00098 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Transform&#32;_deviceOrigin;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00099"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5f4a006ae4fbb332ab62796eb060af1e">00099</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5f4a006ae4fbb332ab62796eb060af1e">deviceOrigin</link>&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_deviceOrigin;&#32;}
00101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{_deviceOrigin&#32;=&#32;value;&#32;}
00102 &#32;&#32;&#32;&#32;}
00103 
00104 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Temporal&#32;Warping</emphasis>
00105 
00106 <emphasis role="preprocessor">#if&#32;UNITY_STANDALONE</emphasis>
00107 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;DEFAULT_WARP_ADJUSTMENT&#32;=&#32;17;
00108 <emphasis role="preprocessor">#elif&#32;UNITY_ANDROID</emphasis>
00109 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;DEFAULT_WARP_ADJUSTMENT&#32;=&#32;45;
00110 <emphasis role="preprocessor">#else</emphasis>
00111 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;DEFAULT_WARP_ADJUSTMENT&#32;=&#32;17;
00112 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
00113 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00114"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">00114</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>&#32;{
00115 &#32;&#32;&#32;&#32;&#32;&#32;Auto,
00116 &#32;&#32;&#32;&#32;&#32;&#32;Manual,
00117 &#32;&#32;&#32;&#32;&#32;&#32;Images,
00118 &#32;&#32;&#32;&#32;&#32;&#32;Off
00119 &#32;&#32;&#32;&#32;}
00120 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Temporal&#32;warping&#32;prevents&#32;the&#32;hand&#32;coordinate&#32;system&#32;from&#32;&apos;swimming&apos;&#32;or&#32;&quot;</emphasis>
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;&apos;bouncing&apos;&#32;when&#32;the&#32;headset&#32;moves&#32;and&#32;the&#32;user&apos;s&#32;hands&#32;stay&#32;still.&#32;&quot;</emphasis>
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;This&#32;phenomenon&#32;is&#32;caused&#32;by&#32;the&#32;differing&#32;amounts&#32;of&#32;latencies&#32;inherent&#32;&quot;</emphasis>
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;in&#32;the&#32;two&#32;systems.&#32;&quot;</emphasis>
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;For&#32;PC&#32;VR&#32;and&#32;Android&#32;VR,&#32;temporal&#32;warping&#32;should&#32;set&#32;to&#32;&apos;Auto&apos;,&#32;as&#32;the&#32;&quot;</emphasis>
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;correct&#32;value&#32;can&#32;be&#32;chosen&#32;automatically&#32;for&#32;these&#32;platforms.&#32;&quot;</emphasis>
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;Some&#32;non-standard&#32;platforms&#32;may&#32;use&#32;&apos;Manual&apos;&#32;mode&#32;to&#32;adjust&#32;their&#32;&quot;</emphasis>
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;latency&#32;compensation&#32;amount&#32;for&#32;temporal&#32;warping.&#32;&quot;</emphasis>
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;Use&#32;&apos;Images&apos;&#32;for&#32;scenarios&#32;that&#32;overlay&#32;Leap&#32;device&#32;images&#32;on&#32;tracked&#32;&quot;</emphasis>
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;hand&#32;data.&quot;</emphasis>)]
00130 &#32;&#32;&#32;&#32;[SerializeField]
00131 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>&#32;_temporalWarpingMode&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Auto;
00132 
00137 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;time&#32;in&#32;milliseconds&#32;between&#32;the&#32;current&#32;frame&apos;s&#32;headset&#32;position&#32;and&#32;&quot;</emphasis>
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;the&#32;time&#32;at&#32;which&#32;the&#32;Leap&#32;frame&#32;was&#32;captured.&quot;</emphasis>)]
00139 &#32;&#32;&#32;&#32;[SerializeField]
00140 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_customWarpAdjustment&#32;=&#32;DEFAULT_WARP_ADJUSTMENT;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00141"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a668f8752cd2db6f77abbd44e89980b79">00141</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a668f8752cd2db6f77abbd44e89980b79">warpingAdjustment</link>&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_temporalWarpingMode&#32;==&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Manual)&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_customWarpAdjustment;
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;DEFAULT_WARP_ADJUSTMENT;
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00148 &#32;&#32;&#32;&#32;&#32;&#32;}
00149 &#32;&#32;&#32;&#32;}
00150 
00151 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pre-cull&#32;Latching</emphasis>
00152 &#32;&#32;&#32;&#32;
00153 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Pass&#32;updated&#32;transform&#32;matrices&#32;to&#32;hands&#32;with&#32;materials&#32;that&#32;utilize&#32;the&#32;&quot;</emphasis>
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;VertexOffsetShader.&#32;Won&apos;t&#32;have&#32;any&#32;effect&#32;on&#32;hands&#32;that&#32;don&apos;t&#32;take&#32;into&#32;&quot;</emphasis>
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;account&#32;shader-global&#32;vertex&#32;offsets&#32;in&#32;their&#32;material&#32;shaders.&quot;</emphasis>)]
00156 &#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00157"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5467eed05493c0cf4cc732568596f6eb">00157</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5467eed05493c0cf4cc732568596f6eb">_updateHandInPrecull</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00158"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ae9458c66f5008c4592c6f94453b0b043">00158</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ae9458c66f5008c4592c6f94453b0b043">updateHandInPrecull</link>&#32;{
00159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5467eed05493c0cf4cc732568596f6eb">_updateHandInPrecull</link>;&#32;}
00160 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9155994dde86e3946890433bfc536b9a">resetShaderTransforms</link>();
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5467eed05493c0cf4cc732568596f6eb">_updateHandInPrecull</link>&#32;=&#32;value;
00163 &#32;&#32;&#32;&#32;&#32;&#32;}
00164 &#32;&#32;&#32;&#32;}
00165 
00166 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00167 
00168 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Internal&#32;Memory</emphasis>
00169 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00170"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad28d54cc0444a3ead31ecc3214e58b32">00170</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_transform_history">TransformHistory</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad28d54cc0444a3ead31ecc3214e58b32">transformHistory</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_transform_history">TransformHistory</link>();
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00171"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad00d8ff3e04135ec3f23c90bd0a3b4ff">00171</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad00d8ff3e04135ec3f23c90bd0a3b4ff">manualUpdateHasBeenCalledSinceUpdate</link>;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00172"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa4be13a6f05121d88aded72a447efd8f">00172</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Vector3&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa4be13a6f05121d88aded72a447efd8f">warpedPosition</link>&#32;=&#32;Vector3.zero;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00173"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">00173</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>&#32;=&#32;Quaternion.identity;
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00174"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5b9871acb331833b7f15215adb0d3015">00174</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Matrix4x4[]&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5b9871acb331833b7f15215adb0d3015">_transformArray</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Matrix4x4[2];
00175 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_trackingBaseDeltaPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00176 
00177 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Camera&#32;_cachedCamera;
00178 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Camera&#32;cachedCamera&#32;{
00179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_cachedCamera&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_cachedCamera&#32;=&#32;GetComponent&lt;Camera&gt;();
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_cachedCamera;
00184 &#32;&#32;&#32;&#32;&#32;&#32;}
00185 &#32;&#32;&#32;&#32;}
00186 
00187 &#32;&#32;&#32;&#32;[NonSerialized]
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00188"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9b2a2eca314859615f53181b46e09c76">00188</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9b2a2eca314859615f53181b46e09c76">imageTimeStamp</link>&#32;=&#32;0;
00189 
00190 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00191 
00192 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Unity&#32;Events</emphasis>
00193 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00194"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1abe79fe929f415f66f157d108b3f27aa5">00194</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1abe79fe929f415f66f157d108b3f27aa5">Reset</link>()&#32;{
00195 &#32;&#32;&#32;&#32;&#32;&#32;base.Reset();
00196 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_provider_1a80150ace9cb1c6681fb2d41792ede8f3">editTimePose</link>&#32;=&#32;TestHandFactory.TestHandPose.HeadMountedB;
00197 &#32;&#32;&#32;&#32;}
00198 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00199"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a40e506f8ae3cf42b5fb32676049e596e">00199</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a40e506f8ae3cf42b5fb32676049e596e">OnValidate</link>()&#32;{
00200 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_deviceOffsetMode&#32;==&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Transform&#32;&amp;&amp;
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_temporalWarpingMode&#32;!=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Off)&#32;{
00202 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.Undo.RecordObject(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="stringliteral">&quot;Disabled&#32;Temporal&#32;Warping&quot;</emphasis>);
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(<emphasis role="stringliteral">&quot;Temporal&#32;warping&#32;disabled.&#32;Temporal&#32;warping&#32;cannot&#32;be&#32;used&#32;&quot;</emphasis>
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;with&#32;the&#32;Transform&#32;device&#32;offset&#32;mode.&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>);
00206 <emphasis role="preprocessor">#endif</emphasis>
00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_temporalWarpingMode&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Off;
00208 &#32;&#32;&#32;&#32;&#32;&#32;}
00209 &#32;&#32;&#32;&#32;}
00210 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00211"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad970b245aba38c3c13b9358b91443808">00211</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad970b245aba38c3c13b9358b91443808">OnEnable</link>()&#32;{
00212 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9155994dde86e3946890433bfc536b9a">resetShaderTransforms</link>();
00213 &#32;&#32;&#32;&#32;}
00214 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00215"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad9014e823bfcbb99666f23028dd7ff49">00215</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad9014e823bfcbb99666f23028dd7ff49">OnDisable</link>()&#32;{
00216 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9155994dde86e3946890433bfc536b9a">resetShaderTransforms</link>();
00217 &#32;&#32;&#32;&#32;}
00218 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00219"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a0ff2b5db35ce36adb3ede2f63722a34e">00219</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a0ff2b5db35ce36adb3ede2f63722a34e">Start</link>()&#32;{
00220 &#32;&#32;&#32;&#32;&#32;&#32;base.Start();
00221 &#32;&#32;&#32;&#32;&#32;&#32;_cachedCamera&#32;=&#32;GetComponent&lt;Camera&gt;();
00222 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_deviceOffsetMode&#32;==&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Transform&#32;&amp;&amp;&#32;_deviceOrigin&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Cannot&#32;use&#32;the&#32;Transform&#32;device&#32;offset&#32;mode&#32;without&#32;&quot;</emphasis>&#32;+
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;specifying&#32;a&#32;Transform&#32;to&#32;use&#32;as&#32;the&#32;device&#32;origin.&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>);
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_deviceOffsetMode&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Default;
00226 &#32;&#32;&#32;&#32;&#32;&#32;}
00227 &#32;&#32;&#32;&#32;}
00228 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00229"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a17b936b12ed7aabdf54af577a4de7f29">00229</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a17b936b12ed7aabdf54af577a4de7f29">Update</link>()&#32;{
00230 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad00d8ff3e04135ec3f23c90bd0a3b4ff">manualUpdateHasBeenCalledSinceUpdate</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00231 &#32;&#32;&#32;&#32;&#32;&#32;base.Update();
00232 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9b2a2eca314859615f53181b46e09c76">imageTimeStamp</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>.<link linkend="_class_leap_1_1_controller_1a3babd82558546e8bc5de90fb80d201ec">FrameTimestamp</link>();
00233 &#32;&#32;&#32;&#32;}
00234 
00235 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;LateUpdate()&#32;{
00236 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;projectionMatrix&#32;=&#32;_cachedCamera.projectionMatrix;
00237 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(SystemInfo.graphicsDeviceType)&#32;{
00238 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;!UNITY_2017_2_OR_NEWER</emphasis>
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Rendering.GraphicsDeviceType.Direct3D9:
00240 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Rendering.GraphicsDeviceType.Direct3D11:
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Rendering.GraphicsDeviceType.Direct3D12:
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)&#32;{
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;projectionMatrix[1,&#32;i]&#32;=&#32;-projectionMatrix[1,&#32;i];
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Scale&#32;and&#32;bias&#32;from&#32;OpenGL&#32;-&gt;&#32;D3D&#32;depth&#32;range</emphasis>
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)&#32;{
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;projectionMatrix[2,&#32;i]&#32;=&#32;projectionMatrix[2,&#32;i]&#32;*&#32;0.5f
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;projectionMatrix[3,&#32;i]&#32;*&#32;0.5f;
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00252 &#32;&#32;&#32;&#32;&#32;&#32;}
00253 
00254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;Image&#32;Warping</emphasis>
00255 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;pastPosition;&#32;Quaternion&#32;pastRotation;
00256 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad28d54cc0444a3ead31ecc3214e58b32">transformHistory</link>.<link linkend="_class_leap_1_1_unity_1_1_transform_history_1a027228e6fa5c86fb1c42c0afbc465b04">SampleTransform</link>(<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9b2a2eca314859615f53181b46e09c76">imageTimeStamp</link>
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;(<emphasis role="keywordtype">long</emphasis>)(<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a668f8752cd2db6f77abbd44e89980b79">warpingAdjustment</link>&#32;*&#32;1000f),
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;pastPosition,&#32;out&#32;pastRotation);
00259 
00260 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;_tweenImageWarping</emphasis>
00261 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;currCenterRotation&#32;=&#32;XRSupportUtil.GetXRNodeCenterEyeLocalRotation();
00262 
00263 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;imageReferenceRotation&#32;=&#32;_temporalWarpingMode&#32;!=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Off&#32;
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;pastRotation
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;currCenterRotation;
00266 
00267 &#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;imageQuatWarp&#32;=&#32;Quaternion.Inverse(currCenterRotation)
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;imageReferenceRotation;
00269 &#32;&#32;&#32;&#32;&#32;&#32;imageQuatWarp&#32;=&#32;Quaternion.Euler(imageQuatWarp.eulerAngles.x,
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imageQuatWarp.eulerAngles.y,
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-imageQuatWarp.eulerAngles.z);
00272 &#32;&#32;&#32;&#32;&#32;&#32;Matrix4x4&#32;imageMatWarp&#32;=&#32;projectionMatrix
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Matrix4x4.TRS(Vector3.zero,&#32;imageQuatWarp,&#32;Vector3.one)
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;projectionMatrix.inverse;
00275 &#32;&#32;&#32;&#32;&#32;&#32;Shader.SetGlobalMatrix(<emphasis role="stringliteral">&quot;_LeapGlobalWarpedOffset&quot;</emphasis>,&#32;imageMatWarp);
00276 &#32;&#32;&#32;&#32;}
00277 
00278 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnPreCull()&#32;{
00279 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00280 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_namespace_valve_1_1_v_r_1aecd07a81fe79a9f96c6787513e2d98e4ae498749f3c42246d50b15c81c101d988">Application</link>.isPlaying)&#32;{
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00282 &#32;&#32;&#32;&#32;&#32;&#32;}
00283 <emphasis role="preprocessor">#endif</emphasis>
00284 
00285 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;most&#32;recent&#32;tracked&#32;pose.</emphasis>
00286 &#32;&#32;&#32;&#32;&#32;&#32;Pose&#32;trackedPose&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Pose(XRSupportUtil.GetXRNodeCenterEyeLocalPosition(),
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XRSupportUtil.GetXRNodeCenterEyeLocalRotation());
00288 
00289 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;we&#32;don&apos;t&#32;know&#32;of&#32;any&#32;pose&#32;offset&#32;yet,&#32;account&#32;for&#32;it&#32;by&#32;finding&#32;the&#32;pose</emphasis>
00290 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;delta&#32;from&#32;the&#32;&quot;local&quot;&#32;tracked&#32;pose&#32;to&#32;the&#32;actual&#32;camera&#32;pose.</emphasis>
00291 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_trackingBaseDeltaPose.HasValue)&#32;{
00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_trackingBaseDeltaPose&#32;=&#32;_cachedCamera.transform.ToLocalPose()
00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;trackedPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1a223dfc83da978c0ac8f02683acbdc070">inverse</link>;
00294 &#32;&#32;&#32;&#32;&#32;&#32;}
00295 &#32;&#32;&#32;&#32;&#32;&#32;
00296 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;way,&#32;we&#32;always&#32;track&#32;a&#32;scene-space&#32;tracked&#32;pose.</emphasis>
00297 &#32;&#32;&#32;&#32;&#32;&#32;Pose&#32;effTransformPose&#32;=&#32;_trackingBaseDeltaPose.Value&#32;*&#32;trackedPose;
00298 
00299 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad28d54cc0444a3ead31ecc3214e58b32">transformHistory</link>.<link linkend="_class_leap_1_1_unity_1_1_transform_history_1a831ac5fe8ef56cd29bb8bce038cac019">UpdateDelay</link>(effTransformPose,&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>.<link linkend="_class_leap_1_1_controller_1a57650944fa868adcfe4cea8608af5a03">Now</link>());
00300 
00301 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a87c7baea1161c7819c2215f9483e6df6">OnPreCullHandTransforms</link>(_cachedCamera);
00302 &#32;&#32;&#32;&#32;}
00303 
00304 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00305 
00306 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;LeapServiceProvider&#32;Overrides</emphasis>
00307 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00308"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aafadeb0206fa3309e894ca7241535e81">00308</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aafadeb0206fa3309e894ca7241535e81">CalculateInterpolationTime</link>(<emphasis role="keywordtype">bool</emphasis>&#32;endOfFrame&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;{
00309 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_ANDROID</emphasis>
00310 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>.<link linkend="_class_leap_1_1_controller_1a57650944fa868adcfe4cea8608af5a03">Now</link>()&#32;-&#32;16000;
00311 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
00312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>.<link linkend="_class_leap_1_1_controller_1a57650944fa868adcfe4cea8608af5a03">Now</link>()
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;(long)<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a03a08f2d279d9884cb6d754ce4412ac2">_smoothedTrackingLatency</link>.<link linkend="_class_leap_1_1_unity_1_1_smoothed_float_1a1fdf3ee4ae067a5ccb975320829a4327">value</link>
00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;((<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ae9458c66f5008c4592c6f94453b0b043">updateHandInPrecull</link>&#32;&amp;&amp;&#32;!endOfFrame)?
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(long)(Time.smoothDeltaTime&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a0baaa02c5e7d4a148ec737876b7b388b">S_TO_NS</link>&#32;/&#32;Time.timeScale)
00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;0);
00318 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00320 &#32;&#32;&#32;&#32;&#32;&#32;}
00321 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00322 &#32;&#32;&#32;&#32;}
00323 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00328"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ae0e6b7d1c684d872acf237357ace286c">00328</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ae0e6b7d1c684d872acf237357ace286c">initializeFlags</link>()&#32;{
00329 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00331 &#32;&#32;&#32;&#32;&#32;&#32;}
00332 
00333 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Optimize&#32;for&#32;head-mounted&#32;tracking&#32;if&#32;on&#32;head-mounted&#32;display.</emphasis>
00334 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>.<link linkend="_class_leap_1_1_controller_1a7e862547a7ea735203220e43c0e04a85">SetPolicy</link>(<link linkend="_class_leap_1_1_controller">Controller</link>.<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">PolicyFlag</link>.POLICY_OPTIMIZE_HMD);
00335 &#32;&#32;&#32;&#32;}
00336 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00337"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a1bac02ff68b78b4e584567c6e4bf42ac">00337</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a1bac02ff68b78b4e584567c6e4bf42ac">transformFrame</link>(<link linkend="_class_leap_1_1_frame">Frame</link>&#32;source,&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;dest)&#32;{
00338 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>&#32;leapTransform&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5a7dd26c6fcf64f5bd085be124fd69ed">GetWarpedMatrix</link>(source.<link linkend="_class_leap_1_1_frame_1a1e1b235fcb1f454ee20aa82c5342c987">Timestamp</link>);
00339 &#32;&#32;&#32;&#32;&#32;&#32;dest.CopyFrom(source).Transform(leapTransform);
00340 &#32;&#32;&#32;&#32;}
00341 
00342 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00343 
00344 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Internal&#32;Methods</emphasis>
00345 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00349"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9155994dde86e3946890433bfc536b9a">00349</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a9155994dde86e3946890433bfc536b9a">resetShaderTransforms</link>()&#32;{
00350 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5b9871acb331833b7f15215adb0d3015">_transformArray</link>[0]&#32;=&#32;Matrix4x4.identity;
00351 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5b9871acb331833b7f15215adb0d3015">_transformArray</link>[1]&#32;=&#32;Matrix4x4.identity;
00352 &#32;&#32;&#32;&#32;&#32;&#32;Shader.SetGlobalMatrixArray(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1ad8198649c99ee41eaba597cae378815b">HAND_ARRAY_GLOBAL_NAME</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5b9871acb331833b7f15215adb0d3015">_transformArray</link>);
00353 &#32;&#32;&#32;&#32;}
00354 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00355"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5a7dd26c6fcf64f5bd085be124fd69ed">00355</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5a7dd26c6fcf64f5bd085be124fd69ed">GetWarpedMatrix</link>(<emphasis role="keywordtype">long</emphasis>&#32;timestamp,
00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;updateTemporalCompensation&#32;=&#32;<emphasis role="keyword">true</emphasis>)&#32;{
00357 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>&#32;leapTransform;
00358 
00359 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Calculate&#32;a&#32;Temporally&#32;Warped&#32;Pose</emphasis>
00360 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Application.isPlaying
00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;updateTemporalCompensation
00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad28d54cc0444a3ead31ecc3214e58b32">transformHistory</link>.<link linkend="_class_leap_1_1_unity_1_1_transform_history_1a5d822021ea5550a45bd559d7567ae2ed">history</link>.IsFull
00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;_temporalWarpingMode&#32;!=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Off)&#32;{
00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad28d54cc0444a3ead31ecc3214e58b32">transformHistory</link>.<link linkend="_class_leap_1_1_unity_1_1_transform_history_1a027228e6fa5c86fb1c42c0afbc465b04">SampleTransform</link>(timestamp
00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;(<emphasis role="keywordtype">long</emphasis>)(<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a668f8752cd2db6f77abbd44e89980b79">warpingAdjustment</link>&#32;*&#32;1000f)
00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;(_temporalWarpingMode&#32;==
00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Images&#32;?&#32;-20000&#32;:&#32;0),
00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa4be13a6f05121d88aded72a447efd8f">warpedPosition</link>,&#32;out&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>);
00369 &#32;&#32;&#32;&#32;&#32;&#32;}
00370 
00371 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Calculate&#32;the&#32;Current&#32;Pose</emphasis>
00372 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>&#32;currentPose&#32;=&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>.<link linkend="_struct_leap_1_1_unity_1_1_pose_1ac98b12ebae014198abed5894475be71b">identity</link>;
00373 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_deviceOffsetMode&#32;==&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Transform&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5f4a006ae4fbb332ab62796eb060af1e">deviceOrigin</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1ad90ba514c97484e10d747d9bdf9b81a9">position</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5f4a006ae4fbb332ab62796eb060af1e">deviceOrigin</link>.position;
00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1a59e70598d0ebe38d79a55b88b51734ad">rotation</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5f4a006ae4fbb332ab62796eb060af1e">deviceOrigin</link>.rotation;
00376 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Application.isPlaying)&#32;{
00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1ad90ba514c97484e10d747d9bdf9b81a9">position</link>&#32;=&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1a59e70598d0ebe38d79a55b88b51734ad">rotation</link>&#32;*&#32;Vector3.up&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a6c906e4ec5e7775596344ec87fda4681">deviceOffsetYAxis</link>
00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1a59e70598d0ebe38d79a55b88b51734ad">rotation</link>&#32;*&#32;Vector3.forward&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ab78d04f47fd47ce45f7e5da319e29cee">deviceOffsetZAxis</link>;
00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1a59e70598d0ebe38d79a55b88b51734ad">rotation</link>&#32;=&#32;Quaternion.Euler(<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aabddae01cbb798a7cf340a2e1676e8ed">deviceTiltXAxis</link>,&#32;0f,&#32;0f);
00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentPose&#32;=&#32;transform.ToLocalPose().Then(currentPose);
00381 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad28d54cc0444a3ead31ecc3214e58b32">transformHistory</link>.<link linkend="_class_leap_1_1_unity_1_1_transform_history_1a027228e6fa5c86fb1c42c0afbc465b04">SampleTransform</link>(timestamp,&#32;out&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1ad90ba514c97484e10d747d9bdf9b81a9">position</link>,
00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1a59e70598d0ebe38d79a55b88b51734ad">rotation</link>);
00384 &#32;&#32;&#32;&#32;&#32;&#32;}
00385 
00386 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Choose&#32;between&#32;Warped&#32;and&#32;Current&#32;Pose</emphasis>
00387 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;useCurrentPosition&#32;=&#32;(_temporalWarpingMode&#32;==&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa0f64056dec7a8f478070ab21de3247f">TemporalWarpingMode</link>.Off)&#32;||&#32;!Application.isPlaying;
00388 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa4be13a6f05121d88aded72a447efd8f">warpedPosition</link>&#32;=&#32;useCurrentPosition&#32;?&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1ad90ba514c97484e10d747d9bdf9b81a9">position</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa4be13a6f05121d88aded72a447efd8f">warpedPosition</link>;
00389 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>&#32;=&#32;useCurrentPosition&#32;?&#32;currentPose.<link linkend="_struct_leap_1_1_unity_1_1_pose_1a59e70598d0ebe38d79a55b88b51734ad">rotation</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>;
00390 
00391 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Apply&#32;offsets&#32;(when&#32;applicable)</emphasis>
00392 &#32;&#32;&#32;&#32;&#32;&#32;if&#32;(Application.isPlaying)&#32;{
00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_deviceOffsetMode&#32;!=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Transform)&#32;{
00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa4be13a6f05121d88aded72a447efd8f">warpedPosition</link>&#32;+=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>&#32;*&#32;Vector3.up&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a6c906e4ec5e7775596344ec87fda4681">deviceOffsetYAxis</link>
00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>&#32;*&#32;Vector3.forward&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ab78d04f47fd47ce45f7e5da319e29cee">deviceOffsetZAxis</link>;
00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>&#32;*=&#32;Quaternion.Euler(<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aabddae01cbb798a7cf340a2e1676e8ed">deviceTiltXAxis</link>,&#32;0f,&#32;0f);
00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00398 
00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>&#32;*=&#32;Quaternion.Euler(-90f,&#32;180f,&#32;0f);
00400 &#32;&#32;&#32;&#32;&#32;&#32;}
00401 
00402 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(transform.parent&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;_deviceOffsetMode&#32;!=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1afb41f717d7d9f36bbc119f06440b83f6">DeviceOffsetMode</link>.Transform)&#32;{
00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leapTransform&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>(
00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.parent.TransformPoint(<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa4be13a6f05121d88aded72a447efd8f">warpedPosition</link>).ToVector(),
00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(transform.parent.rotation&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>).ToLeapQuaternion(),
00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.lossyScale.ToVector()&#32;*&#32;1e-3f);
00407 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leapTransform&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>(<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aa4be13a6f05121d88aded72a447efd8f">warpedPosition</link>.ToVector(),
00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a2b4417c08a92b9ad2ef8f5dd76248915">warpedRotation</link>.ToLeapQuaternion(),
00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.lossyScale.ToVector()&#32;*&#32;1e-3f);
00411 &#32;&#32;&#32;&#32;&#32;&#32;}
00412 
00413 &#32;&#32;&#32;&#32;&#32;&#32;leapTransform.<link linkend="_struct_leap_1_1_leap_transform_1a699bd459e338da85f1ee7c2de9e466de">MirrorZ</link>();
00414 
00415 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;leapTransform;
00416 &#32;&#32;&#32;&#32;}
00417 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00418"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad85fd202780306f400ee2609b37d3293">00418</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad85fd202780306f400ee2609b37d3293">transformHands</link>(ref&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>&#32;LeftHand,&#32;ref&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>&#32;RightHand)&#32;{
00419 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>&#32;leapTransform&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5a7dd26c6fcf64f5bd085be124fd69ed">GetWarpedMatrix</link>(0,&#32;<emphasis role="keyword">false</emphasis>);
00420 &#32;&#32;&#32;&#32;&#32;&#32;LeftHand&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>(leapTransform.<link linkend="_struct_leap_1_1_leap_transform_1a069ce8e414f0def9697b7816dcc4a799">TransformPoint</link>(LeftHand.translation),
00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leapTransform.<link linkend="_struct_leap_1_1_leap_transform_1ad9658850a91beef88214dcaac6f6e6af">TransformQuaternion</link>(LeftHand.rotation));
00422 &#32;&#32;&#32;&#32;&#32;&#32;RightHand&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>(leapTransform.<link linkend="_struct_leap_1_1_leap_transform_1a069ce8e414f0def9697b7816dcc4a799">TransformPoint</link>(RightHand.translation),
00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leapTransform.<link linkend="_struct_leap_1_1_leap_transform_1ad9658850a91beef88214dcaac6f6e6af">TransformQuaternion</link>(RightHand.rotation));
00424 &#32;&#32;&#32;&#32;}
00425 
<anchor xml:id="__leap_x_r_service_provider_8cs_source_1l00426"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a87c7baea1161c7819c2215f9483e6df6">00426</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a87c7baea1161c7819c2215f9483e6df6">OnPreCullHandTransforms</link>(Camera&#32;camera)&#32;{
00427 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ae9458c66f5008c4592c6f94453b0b043">updateHandInPrecull</link>)&#32;{
00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Don&apos;t&#32;update&#32;pre&#32;cull&#32;for&#32;preview,&#32;reflection,&#32;or&#32;scene&#32;view&#32;cameras</emphasis>
00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(camera.cameraType)&#32;{
00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;CameraType.Preview:
00431 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_2017_1_OR_NEWER</emphasis>
00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;CameraType.Reflection:
00433 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;CameraType.SceneView:
00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00437 
00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Application.isPlaying
00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad00d8ff3e04135ec3f23c90bd0a3b4ff">manualUpdateHasBeenCalledSinceUpdate</link>
00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad00d8ff3e04135ec3f23c90bd0a3b4ff">manualUpdateHasBeenCalledSinceUpdate</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00442 
00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Find&#32;the&#32;left&#32;and/or&#32;right&#32;hand(s)&#32;to&#32;latch</emphasis>
00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;leftHand&#32;=&#32;<emphasis role="keyword">null</emphasis>,&#32;rightHand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>&#32;precullLeftHand&#32;=&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>.<link linkend="_struct_leap_1_1_leap_transform_1a10de68df5cf1afa89c273a33d0629f16">Identity</link>;
00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>&#32;precullRightHand&#32;=&#32;<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>.<link linkend="_struct_leap_1_1_leap_transform_1a10de68df5cf1afa89c273a33d0629f16">Identity</link>;
00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1ad651609e570c614c6d99de319ad990cd">CurrentFrame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Count;&#32;i++)&#32;{
00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;updateHand&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1ad651609e570c614c6d99de319ad990cd">CurrentFrame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>[i];
00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(updateHand.<link linkend="_class_leap_1_1_hand_1a783d6adaec7c3f3422e70bba4480b39d">IsLeft</link>&#32;&amp;&amp;&#32;leftHand&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftHand&#32;=&#32;updateHand;
00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(updateHand.<link linkend="_class_leap_1_1_hand_1afa3c502b072d3101b7366fd928376e18">IsRight</link>&#32;&amp;&amp;&#32;rightHand&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rightHand&#32;=&#32;updateHand;
00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00455 
00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Determine&#32;their&#32;new&#32;Transforms</emphasis>
00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;interpolationTime&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1aafadeb0206fa3309e894ca7241535e81">CalculateInterpolationTime</link>();
00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a81109a7f1bd8d6fb195fb31e5c85fad3">_leapController</link>.<link linkend="_class_leap_1_1_controller_1a10fe0670c31aa9c8193cde4abd57fcd7">GetInterpolatedLeftRightTransform</link>(
00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interpolationTime&#32;+&#32;(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1ab8edf176edaa9cddcc300f170f61c55e">ExtrapolationAmount</link>&#32;*&#32;1000),
00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interpolationTime&#32;-&#32;(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a7ce59365ab427558123780fa15ca50fd">BounceAmount</link>&#32;*&#32;1000),
00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(leftHand&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;leftHand.<link linkend="_class_leap_1_1_hand_1ac7bfb32524382f4c9e4fb830437fe72b">Id</link>&#32;:&#32;0),
00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(rightHand&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;rightHand.Id&#32;:&#32;0),
00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;precullLeftHand,
00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;precullRightHand);
00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;leftValid&#32;=&#32;precullLeftHand.translation&#32;!=&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>.<link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">Zero</link>;
00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rightValid&#32;=&#32;precullRightHand.translation&#32;!=&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>.<link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">Zero</link>;
00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1ad85fd202780306f400ee2609b37d3293">transformHands</link>(ref&#32;precullLeftHand,&#32;ref&#32;precullRightHand);
00468 
00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Calculate&#32;the&#32;delta&#32;Transforms</emphasis>
00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rightHand&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;rightValid)&#32;{
00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5b9871acb331833b7f15215adb0d3015">_transformArray</link>[0]&#32;=
00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Matrix4x4.TRS(precullRightHand.translation.ToVector3(),
00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precullRightHand.rotation.ToQuaternion(),
00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.one)
00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Matrix4x4.Inverse(Matrix4x4.TRS(rightHand.PalmPosition.ToVector3(),
00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rightHand.Rotation.ToQuaternion(),
00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.one));
00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(leftHand&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;leftValid)&#32;{
00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5b9871acb331833b7f15215adb0d3015">_transformArray</link>[1]&#32;=
00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Matrix4x4.TRS(precullLeftHand.translation.ToVector3(),
00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;precullLeftHand.rotation.ToQuaternion(),
00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.one)
00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Matrix4x4.Inverse(Matrix4x4.TRS(leftHand.<link linkend="_class_leap_1_1_hand_1aaf0940b9108e92c22e33b9c6cd32921a">PalmPosition</link>.ToVector3(),
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leftHand.<link linkend="_class_leap_1_1_hand_1ad1f22c3baf75294e2aa4d834d87fec20">Rotation</link>.ToQuaternion(),
00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.one));
00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00488 
00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Apply&#32;inside&#32;of&#32;the&#32;vertex&#32;shader</emphasis>
00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Shader.SetGlobalMatrixArray(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1ad8198649c99ee41eaba597cae378815b">HAND_ARRAY_GLOBAL_NAME</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5b9871acb331833b7f15215adb0d3015">_transformArray</link>);
00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00492 &#32;&#32;&#32;&#32;&#32;&#32;}
00493 &#32;&#32;&#32;&#32;}
00494 
00495 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00496 
00497 &#32;&#32;}
00498 
00499 }
</programlisting></section>
