<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_test_base_8cs_source">
<title>LeapTestBase.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Testing/LeapTestBase.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="preprocessor">#if&#32;LEAP_TESTS</emphasis>
00011 
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;System;
00014 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00016 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.SceneManagement;
00017 
00018 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00019 
00020 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>LeapTestBase&#32;{
00021 
00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;GameObject&#32;testObj;
00023 
00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitTest(<emphasis role="keywordtype">string</emphasis>&#32;objectName)&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;testObj&#32;=&#32;LoadObject(objectName);
00035 &#32;&#32;&#32;&#32;}
00036 
00037 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Spawn&#32;Utilities</emphasis>
00038 
00039 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;T&#32;Spawn&lt;T&gt;(T&#32;original,&#32;Vector3&#32;position)&#32;where&#32;T&#32;:&#32;MonoBehaviour&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GameObject.Instantiate&lt;T&gt;(original,
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position,
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;original.transform.rotation,
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;original.transform.parent);
00044 &#32;&#32;&#32;&#32;}
00045 
00046 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;GameObject&#32;Spawn(GameObject&#32;original,&#32;Vector3&#32;position)&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GameObject.Instantiate(original,
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position,
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;original.transform.rotation,
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;original.transform.parent);
00051 &#32;&#32;&#32;&#32;}
00052 
00053 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object&#32;Spawn(<link linkend="_namespace_unity_engine">UnityEngine</link>.Object&#32;original,&#32;Vector3&#32;position)&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object.Instantiate(original,&#32;position,&#32;Quaternion.identity);
00055 &#32;&#32;&#32;&#32;}
00056 
00062 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;GameObject&#32;LoadObject(<emphasis role="keywordtype">string</emphasis>&#32;objectName)&#32;{
00063 &#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;obj&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00064 
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;SceneManager.sceneCount;&#32;i++)&#32;{
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;scene&#32;=&#32;SceneManager.GetSceneAt(i);
00067 
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj&#32;=&#32;scene.GetRootGameObjects()
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Query()
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.FirstOrDefault(g&#32;=&gt;&#32;g.name&#32;==&#32;objectName);
00071 
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj.SetActive(<emphasis role="keyword">true</emphasis>);
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00076 &#32;&#32;&#32;&#32;&#32;&#32;}
00077 
00078 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;prefab&#32;=&#32;EditorResources.Load&lt;GameObject&gt;(objectName);
00080 
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prefab&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception(<emphasis role="stringliteral">&quot;Could&#32;not&#32;find&#32;an&#32;object&#32;or&#32;prefab&#32;with&#32;the&#32;name&#32;&quot;</emphasis>
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;objectName);
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00085 
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj&#32;=&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object.Instantiate(prefab);
00087 &#32;&#32;&#32;&#32;&#32;&#32;}
00088 
00089 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj;
00090 &#32;&#32;&#32;&#32;}
00091 
00092 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00093 
00094 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Frame&#32;Utilities</emphasis>
00095 
00096 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;GO_SLOW&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00097 
00098 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;aBit&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;GO_SLOW&#32;?&#32;50&#32;:&#32;5;&#32;}&#32;}
00099 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;aWhile&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;GO_SLOW&#32;?&#32;200&#32;:&#32;20;&#32;}&#32;}
00100 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;aLot&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;GO_SLOW&#32;?&#32;1000&#32;:&#32;100;&#32;}&#32;}
00101 
00102 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;beginningTestWait&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;aBit;&#32;}&#32;}
00103 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;endingTestWait&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;aWhile;&#32;}&#32;}
00104 
00105 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;IEnumerator&#32;wait(<emphasis role="keywordtype">int</emphasis>&#32;numFrames)&#32;{
00106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numFrames;&#32;i++)&#32;{
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00108 &#32;&#32;&#32;&#32;&#32;&#32;}
00109 &#32;&#32;&#32;&#32;}
00110 
00111 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00112 
00113 &#32;&#32;}
00114 
00115 }
00116 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
