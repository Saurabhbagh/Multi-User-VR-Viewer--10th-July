<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_motion_2_core_2_scripts_2_attributes_2_enum_flags_8cs_source">
<title>EnumFlags.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Attributes/EnumFlags.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00013 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00015 <emphasis role="preprocessor">#endif</emphasis>
00016 
00017 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_attributes">Leap.Unity.Attributes</link>&#32;{
00018 &#32;&#32;<emphasis role="keyword">using</emphasis>&#32;Query;
00019 
<anchor xml:id="__leap_motion_2_core_2_scripts_2_attributes_2_enum_flags_8cs_source_1l00020"/><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_enum_flags">00020</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_enum_flags">EnumFlags</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_combinable_property_attribute">CombinablePropertyAttribute</link>,&#32;<link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_full_property_drawer">IFullPropertyDrawer</link>&#32;{
00021 
<anchor xml:id="__leap_motion_2_core_2_scripts_2_attributes_2_enum_flags_8cs_source_1l00022"/><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_enum_flags_1a08f34b36aefb4af0104a1cf63bebc017">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_enum_flags_1a08f34b36aefb4af0104a1cf63bebc017">EnumFlags</link>()&#32;{&#32;}
00023 
00024 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;_enumNames;
00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;_enumValues;
00027 
00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawProperty(Rect&#32;rect,&#32;SerializedProperty&#32;property,&#32;GUIContent&#32;label)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_enumNames&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;names&#32;=&#32;(<emphasis role="keywordtype">string</emphasis>[])Enum.GetNames(<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_combinable_property_attribute_1ae004e1a43bf7445dd61fe2f519a6f937">fieldInfo</link>.FieldType);
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;values&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>[])Enum.GetValues(<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_combinable_property_attribute_1ae004e1a43bf7445dd61fe2f519a6f937">fieldInfo</link>.FieldType);
00032 
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;values.Query().Count(v&#32;=&gt;&#32;v&#32;!=&#32;0);
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_enumNames&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[count];
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_enumValues&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[count];
00036 
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;names.Length;&#32;i++)&#32;{
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(values[i]&#32;==&#32;0)&#32;<emphasis role="keywordflow">continue</emphasis>;
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_enumNames[index]&#32;=&#32;names[i];
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_enumValues[index]&#32;=&#32;values[i];
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00045 &#32;&#32;&#32;&#32;&#32;&#32;}
00046 
00047 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;convertedMask&#32;=&#32;0;
00048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_enumValues.Length;&#32;i++)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((property.intValue&#32;&amp;&#32;_enumValues[i])&#32;!=&#32;0)&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;convertedMask&#32;|=&#32;(1&#32;&lt;&lt;&#32;i);
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00052 &#32;&#32;&#32;&#32;&#32;&#32;}
00053 
00054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;resultMask&#32;=&#32;EditorGUI.MaskField(rect,&#32;label,&#32;convertedMask,&#32;_enumNames);
00055 
00056 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyMask&#32;=&#32;0;
00057 &#32;&#32;&#32;&#32;&#32;&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a6a992d5529f459a44fee58c733255e86">index</link>&#32;=&#32;0;
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(resultMask&#32;!=&#32;0&#32;&amp;&amp;&#32;index&#32;&lt;&#32;_enumValues.Length)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((resultMask&#32;&amp;&#32;1)&#32;!=&#32;0)&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;propertyMask&#32;|=&#32;_enumValues[<link linkend="_namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a6a992d5529f459a44fee58c733255e86">index</link>];
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a6a992d5529f459a44fee58c733255e86">index</link>++;
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resultMask&#32;=&#32;resultMask&#32;&gt;&gt;&#32;1;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00067 &#32;&#32;&#32;&#32;&#32;&#32;}
00068 
00069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.intValue&#32;=&#32;propertyMask;
00070 &#32;&#32;&#32;&#32;}
00071 
00072 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IEnumerable&lt;SerializedPropertyType&gt;&#32;SupportedTypes&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;SerializedPropertyType.Enum;
00075 &#32;&#32;&#32;&#32;&#32;&#32;}
00076 &#32;&#32;&#32;&#32;}
00077 <emphasis role="preprocessor">#endif</emphasis>
00078 &#32;&#32;}
00079 }
</programlisting></section>
