<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__voice_checker_8cs_source">
<title>VoiceChecker.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/Script/VoiceChecker.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00002 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Networking;
00003 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00004 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_valve">Valve</link>.<link linkend="_namespace_valve_1_1_v_r">VR</link>;
00005 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.XR;
00006 
00012 
<anchor xml:id="__voice_checker_8cs_source_1l00013"/><link linkend="_class_voice_checker">00013</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_voice_checker">VoiceChecker</link>&#32;:&#32;NetworkBehaviour
00014 {
00015 
00016 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;Checkpoint;
00017 &#32;&#32;&#32;&#32;AudioClip&#32;voice;
00018 
00019 
00020 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
00021 &#32;&#32;&#32;&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isLocalPlayer)
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;Checkpoint&#32;on&#32;start&#32;&quot;</emphasis>&#32;+&#32;Checkpoint);
00025 
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;device&#32;<emphasis role="keywordflow">in</emphasis>&#32;Microphone.devices)
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;Name:&#32;&quot;</emphasis>&#32;+&#32;device);
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_valve_1_1_v_r_1aecd07a81fe79a9f96c6787513e2d98e4ae498749f3c42246d50b15c81c101d988">Application</link>.HasUserAuthorization(UserAuthorization.Microphone))
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;Microphone&#32;found&#32;with&#32;authorization&#32;&quot;</emphasis>);
00033 
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;Microphone&#32;not&#32;found&quot;</emphasis>);
00038 
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00040 
00041 
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;voice&#32;=&#32;Microphone.Start(<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;50,&#32;8000);&#32;<emphasis role="comment">//&#32;it&#32;takes&#32;&#32;lenght&#32;and&#32;frquency&#32;</emphasis>
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(Microphone.GetPosition(<emphasis role="keyword">null</emphasis>)&#32;&lt;&#32;0)&#32;<emphasis role="comment">//latency&#32;</emphasis>
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;}
00046 
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00049 &#32;&#32;&#32;&#32;}
00053 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FixedUpdate()
00054 &#32;&#32;&#32;&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isLocalPlayer)
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___actions">SteamVR_Actions</link>.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___actions_1a02ff0421f892466ae8108b9547447af2">_default</link>.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__default_1a4ba6486378feb0fc40aa8acd469fc056">GrabGrip</link>.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a189859c4e3670a461d15e63e9fca059b">GetState</link>(<link linkend="_namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f">SteamVR_Input_Sources</link>.Any))&#32;&#32;<emphasis role="comment">//&#32;for&#32;any&#32;state&#32;it&#32;works&#32;!!</emphasis>
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentposition&#32;=&#32;Microphone.GetPosition(<emphasis role="keyword">null</emphasis>);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;recordlength&#32;=&#32;currentposition&#32;-&#32;Checkpoint;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(recordlength&#32;&gt;&#32;0)
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;datatofloat&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[recordlength];
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;voice.GetData(datatofloat,&#32;Checkpoint);&#32;
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;bytedata&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>[datatofloat.Length&#32;*&#32;4];
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;0;
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;voice&#32;<emphasis role="keywordflow">in</emphasis>&#32;datatofloat)
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>[]&#32;data&#32;=&#32;System.BitConverter.GetBytes(voice);
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;System.Array.Copy(data,&#32;0,&#32;bytedata,&#32;count,&#32;4);
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;+=&#32;4;
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_voice_checker_1a644fb76d9672b803832faa1a2f59ea37">CmdSendData</link>(bytedata);
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Checkpoint&#32;=&#32;currentposition;
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00083 
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00085 &#32;&#32;&#32;&#32;}
00086 
<anchor xml:id="__voice_checker_8cs_source_1l00091"/><link linkend="_class_voice_checker_1aa61d463472d051565405e77c8e4bae55">00091</link> &#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_voice_checker_1aa61d463472d051565405e77c8e4bae55">SoundOut</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytedata)
00092 &#32;&#32;&#32;&#32;{
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isLocalPlayer)&#32;<emphasis role="comment">//&#32;sound&#32;comes&#32;out&#32;in&#32;other&#32;pc&#32;</emphasis>
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;ConvertedFloat&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[(bytedata.Length)&#32;/&#32;4];
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;bytedata.Length;&#32;i&#32;+=&#32;4)
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00098 
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConvertedFloat[i&#32;/&#32;4]&#32;=&#32;System.BitConverter.ToSingle(bytedata,&#32;i);&#32;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00101 
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetComponent&lt;AudioSource&gt;().clip&#32;=&#32;AudioClip.Create(<emphasis role="stringliteral">&quot;Output&quot;</emphasis>,&#32;ConvertedFloat.Length,&#32;1,&#32;8000,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetComponent&lt;AudioSource&gt;().clip.SetData(ConvertedFloat,&#32;0);
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GetComponent&lt;AudioSource&gt;().Play();
00105 
00106 
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00108 &#32;&#32;&#32;&#32;}
00109 
00114 &#32;&#32;&#32;&#32;[Command]
<anchor xml:id="__voice_checker_8cs_source_1l00115"/><link linkend="_class_voice_checker_1a644fb76d9672b803832faa1a2f59ea37">00115</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_voice_checker_1a644fb76d9672b803832faa1a2f59ea37">CmdSendData</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;data)
00116 &#32;&#32;&#32;&#32;{
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_voice_checker_1aa61d463472d051565405e77c8e4bae55">SoundOut</link>(data);
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_voice_checker_1acb5390e90e3b8cff019e2780a32be0d3">RpcSendAudioToClients</link>(data);&#32;<emphasis role="comment">//&#32;to&#32;send&#32;data&#32;from&#32;server&#32;to&#32;client&#32;</emphasis>
00120 &#32;&#32;&#32;&#32;}
00125 &#32;&#32;&#32;&#32;[ClientRpc]
<anchor xml:id="__voice_checker_8cs_source_1l00126"/><link linkend="_class_voice_checker_1acb5390e90e3b8cff019e2780a32be0d3">00126</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_voice_checker_1acb5390e90e3b8cff019e2780a32be0d3">RpcSendAudioToClients</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytedata)
00127 &#32;&#32;&#32;&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;Sending&#32;the&#32;voice&#32;&quot;</emphasis>);
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_voice_checker_1aa61d463472d051565405e77c8e4bae55">SoundOut</link>(bytedata);
00130 &#32;&#32;&#32;&#32;}
00131 
00132 
00133 
00134 
00135 
00136 
00137 }
</programlisting></section>
