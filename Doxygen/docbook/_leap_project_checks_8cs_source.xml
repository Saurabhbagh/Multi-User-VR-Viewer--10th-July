<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_project_checks_8cs_source">
<title>LeapProjectChecks.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/EditorTools/LeapProjectChecks.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Reflection;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00015 
00016 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00017 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00018 <emphasis role="preprocessor">#endif</emphasis>
00019 
00020 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00021 
00036 &#32;&#32;[AttributeUsage(AttributeTargets.Method,&#32;AllowMultiple&#32;=&#32;<emphasis role="keyword">false</emphasis>)]
<anchor xml:id="__leap_project_checks_8cs_source_1l00037"/><link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute">00037</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute">LeapProjectCheckAttribute</link>&#32;:&#32;Attribute&#32;{
<anchor xml:id="__leap_project_checks_8cs_source_1l00038"/><link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a3248d23569bddc48b605c24376cb1be1">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a3248d23569bddc48b605c24376cb1be1">header</link>;
<anchor xml:id="__leap_project_checks_8cs_source_1l00039"/><link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a880d57036d1efe9740568ba2f6418a01">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a880d57036d1efe9740568ba2f6418a01">order</link>;
00040 
<anchor xml:id="__leap_project_checks_8cs_source_1l00041"/><link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a10c673a55ffc82f76eb8631b7a7709aa">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a10c673a55ffc82f76eb8631b7a7709aa">LeapProjectCheckAttribute</link>(<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a3248d23569bddc48b605c24376cb1be1">header</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a880d57036d1efe9740568ba2f6418a01">order</link>)&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;this.header&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a3248d23569bddc48b605c24376cb1be1">header</link>;
00043 &#32;&#32;&#32;&#32;&#32;&#32;this.order&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute_1a880d57036d1efe9740568ba2f6418a01">order</link>;
00044 &#32;&#32;&#32;&#32;}
00045 &#32;&#32;}
00046 
00051 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>LeapProjectChecks&#32;{
00052 
00053 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>ProjectCheck&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Func&lt;bool&gt;&#32;checkFunc;
00055 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute">LeapProjectCheckAttribute</link>&#32;attribute;
00056 &#32;&#32;&#32;&#32;}
00057 
00058 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;ProjectCheck&gt;&#32;_projectChecks&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00059 
00060 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ensureChecksLoaded()&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_projectChecks&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00063 &#32;&#32;&#32;&#32;&#32;&#32;}
00064 
00065 &#32;&#32;&#32;&#32;&#32;&#32;_projectChecks&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;ProjectCheck&gt;();
00066 
00067 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;assemblies&#32;=&#32;AppDomain.CurrentDomain.GetAssemblies();
00068 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;type&#32;<emphasis role="keywordflow">in</emphasis>&#32;assemblies.Query().SelectMany(a&#32;=&gt;&#32;a.GetTypes()))&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;method&#32;<emphasis role="keywordflow">in</emphasis>&#32;type.GetMethods(BindingFlags.Public
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|&#32;BindingFlags.NonPublic
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|&#32;BindingFlags.Static))&#32;{
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attributes&#32;=&#32;method.GetCustomAttributes(typeof(LeapProjectCheckAttribute),
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inherit:&#32;<emphasis role="keyword">true</emphasis>);
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(attributes.Length&#32;==&#32;0)&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00077 
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;attribute&#32;=&#32;attributes[0]&#32;as&#32;LeapProjectCheckAttribute;
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_projectChecks.Add(<emphasis role="keyword">new</emphasis>&#32;ProjectCheck()&#32;{
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;checkFunc&#32;=&#32;()&#32;=&gt;&#32;{
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!method.IsStatic)&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Invalid&#32;project&#32;check&#32;definition;&#32;project&#32;checks&#32;must&#32;&quot;</emphasis>
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;be&#32;static&#32;methods.&quot;</emphasis>);
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(method.ReturnType&#32;==&#32;typeof(<emphasis role="keywordtype">bool</emphasis>))&#32;{
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">bool</emphasis>)method.Invoke(<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">null</emphasis>);
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;attribute&#32;=&#32;attribute
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00096 &#32;&#32;&#32;&#32;&#32;&#32;}
00097 
00098 &#32;&#32;&#32;&#32;&#32;&#32;_projectChecks.Sort((a,&#32;b)&#32;=&gt;&#32;a.attribute.order.CompareTo(b.attribute.order));
00099 &#32;&#32;&#32;&#32;}
00100 
00105 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawProjectChecksGUI()&#32;{
00106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00107 &#32;&#32;&#32;&#32;&#32;&#32;ensureChecksLoaded();
00108 &#32;&#32;&#32;&#32;&#32;&#32;
00109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;allChecksPassed&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;projectCheck&#32;<emphasis role="keywordflow">in</emphasis>&#32;_projectChecks)&#32;{
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;EditorGUILayout.VerticalScope(EditorStyles.helpBox))&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allChecksPassed&#32;&amp;=&#32;projectCheck.checkFunc();
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00115 
00116 &#32;&#32;&#32;&#32;&#32;&#32;}
00117 
00118 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_ignoredKeys&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;_ignoredKeys.Count&#32;&gt;&#32;0)&#32;{
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;EditorGUILayout.HorizontalScope())&#32;{
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.FlexibleSpace();
00122 
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;EditorGUILayout.VerticalScope())&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Space(4f);
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.Label(<emphasis role="stringliteral">&quot;Some&#32;project&#32;checks&#32;have&#32;been&#32;ignored.&quot;</emphasis>);
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00127 
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Reset&#32;Ignore&#32;Flags&quot;</emphasis>,
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Un-ignore&#32;any&#32;project&#32;checks&#32;that&#32;have&#32;been&#32;ignored.&quot;</emphasis>)))&#32;{
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ClearAllIgnoredKeys();
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00132 
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00135 &#32;&#32;&#32;&#32;&#32;&#32;}
00136 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00137 &#32;&#32;&#32;&#32;}
00138 
00139 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Ignored&#32;Keys&#32;via&#32;Editor&#32;Prefs</emphasis>
00140 
00141 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;IGNORED_KEYS_PREF&#32;=&#32;<emphasis role="stringliteral">&quot;LeapUnityWindow_IgnoredKeys&quot;</emphasis>;
00142 
00143 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00144 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;string&gt;&#32;_backingIgnoredKeys&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00145 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
00146 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;string&gt;&#32;_ignoredKeys&#32;{
00148 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00149 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_backingIgnoredKeys&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backingIgnoredKeys
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;splitBySemicolonToSet(EditorPrefs.GetString(IGNORED_KEYS_PREF));
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_backingIgnoredKeys;
00155 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00157 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00158 &#32;&#32;&#32;&#32;&#32;&#32;}
00159 &#32;&#32;&#32;&#32;}
00160 
00161 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;CheckIgnoredKey(<emphasis role="keywordtype">string</emphasis>&#32;editorPrefKey)&#32;{
00162 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_ignoredKeys.Contains(editorPrefKey);
00164 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
00165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00166 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00167 &#32;&#32;&#32;&#32;}
00168 
00169 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetIgnoredKey(<emphasis role="keywordtype">string</emphasis>&#32;editorPrefKey,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ignore)&#32;{
00170 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ignore)&#32;{
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ignoredKeys.Add(editorPrefKey);
00173 &#32;&#32;&#32;&#32;&#32;&#32;}
00174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ignoredKeys.Remove(editorPrefKey);
00176 &#32;&#32;&#32;&#32;&#32;&#32;}
00177 
00178 &#32;&#32;&#32;&#32;&#32;&#32;uploadignoredKeyChangesToEditorPrefs();
00179 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00180 &#32;&#32;&#32;&#32;}
00181 
00182 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ClearAllIgnoredKeys()&#32;{
00183 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00184 &#32;&#32;&#32;&#32;&#32;&#32;_ignoredKeys.Clear();
00185 
00186 &#32;&#32;&#32;&#32;&#32;&#32;uploadignoredKeyChangesToEditorPrefs();
00187 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00188 &#32;&#32;&#32;&#32;}
00189 
00194 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;string&gt;&#32;splitBySemicolonToSet(<emphasis role="keywordtype">string</emphasis>&#32;ignoredKeys_semicolonDelimited)&#32;{
00195 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;keys&#32;=&#32;ignoredKeys_semicolonDelimited;
00196 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;<emphasis role="keyword">set</emphasis>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;string&gt;();
00197 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;key&#32;<emphasis role="keywordflow">in</emphasis>&#32;keys.Split(<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[]&#32;{&#32;<emphasis role="stringliteral">&apos;;&apos;</emphasis>&#32;},
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringSplitOptions.RemoveEmptyEntries))&#32;{
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>.Add(key);
00200 &#32;&#32;&#32;&#32;&#32;&#32;}
00201 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">set</emphasis>;
00202 &#32;&#32;&#32;&#32;}
00203 
00204 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;joinBySemicolon(HashSet&lt;string&gt;&#32;keys)&#32;{
00205 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Join(<emphasis role="stringliteral">&quot;;&quot;</emphasis>,&#32;keys.Query().ToArray());
00206 &#32;&#32;&#32;&#32;}
00207 
00208 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;uploadignoredKeyChangesToEditorPrefs()&#32;{
00209 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00210 &#32;&#32;&#32;&#32;&#32;&#32;EditorPrefs.SetString(IGNORED_KEYS_PREF,&#32;joinBySemicolon(_ignoredKeys));
00211 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00212 &#32;&#32;&#32;&#32;}
00213 
00214 <emphasis role="preprocessor">#endregion</emphasis>
00215 
00216 &#32;&#32;}
00217 
00218 }
</programlisting></section>
