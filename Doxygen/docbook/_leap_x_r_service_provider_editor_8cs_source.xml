<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_x_r_service_provider_editor_8cs_source">
<title>LeapXRServiceProviderEditor.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/LeapXRServiceProviderEditor.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 &#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00011 &#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00014 
00015 &#32;&#32;[CustomEditor(typeof(LeapXRServiceProvider))]
<anchor xml:id="__leap_x_r_service_provider_editor_8cs_source_1l00016"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_editor">00016</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_editor">LeapXRServiceProviderEditor</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor">LeapServiceProviderEditor</link>&#32;{
00017 
<anchor xml:id="__leap_x_r_service_provider_editor_8cs_source_1l00018"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_editor_1af1b2b20f9a7da319b8c6b5b8b95f9e9c">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_editor_1af1b2b20f9a7da319b8c6b5b8b95f9e9c">OnEnable</link>()&#32;{
00019 &#32;&#32;&#32;&#32;&#32;&#32;base.OnEnable();
00020 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a278deb2ba3b172f743bd54d2515643bd">isVRProvider</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00021 
00022 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(()&#32;=&gt;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;serializedObject
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.FindProperty(<emphasis role="stringliteral">&quot;_temporalWarpingMode&quot;</emphasis>)
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.enumValueIndex&#32;==&#32;1;&#32;},
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_customWarpAdjustment&quot;</emphasis>);
00026 
00027 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(()&#32;=&gt;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;serializedObject
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.FindProperty(<emphasis role="stringliteral">&quot;_deviceOffsetMode&quot;</emphasis>)
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.enumValueIndex&#32;==&#32;1;&#32;},
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_deviceOffsetYAxis&quot;</emphasis>,&#32;
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_deviceOffsetZAxis&quot;</emphasis>,
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_deviceTiltXAxis&quot;</emphasis>);
00033 
00034 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(()&#32;=&gt;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;serializedObject
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.FindProperty(<emphasis role="stringliteral">&quot;_deviceOffsetMode&quot;</emphasis>)
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.enumValueIndex&#32;==&#32;2;&#32;},
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_deviceOrigin&quot;</emphasis>);
00038 &#32;&#32;&#32;&#32;}
00039 
00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;decorateAllowManualTimeAlignment(SerializedProperty&#32;property)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;pcOrAndroidPlatformDetected&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00042 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;targetPlatform&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
00043 <emphasis role="preprocessor">#if&#32;UNITY_STANDALONE</emphasis>
00044 &#32;&#32;&#32;&#32;&#32;&#32;pcOrAndroidPlatformDetected&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00045 &#32;&#32;&#32;&#32;&#32;&#32;targetPlatform&#32;=&#32;<emphasis role="stringliteral">&quot;Standalone&#32;(Desktop)&quot;</emphasis>;
00046 <emphasis role="preprocessor">#elif&#32;UNITY_ANDROID</emphasis>
00047 &#32;&#32;&#32;&#32;&#32;&#32;pcOrAndroidPlatformDetected&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00048 &#32;&#32;&#32;&#32;&#32;&#32;targetPlatform&#32;=&#32;<emphasis role="stringliteral">&quot;Android&quot;</emphasis>;
00049 <emphasis role="preprocessor">#endif</emphasis>
00050 
00051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pcOrAndroidPlatformDetected&#32;&amp;&amp;&#32;property.boolValue)&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(targetPlatform&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;target&#32;platform&#32;detected;&#32;&quot;</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;manual&#32;time&#32;alignment&#32;should&#32;not&#32;be&#32;enabled&#32;under&#32;most&#32;&quot;</emphasis>
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;circumstances.&quot;</emphasis>,&#32;MessageType.Warning);
00055 &#32;&#32;&#32;&#32;&#32;&#32;}
00056 &#32;&#32;&#32;&#32;}
00057 
<anchor xml:id="__leap_x_r_service_provider_editor_8cs_source_1l00058"/><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_editor_1af109f9fa67a87b0802b3a55f291726ba">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_editor_1af109f9fa67a87b0802b3a55f291726ba">OnSceneGUI</link>()&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider">LeapXRServiceProvider</link>&#32;xrProvider&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>&#32;as&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider">LeapXRServiceProvider</link>;
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(serializedObject.FindProperty(<emphasis role="stringliteral">&quot;_deviceOffsetMode&quot;</emphasis>).enumValueIndex&#32;==&#32;2&#32;&amp;&amp;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xrProvider.<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5f4a006ae4fbb332ab62796eb060af1e">deviceOrigin</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1afc0676788bab922a1179d58946180c86">controllerOffset</link>&#32;=&#32;xrProvider.transform.InverseTransformPoint(xrProvider.<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5f4a006ae4fbb332ab62796eb060af1e">deviceOrigin</link>.position);
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a6d8c4c320f95c193100feccb73eda40c">deviceRotation</link>&#32;=&#32;Quaternion.Inverse(xrProvider.transform.rotation)&#32;*&#32;
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xrProvider.<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_1a5f4a006ae4fbb332ab62796eb060af1e">deviceOrigin</link>.rotation&#32;*&#32;
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion.Euler(90f,&#32;0f,&#32;0f);
00066 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;vrProvider&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>&#32;as&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider">LeapXRServiceProvider</link>;
00068 
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a6d8c4c320f95c193100feccb73eda40c">deviceRotation</link>&#32;=&#32;Quaternion.Euler(90f,&#32;0f,&#32;0f)&#32;*&#32;
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion.Euler(vrProvider.deviceTiltXAxis,&#32;0f,&#32;0f);
00071 
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1afc0676788bab922a1179d58946180c86">controllerOffset</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(0f,
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vrProvider.deviceOffsetYAxis,
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vrProvider.deviceOffsetZAxis);
00075 &#32;&#32;&#32;&#32;&#32;&#32;}
00076 
00077 &#32;&#32;&#32;&#32;&#32;&#32;base.OnSceneGUI();
00078 &#32;&#32;&#32;&#32;}
00079 &#32;&#32;}
00080 }
</programlisting></section>
