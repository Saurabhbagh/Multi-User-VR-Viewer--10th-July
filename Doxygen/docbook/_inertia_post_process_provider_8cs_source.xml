<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__inertia_post_process_provider_8cs_source">
<title>InertiaPostProcessProvider.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Examples/Example Assets/InertiaPostProcessProvider.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00012 
<anchor xml:id="__inertia_post_process_provider_8cs_source_1l00013"/><link linkend="_namespace_leap_1_1_unity_1_1_examples">00013</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_examples">Leap.Unity.Examples</link>&#32;{
00014 
<anchor xml:id="__inertia_post_process_provider_8cs_source_1l00015"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider">00015</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider">InertiaPostProcessProvider</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_post_process_provider">PostProcessProvider</link>&#32;{
00016 
00017 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Inertia&quot;</emphasis>)]
00018 &#32;&#32;&#32;&#32;
00019 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Higher&#32;stiffness&#32;will&#32;keep&#32;the&#32;bouncy&#32;hand&#32;closer&#32;to&#32;the&#32;tracked&#32;hand&#32;data.&quot;</emphasis>)]
00020 &#32;&#32;&#32;&#32;[Range(0f,&#32;10f)]
<anchor xml:id="__inertia_post_process_provider_8cs_source_1l00021"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider_1a5ec6ca4a850850dcffdae36d74e75e6e">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider_1a5ec6ca4a850850dcffdae36d74e75e6e">stiffness</link>&#32;=&#32;2f;
00022 &#32;&#32;&#32;&#32;
00023 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Higher&#32;damping&#32;will&#32;suppress&#32;more&#32;motion&#32;and&#32;reduce&#32;oscillation.&quot;</emphasis>)]
00024 &#32;&#32;&#32;&#32;[Range(0f,&#32;10f)]
<anchor xml:id="__inertia_post_process_provider_8cs_source_1l00025"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider_1a4c1323ad732c8cec8de2c90239b6de60">00025</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider_1a4c1323ad732c8cec8de2c90239b6de60">damping</link>&#32;=&#32;2f;
00026 &#32;&#32;&#32;&#32;
00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update-time&#32;Hand&#32;Data</emphasis>
00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_leftPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_previousLeftPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_leftAge&#32;=&#32;0f;
00031 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_rightPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_previousRightPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_rightAge&#32;=&#32;0f;
00034 
00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;FixedUpdate-time&#32;Hand&#32;Data</emphasis>
00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_fixedLeftPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_fixedPreviousLeftPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00038 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_fixedLeftAge&#32;=&#32;0f;
00039 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_fixedRightPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;_fixedPreviousRightPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00041 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_fixedRightAge&#32;=&#32;0f;
00042 
<anchor xml:id="__inertia_post_process_provider_8cs_source_1l00046"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider_1af9c64ac46fd83f591cbbdb5e35e35213">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider_1af9c64ac46fd83f591cbbdb5e35e35213">ProcessFrame</link>(ref&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;inputFrame)&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;leftHand&#32;=&#32;inputFrame.Hands.Query().FirstOrDefault(h&#32;=&gt;&#32;h.IsLeft);
00048 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;rightHand&#32;=&#32;inputFrame.Hands.Query().FirstOrDefault(h&#32;=&gt;&#32;!h.IsLeft);
00049 
00050 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Frames&#32;can&#32;potentially&#32;come&#32;from&#32;two&#32;time-interwoven&#32;sources:&#32;Update&#32;frames</emphasis>
00051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;FixedUpdate&#32;frames.&#32;Time&#32;is&#32;not&#32;monotonically&#32;increasing&#32;frame-to-frame</emphasis>
00052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;because&#32;FixedUpdates&#32;and&#32;Updates&#32;interweave&#32;and&#32;occasionally&#32;FixedUpdate&#32;plays</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;catch-up,&#32;and&#32;we&#32;interpolate&#32;hand&#32;data&#32;accordingly&#32;further&#32;up&#32;the&#32;hand&#32;pipeline,</emphasis>
00054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;which&#32;affects&#32;the&#32;hand.TimeVisible&#32;property&#32;we&#32;use&#32;to&#32;simulate&#32;our&#32;effect</emphasis>
00055 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;statefully&#32;over&#32;time.</emphasis>
00056 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
00057 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;To&#32;support&#32;both&#32;Update-time&#32;hand&#32;data&#32;and&#32;FixedUpdate-time&#32;hand&#32;data&#32;with&#32;a</emphasis>
00058 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;single&#32;stateful&#32;post-process,&#32;we&#32;maintain&#32;two&#32;independent&#32;states&#32;for&#32;each&#32;stream,</emphasis>
00059 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;which,&#32;independently,&#32;_are_&#32;going&#32;to&#32;be&#32;monotonically&#32;forward-moving&#32;in&#32;time.</emphasis>
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Time.inFixedTimeStep)&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;FixedUpdate&#32;hand&#32;data.</emphasis>
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processHand(leftHand,
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;_fixedLeftPose,&#32;ref&#32;_fixedPreviousLeftPose,&#32;ref&#32;_fixedLeftAge);
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processHand(rightHand,
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;_fixedRightPose,&#32;ref&#32;_fixedPreviousRightPose,&#32;ref&#32;_fixedRightAge);
00066 &#32;&#32;&#32;&#32;&#32;&#32;}
00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;hand&#32;data.</emphasis>
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processHand(leftHand,&#32;ref&#32;_leftPose,&#32;ref&#32;_previousLeftPose,&#32;ref&#32;_leftAge);
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processHand(rightHand,&#32;ref&#32;_rightPose,&#32;ref&#32;_previousRightPose,&#32;ref&#32;_rightAge);
00071 &#32;&#32;&#32;&#32;&#32;&#32;}
00072 
00073 &#32;&#32;&#32;&#32;}
00074 &#32;&#32;&#32;&#32;
00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;processHand(<link linkend="_class_leap_1_1_hand">Hand</link>&#32;hand,
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;maybeCurPose,
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_struct_leap_1_1_unity_1_1_pose">Pose</link>?&#32;maybePrevPose,
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<emphasis role="keywordtype">float</emphasis>&#32;handAge)&#32;{
00079 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hand&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;state.</emphasis>
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maybeCurPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maybePrevPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handAge&#32;=&#32;0f;
00084 &#32;&#32;&#32;&#32;&#32;&#32;}
00085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;framePose&#32;=&#32;hand.GetPalmPose();
00087 
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!maybeCurPose.HasValue)&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;hand&#32;just&#32;started&#32;being&#32;tracked.</emphasis>
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maybePrevPose&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maybeCurPose&#32;=&#32;framePose;
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!maybePrevPose.HasValue)&#32;{
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Have&#32;current&#32;pose,&#32;lack&#32;previous&#32;pose,&#32;just&#32;get&#32;initial&#32;momentum.</emphasis>
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maybePrevPose&#32;=&#32;maybeCurPose;
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maybeCurPose&#32;=&#32;framePose;
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;There&apos;s&#32;enough&#32;data&#32;to&#32;verlet-integrate.</emphasis>
00100 
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;how&#32;much&#32;time&#32;has&#32;passed&#32;since&#32;we&#32;last&#32;received&#32;hand&#32;data.</emphasis>
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;</emphasis>
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;As&#32;a&#32;safety&#32;measure,&#32;we&#32;ensure&#32;deltaTime&#32;is&#32;positive&#32;before&#32;running&#32;our</emphasis>
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stateful&#32;filter&#32;to&#32;give&#32;the&#32;hand&#32;momentum.&#32;Any&#32;post-process&#32;could&#32;mess&#32;with</emphasis>
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;TimeVisible&#32;property,&#32;so&#32;we&#32;do&#32;this&#32;to&#32;minimize&#32;the&#32;chance&#32;of&#32;total</emphasis>
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;havok.</emphasis>
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;deltaTime&#32;=&#32;hand.<link linkend="_class_leap_1_1_hand_1a880d68f1c1677ed4e8a8a3fe17370d1f">TimeVisible</link>&#32;-&#32;handAge;
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(deltaTime&#32;&gt;&#32;0)&#32;{
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handAge&#32;=&#32;hand.<link linkend="_class_leap_1_1_hand_1a880d68f1c1677ed4e8a8a3fe17370d1f">TimeVisible</link>;
00110 
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;curPose&#32;=&#32;maybeCurPose.Value;
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;prevPose&#32;=&#32;maybePrevPose.Value;
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;integratePose(ref&#32;curPose,&#32;ref&#32;prevPose,
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetPose:&#32;framePose,&#32;deltaTime:&#32;deltaTime);
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hand.SetPalmPose(curPose);
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maybeCurPose&#32;=&#32;curPose;
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maybePrevPose&#32;=&#32;prevPose;
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00120 &#32;&#32;&#32;&#32;&#32;&#32;}
00121 &#32;&#32;&#32;&#32;}
00122 
00127 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;integratePose(ref&#32;Pose&#32;curPose,&#32;ref&#32;Pose&#32;prevPose,
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pose&#32;targetPose,&#32;<emphasis role="keywordtype">float</emphasis>&#32;deltaTime)&#32;{
00129 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;motion&#32;from&#32;prevPose&#32;to&#32;curPose.</emphasis>
00130 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;deltaPose&#32;=&#32;curPose.inverse&#32;*&#32;prevPose;&#32;<emphasis role="comment">//&#32;prevPose&#32;in&#32;curPose&apos;s&#32;local&#32;space.</emphasis>
00131 &#32;&#32;&#32;&#32;&#32;&#32;deltaPose&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Pose(-deltaPose.position,&#32;Quaternion.Inverse(deltaPose.rotation));
00132 &#32;&#32;&#32;&#32;&#32;&#32;deltaPose&#32;=&#32;Pose.Lerp(deltaPose,&#32;Pose.identity,&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider_1a4c1323ad732c8cec8de2c90239b6de60">damping</link>&#32;*&#32;deltaTime);&#32;<emphasis role="comment">//&#32;Dampen.</emphasis>
00133 
00134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Verlet-integrate&#32;curPose&#32;based&#32;on&#32;the&#32;delta&#32;from&#32;prevPose.</emphasis>
00135 &#32;&#32;&#32;&#32;&#32;&#32;Pose&#32;tempPose&#32;=&#32;curPose;
00136 &#32;&#32;&#32;&#32;&#32;&#32;curPose&#32;=&#32;curPose&#32;*&#32;deltaPose;
00137 &#32;&#32;&#32;&#32;&#32;&#32;prevPose&#32;=&#32;tempPose;
00138 
00139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pull&#32;the&#32;integrated&#32;hand&#32;toward&#32;the&#32;target&#32;a&#32;little&#32;bit&#32;based&#32;on&#32;stiffness.</emphasis>
00140 &#32;&#32;&#32;&#32;&#32;&#32;curPose&#32;=&#32;Pose.Lerp(curPose,&#32;targetPose,&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider_1a5ec6ca4a850850dcffdae36d74e75e6e">stiffness</link>&#32;*&#32;deltaTime);
00141 &#32;&#32;&#32;&#32;}
00142 &#32;&#32;}
00143 }
</programlisting></section>
