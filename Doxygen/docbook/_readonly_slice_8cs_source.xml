<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__readonly_slice_8cs_source">
<title>ReadonlySlice.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/ReadonlySlice.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00015 
00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00017 
00018 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>ReadonlySliceExtensions&#32;{
00019 
00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ReadonlySlice&lt;T&gt;&#32;ReadonlySlice&lt;T&gt;(<emphasis role="keyword">this</emphasis>&#32;ReadonlyList&lt;T&gt;&#32;list,&#32;<emphasis role="keywordtype">int</emphasis>&#32;beginIdx&#32;=&#32;-1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;endIdx&#32;=&#32;-1)&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(beginIdx&#32;==&#32;-1&#32;&amp;&amp;&#32;endIdx&#32;==&#32;-1)&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ReadonlySlice&lt;T&gt;(list,&#32;0,&#32;list.Count);
00036 &#32;&#32;&#32;&#32;&#32;&#32;}
00037 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(beginIdx&#32;==&#32;-1&#32;&amp;&amp;&#32;endIdx&#32;!=&#32;-1)&#32;{
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ReadonlySlice&lt;T&gt;(list,&#32;0,&#32;endIdx);
00039 &#32;&#32;&#32;&#32;&#32;&#32;}
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(endIdx&#32;==&#32;-1&#32;&amp;&amp;&#32;beginIdx&#32;!=&#32;-1)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ReadonlySlice&lt;T&gt;(list,&#32;beginIdx,&#32;list.Count);
00042 &#32;&#32;&#32;&#32;&#32;&#32;}
00043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ReadonlySlice&lt;T&gt;(list,&#32;beginIdx,&#32;endIdx);
00045 &#32;&#32;&#32;&#32;&#32;&#32;}
00046 &#32;&#32;&#32;&#32;}
00047 
00048 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ReadonlySlice&lt;T&gt;&#32;FromIndex&lt;T&gt;(<emphasis role="keyword">this</emphasis>&#32;ReadonlyList&lt;T&gt;&#32;list,&#32;<emphasis role="keywordtype">int</emphasis>&#32;fromIdx)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ReadonlySlice(list,&#32;fromIdx);
00050 &#32;&#32;&#32;&#32;}
00051 
00052 &#32;&#32;}
00053 
<anchor xml:id="__readonly_slice_8cs_source_1l00054"/><link linkend="_struct_leap_1_1_unity_1_1_readonly_slice">00054</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_readonly_slice">ReadonlySlice</link>&lt;T&gt;&#32;:&#32;<link linkend="_interface_leap_1_1_unity_1_1_i_indexable_struct">IIndexableStruct</link>&lt;T,&#32;ReadonlySlice&lt;T&gt;&gt;&#32;{
00055 
00056 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_list">ReadonlyList&lt;T&gt;</link>&#32;_list;
00057 
00058 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_beginIdx;
00059 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_endIdx;
00060 
00061 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_direction;
00062 
<anchor xml:id="__readonly_slice_8cs_source_1l00070"/><link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1a67460191081a7c77a2a715a7b61d80a1">00070</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1a67460191081a7c77a2a715a7b61d80a1">ReadonlySlice</link>(<link linkend="_struct_leap_1_1_unity_1_1_readonly_list">ReadonlyList&lt;T&gt;</link>&#32;list,&#32;<emphasis role="keywordtype">int</emphasis>&#32;beginIdx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;endIdx)&#32;{
00071 &#32;&#32;&#32;&#32;&#32;&#32;_list&#32;=&#32;list;
00072 &#32;&#32;&#32;&#32;&#32;&#32;_beginIdx&#32;=&#32;beginIdx;
00073 &#32;&#32;&#32;&#32;&#32;&#32;_endIdx&#32;=&#32;endIdx;
00074 &#32;&#32;&#32;&#32;&#32;&#32;_direction&#32;=&#32;beginIdx&#32;&lt;=&#32;endIdx&#32;?&#32;1&#32;:&#32;-1;
00075 &#32;&#32;&#32;&#32;}
00076 
<anchor xml:id="__readonly_slice_8cs_source_1l00077"/><link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1a9e8ee19db4c079a22b2e4f3640532280">00077</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;T&#32;<emphasis role="keyword">this</emphasis>[<emphasis role="keywordtype">int</emphasis>&#32;index]&#32;{
00078 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&lt;&#32;0&#32;||&#32;index&#32;&gt;&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1ade11ab84f8518b7dd6d27b2e4b69e6eb">Count</link>&#32;-&#32;1)&#32;{&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;IndexOutOfRangeException();&#32;}
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_list[_beginIdx&#32;+&#32;index&#32;*&#32;_direction];
00081 &#32;&#32;&#32;&#32;&#32;&#32;}
00082 &#32;&#32;&#32;&#32;}
00083 
<anchor xml:id="__readonly_slice_8cs_source_1l00084"/><link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1ade11ab84f8518b7dd6d27b2e4b69e6eb">00084</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1ade11ab84f8518b7dd6d27b2e4b69e6eb">Count</link>&#32;{
00085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(_endIdx&#32;-&#32;_beginIdx)&#32;*&#32;_direction;
00087 &#32;&#32;&#32;&#32;&#32;&#32;}
00088 &#32;&#32;&#32;&#32;}
00089 
00090 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;foreach&#32;and&#32;Query()</emphasis>
00091 
<anchor xml:id="__readonly_slice_8cs_source_1l00092"/><link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1aa0a31eee8c64bcb819fee93c017c80c1">00092</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_indexable_struct_enumerator">IndexableStructEnumerator&lt;T, ReadonlySlice&lt;T&gt;</link>&gt;&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1aa0a31eee8c64bcb819fee93c017c80c1">GetEnumerator</link>()&#32;{
00093 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_indexable_struct_enumerator">IndexableStructEnumerator&lt;T, ReadonlySlice&lt;T&gt;</link>&gt;(<emphasis role="keyword">this</emphasis>);
00094 &#32;&#32;&#32;&#32;}
00095 
<anchor xml:id="__readonly_slice_8cs_source_1l00096"/><link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1af4b44e3656104f31d5673f9865d5d971">00096</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1af4b44e3656104f31d5673f9865d5d971">Query</link>()&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;T[]&#32;array&#32;=&#32;ArrayPool&lt;T&gt;.Spawn(<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1ade11ab84f8518b7dd6d27b2e4b69e6eb">Count</link>);
00098 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1ade11ab84f8518b7dd6d27b2e4b69e6eb">Count</link>;&#32;i++)&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[i]&#32;=&#32;<emphasis role="keyword">this</emphasis>[i];
00100 &#32;&#32;&#32;&#32;&#32;&#32;}
00101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(array,&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice_1ade11ab84f8518b7dd6d27b2e4b69e6eb">Count</link>);
00102 &#32;&#32;&#32;&#32;}
00103 
00104 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00105 
00106 &#32;&#32;}
00107 
00108 }
</programlisting></section>
