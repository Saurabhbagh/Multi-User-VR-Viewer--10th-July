<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_leap_1_1_vector">
<title>Leap.Vector Struct Reference</title>
<indexterm><primary>Leap.Vector</primary></indexterm>
<para>

<para>The <link linkend="_struct_leap_1_1_vector">Vector</link> struct represents a three-component mathematical vector or point such as a direction or position in three-dimensional space. </para>
 
</para>
<para>Inheritance diagram for Leap.Vector:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_leap_1_1_vector.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>float [] <link linkend="_struct_leap_1_1_vector_1ac5cd8263402ee3da54d342c65bde2511">ToFloatArray</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link> (float <link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>, float <link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>, float <link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>)</para>

<para>Creates a new <link linkend="_struct_leap_1_1_vector">Vector</link> with the specified component values. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector_1a1058e5cc80c4eb8f521f485269f7b614">Vector</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> vector)</para>

<para>Copies the specified <link linkend="_struct_leap_1_1_vector">Vector</link>. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1a9a192946523c91fc5aec3541cc09b762">DistanceTo</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> other)</para>

<para>The distance between the point represented by this <link linkend="_struct_leap_1_1_vector">Vector</link> object and a point represented by the specified <link linkend="_struct_leap_1_1_vector">Vector</link> object. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1a5833741990af0c182a41c75053d628b7">AngleTo</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> other)</para>

<para>The angle between this vector and the specified vector in radians. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804">Dot</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> other)</para>

<para>The dot product of this vector with another vector. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1acdd326aa3bd6ac8eaf4d0c321db129cb">Cross</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> other)</para>

<para>The cross product of this vector and the specified vector. </para>
</listitem>
            <listitem><para>override string <link linkend="_struct_leap_1_1_vector_1a0da414710f7b4d8bab10ed4685750599">ToString</link> ()</para>

<para>Returns a string containing this vector in a human readable format: (x, y, z). </para>
</listitem>
            <listitem><para>bool <link linkend="_struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de">Equals</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> v)</para>

<para>Compare <link linkend="_struct_leap_1_1_vector">Vector</link> equality component-wise. </para>
</listitem>
            <listitem><para>override bool <link linkend="_struct_leap_1_1_vector_1a024719e566f2af651da6494e0f5cd86c">Equals</link> (<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link> obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_leap_1_1_vector_1aae57324c0e393fc8f8b799092964efbb">IsValid</link> ()</para>

<para>Returns true if all of the vector&apos;s components are finite. If any component is NaN or infinite, then this returns false. </para>
</listitem>
            <listitem><para>override int <link linkend="_struct_leap_1_1_vector_1aa95778cb029f0b2b59e7077eb1c3c980">GetHashCode</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1af056d6d462839c1e5d3d9fa7d0507f11">operator+</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, <link linkend="_struct_leap_1_1_vector">Vector</link> v2)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1ac35b7560d4ac5acb9217120aa6281f41">operator -</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, <link linkend="_struct_leap_1_1_vector">Vector</link> v2)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a9189471d23ea61609806cbee7b1808bf">operator *</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, float scalar)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a7a1839d6ea30d92eb3a7591b73c41a63">operator *</link> (float scalar, <link linkend="_struct_leap_1_1_vector">Vector</link> v1)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a8a707fa512d65682a773f87308c6d0e9">operator/</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, float scalar)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1ab08ec541871ec6fefb7f66331fdb6f0d">operator -</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> v1)</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_leap_1_1_vector_1ae3811a09e999d99576d40d361d5871fd">operator==</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, <link linkend="_struct_leap_1_1_vector">Vector</link> v2)</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_leap_1_1_vector_1a6c834842a05008442e86353a7209d17b">operator !=</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, <link linkend="_struct_leap_1_1_vector">Vector</link> v2)</para>
</listitem>
            <listitem><para>static <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a5732837cc5c84d689d44d9f3836fe639">Lerp</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> a, <link linkend="_struct_leap_1_1_vector">Vector</link> b, float t)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link></para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link></para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">Zero</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 0, 0)</para>

<para>The zero vector: (0, 0, 0) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d">Ones</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(1, 1, 1)</para>

<para>The ones vector: (1, 1, 1) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1ad62a202318bf591b431928859449b19c">XAxis</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(1, 0, 0)</para>

<para>The x-axis unit vector: (1, 0, 0) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1abf07de0f419b3de5776e046d35c0843e">YAxis</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 1, 0)</para>

<para>The y-axis unit vector: (0, 1, 0) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a2b2f1a3a9334e812e832e3b1b6cd4384">ZAxis</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 0, 1)</para>

<para>The z-axis unit vector: (0, 0, 1) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a2ec88fe91f8086e18e78ee2dcc078525">Forward</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 0, -1)</para>

<para>The unit vector pointing forward along the negative z-axis: (0, 0, -1) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1ad8dd1ac8e87611c590c9dcc58f8fdf8c">Backward</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 0, 1)</para>

<para>The unit vector pointing backward along the positive z-axis: (0, 0, 1) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a62b9bbd54a4b89f695a106f42fcff881">Left</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(-1, 0, 0)</para>

<para>The unit vector pointing left along the negative x-axis: (-1, 0, 0) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1aa2cefa3d6f93e552fcd95621e82da158">Right</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(1, 0, 0)</para>

<para>The unit vector pointing right along the positive x-axis: (1, 0, 0) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1ad90a5266422b507db81c857829b9a915">Up</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 1, 0)</para>

<para>The unit vector pointing up along the positive y-axis: (0, 1, 0) </para>
</listitem>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a5f080cc88e908cd5d4c3e593767cdb17">Down</link> = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, -1, 0)</para>

<para>The unit vector pointing down along the negative y-axis: (0, -1, 0) </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1af92a9eb06277dd8eebbf3e1cf61360ca">this[uint index]</link><computeroutput> [get, set]</computeroutput>
</para>

<para>Index vector components numerically. Index 0 is x, index 1 is y, and index 2 is z. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1afd51a6a7664efda2e5dde7a5e6a5313a">Magnitude</link><computeroutput> [get]</computeroutput>
</para>

<para>The magnitude, or length, of this vector. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143">MagnitudeSquared</link><computeroutput> [get]</computeroutput>
</para>

<para>The square of the magnitude, or length, of this vector. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1acc5105f55edfdc7a3d5cc6cd6cb8dc8f">Pitch</link><computeroutput> [get]</computeroutput>
</para>

<para>The pitch angle in radians. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1afa775e6c104537383493e027f6a462f7">Roll</link><computeroutput> [get]</computeroutput>
</para>

<para>The roll angle in radians. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_vector_1ac6f5feaf332862e1ebc0d5b219e55eaa">Yaw</link><computeroutput> [get]</computeroutput>
</para>

<para>The yaw angle in radians. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_vector_1a14c14f9559420ad1f1a9e1b8884859c4">Normalized</link><computeroutput> [get]</computeroutput>
</para>

<para>A normalized copy of this vector. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_struct_leap_1_1_vector">Vector</link> struct represents a three-component mathematical vector or point such as a direction or position in three-dimensional space. </para>



<para>The <link linkend="_namespace_leap">Leap</link> Motion software employs a right-handed Cartesian coordinate system. Values given are in units of real-world millimeters. The origin is centered at the center of the <link linkend="_namespace_leap">Leap</link> Motion <link linkend="_class_leap_1_1_controller">Controller</link>. The x- and z-axes lie in the horizontal plane, with the x-axis running parallel to the long edge of the device. The y-axis is vertical, with positive values increasing upwards (in contrast to the downward orientation of most computer graphics coordinate systems). The z-axis has positive values increasing away from the computer screen. <formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00037">37</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d"/>    <section>
    <title>Vector()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Vector</secondary></indexterm>
<para><computeroutput>Leap.Vector.Vector (float x, float y, float z)</computeroutput></para><para>

<para>Creates a new <link linkend="_struct_leap_1_1_vector">Vector</link> with the specified component values. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00079">79</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a1058e5cc80c4eb8f521f485269f7b614"/>    <section>
    <title>Vector()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Vector</secondary></indexterm>
<para><computeroutput>Leap.Vector.Vector (<link linkend="_struct_leap_1_1_vector">Vector</link> vector)</computeroutput></para><para>

<para>Copies the specified <link linkend="_struct_leap_1_1_vector">Vector</link>. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00090">90</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_leap_1_1_vector_1a5833741990af0c182a41c75053d628b7"/>    <section>
    <title>AngleTo()</title>
<indexterm><primary>AngleTo</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>AngleTo</secondary></indexterm>
<para><computeroutput>float Leap.Vector.AngleTo (<link linkend="_struct_leap_1_1_vector">Vector</link> other)</computeroutput></para><para>

<para>The angle between this vector and the specified vector in radians. </para>
</para>

<para>The angle is measured in the plane formed by the two vectors. The angle returned is always the smaller of the two conjugate angles. Thus A.angleTo(B) == B.angleTo(A) and is always a positive value less than or equal to pi radians (180 degrees).</para>

<para>If either vector has zero length, then this function returns zero. <formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00121">121</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1acdd326aa3bd6ac8eaf4d0c321db129cb"/>    <section>
    <title>Cross()</title>
<indexterm><primary>Cross</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Cross</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Cross (<link linkend="_struct_leap_1_1_vector">Vector</link> other)</computeroutput></para><para>

<para>The cross product of this vector and the specified vector. </para>
</para>

<para>The cross product is a vector orthogonal to both original vectors. It has a magnitude equal to the area of a parallelogram having the two vectors as sides. The direction of the returned vector is determined by the right-hand rule. Thus A.cross(B) == -B.cross(A).</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00156">156</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a9a192946523c91fc5aec3541cc09b762"/>    <section>
    <title>DistanceTo()</title>
<indexterm><primary>DistanceTo</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>DistanceTo</secondary></indexterm>
<para><computeroutput>float Leap.Vector.DistanceTo (<link linkend="_struct_leap_1_1_vector">Vector</link> other)</computeroutput></para><para>

<para>The distance between the point represented by this <link linkend="_struct_leap_1_1_vector">Vector</link> object and a point represented by the specified <link linkend="_struct_leap_1_1_vector">Vector</link> object. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00103">103</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804"/>    <section>
    <title>Dot()</title>
<indexterm><primary>Dot</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Dot</secondary></indexterm>
<para><computeroutput>float Leap.Vector.Dot (<link linkend="_struct_leap_1_1_vector">Vector</link> other)</computeroutput></para><para>

<para>The dot product of this vector with another vector. </para>
</para>

<para>The dot product is the magnitude of the projection of this vector onto the specified vector. <formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00142">142</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de"/>    <section>
    <title>Equals()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>bool Leap.Vector.Equals (<link linkend="_struct_leap_1_1_vector">Vector</link> v)</computeroutput></para><para>

<para>Compare <link linkend="_struct_leap_1_1_vector">Vector</link> equality component-wise. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00174">174</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a024719e566f2af651da6494e0f5cd86c"/>    <section>
    <title>Equals()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>override bool Leap.Vector.Equals (<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link> obj)</computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00178">178</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1aa95778cb029f0b2b59e7077eb1c3c980"/>    <section>
    <title>GetHashCode()</title>
<indexterm><primary>GetHashCode</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>GetHashCode</secondary></indexterm>
<para><computeroutput>override int Leap.Vector.GetHashCode ( )</computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00375">375</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1aae57324c0e393fc8f8b799092964efbb"/>    <section>
    <title>IsValid()</title>
<indexterm><primary>IsValid</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>IsValid</secondary></indexterm>
<para><computeroutput>bool Leap.Vector.IsValid ( )</computeroutput></para><para>

<para>Returns true if all of the vector&apos;s components are finite. If any component is NaN or infinite, then this returns false. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00187">187</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a5732837cc5c84d689d44d9f3836fe639"/>    <section>
    <title>Lerp()</title>
<indexterm><primary>Lerp</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Lerp</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Lerp (<link linkend="_struct_leap_1_1_vector">Vector</link> a, <link linkend="_struct_leap_1_1_vector">Vector</link> b, float t)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00367">367</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a6c834842a05008442e86353a7209d17b"/>    <section>
    <title>operator !=()</title>
<indexterm><primary>operator !=</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>operator !=</secondary></indexterm>
<para><computeroutput>static bool Leap.Vector.operator != (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, <link linkend="_struct_leap_1_1_vector">Vector</link> v2)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00067">67</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a9189471d23ea61609806cbee7b1808bf"/>    <section>
    <title>operator *()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator *</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>operator *</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.operator * (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, float scalar)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00047">47</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a7a1839d6ea30d92eb3a7591b73c41a63"/>    <section>
    <title>operator *()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator *</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>operator *</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.operator * (float scalar, <link linkend="_struct_leap_1_1_vector">Vector</link> v1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00051">51</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1ac35b7560d4ac5acb9217120aa6281f41"/>    <section>
    <title>operator -()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator -</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>operator -</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.operator - (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, <link linkend="_struct_leap_1_1_vector">Vector</link> v2)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00043">43</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1ab08ec541871ec6fefb7f66331fdb6f0d"/>    <section>
    <title>operator -()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator -</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>operator -</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.operator - (<link linkend="_struct_leap_1_1_vector">Vector</link> v1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00059">59</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1af056d6d462839c1e5d3d9fa7d0507f11"/>    <section>
    <title>operator+()</title>
<indexterm><primary>operator+</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>operator+</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.operator+ (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, <link linkend="_struct_leap_1_1_vector">Vector</link> v2)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00039">39</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a8a707fa512d65682a773f87308c6d0e9"/>    <section>
    <title>operator/()</title>
<indexterm><primary>operator/</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>operator/</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.operator/ (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, float scalar)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00055">55</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1ae3811a09e999d99576d40d361d5871fd"/>    <section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>static bool Leap.Vector.operator== (<link linkend="_struct_leap_1_1_vector">Vector</link> v1, <link linkend="_struct_leap_1_1_vector">Vector</link> v2)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00063">63</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1ac5cd8263402ee3da54d342c65bde2511"/>    <section>
    <title>ToFloatArray()</title>
<indexterm><primary>ToFloatArray</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>ToFloatArray</secondary></indexterm>
<para><computeroutput>float [] Leap.Vector.ToFloatArray ( )</computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00071">71</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a0da414710f7b4d8bab10ed4685750599"/>    <section>
    <title>ToString()</title>
<indexterm><primary>ToString</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>ToString</secondary></indexterm>
<para><computeroutput>override string Leap.Vector.ToString ( )</computeroutput></para><para>

<para>Returns a string containing this vector in a human readable format: (x, y, z). </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00166">166</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_leap_1_1_vector_1ad8dd1ac8e87611c590c9dcc58f8fdf8c"/>    <section>
    <title>Backward</title>
<indexterm><primary>Backward</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Backward</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Backward = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 0, 1)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The unit vector pointing backward along the positive z-axis: (0, 0, 1) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00344">344</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a5f080cc88e908cd5d4c3e593767cdb17"/>    <section>
    <title>Down</title>
<indexterm><primary>Down</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Down</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Down = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, -1, 0)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The unit vector pointing down along the negative y-axis: (0, -1, 0) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00364">364</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a2ec88fe91f8086e18e78ee2dcc078525"/>    <section>
    <title>Forward</title>
<indexterm><primary>Forward</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Forward</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Forward = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 0, -1)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The unit vector pointing forward along the negative z-axis: (0, 0, -1) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00339">339</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a62b9bbd54a4b89f695a106f42fcff881"/>    <section>
    <title>Left</title>
<indexterm><primary>Left</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Left</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Left = new <link linkend="_struct_leap_1_1_vector">Vector</link>(-1, 0, 0)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The unit vector pointing left along the negative x-axis: (-1, 0, 0) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00349">349</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d"/>    <section>
    <title>Ones</title>
<indexterm><primary>Ones</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Ones</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Ones = new <link linkend="_struct_leap_1_1_vector">Vector</link>(1, 1, 1)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The ones vector: (1, 1, 1) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00319">319</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1aa2cefa3d6f93e552fcd95621e82da158"/>    <section>
    <title>Right</title>
<indexterm><primary>Right</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Right</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Right = new <link linkend="_struct_leap_1_1_vector">Vector</link>(1, 0, 0)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The unit vector pointing right along the positive x-axis: (1, 0, 0) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00354">354</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1ad90a5266422b507db81c857829b9a915"/>    <section>
    <title>Up</title>
<indexterm><primary>Up</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Up</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Up = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 1, 0)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The unit vector pointing up along the positive y-axis: (0, 1, 0) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00359">359</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828"/>    <section>
    <title>x</title>
<indexterm><primary>x</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>x</secondary></indexterm>
<para><computeroutput>float Leap.Vector.x</computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00219">219</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1ad62a202318bf591b431928859449b19c"/>    <section>
    <title>XAxis</title>
<indexterm><primary>XAxis</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>XAxis</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.XAxis = new <link linkend="_struct_leap_1_1_vector">Vector</link>(1, 0, 0)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The x-axis unit vector: (1, 0, 0) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00324">324</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d"/>    <section>
    <title>y</title>
<indexterm><primary>y</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>y</secondary></indexterm>
<para><computeroutput>float Leap.Vector.y</computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00220">220</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1abf07de0f419b3de5776e046d35c0843e"/>    <section>
    <title>YAxis</title>
<indexterm><primary>YAxis</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>YAxis</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.YAxis = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 1, 0)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The y-axis unit vector: (0, 1, 0) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00329">329</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658"/>    <section>
    <title>z</title>
<indexterm><primary>z</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>z</secondary></indexterm>
<para><computeroutput>float Leap.Vector.z</computeroutput></para><para>
Definition at line <link linkend="__vector_8cs_source_1l00221">221</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a2b2f1a3a9334e812e832e3b1b6cd4384"/>    <section>
    <title>ZAxis</title>
<indexterm><primary>ZAxis</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>ZAxis</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.ZAxis = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 0, 1)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The z-axis unit vector: (0, 0, 1) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00334">334</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b"/>    <section>
    <title>Zero</title>
<indexterm><primary>Zero</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Zero</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Zero = new <link linkend="_struct_leap_1_1_vector">Vector</link>(0, 0, 0)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The zero vector: (0, 0, 0) </para>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00314">314</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_struct_leap_1_1_vector_1afd51a6a7664efda2e5dde7a5e6a5313a"/>    <section>
    <title>Magnitude</title>
<indexterm><primary>Magnitude</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Magnitude</secondary></indexterm>
<para><computeroutput>float Leap.Vector.Magnitude<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>The magnitude, or length, of this vector. </para>
</para>

<para>The magnitude is the L2 norm, or Euclidean distance between the origin and the point represented by the (x, y, z) components of this <link linkend="_struct_leap_1_1_vector">Vector</link> object. <formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00230">230</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143"/>    <section>
    <title>MagnitudeSquared</title>
<indexterm><primary>MagnitudeSquared</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>MagnitudeSquared</secondary></indexterm>
<para><computeroutput>float Leap.Vector.MagnitudeSquared<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>The square of the magnitude, or length, of this vector. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00238">238</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1a14c14f9559420ad1f1a9e1b8884859c4"/>    <section>
    <title>Normalized</title>
<indexterm><primary>Normalized</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Normalized</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.Vector.Normalized<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>A normalized copy of this vector. </para>
</para>

<para>A normalized vector has the same direction as the original vector, but with a length of one.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00300">300</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1acc5105f55edfdc7a3d5cc6cd6cb8dc8f"/>    <section>
    <title>Pitch</title>
<indexterm><primary>Pitch</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Pitch</secondary></indexterm>
<para><computeroutput>float Leap.Vector.Pitch<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>The pitch angle in radians. </para>
</para>

<para>Pitch is the angle between the negative z-axis and the projection of the vector onto the y-z plane. In other words, pitch represents rotation around the x-axis. If the vector points upward, the returned angle is between 0 and pi radians (180 degrees); if it points downward, the angle is between 0 and -pi radians.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00253">253</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1afa775e6c104537383493e027f6a462f7"/>    <section>
    <title>Roll</title>
<indexterm><primary>Roll</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Roll</secondary></indexterm>
<para><computeroutput>float Leap.Vector.Roll<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>The roll angle in radians. </para>
</para>

<para>Roll is the angle between the y-axis and the projection of the vector onto the x-y plane. In other words, roll represents rotation around the z-axis. If the vector points to the left of the y-axis, then the returned angle is between 0 and pi radians (180 degrees); if it points to the right, the angle is between 0 and -pi radians.</para>

<para>Use this function to get roll angle of the plane to which this vector is a normal. For example, if this vector represents the normal to the palm, then this function returns the tilt or roll of the palm plane compared to the horizontal (x-z) plane.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00273">273</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1af92a9eb06277dd8eebbf3e1cf61360ca"/>    <section>
    <title>this[uint index]</title>
<indexterm><primary>this[uint index]</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>this[uint index]</secondary></indexterm>
<para><computeroutput>float Leap.Vector.this[uint index]<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Index vector components numerically. Index 0 is x, index 1 is y, and index 2 is z. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00198">198</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_vector_1ac6f5feaf332862e1ebc0d5b219e55eaa"/>    <section>
    <title>Yaw</title>
<indexterm><primary>Yaw</primary><secondary>Leap.Vector</secondary></indexterm>
<indexterm><primary>Leap.Vector</primary><secondary>Yaw</secondary></indexterm>
<para><computeroutput>float Leap.Vector.Yaw<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>The yaw angle in radians. </para>
</para>

<para>Yaw is the angle between the negative z-axis and the projection of the vector onto the x-z plane. In other words, yaw represents rotation around the y-axis. If the vector points to the right of the negative z-axis, then the returned angle is between 0 and pi radians (180 degrees); if it points to the left, the angle is between 0 and -pi radians.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__vector_8cs_source_1l00288">288</link> of file <link linkend="__vector_8cs_source">Vector.cs</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/<link linkend="__vector_8cs">Vector.cs</link></section>
</section>
