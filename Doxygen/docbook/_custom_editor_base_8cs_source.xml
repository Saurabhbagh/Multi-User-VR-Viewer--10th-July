<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__custom_editor_base_8cs_source">
<title>CustomEditorBase.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/CustomEditorBase.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00012 <emphasis role="keyword">using</emphasis>&#32;System;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00015 
00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00017 
<anchor xml:id="__custom_editor_base_8cs_source_1l00018"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base">00018</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base">CustomEditorBase</link>&lt;T&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base">CustomEditorBase</link>&#32;where&#32;T&#32;:&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>&#32;{
<anchor xml:id="__custom_editor_base_8cs_source_1l00019"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;T&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>;
<anchor xml:id="__custom_editor_base_8cs_source_1l00020"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;T[]&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>;
00021 
<anchor xml:id="__custom_editor_base_8cs_source_1l00022"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a5c1183f1dd014fc6575cffdf1c03481b">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a5c1183f1dd014fc6575cffdf1c03481b">OnEnable</link>()&#32;{
00023 &#32;&#32;&#32;&#32;&#32;&#32;base.OnEnable();
00024 
00025 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>&#32;=&#32;base.target&#32;as&#32;T;
00026 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>&#32;=&#32;base.targets.Query().
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Where(t&#32;=&gt;&#32;t&#32;!=&#32;<emphasis role="keyword">null</emphasis>).
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OfType&lt;T&gt;().
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ToArray();
00030 &#32;&#32;&#32;&#32;}
00031 &#32;&#32;}
00032 
00033 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base">CustomEditorBase</link>&#32;:&#32;Editor&#32;{
<anchor xml:id="__custom_editor_base_8cs_source_1l00034"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a21f5584239f225187cba8a64f253e282">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Dictionary&lt;string,&#32;Action&lt;SerializedProperty&gt;&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a21f5584239f225187cba8a64f253e282">_specifiedDrawers</link>;
<anchor xml:id="__custom_editor_base_8cs_source_1l00035"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a78950630f8436e49843b8731e03d61ff">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Dictionary&lt;string,&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a78950630f8436e49843b8731e03d61ff">_specifiedDecorators</link>;
<anchor xml:id="__custom_editor_base_8cs_source_1l00036"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a83e87987a8f7460569ef6e19681ea884">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Dictionary&lt;string,&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a83e87987a8f7460569ef6e19681ea884">_specifiedPostDecorators</link>;
<anchor xml:id="__custom_editor_base_8cs_source_1l00037"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab42eb97ce1b14432882b218251fb33b7">00037</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Dictionary&lt;string,&#32;List&lt;Func&lt;bool&gt;&gt;&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab42eb97ce1b14432882b218251fb33b7">_conditionalProperties</link>;
<anchor xml:id="__custom_editor_base_8cs_source_1l00038"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a13a5428078b8cf9889555039b11f82c7">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;List&lt;string&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a13a5428078b8cf9889555039b11f82c7">_deferredProperties</link>;
<anchor xml:id="__custom_editor_base_8cs_source_1l00039"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ac3059aa50f9038efca0963e7d25fc4fc">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ac3059aa50f9038efca0963e7d25fc4fc">_showScriptField</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00040 
00041 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_canCallSpecifyFunctions&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00042 
<anchor xml:id="__custom_editor_base_8cs_source_1l00043"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1abf4b2a8736d8f769813d11b673024f26">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;List&lt;SerializedProperty&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1abf4b2a8736d8f769813d11b673024f26">_modifiedProperties</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;SerializedProperty&gt;();
00044 
<anchor xml:id="__custom_editor_base_8cs_source_1l00045"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a08ac3b5610a14389384b3db0f8612b42">00045</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a08ac3b5610a14389384b3db0f8612b42">dontShowScriptField</link>()&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ac3059aa50f9038efca0963e7d25fc4fc">_showScriptField</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00047 &#32;&#32;&#32;&#32;}
00048 
<anchor xml:id="__custom_editor_base_8cs_source_1l00054"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1aab8bbda3edcc92a5c3d5a5360988c265">00054</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1aab8bbda3edcc92a5c3d5a5360988c265">specifyCustomDrawer</link>(<emphasis role="keywordtype">string</emphasis>&#32;propertyName,&#32;Action&lt;SerializedProperty&gt;&#32;propertyDrawer)&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;throwIfNotInOnEnable(<emphasis role="stringliteral">&quot;specifyCustomDrawer&quot;</emphasis>);
00056 
00057 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">validateProperty</link>(propertyName))&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00059 &#32;&#32;&#32;&#32;&#32;&#32;}
00060 
00061 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a21f5584239f225187cba8a64f253e282">_specifiedDrawers</link>[propertyName]&#32;=&#32;propertyDrawer;
00062 &#32;&#32;&#32;&#32;}
00063 
<anchor xml:id="__custom_editor_base_8cs_source_1l00067"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ac4af66143c23aa0601e20d58bb3f532e">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ac4af66143c23aa0601e20d58bb3f532e">specifyCustomDecorator</link>(<emphasis role="keywordtype">string</emphasis>&#32;propertyName,&#32;Action&lt;SerializedProperty&gt;&#32;decoratorDrawer)&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;throwIfNotInOnEnable(<emphasis role="stringliteral">&quot;specifyCustomDecorator&quot;</emphasis>);
00069 
00070 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">validateProperty</link>(propertyName))&#32;{
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00072 &#32;&#32;&#32;&#32;&#32;&#32;}
00073 
00074 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;&#32;list;
00075 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a78950630f8436e49843b8731e03d61ff">_specifiedDecorators</link>.TryGetValue(propertyName,&#32;out&#32;list))&#32;{
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;();
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a78950630f8436e49843b8731e03d61ff">_specifiedDecorators</link>[propertyName]&#32;=&#32;list;
00078 &#32;&#32;&#32;&#32;&#32;&#32;}
00079 
00080 &#32;&#32;&#32;&#32;&#32;&#32;list.Add(decoratorDrawer);
00081 &#32;&#32;&#32;&#32;}
00082 
<anchor xml:id="__custom_editor_base_8cs_source_1l00088"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a9b40a6fa85eec234563632935f08e7e1">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a9b40a6fa85eec234563632935f08e7e1">specifyCustomPostDecorator</link>(<emphasis role="keywordtype">string</emphasis>&#32;propertyName,&#32;Action&lt;SerializedProperty&gt;&#32;decoratorDrawer)&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;throwIfNotInOnEnable(<emphasis role="stringliteral">&quot;specifyCustomPostDecorator&quot;</emphasis>);
00090 
00091 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">validateProperty</link>(propertyName))&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00093 &#32;&#32;&#32;&#32;&#32;&#32;}
00094 
00095 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;&#32;list;
00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a83e87987a8f7460569ef6e19681ea884">_specifiedPostDecorators</link>.TryGetValue(propertyName,&#32;out&#32;list))&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;();
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a83e87987a8f7460569ef6e19681ea884">_specifiedPostDecorators</link>[propertyName]&#32;=&#32;list;
00099 &#32;&#32;&#32;&#32;&#32;&#32;}
00100 
00101 &#32;&#32;&#32;&#32;&#32;&#32;list.Add(decoratorDrawer);
00102 &#32;&#32;&#32;&#32;}
00103 
<anchor xml:id="__custom_editor_base_8cs_source_1l00110"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">00110</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(<emphasis role="keywordtype">string</emphasis>&#32;conditionalName,&#32;params&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;dependantProperties)&#32;{
00111 &#32;&#32;&#32;&#32;&#32;&#32;throwIfNotInOnEnable(<emphasis role="stringliteral">&quot;specifyConditionalDrawing&quot;</emphasis>);
00112 
00113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">validateProperty</link>(conditionalName))&#32;{
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00115 &#32;&#32;&#32;&#32;&#32;&#32;}
00116 
00117 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;conditionalProp&#32;=&#32;serializedObject.FindProperty(conditionalName);
00118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(()&#32;=&gt;&#32;{
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(conditionalProp.hasMultipleDifferentValues)&#32;{
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;conditionalProp.boolValue;
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00124 &#32;&#32;&#32;&#32;&#32;&#32;},&#32;dependantProperties);
00125 &#32;&#32;&#32;&#32;}
00126 
<anchor xml:id="__custom_editor_base_8cs_source_1l00127"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1af83f5e330901a815e05aa3a825128ab9">00127</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1af83f5e330901a815e05aa3a825128ab9">specifyConditionalDrawing</link>(<emphasis role="keywordtype">string</emphasis>&#32;enumName,&#32;<emphasis role="keywordtype">int</emphasis>&#32;enumValue,&#32;params&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;dependantProperties)&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;throwIfNotInOnEnable(<emphasis role="stringliteral">&quot;specifyConditionalDrawing&quot;</emphasis>);
00129 
00130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">validateProperty</link>(enumName))&#32;{
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00132 &#32;&#32;&#32;&#32;&#32;&#32;}
00133 
00134 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;enumProp&#32;=&#32;serializedObject.FindProperty(enumName);
00135 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(()&#32;=&gt;&#32;{
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumProp.hasMultipleDifferentValues)&#32;{
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;enumProp.intValue&#32;==&#32;enumValue;
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00141 &#32;&#32;&#32;&#32;&#32;&#32;},&#32;dependantProperties);
00142 &#32;&#32;&#32;&#32;}
00143 
<anchor xml:id="__custom_editor_base_8cs_source_1l00144"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a4d6cf21850698537d7bf81aa27acc6c9">00144</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a4d6cf21850698537d7bf81aa27acc6c9">hideField</link>(<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00145 &#32;&#32;&#32;&#32;&#32;&#32;throwIfNotInOnEnable(<emphasis role="stringliteral">&quot;hideField&quot;</emphasis>);
00146 
00147 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(()&#32;=&gt;&#32;<emphasis role="keyword">false</emphasis>,&#32;propertyName);
00148 &#32;&#32;&#32;&#32;}
00149 
<anchor xml:id="__custom_editor_base_8cs_source_1l00150"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a397cd9e96452b55644ff0b4dc4c4db9e">00150</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a397cd9e96452b55644ff0b4dc4c4db9e">specifyConditionalDrawing</link>(Func&lt;bool&gt;&#32;conditional,&#32;params&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;dependantProperties)&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;throwIfNotInOnEnable(<emphasis role="stringliteral">&quot;specifyConditionalDrawing&quot;</emphasis>);
00152 
00153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;dependantProperties.Length;&#32;i++)&#32;{
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;dependant&#32;=&#32;dependantProperties[i];
00155 
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">validateProperty</link>(dependant))&#32;{
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00159 
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;Func&lt;bool&gt;&gt;&#32;list;
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab42eb97ce1b14432882b218251fb33b7">_conditionalProperties</link>.TryGetValue(dependant,&#32;out&#32;list))&#32;{
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Func&lt;bool&gt;&gt;();
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab42eb97ce1b14432882b218251fb33b7">_conditionalProperties</link>[dependant]&#32;=&#32;list;
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(conditional);
00166 &#32;&#32;&#32;&#32;&#32;&#32;}
00167 &#32;&#32;&#32;&#32;}
00168 
<anchor xml:id="__custom_editor_base_8cs_source_1l00174"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1f7e4b6641ca944bac1efc1679a40afd">00174</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1f7e4b6641ca944bac1efc1679a40afd">deferProperty</link>(<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00175 &#32;&#32;&#32;&#32;&#32;&#32;throwIfNotInOnEnable(<emphasis role="stringliteral">&quot;deferProperty&quot;</emphasis>);
00176 
00177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">validateProperty</link>(propertyName))&#32;{
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00179 &#32;&#32;&#32;&#32;&#32;&#32;}
00180 
00181 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a13a5428078b8cf9889555039b11f82c7">_deferredProperties</link>.Insert(0,&#32;propertyName);
00182 &#32;&#32;&#32;&#32;}
00183 
<anchor xml:id="__custom_editor_base_8cs_source_1l00184"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a7f6ef123a9be58a8891f68fdc4657d64">00184</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a7f6ef123a9be58a8891f68fdc4657d64">drawScriptField</link>(<emphasis role="keywordtype">bool</emphasis>&#32;disable&#32;=&#32;<emphasis role="keyword">true</emphasis>)&#32;{
00185 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;scriptProp&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;m_Script&quot;</emphasis>);
00186 &#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(disable);
00187 &#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(scriptProp);
00188 &#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
00189 &#32;&#32;&#32;&#32;}
00190 
<anchor xml:id="__custom_editor_base_8cs_source_1l00191"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a2268bc01655342bd3da5ae015bfa2f93">00191</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a2268bc01655342bd3da5ae015bfa2f93">OnEnable</link>()&#32;{
00192 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(serializedObject&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{&#32;}
00194 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(NullReferenceException)&#32;{
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DestroyImmediate(<emphasis role="keyword">this</emphasis>);
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception(<emphasis role="stringliteral">&quot;Cleaning&#32;up&#32;an&#32;editor&#32;of&#32;type&#32;&quot;</emphasis>&#32;+&#32;GetType()&#32;+&#32;<emphasis role="stringliteral">&quot;.&#32;&#32;Make&#32;sure&#32;to&#32;always&#32;destroy&#32;your&#32;editors&#32;when&#32;you&#32;are&#32;done&#32;with&#32;them!&quot;</emphasis>);
00197 &#32;&#32;&#32;&#32;&#32;&#32;}
00198 
00199 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a21f5584239f225187cba8a64f253e282">_specifiedDrawers</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;Action&lt;SerializedProperty&gt;&gt;();
00200 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a78950630f8436e49843b8731e03d61ff">_specifiedDecorators</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;&gt;();
00201 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a83e87987a8f7460569ef6e19681ea884">_specifiedPostDecorators</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;&gt;();
00202 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab42eb97ce1b14432882b218251fb33b7">_conditionalProperties</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;List&lt;Func&lt;bool&gt;&gt;&gt;();
00203 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a13a5428078b8cf9889555039b11f82c7">_deferredProperties</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
00204 &#32;&#32;&#32;&#32;&#32;&#32;_canCallSpecifyFunctions&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00205 &#32;&#32;&#32;&#32;}
00206 
<anchor xml:id="__custom_editor_base_8cs_source_1l00207"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">00207</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1b822af17dba348a6230822cd0731e25">validateProperty</link>(<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00208 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(serializedObject.FindProperty(propertyName)&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(<emphasis role="stringliteral">&quot;Property&#32;&quot;</emphasis>&#32;+&#32;propertyName&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;does&#32;not&#32;exist,&#32;was&#32;it&#32;removed&#32;or&#32;renamed?&quot;</emphasis>);
00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00211 &#32;&#32;&#32;&#32;&#32;&#32;}
00212 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00213 &#32;&#32;&#32;&#32;}
00214 
00215 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;</emphasis>
00216 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;This&#32;method&#32;draws&#32;all&#32;visible&#32;properties,&#32;mirroring&#32;the&#32;default&#32;behavior&#32;of&#32;OnInspectorGUI.&#32;</emphasis>
00217 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Individual&#32;properties&#32;can&#32;be&#32;specified&#32;to&#32;have&#32;custom&#32;drawers.</emphasis>
00218 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__custom_editor_base_8cs_source_1l00219"/><link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1aede403b8b7e1c92cda1f1ad843c804cb">00219</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1aede403b8b7e1c92cda1f1ad843c804cb">OnInspectorGUI</link>()&#32;{
00220 &#32;&#32;&#32;&#32;&#32;&#32;_canCallSpecifyFunctions&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00221 
00222 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1abf4b2a8736d8f769813d11b673024f26">_modifiedProperties</link>.Clear();
00223 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;iterator&#32;=&#32;serializedObject.GetIterator();
00224 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isFirst&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00225 
00226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(iterator.NextVisible(isFirst))&#32;{
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isFirst&#32;&amp;&amp;&#32;!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ac3059aa50f9038efca0963e7d25fc4fc">_showScriptField</link>)&#32;{
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isFirst&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00231 
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a13a5428078b8cf9889555039b11f82c7">_deferredProperties</link>.Contains(iterator.name))&#32;{
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00235 
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;EditorGUI.DisabledGroupScope(isFirst))&#32;{
00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drawProperty(iterator);
00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00239 
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isFirst&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00241 &#32;&#32;&#32;&#32;&#32;&#32;}
00242 
00243 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;deferredProperty&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a13a5428078b8cf9889555039b11f82c7">_deferredProperties</link>)&#32;{
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drawProperty(serializedObject.FindProperty(deferredProperty));
00245 &#32;&#32;&#32;&#32;&#32;&#32;}
00246 
00247 &#32;&#32;&#32;&#32;&#32;&#32;serializedObject.ApplyModifiedProperties();
00248 &#32;&#32;&#32;&#32;}
00249 
00250 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawProperty(SerializedProperty&#32;property)&#32;{
00251 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;Func&lt;bool&gt;&gt;&#32;conditionalList;
00252 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab42eb97ce1b14432882b218251fb33b7">_conditionalProperties</link>.TryGetValue(property.name,&#32;out&#32;conditionalList))&#32;{
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;allTrue&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;conditionalList.Count;&#32;i++)&#32;{
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allTrue&#32;&amp;=&#32;conditionalList[i]();
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!allTrue)&#32;{
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00260 &#32;&#32;&#32;&#32;&#32;&#32;}
00261 
00262 &#32;&#32;&#32;&#32;&#32;&#32;Action&lt;SerializedProperty&gt;&#32;customDrawer;
00263 
00264 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;&#32;decoratorList;
00265 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a78950630f8436e49843b8731e03d61ff">_specifiedDecorators</link>.TryGetValue(property.name,&#32;out&#32;decoratorList))&#32;{
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;decoratorList.Count;&#32;i++)&#32;{
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;decoratorList[i](property);
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00269 &#32;&#32;&#32;&#32;&#32;&#32;}
00270 
00271 &#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
00272 
00273 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a21f5584239f225187cba8a64f253e282">_specifiedDrawers</link>.TryGetValue(property.name,&#32;out&#32;customDrawer))&#32;{
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;customDrawer(property);
00275 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(property,&#32;<emphasis role="keyword">true</emphasis>);
00277 &#32;&#32;&#32;&#32;&#32;&#32;}
00278 
00279 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())&#32;{
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1abf4b2a8736d8f769813d11b673024f26">_modifiedProperties</link>.Add(property.Copy());
00281 &#32;&#32;&#32;&#32;&#32;&#32;}
00282 
00283 
00284 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;Action&lt;SerializedProperty&gt;&gt;&#32;postDecoratorList;
00285 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a83e87987a8f7460569ef6e19681ea884">_specifiedPostDecorators</link>.TryGetValue(property.name,&#32;out&#32;postDecoratorList))&#32;{
00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;postDecoratorList.Count;&#32;i++)&#32;{
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;postDecoratorList[i](property);
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00289 &#32;&#32;&#32;&#32;&#32;&#32;}
00290 &#32;&#32;&#32;&#32;}
00291 
00292 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;throwIfNotInOnEnable(<emphasis role="keywordtype">string</emphasis>&#32;methodName)&#32;{
00293 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_canCallSpecifyFunctions)&#32;{
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;InvalidOperationException(<emphasis role="stringliteral">&quot;Cannot&#32;call&#32;&quot;</emphasis>&#32;+&#32;methodName&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;from&#32;within&#32;any&#32;other&#32;function&#32;but&#32;OnEnable.&#32;&#32;Make&#32;sure&#32;you&#32;also&#32;call&#32;base.OnEnable&#32;as&#32;well!&quot;</emphasis>);
00295 &#32;&#32;&#32;&#32;&#32;&#32;}
00296 &#32;&#32;&#32;&#32;}
00297 &#32;&#32;}
00298 }
</programlisting></section>
