<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__material_interpolators_8cs_source">
<title>MaterialInterpolators.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/MaterialInterpolators.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 
00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_animation">Leap.Unity.Animation</link>&#32;{
00013 &#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="__extensions_8cs_1a9c5bf76bfa43f056e154ec8661c9f586">Internal</link>;
00014 
<anchor xml:id="__material_interpolators_8cs_source_1l00015"/><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">00015</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;partial&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>&#32;{
<anchor xml:id="__material_interpolators_8cs_source_1l00016"/><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ace36e93470c4b1168289ae1eef2e4736">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;MaterialSelector&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ace36e93470c4b1168289ae1eef2e4736">Target</link>(Material&#32;material)&#32;{
00017 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialSelector(material,&#32;<emphasis role="keyword">this</emphasis>);
00018 &#32;&#32;&#32;&#32;}
00019 &#32;&#32;}
00020 }
00021 
<anchor xml:id="__material_interpolators_8cs_source_1l00022"/><link linkend="_namespace_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal">00022</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_animation_1_1_internal">Leap.Unity.Animation.Internal</link>&#32;{
00023 
<anchor xml:id="__material_interpolators_8cs_source_1l00024"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector">00024</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector">MaterialSelector</link>&#32;{
00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;_target;
00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Tween&#32;_tween;
00027 
<anchor xml:id="__material_interpolators_8cs_source_1l00028"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a6ab9c747dd93cf00ef40f4ee3ab09af7">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a6ab9c747dd93cf00ef40f4ee3ab09af7">MaterialSelector</link>(Material&#32;target,&#32;Tween&#32;tween)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;target;
00030 &#32;&#32;&#32;&#32;&#32;&#32;_tween&#32;=&#32;tween;
00031 &#32;&#32;&#32;&#32;}
00032 
00033 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;COLOR</emphasis>
<anchor xml:id="__material_interpolators_8cs_source_1l00034"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a4cee2e1cf1062ce91d3e8930fc5b838b">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a4cee2e1cf1062ce91d3e8930fc5b838b">Color</link>(Color&#32;a,&#32;Color&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialColorInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00036 &#32;&#32;&#32;&#32;}
00037 
<anchor xml:id="__material_interpolators_8cs_source_1l00038"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1aa03406144f977bb8ffe95719a3112e96">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1aa03406144f977bb8ffe95719a3112e96">Color</link>(Color&#32;a,&#32;Color&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName&#32;=&#32;<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>)&#32;{
00039 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Color(a,&#32;b,&#32;Shader.PropertyToID(propertyName));
00040 &#32;&#32;&#32;&#32;}
00041 
<anchor xml:id="__material_interpolators_8cs_source_1l00042"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a08fe1e65e6ad8268d4eed1f16215e534">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a08fe1e65e6ad8268d4eed1f16215e534">Color</link>(Gradient&#32;gradient,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialGradientInterpolator&gt;.Spawn().Init(gradient,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00044 &#32;&#32;&#32;&#32;}
00045 
<anchor xml:id="__material_interpolators_8cs_source_1l00046"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ad8c82d1df24cf2a0b7c68579fa08a2be">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ad8c82d1df24cf2a0b7c68579fa08a2be">Color</link>(Gradient&#32;gradient,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName&#32;=&#32;<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>)&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Color(gradient,&#32;Shader.PropertyToID(propertyName));
00048 &#32;&#32;&#32;&#32;}
00049 
<anchor xml:id="__material_interpolators_8cs_source_1l00050"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ac4100253b4f48e77cdfbde5c3c8faf19">00050</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ac4100253b4f48e77cdfbde5c3c8faf19">ToColor</link>(Color&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialColorInterpolator&gt;.Spawn().Init(_target.GetColor(propertyId),&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00052 &#32;&#32;&#32;&#32;}
00053 
<anchor xml:id="__material_interpolators_8cs_source_1l00054"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a16b9c4a559abb8d519e6e770ac0e8281">00054</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a16b9c4a559abb8d519e6e770ac0e8281">ToColor</link>(Color&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName&#32;=&#32;<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>)&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ToColor(b,&#32;Shader.PropertyToID(propertyName));
00056 &#32;&#32;&#32;&#32;}
00057 
<anchor xml:id="__material_interpolators_8cs_source_1l00058"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ad975e7b02cde8b00236b097ea8cb1711">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ad975e7b02cde8b00236b097ea8cb1711">RGB</link>(Color&#32;a,&#32;Color&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialRGBInterpolator&gt;.Spawn().Init((Vector4)a,&#32;(Vector4)b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00060 &#32;&#32;&#32;&#32;}
00061 
<anchor xml:id="__material_interpolators_8cs_source_1l00062"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ac88853057ca61f0d413037071d849332">00062</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ac88853057ca61f0d413037071d849332">RGB</link>(Color&#32;a,&#32;Color&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName&#32;=&#32;<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>)&#32;{
00063 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;RGB(a,&#32;b,&#32;Shader.PropertyToID(propertyName));
00064 &#32;&#32;&#32;&#32;}
00065 
<anchor xml:id="__material_interpolators_8cs_source_1l00066"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1adf6af2a2dfb3bd45d376fd9a80634f09">00066</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1adf6af2a2dfb3bd45d376fd9a80634f09">ToRGB</link>(Color&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialRGBInterpolator&gt;.Spawn().Init((Vector4)_target.GetColor(propertyId),&#32;(Vector4)b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00068 &#32;&#32;&#32;&#32;}
00069 
<anchor xml:id="__material_interpolators_8cs_source_1l00070"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a5586193ed3d598a9405ed4fc732c9127">00070</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a5586193ed3d598a9405ed4fc732c9127">ToRGB</link>(Color&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName&#32;=&#32;<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>)&#32;{
00071 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ToRGB(b,&#32;Shader.PropertyToID(propertyName));
00072 &#32;&#32;&#32;&#32;}
00073 
<anchor xml:id="__material_interpolators_8cs_source_1l00074"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a68a6872e80bbbf432d72780f7063a373">00074</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a68a6872e80bbbf432d72780f7063a373">Alpha</link>(<emphasis role="keywordtype">float</emphasis>&#32;a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialAlphaInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00076 &#32;&#32;&#32;&#32;}
00077 
<anchor xml:id="__material_interpolators_8cs_source_1l00078"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ad8e72aac09dd6e8db5c318064af5dc19">00078</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ad8e72aac09dd6e8db5c318064af5dc19">Alpha</link>(<emphasis role="keywordtype">float</emphasis>&#32;a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName&#32;=&#32;<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>)&#32;{
00079 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Alpha(a,&#32;b,&#32;Shader.PropertyToID(propertyName));
00080 &#32;&#32;&#32;&#32;}
00081 
<anchor xml:id="__material_interpolators_8cs_source_1l00082"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a7194c15fb21d203c9fe3b1e2d7287e1e">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a7194c15fb21d203c9fe3b1e2d7287e1e">ToAlpha</link>(<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialAlphaInterpolator&gt;.Spawn().Init(_target.GetColor(propertyId).a,&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00084 &#32;&#32;&#32;&#32;}
00085 
<anchor xml:id="__material_interpolators_8cs_source_1l00086"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1acab80d7f8a9a00c7123438b30bf34ee1">00086</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1acab80d7f8a9a00c7123438b30bf34ee1">ToAlpha</link>(<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName&#32;=&#32;<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>)&#32;{
00087 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ToAlpha(b,&#32;Shader.PropertyToID(propertyName));
00088 &#32;&#32;&#32;&#32;}
00089 
00090 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>MaterialColorInterpolator&#32;:&#32;ColorInterpolatorBase&lt;MaterialPropertyKey&gt;&#32;{
00091 
00092 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material.SetColor(_target.propertyId,&#32;_a&#32;+&#32;_b&#32;*&#32;percent);
00094 &#32;&#32;&#32;&#32;&#32;&#32;}
00095 
00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;MaterialColorInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00099 &#32;&#32;&#32;&#32;&#32;&#32;}
00100 
00101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target.material&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00102 &#32;&#32;&#32;&#32;}
00103 
00104 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>MaterialGradientInterpolator&#32;:&#32;GradientInterpolatorBase&#32;{
00105 
00106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;MaterialPropertyKey&#32;_matPropKey;
00107 
00108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;MaterialGradientInterpolator&#32;Init(Gradient&#32;gradient,&#32;MaterialPropertyKey&#32;matPropKey)&#32;{
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this._matPropKey&#32;=&#32;matPropKey;
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Init(gradient);
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>;
00112 &#32;&#32;&#32;&#32;&#32;&#32;}
00113 
00114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_matPropKey.material.SetColor(_matPropKey.propertyId,&#32;_gradient.Evaluate(percent));
00116 &#32;&#32;&#32;&#32;&#32;&#32;}
00117 
00118 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_matPropKey.material&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00119 &#32;&#32;&#32;&#32;}
00120 
00121 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>MaterialRGBInterpolator&#32;:&#32;Vector3InterpolatorBase&lt;MaterialPropertyKey&gt;&#32;{
00122 
00123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;currAlpha&#32;=&#32;_target.material.GetColor(_target.propertyId).a;
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;color&#32;=&#32;(Vector4)(_a&#32;+&#32;_b&#32;*&#32;percent);
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;currAlpha;
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material.SetColor(_target.propertyId,&#32;color);
00128 &#32;&#32;&#32;&#32;&#32;&#32;}
00129 
00130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;MaterialRGBInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00133 &#32;&#32;&#32;&#32;&#32;&#32;}
00134 
00135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target.material&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00136 &#32;&#32;&#32;&#32;}
00137 
00138 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>MaterialAlphaInterpolator&#32;:&#32;FloatInterpolatorBase&lt;MaterialPropertyKey&gt;&#32;{
00139 
00140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;color&#32;=&#32;_target.material.GetColor(_target.propertyId);
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;Mathf.Lerp(_a,&#32;_b,&#32;percent);
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material.SetColor(_target.propertyId,&#32;color);
00144 &#32;&#32;&#32;&#32;&#32;&#32;}
00145 
00146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;MaterialAlphaInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00149 &#32;&#32;&#32;&#32;&#32;&#32;}
00150 
00151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target.material&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00152 &#32;&#32;&#32;&#32;}
00153 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00154 
00155 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;FLOAT</emphasis>
<anchor xml:id="__material_interpolators_8cs_source_1l00156"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a9f46fbdd7db362595941227d98251899">00156</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a9f46fbdd7db362595941227d98251899">Float</link>(<emphasis role="keywordtype">float</emphasis>&#32;a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialFloatInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00158 &#32;&#32;&#32;&#32;}
00159 
<anchor xml:id="__material_interpolators_8cs_source_1l00160"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a9a3c7a12dc2d4bab2d7a99207585ac25">00160</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a9a3c7a12dc2d4bab2d7a99207585ac25">Float</link>(<emphasis role="keywordtype">float</emphasis>&#32;a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Float(a,&#32;b,&#32;Shader.PropertyToID(propertyName));
00162 &#32;&#32;&#32;&#32;}
00163 
<anchor xml:id="__material_interpolators_8cs_source_1l00164"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a6340cd18d0ba3436df058905afc4e4fc">00164</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a6340cd18d0ba3436df058905afc4e4fc">ToFloat</link>(<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialFloatInterpolator&gt;.Spawn().Init(_target.GetFloat(propertyId),&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00166 &#32;&#32;&#32;&#32;}
00167 
<anchor xml:id="__material_interpolators_8cs_source_1l00168"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a077c969a61fb53be093f09c7a3d2328c">00168</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a077c969a61fb53be093f09c7a3d2328c">ToFloat</link>(<emphasis role="keywordtype">float</emphasis>&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ToFloat(b,&#32;Shader.PropertyToID(propertyName));
00170 &#32;&#32;&#32;&#32;}
00171 
00172 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>MaterialFloatInterpolator&#32;:&#32;FloatInterpolatorBase&lt;MaterialPropertyKey&gt;&#32;{
00173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material.SetFloat(_target.propertyId,&#32;_a&#32;+&#32;_b&#32;*&#32;percent);
00175 &#32;&#32;&#32;&#32;&#32;&#32;}
00176 
00177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;MaterialFloatInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00180 &#32;&#32;&#32;&#32;&#32;&#32;}
00181 
00182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target.material&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00183 &#32;&#32;&#32;&#32;}
00184 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00185 
00186 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;VECTOR</emphasis>
<anchor xml:id="__material_interpolators_8cs_source_1l00187"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a3137527ffefd37a729733b57c92a491f">00187</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a3137527ffefd37a729733b57c92a491f">Vector</link>(Vector4&#32;a,&#32;Vector4&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialVectorInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00189 &#32;&#32;&#32;&#32;}
00190 
<anchor xml:id="__material_interpolators_8cs_source_1l00191"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a8d28037d076844bbc13e5fb6cc6cb7fd">00191</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a8d28037d076844bbc13e5fb6cc6cb7fd">Vector</link>(Vector4&#32;a,&#32;Vector4&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00192 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>(a,&#32;b,&#32;Shader.PropertyToID(propertyName));
00193 &#32;&#32;&#32;&#32;}
00194 
<anchor xml:id="__material_interpolators_8cs_source_1l00195"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1af38136955e5979399caae649abbf929c">00195</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1af38136955e5979399caae649abbf929c">Vector</link>(Vector3&#32;a,&#32;Vector3&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00196 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialVectorInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00197 &#32;&#32;&#32;&#32;}
00198 
<anchor xml:id="__material_interpolators_8cs_source_1l00199"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a4e7cfa5a35ec519fa675ea1e302fa0cd">00199</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a4e7cfa5a35ec519fa675ea1e302fa0cd">Vector</link>(Vector3&#32;a,&#32;Vector3&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00200 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>(a,&#32;b,&#32;Shader.PropertyToID(propertyName));
00201 &#32;&#32;&#32;&#32;}
00202 
<anchor xml:id="__material_interpolators_8cs_source_1l00203"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a26e932c74758c0692bcf6a556c520fb7">00203</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a26e932c74758c0692bcf6a556c520fb7">ToVector</link>(Vector4&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00204 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialVectorInterpolator&gt;.Spawn().Init(_target.GetVector(propertyId),&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00205 &#32;&#32;&#32;&#32;}
00206 
<anchor xml:id="__material_interpolators_8cs_source_1l00207"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ae112a25e47a84c9b0afab7c79eed61e1">00207</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1ae112a25e47a84c9b0afab7c79eed61e1">ToVector</link>(Vector4&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00208 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ToVector(b,&#32;Shader.PropertyToID(propertyName));
00209 &#32;&#32;&#32;&#32;}
00210 
<anchor xml:id="__material_interpolators_8cs_source_1l00211"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1adea03a2a99f2b4f6f2f60690ea09ecf2">00211</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1adea03a2a99f2b4f6f2f60690ea09ecf2">ToVector</link>(Vector3&#32;b,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00212 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialVectorInterpolator&gt;.Spawn().Init(_target.GetVector(propertyId),&#32;b,&#32;<emphasis role="keyword">new</emphasis>&#32;MaterialPropertyKey(_target,&#32;propertyId)));
00213 
00214 &#32;&#32;&#32;&#32;}
<anchor xml:id="__material_interpolators_8cs_source_1l00215"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a308061c2c3ef352a3ed819d4e9f5de62">00215</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1a308061c2c3ef352a3ed819d4e9f5de62">ToVector</link>(Vector3&#32;b,&#32;<emphasis role="keywordtype">string</emphasis>&#32;propertyName)&#32;{
00216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ToVector(b,&#32;Shader.PropertyToID(propertyName));
00217 &#32;&#32;&#32;&#32;}
00218 
00219 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>MaterialVectorInterpolator&#32;:&#32;Vector4InterpolatorBase&lt;MaterialPropertyKey&gt;&#32;{
00220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material.SetVector(_target.propertyId,&#32;_a&#32;+&#32;_b&#32;*&#32;percent);
00222 &#32;&#32;&#32;&#32;&#32;&#32;}
00223 
00224 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.material&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;MaterialVectorInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00227 &#32;&#32;&#32;&#32;&#32;&#32;}
00228 
00229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target.material&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00230 &#32;&#32;&#32;&#32;}
00231 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00232 
00233 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;MATERIAL</emphasis>
<anchor xml:id="__material_interpolators_8cs_source_1l00234"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1acca452a6ebdd665db3e45f590437813b">00234</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector_1acca452a6ebdd665db3e45f590437813b">Material</link>(Material&#32;a,&#32;Material&#32;b)&#32;{
00235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;MaterialInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00236 &#32;&#32;&#32;&#32;}
00237 
00238 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>MaterialInterpolator&#32;:&#32;InterpolatorBase&lt;Material,&#32;Material&gt;&#32;{
00239 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;length&#32;{
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00243 &#32;&#32;&#32;&#32;&#32;&#32;}
00244 
00245 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.Lerp(_a,&#32;_b,&#32;percent);
00247 &#32;&#32;&#32;&#32;&#32;&#32;}
00248 
00249 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_a&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_b&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;MaterialInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00254 &#32;&#32;&#32;&#32;&#32;&#32;}
00255 
00256 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00257 &#32;&#32;&#32;&#32;}
00258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00259 
00260 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>MaterialPropertyKey&#32;{
00261 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Material&#32;material;
00262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId;
00263 
00264 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;MaterialPropertyKey(Material&#32;material,&#32;<emphasis role="keywordtype">int</emphasis>&#32;propertyId)&#32;{
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.material&#32;=&#32;material;
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.propertyId&#32;=&#32;propertyId;
00267 &#32;&#32;&#32;&#32;&#32;&#32;}
00268 &#32;&#32;&#32;&#32;}
00269 &#32;&#32;}
00270 }
</programlisting></section>
