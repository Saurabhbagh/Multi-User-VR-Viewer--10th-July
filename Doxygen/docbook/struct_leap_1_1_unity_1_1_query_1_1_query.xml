<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query">
<title>Leap.Unity.Query.Query&lt; T &gt; Struct Template Reference</title>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary></indexterm>
<para>

<para>A <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> object is a type of immutable ordered collection of elements that can be used to perform useful queries. These queries are very similar to LINQ style queries, providing useful methods such as Where, Select, Concat, etc.... </para>
 
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator">Enumerator</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">QuerySlice</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a045e15022385ac33bf7ea2448de59f93">Query</link> (T[] array, int count)</para>

<para>Constructs a new query given a source array and a count. The query assumes ownership of the array, so you should not use it or store it after the query is constructed. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a38ad1df9355f871cde35fe9ca7c72da0">Query</link> (ICollection&lt; T &gt; collection)</para>

<para>Constructs a new query of the given collection. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a023addd104eccd2f92b37e67eb84208f">Query</link> (<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt; T &gt; other)</para>

<para>Constructs a query that is an exact copy of another query. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt; K &gt; <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a88411752d9806dc0364de025ac9b53b9">OfType&lt; K &gt;</link> ()</para>

<para>Returns a new <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> representing only the items of the current <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> that are of a specific type. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt; K &gt; <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a907b194ea3d1901191343fa409ca6c42">Cast&lt; K &gt;</link> ()</para>

<para>Returns a new <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> representing the current query sequence where each element is cast to a new type. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a4c333e8a0bb14c3237fa65d2ad308c5a">Dispose</link> ()</para>

<para>Disposes of the resources that this query holds. The <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> cannot be used after this method is called. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a411e47e60b7ae4d9df1d64f280feb617">Deconstruct</link> (out T[] array, out int count)</para>

<para>Deconstructs this <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> into its base elements, the array and the count. The caller assumes ownership of the array and is responsible for managing its lifecycle. The <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> cannot be used after this method is called. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">QuerySlice</link> <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a945832fdab8203804442a9d043ea55cf">Deconstruct</link> ()</para>

<para>Deconstructs this <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> into a simple <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">QuerySlice</link> construct. This is simply a utility overload of the regular Deconstruct method. The user is still responsible for managing the memory lifecycle of the returned slice. The <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> cannot be used after this method is called. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator">Enumerator</link> <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a754dd1572406e8be39111c186daa1b74">GetEnumerator</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> object is a type of immutable ordered collection of elements that can be used to perform useful queries. These queries are very similar to LINQ style queries, providing useful methods such as Where, Select, Concat, etc.... </para>



<para>The <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> struct and its interfaces use a pooling strategy backed by ArrayPool to incur an amortized cost of zero GC allocations.</para>

<para>A <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> struct is immutable, and so cannot be modified once it has been created. You can use a query in few ways:<itemizedlist>
<listitem>
<para>The simplest way is to call an operator method such as Where or Select. These methods CONSUME the query to produce a new query. Trying to use the original query after it has been consumed will cause a runtime error.</para>
</listitem><listitem>
<para>The next way is to call a collapsing operator, which will consume the query and produce a non-query value or other side-effect. <link linkend="_namespace_leap_1_1_unity_1_1_examples">Examples</link> of collapsing operators are First, Last, or ElementAt.</para>
</listitem><listitem>
<para>The last way to use a query is to Deconstruct it, by calling a Deconstruct method to destroy the query and get access to its underlying data. You will be responsible for cleaning up or disposing the data you get. </para>
</listitem></itemizedlist>
</para>
<para>
Definition at line <link linkend="__query_8cs_source_1l00091">91</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a045e15022385ac33bf7ea2448de59f93"/>    <section>
    <title>Query()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Query</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>Query</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> (T [] array, int count)</computeroutput></para><para>

<para>Constructs a new query given a source array and a count. The query assumes ownership of the array, so you should not use it or store it after the query is constructed. </para>
</para>
<para>
Definition at line <link linkend="__query_8cs_source_1l00102">102</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a38ad1df9355f871cde35fe9ca7c72da0"/>    <section>
    <title>Query()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Query</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>Query</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> (ICollection&lt; T &gt; collection)</computeroutput></para><para>

<para>Constructs a new query of the given collection. </para>
</para>
<para>
Definition at line <link linkend="__query_8cs_source_1l00123">123</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a023addd104eccd2f92b37e67eb84208f"/>    <section>
    <title>Query()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Query</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>Query</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> (<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt; T &gt; other)</computeroutput></para><para>

<para>Constructs a query that is an exact copy of another query. </para>
</para>
<para>
Definition at line <link linkend="__query_8cs_source_1l00134">134</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a907b194ea3d1901191343fa409ca6c42"/>    <section>
    <title>Cast&lt; K &gt;()</title>
<indexterm><primary>Cast&lt; K &gt;</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>Cast&lt; K &gt;</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt;K&gt; <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.Cast&lt; K &gt; ( )</computeroutput></para><para>

<para>Returns a new <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> representing the current query sequence where each element is cast to a new type. </para>
</para>
<simplesect><title>Type Constraints</title>
<para><emphasis role="strong">K:class</emphasis></para>
</simplesect>
<para>
Definition at line <link linkend="__query_8cs_source_1l00178">178</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a411e47e60b7ae4d9df1d64f280feb617"/>    <section>
    <title>Deconstruct()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Deconstruct</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>Deconstruct</secondary></indexterm>
<para><computeroutput>void <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.Deconstruct (out T [] array, out int count)</computeroutput></para><para>

<para>Deconstructs this <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> into its base elements, the array and the count. The caller assumes ownership of the array and is responsible for managing its lifecycle. The <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> cannot be used after this method is called. </para>
</para>
<para>
Definition at line <link linkend="__query_8cs_source_1l00203">203</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a945832fdab8203804442a9d043ea55cf"/>    <section>
    <title>Deconstruct()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Deconstruct</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>Deconstruct</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">QuerySlice</link> <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.Deconstruct ( )</computeroutput></para><para>

<para>Deconstructs this <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> into a simple <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">QuerySlice</link> construct. This is simply a utility overload of the regular Deconstruct method. The user is still responsible for managing the memory lifecycle of the returned slice. The <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> cannot be used after this method is called. </para>
</para>
<para>
Definition at line <link linkend="__query_8cs_source_1l00220">220</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a4c333e8a0bb14c3237fa65d2ad308c5a"/>    <section>
    <title>Dispose()</title>
<indexterm><primary>Dispose</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>Dispose</secondary></indexterm>
<para><computeroutput>void <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.Dispose ( )</computeroutput></para><para>

<para>Disposes of the resources that this query holds. The <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> cannot be used after this method is called. </para>
</para>
<para>
Definition at line <link linkend="__query_8cs_source_1l00188">188</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a754dd1572406e8be39111c186daa1b74"/>    <section>
    <title>GetEnumerator()</title>
<indexterm><primary>GetEnumerator</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>GetEnumerator</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator">Enumerator</link> <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.GetEnumerator ( )</computeroutput></para><para>
Definition at line <link linkend="__query_8cs_source_1l00228">228</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_query_1_1_query_1a88411752d9806dc0364de025ac9b53b9"/>    <section>
    <title>OfType&lt; K &gt;()</title>
<indexterm><primary>OfType&lt; K &gt;</primary><secondary>Leap.Unity.Query.Query&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Query.Query&lt; T &gt;</primary><secondary>OfType&lt; K &gt;</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt;K&gt; <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query</link>&lt; T &gt;.OfType&lt; K &gt; ( )</computeroutput></para><para>

<para>Returns a new <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> representing only the items of the current <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> that are of a specific type. </para>
</para>

<para>For example (&quot;A&quot;, 1, null, 5.0f, 900, &quot;hello&quot;).<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a045e15022385ac33bf7ea2448de59f93">Query()</link>.OfType&lt;string&gt;() would result in (&quot;A&quot;, &quot;hello&quot;) </para>
<simplesect><title>Type Constraints</title>
<para><emphasis role="strong">K:T</emphasis></para>
</simplesect>
<para>
Definition at line <link linkend="__query_8cs_source_1l00158">158</link> of file <link linkend="__query_8cs_source">Query.cs</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Query/<link linkend="__query_8cs">Query.cs</link></section>
</section>
