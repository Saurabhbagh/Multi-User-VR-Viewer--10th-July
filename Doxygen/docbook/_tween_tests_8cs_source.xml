<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__tween_tests_8cs_source">
<title>TweenTests.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Editor/Tests/TweenTests.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="preprocessor">#if&#32;UNITY_5_6&#32;&amp;&amp;&#32;UNITY_EDITOR</emphasis>
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.TestTools;
00013 <emphasis role="keyword">using</emphasis>&#32;NUnit.Framework;
00014 <emphasis role="keyword">using</emphasis>&#32;System;
00015 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00016 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_animation">Animation</link>;
00017 
00018 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TweenCoreTests&#32;{
00019 
00020 &#32;&#32;[UnityTest]
00021 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IEnumerator&#32;BasicSingleTweenLifecycle()&#32;{
00022 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;didHitEnd&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00023 
00024 &#32;&#32;&#32;&#32;var&#32;tween&#32;=&#32;Tween.Single().
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Value(0,&#32;1,&#32;p&#32;=&gt;&#32;{
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;1)&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;didHitEnd&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}).
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OverTime(1.0f).
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Play();
00032 
00033 &#32;&#32;&#32;&#32;Assert.IsTrue(tween.isRunning);
00034 &#32;&#32;&#32;&#32;Assert.IsTrue(tween.isValid);
00035 
00036 &#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;tween.Yield();
00037 
00038 &#32;&#32;&#32;&#32;Assert.IsFalse(tween.isValid);
00039 &#32;&#32;&#32;&#32;Assert.IsTrue(didHitEnd);
00040 &#32;&#32;}
00041 
00042 &#32;&#32;[UnityTest]
00043 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IEnumerator&#32;BasicPersistentTweenLifecycle()&#32;{
00044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;didHitEnd&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00045 
00046 &#32;&#32;&#32;&#32;var&#32;tween&#32;=&#32;Tween.Persistent().
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Value(0,&#32;1,&#32;p&#32;=&gt;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;1)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;didHitEnd&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}).
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Play();
00053 
00054 &#32;&#32;&#32;&#32;Assert.IsTrue(tween.isRunning);
00055 &#32;&#32;&#32;&#32;Assert.IsTrue(tween.isValid);
00056 
00057 &#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;tween.Yield();
00058 
00059 &#32;&#32;&#32;&#32;Assert.IsTrue(tween.isValid);
00060 &#32;&#32;&#32;&#32;Assert.IsFalse(tween.isRunning);
00061 &#32;&#32;&#32;&#32;Assert.IsTrue(didHitEnd);
00062 &#32;&#32;}
00063 
00064 &#32;&#32;[UnityTest]
00065 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IEnumerator&#32;OverTimeTest([Values]TweenType&#32;type,
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(0.0f,&#32;0.1f,&#32;1.0f,&#32;2.0f)]&#32;<emphasis role="keywordtype">float</emphasis>&#32;time)&#32;{
00067 &#32;&#32;&#32;&#32;var&#32;tween&#32;=&#32;<link linkend="_namespace_valve_1_1_v_r_1a59487dd6eb3684570995a3bea405db2ea686e697538050e4664636337cc3b834f">Create</link>(type).OverTime(time).Play();
00068 
00069 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;startTime&#32;=&#32;Time.time;
00070 &#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;tween.Yield();
00071 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;endTime&#32;=&#32;Time.time;
00072 
00073 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;delta&#32;=&#32;endTime&#32;-&#32;startTime;
00074 &#32;&#32;&#32;&#32;Assert.That(delta,&#32;Is.EqualTo(time).Within(0.1f));
00075 &#32;&#32;}
00076 
00077 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_namespace_valve_1_1_v_r_1a59487dd6eb3684570995a3bea405db2ea686e697538050e4664636337cc3b834f">Create</link>(TweenType&#32;type)&#32;{
00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(type)&#32;{
00079 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;TweenType.Single:
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Tween.Single();
00081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;TweenType.Persistent:
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Tween.Persistent();
00083 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception();
00085 &#32;&#32;&#32;&#32;}
00086 &#32;&#32;}
00087 
00088 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;TweenType&#32;{
00089 &#32;&#32;&#32;&#32;<link linkend="_namespace_valve_1_1_v_r_1a03fc137e42935809cb498bd46107ca54a66ba162102bbf6ae31b522aec561735e">Single</link>,
00090 &#32;&#32;&#32;&#32;<link linkend="_namespace_valve_1_1_v_r_1a8401e5b24b0e324a8dd57fe55b00fc65a5fe7b9358c9cb1b9eaa8d5aec000def4">Persistent</link>
00091 &#32;&#32;}
00092 }
00093 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
