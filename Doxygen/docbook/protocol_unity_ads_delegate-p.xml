<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_protocol_unity_ads_delegate-p">
<title>&lt;UnityAdsDelegate&gt; Protocol Reference</title>
<indexterm><primary>&lt;UnityAdsDelegate&gt;</primary></indexterm>
<para>
<computeroutput>#import &lt;UnityAds.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for &lt;UnityAdsDelegate&gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="protocol_unity_ads_delegate-p.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Instance Methods    </title>
        <itemizedlist>
            <listitem><para>(void) - <link linkend="_protocol_unity_ads_delegate-p_1a8fc6e8a10ffb53dbc8f4c84312e4d544">unityAdsReady:</link></para>
</listitem>
            <listitem><para>(void) - <link linkend="_protocol_unity_ads_delegate-p_1a2272989530c7cd577277d7f17bde3215">unityAdsDidError:withMessage:</link></para>
</listitem>
            <listitem><para>(void) - <link linkend="_protocol_unity_ads_delegate-p_1a04f51d2948959482a526886a72a6769b">unityAdsDidStart:</link></para>
</listitem>
            <listitem><para>(void) - <link linkend="_protocol_unity_ads_delegate-p_1a4b243b4d6d509ce4982bf8416f29dc42">unityAdsDidFinish:withFinishState:</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <computeroutput><link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link></computeroutput> protocol defines the required methods for receiving messages from <link linkend="_interface_unity_ads">UnityAds</link>. Must be implemented by the hosting app. The unityAdsReady: method is called when it&apos;s possible to show an ad. All other methods are used to provide notifications of events of the ad lifecycle. <note><title>Note: </title>

<para>On initialization, there are ready (or error) callbacks for each placement attached to the game identifier. </para>
</note>
</para>
<para>
Definition at line <link linkend="__unity_ads_8h_source_1l00107">107</link> of file <link linkend="__unity_ads_8h_source">UnityAds.h</link>.</para>
</section>
<section>
<title>Method Documentation</title>
<anchor xml:id="_protocol_unity_ads_delegate-p_1a2272989530c7cd577277d7f17bde3215"/>    <section>
    <title>unityAdsDidError:withMessage:()</title>
<indexterm><primary>unityAdsDidError:withMessage:</primary><secondary>&lt;UnityAdsDelegate&gt;</secondary></indexterm>
<indexterm><primary>&lt;UnityAdsDelegate&gt;</primary><secondary>unityAdsDidError:withMessage:</secondary></indexterm>
<para><computeroutput>- (void) unityAdsDidError: (UnityAdsError) error(NSString *) message</computeroutput></para>
<para>Called when <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> encounters an error. All errors will be logged but this method can be used as an additional debugging aid. This callback can also be used for collecting statistics from different error scenarios.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>error</entry>
                                <entry>
<para>A <computeroutput>UnityAdsError</computeroutput> error enum value indicating the type of error encountered. </para>
</entry>
                            </row>
                            <row>
                                <entry>message</entry>
                                <entry>
<para>A human readable string indicating the type of error encountered. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_protocol_unity_ads_delegate-p_1a4b243b4d6d509ce4982bf8416f29dc42"/>    <section>
    <title>unityAdsDidFinish:withFinishState:()</title>
<indexterm><primary>unityAdsDidFinish:withFinishState:</primary><secondary>&lt;UnityAdsDelegate&gt;</secondary></indexterm>
<indexterm><primary>&lt;UnityAdsDelegate&gt;</primary><secondary>unityAdsDidFinish:withFinishState:</secondary></indexterm>
<para><computeroutput>- (void) unityAdsDidFinish: (NSString *) placementId(UnityAdsFinishState) state</computeroutput></para>
<para>Called after the ad has closed.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>placementId</entry>
                                <entry>
<para>The ID of the placement that has finished, as defined in Unity Ads admin tools. </para>
</entry>
                            </row>
                            <row>
                                <entry>state</entry>
                                <entry>
<para>An enum value indicating the finish state of the ad. Possible values are <computeroutput>Completed</computeroutput>, <computeroutput>Skipped</computeroutput>, and <computeroutput>Error</computeroutput>. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_protocol_unity_ads_delegate-p_1a04f51d2948959482a526886a72a6769b"/>    <section>
    <title>unityAdsDidStart:()</title>
<indexterm><primary>unityAdsDidStart:</primary><secondary>&lt;UnityAdsDelegate&gt;</secondary></indexterm>
<indexterm><primary>&lt;UnityAdsDelegate&gt;</primary><secondary>unityAdsDidStart:</secondary></indexterm>
<para><computeroutput>- (void) unityAdsDidStart: (NSString *) placementId</computeroutput></para>
<para>Called on a successful start of advertisement after calling the <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> <computeroutput>show:</computeroutput> method.</para>

<para><warning><title>Warning: </title>

<para>If there are errors in starting the advertisement, this method may never be called. Unity Ads will directly call <computeroutput>unityAdsDidFinish:withFinishState:</computeroutput> with error status.</para>
</warning>

                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>placementId</entry>
                                <entry>
<para>The ID of the placement that has started, as defined in Unity Ads admin tools. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_protocol_unity_ads_delegate-p_1a8fc6e8a10ffb53dbc8f4c84312e4d544"/>    <section>
    <title>unityAdsReady:()</title>
<indexterm><primary>unityAdsReady:</primary><secondary>&lt;UnityAdsDelegate&gt;</secondary></indexterm>
<indexterm><primary>&lt;UnityAdsDelegate&gt;</primary><secondary>unityAdsReady:</secondary></indexterm>
<para><computeroutput>- (void) unityAdsReady: (NSString *) placementId</computeroutput></para>
<para>Called when <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> is ready to show an ad. After this callback you can call the <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> <computeroutput>show:</computeroutput> method for this placement. Note that sometimes placement might no longer be ready due to exceptional reasons. These situations will give no new callbacks.</para>

<para><warning><title>Warning: </title>

<para>To avoid error situations, it is always best to check <computeroutput>isReady</computeroutput> method status before calling show. </para>
</warning>

                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>placementId</entry>
                                <entry>
<para>The ID of the placement that is ready to show, as defined in Unity Ads admin tools. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
The documentation for this protocol was generated from the following file:</para>
O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.ads@2.0.8/Editor/Resources/iOS/builds/UnityAds.framework/Headers/<link linkend="__unity_ads_8h">UnityAds.h</link></section>
</section>
