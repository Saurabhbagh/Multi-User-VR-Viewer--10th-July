<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__palm_direction_detector_8cs_source">
<title>PalmDirectionDetector.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/PalmDirectionDetector.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_attributes">Attributes</link>;
00013 
00014 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00015 
<anchor xml:id="__palm_direction_detector_8cs_source_1l00034"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector">00034</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector">PalmDirectionDetector</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_detector">Detector</link>&#32;{
00039 &#32;&#32;&#32;&#32;[Units(<emphasis role="stringliteral">&quot;seconds&quot;</emphasis>)]
00040 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;interval&#32;in&#32;seconds&#32;at&#32;which&#32;to&#32;check&#32;this&#32;detector&apos;s&#32;conditions.&quot;</emphasis>)]
00041 &#32;&#32;&#32;&#32;[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_min_value">MinValue</link>(0)]
<anchor xml:id="__palm_direction_detector_8cs_source_1l00042"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab42f84878c8e2c9d4dcc49a55da4de08">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab42f84878c8e2c9d4dcc49a55da4de08">Period</link>&#32;=&#32;.1f;&#32;<emphasis role="comment">//seconds</emphasis>
00048 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;hand&#32;model&#32;to&#32;watch.&#32;Set&#32;automatically&#32;if&#32;detector&#32;is&#32;on&#32;a&#32;hand.&quot;</emphasis>)]
<anchor xml:id="__palm_direction_detector_8cs_source_1l00049"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a04242cdc1ffec25e90d17617ab694926">00049</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_base">HandModelBase</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model">HandModel</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00050 
00066 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Direction&#32;Settings&quot;</emphasis>)]
00067 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;How&#32;to&#32;treat&#32;the&#32;target&#32;direction.&quot;</emphasis>)]
<anchor xml:id="__palm_direction_detector_8cs_source_1l00068"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ad60756375755919c00a2601bb2642553">00068</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf">PointingType</link>&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf">PointingType</link>&#32;=&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf">PointingType</link>.RelativeToHorizon;
00069 
00075 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;target&#32;direction.&quot;</emphasis>)]
00076 &#32;&#32;&#32;&#32;[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if">DisableIf</link>(<emphasis role="stringliteral">&quot;PointingType&quot;</emphasis>,&#32;isEqualTo:&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf">PointingType</link>.AtTarget)]
<anchor xml:id="__palm_direction_detector_8cs_source_1l00077"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a32e39c8e66f81c384649dbf4b87a7601">00077</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a32e39c8e66f81c384649dbf4b87a7601">PointingDirection</link>&#32;=&#32;Vector3.forward;
00078 
00082 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;A&#32;target&#32;object(optional).&#32;Use&#32;PointingType.AtTarget&quot;</emphasis>)]
00083 &#32;&#32;&#32;&#32;[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if">DisableIf</link>(<emphasis role="stringliteral">&quot;PointingType&quot;</emphasis>,&#32;isNotEqualTo:&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf">PointingType</link>.AtTarget)]
<anchor xml:id="__palm_direction_detector_8cs_source_1l00084"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1adbf98d8c7989d572784c00c28cd4cf97">00084</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1adbf98d8c7989d572784c00c28cd4cf97">TargetObject</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00085 
00091 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;angle&#32;in&#32;degrees&#32;from&#32;the&#32;target&#32;direction&#32;at&#32;which&#32;to&#32;turn&#32;on.&quot;</emphasis>)]
00092 &#32;&#32;&#32;&#32;[Range(0,&#32;180)]
<anchor xml:id="__palm_direction_detector_8cs_source_1l00093"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1aecf3d9f415408c7ea4fe2f2df0b39d6a">00093</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1aecf3d9f415408c7ea4fe2f2df0b39d6a">OnAngle</link>&#32;=&#32;45;&#32;<emphasis role="comment">//&#32;degrees</emphasis>
00094 
00100 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;angle&#32;in&#32;degrees&#32;from&#32;the&#32;target&#32;direction&#32;at&#32;which&#32;to&#32;turn&#32;off.&quot;</emphasis>)]
00101 &#32;&#32;&#32;&#32;[Range(0,&#32;180)]
<anchor xml:id="__palm_direction_detector_8cs_source_1l00102"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab04effce60950f3e1cc50d13507871b3">00102</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab04effce60950f3e1cc50d13507871b3">OffAngle</link>&#32;=&#32;65;&#32;<emphasis role="comment">//degrees</emphasis>
00103 
00107 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
00108 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Draw&#32;this&#32;detector&apos;s&#32;Gizmos,&#32;if&#32;any.&#32;(Gizmos&#32;must&#32;be&#32;on&#32;in&#32;Unity&#32;edtor,&#32;too.)&quot;</emphasis>)]
<anchor xml:id="__palm_direction_detector_8cs_source_1l00109"/><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a138b25d96be20bfb150f7cfadfaee8bf">00109</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a138b25d96be20bfb150f7cfadfaee8bf">ShowGizmos</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00110 
00111 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;watcherCoroutine;
00112 
00113 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnValidate(){
00114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab04effce60950f3e1cc50d13507871b3">OffAngle</link>&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1aecf3d9f415408c7ea4fe2f2df0b39d6a">OnAngle</link>){
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab04effce60950f3e1cc50d13507871b3">OffAngle</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1aecf3d9f415408c7ea4fe2f2df0b39d6a">OnAngle</link>;
00116 &#32;&#32;&#32;&#32;&#32;&#32;}
00117 &#32;&#32;&#32;&#32;}
00118 
00119 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake&#32;()&#32;{
00120 &#32;&#32;&#32;&#32;&#32;&#32;watcherCoroutine&#32;=&#32;palmWatcher();
00121 &#32;&#32;&#32;&#32;}
00122 
00123 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable&#32;()&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(watcherCoroutine);
00125 &#32;&#32;&#32;&#32;}
00126 
00127 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable&#32;()&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;StopCoroutine(watcherCoroutine);
00129 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59">Deactivate</link>();
00130 &#32;&#32;&#32;&#32;}
00131 
00132 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;palmWatcher()&#32;{
00133 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6baa78b1ac16c0cd02168097fc9a9bd7604">Hand</link>&#32;hand;
00134 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;normal;
00135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>){
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a04242cdc1ffec25e90d17617ab694926">HandModel</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>){
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hand&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a04242cdc1ffec25e90d17617ab694926">HandModel</link>.<link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1aa24ca02bf4a64ba33b0370ad6da8731f">GetLeapHand</link>();
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(hand&#32;!=&#32;<emphasis role="keyword">null</emphasis>){
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normal&#32;=&#32;hand.<link linkend="_class_leap_1_1_hand_1a32586524eb04a8d5b9ed6559285fb1d1">PalmNormal</link>.ToVector3();
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleTo&#32;=&#32;Vector3.Angle(normal,&#32;selectedDirection(hand.PalmPosition.ToVector3()));
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(angleTo&#32;&lt;=&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1aecf3d9f415408c7ea4fe2f2df0b39d6a">OnAngle</link>){
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8">Activate</link>();
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(angleTo&#32;&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab04effce60950f3e1cc50d13507871b3">OffAngle</link>)&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59">Deactivate</link>();
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab42f84878c8e2c9d4dcc49a55da4de08">Period</link>);
00149 &#32;&#32;&#32;&#32;&#32;&#32;}
00150 &#32;&#32;&#32;&#32;}
00151 
00152 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;selectedDirection&#32;(Vector3&#32;tipPosition)&#32;{
00153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ad60756375755919c00a2601bb2642553">PointingType</link>)&#32;{
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ad60756375755919c00a2601bb2642553">PointingType</link>.RelativeToHorizon:
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;cameraRot&#32;=&#32;<link linkend="_namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853fa967d35e40f3f95b1f538bd248640bf3b">Camera</link>.main.transform.rotation;
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;cameraYaw&#32;=&#32;cameraRot.eulerAngles.y;
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotator&#32;=&#32;Quaternion.AngleAxis(cameraYaw,&#32;Vector3.up);
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rotator&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a32e39c8e66f81c384649dbf4b87a7601">PointingDirection</link>;
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ad60756375755919c00a2601bb2642553">PointingType</link>.RelativeToCamera:
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853fa967d35e40f3f95b1f538bd248640bf3b">Camera</link>.main.transform.TransformDirection(<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a32e39c8e66f81c384649dbf4b87a7601">PointingDirection</link>);
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ad60756375755919c00a2601bb2642553">PointingType</link>.RelativeToWorld:
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a32e39c8e66f81c384649dbf4b87a7601">PointingDirection</link>;
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ad60756375755919c00a2601bb2642553">PointingType</link>.AtTarget:
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1adbf98d8c7989d572784c00c28cd4cf97">TargetObject</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1adbf98d8c7989d572784c00c28cd4cf97">TargetObject</link>.position&#32;-&#32;tipPosition;
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;Vector3.zero;
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a32e39c8e66f81c384649dbf4b87a7601">PointingDirection</link>;
00169 &#32;&#32;&#32;&#32;&#32;&#32;}
00170 &#32;&#32;&#32;&#32;}
00171 
00172 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00173 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDrawGizmos(){
00174 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a138b25d96be20bfb150f7cfadfaee8bf">ShowGizmos</link>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a04242cdc1ffec25e90d17617ab694926">HandModel</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a04242cdc1ffec25e90d17617ab694926">HandModel</link>.<link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1a31704b6829e3d442133350b34a4a5a8a">IsTracked</link>){
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;centerColor;
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_detector_1a89e15d17ea95587d9edf49c42473264d">IsActive</link>)&#32;{
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;centerColor&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1ad922f873e3c07f9128d6438332e7b9c7">OnColor</link>;
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;centerColor&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1a976fc8d66dd98aaea15196d861df429c">OffColor</link>;
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6baa78b1ac16c0cd02168097fc9a9bd7604">Hand</link>&#32;hand&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1a04242cdc1ffec25e90d17617ab694926">HandModel</link>.<link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1aa24ca02bf4a64ba33b0370ad6da8731f">GetLeapHand</link>();
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Utils.DrawCone(hand.PalmPosition.ToVector3(),&#32;hand.PalmNormal.ToVector3(),&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1aecf3d9f415408c7ea4fe2f2df0b39d6a">OnAngle</link>,&#32;hand.PalmWidth,&#32;centerColor,&#32;8);
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Utils.DrawCone(hand.PalmPosition.ToVector3(),&#32;hand.PalmNormal.ToVector3(),&#32;<link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector_1ab04effce60950f3e1cc50d13507871b3">OffAngle</link>,&#32;hand.PalmWidth,&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1ad7f8d0e7b913b78e86b2dacaa56287aa">LimitColor</link>,&#32;8);
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.color&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1aae0718ccceffd88a12d63ad718cda346">DirectionColor</link>;
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.DrawRay(hand.PalmPosition.ToVector3(),&#32;selectedDirection(hand.PalmPosition.ToVector3()));
00186 &#32;&#32;&#32;&#32;&#32;&#32;}
00187 &#32;&#32;&#32;&#32;}
00188 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
00189 &#32;&#32;}
00190 
<anchor xml:id="__palm_direction_detector_8cs_source_1l00201"/><link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf">00201</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cf">PointingType</link>&#32;{&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cfaa434e559bd52b1023e70404ccd5cb90e">RelativeToCamera</link>,&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cfa31999ab3e9ca81aefc5d2bc9c075f580">RelativeToHorizon</link>,&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cfab8085d9250dafabc6a770fad10bf57ea">RelativeToWorld</link>,&#32;<link linkend="_namespace_leap_1_1_unity_1a34b9e7741bfe47e7a9b1c2bffbe7f4cfa86f496d1df6da0c35f78658b6fd2e89e">AtTarget</link>&#32;}
00202 }
</programlisting></section>
