<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_interface_leap_1_1_unity_1_1_interaction_1_1_i_throw_handler">
<title>Leap.Unity.Interaction.IThrowHandler Interface Reference</title>
<indexterm><primary>Leap.Unity.Interaction.IThrowHandler</primary></indexterm>
<para>

<para><link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> objects feed their throw handlers callbacks when they are held (for data collection) and then fire OnThrow when they are released from all grasping hands or controllers so that the throw handler can manipulate the interaction object&apos;s trajectory to better match the user&apos;s intention. </para>
 
</para>
<para>Inheritance diagram for Leap.Unity.Interaction.IThrowHandler:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="interface_leap_1_1_unity_1_1_interaction_1_1_i_throw_handler.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_throw_handler_1a416c8f5dc270ba95034487124b502079">OnHold</link> (<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link> intObj, <link linkend="_struct_leap_1_1_unity_1_1_readonly_list">ReadonlyList</link>&lt; <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> &gt; controllers)</para>

<para>Called every FixedUpdate frame while an interaction object is being held. </para>
</listitem>
            <listitem><para>void <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_throw_handler_1a29ebb0b201a7ae85dc484d91a716ecb6">OnThrow</link> (<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link> intObj, <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> controller)</para>

<para>Called when an <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> object is released by the last interaction controller holding it. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> objects feed their throw handlers callbacks when they are held (for data collection) and then fire OnThrow when they are released from all grasping hands or controllers so that the throw handler can manipulate the interaction object&apos;s trajectory to better match the user&apos;s intention. </para>


<para>
Definition at line <link linkend="__i_throw_handler_8cs_source_1l00020">20</link> of file <link linkend="__i_throw_handler_8cs_source">IThrowHandler.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_interface_leap_1_1_unity_1_1_interaction_1_1_i_throw_handler_1a416c8f5dc270ba95034487124b502079"/>    <section>
    <title>OnHold()</title>
<indexterm><primary>OnHold</primary><secondary>Leap.Unity.Interaction.IThrowHandler</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.IThrowHandler</primary><secondary>OnHold</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Interaction.IThrowHandler.OnHold (<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link> intObj, <link linkend="_struct_leap_1_1_unity_1_1_readonly_list">ReadonlyList</link>&lt; <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> &gt; controllers)</computeroutput></para><para>

<para>Called every FixedUpdate frame while an interaction object is being held. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>intObj</entry>
                                <entry>
<para>The interaction object being held.</para>
</entry>
                            </row>
                            <row>
                                <entry>hands</entry>
                                <entry>
<para>A list of the interaction controllers currently grasping the object.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_sliding_window_throw_1ae0b88c5531628875477b51d107ba1c11">Leap.Unity.Interaction.SlidingWindowThrow</link>.</para>
    </section><anchor xml:id="_interface_leap_1_1_unity_1_1_interaction_1_1_i_throw_handler_1a29ebb0b201a7ae85dc484d91a716ecb6"/>    <section>
    <title>OnThrow()</title>
<indexterm><primary>OnThrow</primary><secondary>Leap.Unity.Interaction.IThrowHandler</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.IThrowHandler</primary><secondary>OnThrow</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Interaction.IThrowHandler.OnThrow (<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link> intObj, <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> controller)</computeroutput></para><para>

<para>Called when an <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> object is released by the last interaction controller holding it. </para>
</para>
<para>
Implemented in <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_sliding_window_throw_1adff33de5d0a761227c5e3ebd80e12e96">Leap.Unity.Interaction.SlidingWindowThrow</link>.</para>
</section>
<para>
The documentation for this interface was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Scripts/Internal/Interface/<link linkend="__i_throw_handler_8cs">IThrowHandler.cs</link></section>
</section>
