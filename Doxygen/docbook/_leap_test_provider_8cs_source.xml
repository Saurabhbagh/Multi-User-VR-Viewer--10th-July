<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_test_provider_8cs_source">
<title>LeapTestProvider.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/LeapTestProvider.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00013 
00014 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00015 
<anchor xml:id="__leap_test_provider_8cs_source_1l00016"/><link linkend="_class_leap_1_1_unity_1_1_leap_test_provider">00016</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_leap_test_provider">LeapTestProvider</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_provider">LeapProvider</link>&#32;{
00017 
<anchor xml:id="__leap_test_provider_8cs_source_1l00018"/><link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>;
<anchor xml:id="__leap_test_provider_8cs_source_1l00019"/><link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a164a6a68635fa3665c4c9c75156d3374">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a164a6a68635fa3665c4c9c75156d3374">CurrentFrame</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>;&#32;}&#32;}
<anchor xml:id="__leap_test_provider_8cs_source_1l00020"/><link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a207745bc4f21181bbb6a6d6c10fdfeb0">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a207745bc4f21181bbb6a6d6c10fdfeb0">CurrentFixedFrame</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>;&#32;}&#32;}
00021 
00022 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Runtime&#32;Basis&#32;Transforms&quot;</emphasis>)]
00023 
00024 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;At&#32;runtime,&#32;if&#32;this&#32;Transform&#32;is&#32;non-null,&#32;the&#32;LeapTestProvider&#32;will&#32;&quot;</emphasis>
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;create&#32;a&#32;test-pose&#32;left&#32;hand&#32;at&#32;this&#32;transform&apos;s&#32;position&#32;and&#32;rotation.&quot;</emphasis>
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;Setting&#32;this&#32;binding&#32;to&#32;null&#32;at&#32;runtime&#32;will&#32;cause&#32;the&#32;hand&#32;to&#32;disappear&#32;&quot;</emphasis>
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;from&#32;Frame&#32;data,&#32;as&#32;if&#32;it&#32;stopped&#32;tracking.&quot;</emphasis>)]
<anchor xml:id="__leap_test_provider_8cs_source_1l00028"/><link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a6eaf2a38be2f0ec5b2f7f0d00d7926f2">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a6eaf2a38be2f0ec5b2f7f0d00d7926f2">leftHandBasis</link>;
00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;_leftHand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;_cachedLeftHand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00031 
00032 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;At&#32;runtime,&#32;if&#32;this&#32;Transform&#32;is&#32;non-null,&#32;the&#32;LeapTestProvider&#32;will&#32;&quot;</emphasis>
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;create&#32;a&#32;test-pose&#32;right&#32;hand&#32;at&#32;this&#32;transform&apos;s&#32;position&#32;and&#32;rotation.&quot;</emphasis>
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;Setting&#32;this&#32;binding&#32;to&#32;null&#32;at&#32;runtime&#32;will&#32;cause&#32;the&#32;hand&#32;to&#32;disappear&#32;&quot;</emphasis>
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;from&#32;Frame&#32;data,&#32;as&#32;if&#32;it&#32;stopped&#32;tracking.&quot;</emphasis>)]
<anchor xml:id="__leap_test_provider_8cs_source_1l00036"/><link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a52cd1a389ba349c4866fb9da879fad35">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a52cd1a389ba349c4866fb9da879fad35">rightHandBasis</link>;
00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;_rightHand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00038 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;_cachedRightHand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00039 
00040 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;_cachedLeftHand&#32;&#32;=&#32;TestHandFactory.MakeTestHand(isLeft:&#32;<emphasis role="keyword">true</emphasis>,
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unitType:&#32;TestHandFactory.UnitType.UnityUnits);
00043 &#32;&#32;&#32;&#32;&#32;&#32;_cachedRightHand&#32;=&#32;TestHandFactory.MakeTestHand(isLeft:&#32;<emphasis role="keyword">false</emphasis>,
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unitType:&#32;TestHandFactory.UnitType.UnityUnits);
00045 &#32;&#32;&#32;&#32;}
00046 
00047 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_leftHand&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a6eaf2a38be2f0ec5b2f7f0d00d7926f2">leftHandBasis</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_leftHand&#32;=&#32;_cachedLeftHand;
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Add(_leftHand);
00051 &#32;&#32;&#32;&#32;&#32;&#32;}
00052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_leftHand&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a6eaf2a38be2f0ec5b2f7f0d00d7926f2">leftHandBasis</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Remove(_leftHand);
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_leftHand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00055 &#32;&#32;&#32;&#32;&#32;&#32;}
00056 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_leftHand&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_leftHand.SetTransform(<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a6eaf2a38be2f0ec5b2f7f0d00d7926f2">leftHandBasis</link>.position,&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a6eaf2a38be2f0ec5b2f7f0d00d7926f2">leftHandBasis</link>.rotation);
00058 &#32;&#32;&#32;&#32;&#32;&#32;}
00059 
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_rightHand&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a52cd1a389ba349c4866fb9da879fad35">rightHandBasis</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_rightHand&#32;=&#32;_cachedRightHand;
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Add(_rightHand);
00063 &#32;&#32;&#32;&#32;&#32;&#32;}
00064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_rightHand&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a52cd1a389ba349c4866fb9da879fad35">rightHandBasis</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Remove(_rightHand);
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_rightHand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00067 &#32;&#32;&#32;&#32;&#32;&#32;}
00068 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_rightHand&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_rightHand.SetTransform(<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a52cd1a389ba349c4866fb9da879fad35">rightHandBasis</link>.position,&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a52cd1a389ba349c4866fb9da879fad35">rightHandBasis</link>.rotation);
00070 &#32;&#32;&#32;&#32;&#32;&#32;}
00071 
00072 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_provider_1a2b90958e448e8f556d2b9c9af4a9547c">DispatchUpdateFrameEvent</link>(<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>);
00073 &#32;&#32;&#32;&#32;}
00074 
00075 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FixedUpdate()&#32;{
00076 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_provider_1af7fdbc4bae6cb0508424b8c3bdbb4ce1">DispatchFixedFrameEvent</link>(<link linkend="_class_leap_1_1_unity_1_1_leap_test_provider_1a65afe4c860a20dab61bebb5cd923fc3d">frame</link>);
00077 &#32;&#32;&#32;&#32;}
00078 
00079 &#32;&#32;}
00080 
00081 }
</programlisting></section>
