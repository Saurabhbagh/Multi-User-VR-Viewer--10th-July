<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__internal_utility_8cs_source">
<title>InternalUtility.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/InternalUtility.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.SceneManagement;
00014 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00016 <emphasis role="preprocessor">#endif</emphasis>
00017 
00018 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00019 
00020 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00021 &#32;&#32;[InitializeOnLoad]
00022 <emphasis role="preprocessor">#endif</emphasis>
00023 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>InternalUtility&#32;{
00024 
00025 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Action&#32;OnAnySave;
00027 
00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object&gt;&#32;toDestroy&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object&gt;();
00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;List&lt;InvokeStruct&gt;&#32;_invokeList&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;InvokeStruct&gt;();
00030 
00031 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;InternalUtility()&#32;{
00032 &#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.update&#32;+=&#32;destroyLoop;
00033 &#32;&#32;&#32;&#32;}
00034 
00035 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsPrefab(Component&#32;component)&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;PrefabUtility.GetPrefabType(component.gameObject)&#32;==&#32;PrefabType.Prefab;
00037 &#32;&#32;&#32;&#32;}
00038 
00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;InvokeIfUserDestroyed(Action&#32;action)&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorApplication.isPlayingOrWillChangePlaymode&#32;||
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.isPlaying&#32;||
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.isPaused)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00050 &#32;&#32;&#32;&#32;&#32;&#32;}
00051 
00052 &#32;&#32;&#32;&#32;&#32;&#32;_invokeList.Add(<emphasis role="keyword">new</emphasis>&#32;InvokeStruct(action));
00053 &#32;&#32;&#32;&#32;}
00054 <emphasis role="preprocessor">#endif</emphasis>
00055 
00060 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;T&#32;AddComponent&lt;T&gt;(GameObject&#32;obj)&#32;where&#32;T&#32;:&#32;Component&#32;{
00061 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_namespace_valve_1_1_v_r_1aecd07a81fe79a9f96c6787513e2d98e4ae498749f3c42246d50b15c81c101d988">Application</link>.isPlaying)&#32;{
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Undo.AddComponent&lt;T&gt;(obj);
00064 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
00065 <emphasis role="preprocessor">#endif</emphasis>
00066 &#32;&#32;&#32;&#32;&#32;&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj.AddComponent&lt;T&gt;();
00068 &#32;&#32;&#32;&#32;&#32;&#32;}
00069 &#32;&#32;&#32;&#32;}
00070 
00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Component&#32;AddComponent(GameObject&#32;obj,&#32;Type&#32;type)&#32;{
00076 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00077 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_namespace_valve_1_1_v_r_1aecd07a81fe79a9f96c6787513e2d98e4ae498749f3c42246d50b15c81c101d988">Application</link>.isPlaying)&#32;{
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Undo.AddComponent(obj,&#32;type);
00079 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>
00080 <emphasis role="preprocessor">#endif</emphasis>
00081 &#32;&#32;&#32;&#32;&#32;&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj.AddComponent(type);
00083 &#32;&#32;&#32;&#32;&#32;&#32;}
00084 &#32;&#32;&#32;&#32;}
00085 
00094 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Destroy(<link linkend="_namespace_unity_engine">UnityEngine</link>.Object&#32;obj)&#32;{
00095 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_valve_1_1_v_r_1aecd07a81fe79a9f96c6787513e2d98e4ae498749f3c42246d50b15c81c101d988">Application</link>.isPlaying)&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object.Destroy(obj);
00098 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toDestroy.Add(obj);
00100 &#32;&#32;&#32;&#32;&#32;&#32;}
00101 <emphasis role="preprocessor">#else</emphasis>
00102 &#32;&#32;&#32;&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object.Destroy(obj);
00103 <emphasis role="preprocessor">#endif</emphasis>
00104 &#32;&#32;&#32;&#32;}
00105 
00106 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00107 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;destroyLoop()&#32;{
00108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_invokeList.Count&#32;!=&#32;0)&#32;{
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;scene&#32;=&#32;SceneManager.GetActiveScene();
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;action&#32;<emphasis role="keywordflow">in</emphasis>&#32;_invokeList)&#32;{
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action.scene&#32;==&#32;scene)&#32;{
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;action.action();
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;e)&#32;{
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogException(e);
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_invokeList.Clear();
00120 &#32;&#32;&#32;&#32;&#32;&#32;}
00121 
00122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(toDestroy.Count&#32;!=&#32;0)&#32;{
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;toDestroy.Count;&#32;i++)&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;obj&#32;=&#32;toDestroy[i];
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.DestroyObjectImmediate(obj);
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toDestroy.Clear();
00130 &#32;&#32;&#32;&#32;&#32;&#32;}
00131 &#32;&#32;&#32;&#32;}
00132 
00133 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;dispatchOnAnySave()&#32;{
00134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(OnAnySave&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OnAnySave();
00136 &#32;&#32;&#32;&#32;&#32;&#32;}
00137 &#32;&#32;&#32;&#32;}
00138 
00139 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>InvokeStruct&#32;{
00140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attributes_1a4b8f0ac9a7b74b480178dc5fb4069a89a9ead0d38e06ec253ca0ecbf6ea56e59b">Scene</link>&#32;scene;
00141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;action;
00142 
00143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;InvokeStruct(Action&#32;action)&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.action&#32;=&#32;action;
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scene&#32;=&#32;SceneManager.GetActiveScene();
00146 &#32;&#32;&#32;&#32;&#32;&#32;}
00147 &#32;&#32;&#32;&#32;}
00148 
00149 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>SaveWatcher&#32;:&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.AssetModificationProcessor&#32;{
00150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;OnWillSaveAssets(<emphasis role="keywordtype">string</emphasis>[]&#32;paths)&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorApplication.delayCall&#32;+=&#32;dispatchOnAnySave;
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;paths;
00153 &#32;&#32;&#32;&#32;&#32;&#32;}
00154 &#32;&#32;&#32;&#32;}
00155 <emphasis role="preprocessor">#endif</emphasis>
00156 &#32;&#32;}
00157 }
</programlisting></section>
