<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__enum_event_table_editor_8cs_source">
<title>EnumEventTableEditor.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Editor/EnumEventTableEditor.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00014 
00015 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00016 
<anchor xml:id="__enum_event_table_editor_8cs_source_1l00017"/><link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor">00017</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor">EnumEventTableEditor</link>&#32;{
00018 
00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;SerializedProperty&#32;_entries;
00020 
00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GUIContent&#32;_iconToolbarMinus;
00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GUIContent&#32;_eventIDName;
00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GUIContent&#32;_addButtonContent;
00024 
00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GUIContent[]&#32;_enumNames;
00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[]&#32;_enumValues;
00027 
<anchor xml:id="__enum_event_table_editor_8cs_source_1l00034"/><link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor_1a1a7649c2446793c07074cad9d0245779">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor_1a1a7649c2446793c07074cad9d0245779">EnumEventTableEditor</link>(SerializedProperty&#32;tableProperty,&#32;Type&#32;enumType)&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;_entries&#32;=&#32;tableProperty.FindPropertyRelative(<emphasis role="stringliteral">&quot;_entries&quot;</emphasis>);
00036 
00037 &#32;&#32;&#32;&#32;&#32;&#32;_addButtonContent&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Add&#32;New&#32;Event&#32;Type&quot;</emphasis>);
00038 &#32;&#32;&#32;&#32;&#32;&#32;_eventIDName&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;&quot;</emphasis>);
00039 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Have&#32;to&#32;create&#32;a&#32;copy&#32;since&#32;otherwise&#32;the&#32;tooltip&#32;will&#32;be&#32;overwritten.</emphasis>
00040 &#32;&#32;&#32;&#32;&#32;&#32;_iconToolbarMinus&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(EditorGUIUtility.IconContent(<emphasis role="stringliteral">&quot;Toolbar&#32;Minus&quot;</emphasis>));
00041 &#32;&#32;&#32;&#32;&#32;&#32;_iconToolbarMinus.tooltip&#32;=&#32;<emphasis role="stringliteral">&quot;Remove&#32;all&#32;events&#32;in&#32;this&#32;list.&quot;</emphasis>;
00042 
00043 &#32;&#32;&#32;&#32;&#32;&#32;_enumNames&#32;=&#32;Enum.GetNames(enumType).Query().Select(s&#32;=&gt;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(s)).ToArray();
00044 &#32;&#32;&#32;&#32;&#32;&#32;_enumValues&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>[])Enum.GetValues(enumType);
00045 &#32;&#32;&#32;&#32;}
00046 
<anchor xml:id="__enum_event_table_editor_8cs_source_1l00047"/><link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor_1a0750f6e4ebe155b598189387c896ade0">00047</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor_1a0750f6e4ebe155b598189387c896ade0">DoGuiLayout</link>()&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_entries.serializedObject.isEditingMultipleObjects)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00050 &#32;&#32;&#32;&#32;&#32;&#32;}
00051 
00052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;toBeRemovedEntry&#32;=&#32;-1;
00053 
00054 &#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
00055 
00056 &#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;removeButtonSize&#32;=&#32;GUIStyle.none.CalcSize(_iconToolbarMinus);
00057 
00058 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_entries.arraySize;&#32;++i)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;delegateProperty&#32;=&#32;_entries.GetArrayElementAtIndex(i);
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;enumValueProperty&#32;=&#32;delegateProperty.FindPropertyRelative(<emphasis role="stringliteral">&quot;enumValue&quot;</emphasis>);
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;callbacksProperty&#32;=&#32;delegateProperty.FindPropertyRelative(<emphasis role="stringliteral">&quot;callback&quot;</emphasis>);
00062 
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;Array.IndexOf(_enumValues,&#32;enumValueProperty.intValue);
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&lt;&#32;0)&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_eventIDName.text&#32;=&#32;<emphasis role="stringliteral">&quot;Event&#32;&quot;</emphasis>&#32;+&#32;enumValueProperty.intValue;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_eventIDName.text&#32;=&#32;_enumNames[index].text;
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00069 
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.PropertyField(callbacksProperty,&#32;_eventIDName);
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;callbackRect&#32;=&#32;GUILayoutUtility.GetLastRect();
00072 
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;removeButtonPos&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Rect(callbackRect.xMax&#32;-&#32;removeButtonSize.x&#32;-&#32;8,&#32;callbackRect.y&#32;+&#32;1,&#32;removeButtonSize.x,&#32;removeButtonSize.y);
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(removeButtonPos,&#32;_iconToolbarMinus,&#32;GUIStyle.none))&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toBeRemovedEntry&#32;=&#32;i;
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00077 
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
00079 &#32;&#32;&#32;&#32;&#32;&#32;}
00080 
00081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(toBeRemovedEntry&#32;&gt;&#32;-1)&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemoveEntry(toBeRemovedEntry);
00083 &#32;&#32;&#32;&#32;&#32;&#32;}
00084 
00085 &#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;btPosition&#32;=&#32;GUILayoutUtility.GetRect(_addButtonContent,&#32;GUI.skin.button);
00086 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;addButonWidth&#32;=&#32;200f;
00087 &#32;&#32;&#32;&#32;&#32;&#32;btPosition.x&#32;=&#32;btPosition.x&#32;+&#32;(btPosition.width&#32;-&#32;addButonWidth)&#32;/&#32;2;
00088 &#32;&#32;&#32;&#32;&#32;&#32;btPosition.width&#32;=&#32;addButonWidth;
00089 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(btPosition,&#32;_addButtonContent))&#32;{
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;showAddEventMenu();
00091 &#32;&#32;&#32;&#32;&#32;&#32;}
00092 
00093 &#32;&#32;&#32;&#32;&#32;&#32;_entries.serializedObject.ApplyModifiedProperties();
00094 &#32;&#32;&#32;&#32;}
00095 
<anchor xml:id="__enum_event_table_editor_8cs_source_1l00096"/><link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor_1aa8e88f2c5b8385d9d99a2eb844aa7b27">00096</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor_1aa8e88f2c5b8385d9d99a2eb844aa7b27">HasAnyCallbacks</link>(<emphasis role="keywordtype">int</emphasis>&#32;enumValue)&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_entries&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00098 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_entries.arraySize;&#32;i++)&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;entryProperty&#32;=&#32;_entries.GetArrayElementAtIndex(i);
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;enumValueProperty&#32;=&#32;entryProperty.FindPropertyRelative(<emphasis role="stringliteral">&quot;enumValue&quot;</emphasis>);
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumValueProperty.intValue&#32;==&#32;enumValue)&#32;{
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00104 &#32;&#32;&#32;&#32;&#32;&#32;}
00105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00106 &#32;&#32;&#32;&#32;}
00107 
00108 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RemoveEntry(<emphasis role="keywordtype">int</emphasis>&#32;toBeRemovedEntry)&#32;{
00109 &#32;&#32;&#32;&#32;&#32;&#32;_entries.DeleteArrayElementAtIndex(toBeRemovedEntry);
00110 &#32;&#32;&#32;&#32;}
00111 
00112 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;showAddEventMenu()&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;create&#32;the&#32;menu,&#32;add&#32;items&#32;and&#32;show&#32;it</emphasis>
00114 &#32;&#32;&#32;&#32;&#32;&#32;GenericMenu&#32;menu&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GenericMenu();
00115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_enumNames.Length;&#32;++i)&#32;{
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;active&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00117 
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;we&#32;already&#32;have&#32;a&#32;Entry&#32;for&#32;the&#32;current&#32;enum&#32;type,&#32;if&#32;so,&#32;disable&#32;it</emphasis>
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;p&#32;=&#32;0;&#32;p&#32;&lt;&#32;_entries.arraySize;&#32;++p)&#32;{
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;entryProperty&#32;=&#32;_entries.GetArrayElementAtIndex(p);
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;enumValueProperty&#32;=&#32;entryProperty.FindPropertyRelative(<emphasis role="stringliteral">&quot;enumValue&quot;</emphasis>);
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(enumValueProperty.intValue&#32;==&#32;_enumValues[i])&#32;{
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;active&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00126 
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(active)&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;menu.AddItem(_enumNames[i],&#32;<emphasis role="keyword">false</emphasis>,&#32;OnAddNewSelected,&#32;_enumValues[i]);
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;menu.AddDisabledItem(_enumNames[i]);
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00132 &#32;&#32;&#32;&#32;&#32;&#32;}
00133 &#32;&#32;&#32;&#32;&#32;&#32;menu.ShowAsContext();
00134 
00135 &#32;&#32;&#32;&#32;&#32;&#32;Event.current.Use();
00136 &#32;&#32;&#32;&#32;}
00137 
00138 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnAddNewSelected(<emphasis role="keywordtype">object</emphasis>&#32;enumValue)&#32;{
00139 &#32;&#32;&#32;&#32;&#32;&#32;_entries.arraySize&#32;+=&#32;1;
00140 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;entryProperty&#32;=&#32;_entries.GetArrayElementAtIndex(_entries.arraySize&#32;-&#32;1);
00141 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;enumValueProperty&#32;=&#32;entryProperty.FindPropertyRelative(<emphasis role="stringliteral">&quot;enumValue&quot;</emphasis>);
00142 &#32;&#32;&#32;&#32;&#32;&#32;enumValueProperty.intValue&#32;=&#32;(int)enumValue;
00143 
00144 &#32;&#32;&#32;&#32;&#32;&#32;_entries.serializedObject.ApplyModifiedProperties();
00145 &#32;&#32;&#32;&#32;}
00146 &#32;&#32;}
00147 }
</programlisting></section>
