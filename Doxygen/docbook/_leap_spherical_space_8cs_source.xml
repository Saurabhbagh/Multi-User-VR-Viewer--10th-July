<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_spherical_space_8cs_source">
<title>LeapSphericalSpace.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Space/Definitions/LeapSphericalSpace.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_space">Leap.Unity.Space</link>&#32;{
00014 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00015"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space">00015</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space">LeapSphericalSpace</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space">LeapRadialSpace</link>&#32;{
00016 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00017"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1af44aeded1cf4e35a2e780a6caa02b674">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1af44aeded1cf4e35a2e780a6caa02b674">CosntructBaseTransformer</link>()&#32;{
00018 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer">Transformer</link>()&#32;{
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a77daae8f1a9f57ef4dc3e75fe5801bcd">space</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>,
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchor&#32;=&#32;<emphasis role="keyword">this</emphasis>,
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angleXOffset&#32;=&#32;0,
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angleYOffset&#32;=&#32;0,
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiusOffset&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>,
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiansPerMeter&#32;=&#32;1.0f&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>
00025 &#32;&#32;&#32;&#32;&#32;&#32;};
00026 &#32;&#32;&#32;&#32;}
00027 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00028"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1ac252ca6d47afef536236b55a34e3f416">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1ac252ca6d47afef536236b55a34e3f416">ConstructTransformer</link>(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor">LeapSpaceAnchor</link>&#32;anchor)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer">Transformer</link>()&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a77daae8f1a9f57ef4dc3e75fe5801bcd">space</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>,
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchor&#32;=&#32;anchor
00032 &#32;&#32;&#32;&#32;&#32;&#32;};
00033 &#32;&#32;&#32;&#32;}
00034 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00035"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1aaae3bed7e24ee9a7ccc564ff19888419">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1aaae3bed7e24ee9a7ccc564ff19888419">UpdateRadialTransformer</link>(<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a6f98d35d75f83e2ff2c978715520c836">transformer</link>,&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a8df76f5c9ba6a0f169880fec6bca557b">parent</link>,&#32;Vector3&#32;rectSpaceDelta)&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;radialTransformer&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a6f98d35d75f83e2ff2c978715520c836">transformer</link>&#32;as&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer">Transformer</link>;
00037 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;radialParent&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a8df76f5c9ba6a0f169880fec6bca557b">parent</link>&#32;as&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer">Transformer</link>;
00038 
00039 &#32;&#32;&#32;&#32;&#32;&#32;radialTransformer.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">angleXOffset</link>&#32;=&#32;radialParent.angleXOffset&#32;+&#32;rectSpaceDelta.x&#32;/&#32;radialParent.radiusOffset;
00040 &#32;&#32;&#32;&#32;&#32;&#32;radialTransformer.angleYOffset&#32;=&#32;radialParent.angleYOffset&#32;+&#32;rectSpaceDelta.y&#32;/&#32;radialParent.radiusOffset;
00041 &#32;&#32;&#32;&#32;&#32;&#32;radialTransformer.radiusOffset&#32;=&#32;radialParent.radiusOffset&#32;+&#32;rectSpaceDelta.z;
00042 &#32;&#32;&#32;&#32;&#32;&#32;radialTransformer.radiansPerMeter&#32;=&#32;1.0f&#32;/&#32;(radialTransformer.radiusOffset);
00043 &#32;&#32;&#32;&#32;}
00044 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00045"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer">00045</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer">Transformer</link>&#32;:&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_radial_transformer">IRadialTransformer</link>&#32;{
<anchor xml:id="__leap_spherical_space_8cs_source_1l00046"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">00046</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space">LeapSphericalSpace</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__leap_spherical_space_8cs_source_1l00047"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a074822bd99def96e0a6b73b3b7aa3b56">00047</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor">LeapSpaceAnchor</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a074822bd99def96e0a6b73b3b7aa3b56">anchor</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
00048 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00049"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">00049</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">angleXOffset</link>;
<anchor xml:id="__leap_spherical_space_8cs_source_1l00050"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ae9953d013faee31cc40c76d377620479">00050</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ae9953d013faee31cc40c76d377620479">angleYOffset</link>;
<anchor xml:id="__leap_spherical_space_8cs_source_1l00051"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
<anchor xml:id="__leap_spherical_space_8cs_source_1l00052"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a01ab122f08461f13f4f1c03d10f99bce">00052</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a01ab122f08461f13f4f1c03d10f99bce">radiansPerMeter</link>;
00053 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00054"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a6ff15b9de7a7ca000bb2a565642a815e">00054</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a6ff15b9de7a7ca000bb2a565642a815e">TransformPoint</link>(Vector3&#32;localRectPos)&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00056 
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a074822bd99def96e0a6b73b3b7aa3b56">anchor</link>.transform.position);
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta&#32;=&#32;localRectPos&#32;-&#32;anchorRectPos;
00059 
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleX&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">angleXOffset</link>&#32;+&#32;anchorDelta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleY&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ae9953d013faee31cc40c76d377620479">angleYOffset</link>&#32;+&#32;anchorDelta.y&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>&#32;+&#32;anchorDelta.z;
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position;
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.x&#32;=&#32;0;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.y&#32;=&#32;Mathf.Sin(angleY)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.z&#32;=&#32;Mathf.Cos(angleY)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00068 
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position2;
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position2.x&#32;=&#32;Mathf.Sin(angleX)&#32;*&#32;position.z;
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position2.y&#32;=&#32;position.y;
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position2.z&#32;=&#32;Mathf.Cos(angleX)&#32;*&#32;position.z&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00073 
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;position2;
00075 &#32;&#32;&#32;&#32;&#32;&#32;}
00076 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00077"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1acd09436f553794da5536559b5c3bfcab">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1acd09436f553794da5536559b5c3bfcab">InverseTransformPoint</link>(Vector3&#32;localWarpedPos)&#32;{
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localWarpedPos.z&#32;+=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00079 
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;preRotatedPos;
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.x&#32;=&#32;0;
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.y&#32;=&#32;localWarpedPos.y;
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.z&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(localWarpedPos.x,&#32;localWarpedPos.z).magnitude;
00084 
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleX&#32;=&#32;Mathf.Atan2(localWarpedPos.x,&#32;localWarpedPos.z);
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleY&#32;=&#32;Mathf.Atan2(preRotatedPos.y,&#32;preRotatedPos.z);
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(preRotatedPos.z,&#32;preRotatedPos.y).magnitude;
00088 
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta.x&#32;=&#32;(angleX&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">angleXOffset</link>)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta.y&#32;=&#32;(angleY&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ae9953d013faee31cc40c76d377620479">angleYOffset</link>)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta.z&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00093 
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a074822bd99def96e0a6b73b3b7aa3b56">anchor</link>.transform.position);
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localRectPos&#32;=&#32;anchorRectPos&#32;+&#32;anchorDelta;
00096 
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;localRectPos;
00098 &#32;&#32;&#32;&#32;&#32;&#32;}
00099 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00100"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a389407a7ecb746326153af8c11238250">00100</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a389407a7ecb746326153af8c11238250">TransformRotation</link>(Vector3&#32;localRectPos,&#32;Quaternion&#32;localRectRot)&#32;{
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00102 
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a074822bd99def96e0a6b73b3b7aa3b56">anchor</link>.transform.position);
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta&#32;=&#32;localRectPos&#32;-&#32;anchorRectPos;
00105 
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleX&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">angleXOffset</link>&#32;+&#32;anchorDelta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleY&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ae9953d013faee31cc40c76d377620479">angleYOffset</link>&#32;+&#32;anchorDelta.y&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00108 
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.Euler(-angleY&#32;*&#32;Mathf.Rad2Deg,
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angleX&#32;*&#32;Mathf.Rad2Deg,
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
00112 
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rotation&#32;*&#32;localRectRot;
00114 &#32;&#32;&#32;&#32;&#32;&#32;}
00115 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00116"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a00568c8a27881e7d49f850eec0ba562e">00116</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a00568c8a27881e7d49f850eec0ba562e">InverseTransformRotation</link>(Vector3&#32;localWarpedPos,&#32;Quaternion&#32;localWarpedRot)&#32;{
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localWarpedPos.z&#32;+=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00118 
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;preRotatedPos;
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.x&#32;=&#32;0;
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.y&#32;=&#32;localWarpedPos.y;
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.z&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(localWarpedPos.x,&#32;localWarpedPos.z).magnitude;
00123 
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleX&#32;=&#32;Mathf.Atan2(localWarpedPos.x,&#32;localWarpedPos.z);
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleY&#32;=&#32;Mathf.Atan2(preRotatedPos.y,&#32;preRotatedPos.z);
00126 
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;baseRot&#32;=&#32;Quaternion.Euler(-angleY&#32;*&#32;Mathf.Rad2Deg,
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angleX&#32;*&#32;Mathf.Rad2Deg,
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;invRot&#32;=&#32;Quaternion.Inverse(baseRot);
00131 
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;invRot&#32;*&#32;localWarpedRot;
00133 &#32;&#32;&#32;&#32;&#32;&#32;}
00134 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00135"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a959b6b39a26640ddbd4bcda77deefde5">00135</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a959b6b39a26640ddbd4bcda77deefde5">TransformDirection</link>(Vector3&#32;localRectPos,&#32;Vector3&#32;localRectDirection)&#32;{
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00137 
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a074822bd99def96e0a6b73b3b7aa3b56">anchor</link>.transform.position);
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta&#32;=&#32;localRectPos&#32;-&#32;anchorRectPos;
00140 
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleX&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">angleXOffset</link>&#32;+&#32;anchorDelta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleY&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ae9953d013faee31cc40c76d377620479">angleYOffset</link>&#32;+&#32;anchorDelta.y&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00143 
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.Euler(-angleY&#32;*&#32;Mathf.Rad2Deg,
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angleX&#32;*&#32;Mathf.Rad2Deg,
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
00147 
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rotation&#32;*&#32;localRectDirection;
00149 &#32;&#32;&#32;&#32;&#32;&#32;}
00150 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00151"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ac82a933f2e7851ccc455b11dd789dd87">00151</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ac82a933f2e7851ccc455b11dd789dd87">InverseTransformDirection</link>(Vector3&#32;localWarpedPos,&#32;Vector3&#32;localWarpedDirection)&#32;{
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localWarpedPos.z&#32;+=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00153 
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;preRotatedPos;
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.x&#32;=&#32;0;
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.y&#32;=&#32;localWarpedPos.y;
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preRotatedPos.z&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(localWarpedPos.x,&#32;localWarpedPos.z).magnitude;
00158 
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleX&#32;=&#32;Mathf.Atan2(localWarpedPos.x,&#32;localWarpedPos.z);
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleY&#32;=&#32;Mathf.Atan2(preRotatedPos.y,&#32;preRotatedPos.z);
00161 
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;baseRot&#32;=&#32;Quaternion.Euler(-angleY&#32;*&#32;Mathf.Rad2Deg,
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angleX&#32;*&#32;Mathf.Rad2Deg,
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;invRot&#32;=&#32;Quaternion.Inverse(baseRot);
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;invRot&#32;*&#32;localWarpedDirection;
00167 &#32;&#32;&#32;&#32;&#32;&#32;}
00168 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00169"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1aad315845425b24d3b09c62c49a7093ca">00169</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Matrix4x4&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1aad315845425b24d3b09c62c49a7093ca">GetTransformationMatrix</link>(Vector3&#32;localRectPos)&#32;{
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00171 
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a074822bd99def96e0a6b73b3b7aa3b56">anchor</link>.transform.position);
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta&#32;=&#32;localRectPos&#32;-&#32;anchorRectPos;
00174 
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleX&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">angleXOffset</link>&#32;+&#32;anchorDelta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angleY&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ae9953d013faee31cc40c76d377620479">angleYOffset</link>&#32;+&#32;anchorDelta.y&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>&#32;+&#32;anchorDelta.z;
00178 
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position;
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.x&#32;=&#32;0;
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.y&#32;=&#32;Mathf.Sin(angleY)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.z&#32;=&#32;Mathf.Cos(angleY)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00183 
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position2;
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position2.x&#32;=&#32;Mathf.Sin(angleX)&#32;*&#32;position.z;
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position2.y&#32;=&#32;position.y;
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position2.z&#32;=&#32;Mathf.Cos(angleX)&#32;*&#32;position.z&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00188 
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.Euler(-angleY&#32;*&#32;Mathf.Rad2Deg,
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angleX&#32;*&#32;Mathf.Rad2Deg,
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);
00192 
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Matrix4x4.TRS(position2,&#32;rotation,&#32;Vector3.one);
00194 &#32;&#32;&#32;&#32;&#32;&#32;}
00195 
<anchor xml:id="__leap_spherical_space_8cs_source_1l00196"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ab2e6a163514c332db4c662754f37f385">00196</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector4&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ab2e6a163514c332db4c662754f37f385">GetVectorRepresentation</link>(Transform&#32;element)&#32;{
00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;elementRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.transform.InverseTransformPoint(element.position);
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a61cb8c82630ced9054828f14b1129f2d">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a074822bd99def96e0a6b73b3b7aa3b56">anchor</link>.transform.position);
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;delta&#32;=&#32;elementRectPos&#32;-&#32;anchorRectPos;
00200 
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector4&#32;rep;
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rep.x&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a684fd7c7ecc889797e438534a4efc7b7">angleXOffset</link>&#32;+&#32;delta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rep.y&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1ae9953d013faee31cc40c76d377620479">angleYOffset</link>&#32;+&#32;delta.y&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rep.z&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>&#32;+&#32;delta.z;
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rep.w&#32;=&#32;1.0f&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer_1a526e6fe0a6a2ec93359ec446b9707b3c">radiusOffset</link>;
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rep;
00207 &#32;&#32;&#32;&#32;&#32;&#32;}
00208 &#32;&#32;&#32;&#32;}
00209 &#32;&#32;}
00210 }
</programlisting></section>
