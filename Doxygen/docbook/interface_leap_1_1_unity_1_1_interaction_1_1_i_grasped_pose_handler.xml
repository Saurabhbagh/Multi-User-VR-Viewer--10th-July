<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler">
<title>Leap.Unity.Interaction.IGraspedPoseHandler Interface Reference</title>
<indexterm><primary>Leap.Unity.Interaction.IGraspedPoseHandler</primary></indexterm>
<para>

<para>An <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler">IGraspedPoseHandler</link> specifies where an object grasped by a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand or controller (or multiple hands/controllers) should move as the grasping controllers(s) move. The default implementation provided by the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Engine is the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose">KabschGraspedPose</link>, which produces a physically-intuitive following motion for the object no matter how a grasping hand moves. </para>
 
</para>
<para>Inheritance diagram for Leap.Unity.Interaction.IGraspedPoseHandler:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1ad6b297cf90c878a95ca69901180ab4ce">AddController</link> (<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> controller)</para>

<para>Called when a new <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> begins grasping a certain object. The controller or <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand should be included in the held pose calculation. </para>
</listitem>
            <listitem><para>void <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1a7e7305b0089610eced1ee4ca98c3d586">RemoveController</link> (<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> controller)</para>

<para>Called when an <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> stops grasping a certain object; the controller should no longer be included in the held pose calculation. </para>
</listitem>
            <listitem><para>void <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1a1f78ffa53ab585a1b283548e4e4381c8">ClearControllers</link> ()</para>

<para>Called e.g. if the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link> is set not to move while being grasped; this should clear any hands to be included in the grasping position calculation. </para>
</listitem>
            <listitem><para>void <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1a5721a16b0e8e2f8715edfad605931638">GetGraspedPosition</link> (out Vector3 position, out Quaternion rotation)</para>

<para>Calculate the best holding position and orientation given the current state of all InteractionControllers (added via <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1ad6b297cf90c878a95ca69901180ab4ce">AddController()</link>). </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>An <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler">IGraspedPoseHandler</link> specifies where an object grasped by a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand or controller (or multiple hands/controllers) should move as the grasping controllers(s) move. The default implementation provided by the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Engine is the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose">KabschGraspedPose</link>, which produces a physically-intuitive following motion for the object no matter how a grasping hand moves. </para>



<para>IGraspedPoseHandlers do not actually move an object; they only calculate where an object should be moved. Actually moving the object is the concern of an <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_movement_handler">IGraspedMovementHandler</link>. </para>
<para>
Definition at line <link linkend="__i_grasped_pose_handler_8cs_source_1l00027">27</link> of file <link linkend="__i_grasped_pose_handler_8cs_source">IGraspedPoseHandler.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1ad6b297cf90c878a95ca69901180ab4ce"/>    <section>
    <title>AddController()</title>
<indexterm><primary>AddController</primary><secondary>Leap.Unity.Interaction.IGraspedPoseHandler</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.IGraspedPoseHandler</primary><secondary>AddController</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Interaction.IGraspedPoseHandler.AddController (<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> controller)</computeroutput></para><para>

<para>Called when a new <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> begins grasping a certain object. The controller or <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand should be included in the held pose calculation. </para>
</para>
<para>
Implemented in <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose_1a48e190a6d9cadcaf3340d339ac61d464">Leap.Unity.Interaction.KabschGraspedPose</link>.</para>
    </section><anchor xml:id="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1a1f78ffa53ab585a1b283548e4e4381c8"/>    <section>
    <title>ClearControllers()</title>
<indexterm><primary>ClearControllers</primary><secondary>Leap.Unity.Interaction.IGraspedPoseHandler</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.IGraspedPoseHandler</primary><secondary>ClearControllers</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Interaction.IGraspedPoseHandler.ClearControllers ( )</computeroutput></para><para>

<para>Called e.g. if the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link> is set not to move while being grasped; this should clear any hands to be included in the grasping position calculation. </para>
</para>
<para>
Implemented in <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose_1a016fe0af189b4caae24050a70b4d2462">Leap.Unity.Interaction.KabschGraspedPose</link>.</para>
    </section><anchor xml:id="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1a5721a16b0e8e2f8715edfad605931638"/>    <section>
    <title>GetGraspedPosition()</title>
<indexterm><primary>GetGraspedPosition</primary><secondary>Leap.Unity.Interaction.IGraspedPoseHandler</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.IGraspedPoseHandler</primary><secondary>GetGraspedPosition</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Interaction.IGraspedPoseHandler.GetGraspedPosition (out Vector3 position, out Quaternion rotation)</computeroutput></para><para>

<para>Calculate the best holding position and orientation given the current state of all InteractionControllers (added via <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1ad6b297cf90c878a95ca69901180ab4ce">AddController()</link>). </para>
</para>
<para>
Implemented in <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose_1ad691816b67d028dfc7c69e9c782c6eef">Leap.Unity.Interaction.KabschGraspedPose</link>.</para>
    </section><anchor xml:id="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler_1a7e7305b0089610eced1ee4ca98c3d586"/>    <section>
    <title>RemoveController()</title>
<indexterm><primary>RemoveController</primary><secondary>Leap.Unity.Interaction.IGraspedPoseHandler</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.IGraspedPoseHandler</primary><secondary>RemoveController</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Interaction.IGraspedPoseHandler.RemoveController (<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> controller)</computeroutput></para><para>

<para>Called when an <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> stops grasping a certain object; the controller should no longer be included in the held pose calculation. </para>
</para>
<para>
Implemented in <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose_1a661d3ea1067114b90addbc885691c899">Leap.Unity.Interaction.KabschGraspedPose</link>.</para>
</section>
<para>
The documentation for this interface was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Scripts/Internal/Interface/<link linkend="__i_grasped_pose_handler_8cs">IGraspedPoseHandler.cs</link></section>
</section>
