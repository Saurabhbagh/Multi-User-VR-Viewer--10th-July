<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__controller_button_hints_8cs_source">
<title>ControllerButtonHints.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Hints/Scripts/ControllerButtonHints.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//=======&#32;Copyright&#32;(c)&#32;Valve&#32;Corporation,&#32;All&#32;rights&#32;reserved.&#32;===============</emphasis>
00002 <emphasis role="comment">//</emphasis>
00003 <emphasis role="comment">//&#32;Purpose:&#32;Displays&#32;text&#32;and&#32;button&#32;hints&#32;on&#32;the&#32;controllers</emphasis>
00004 <emphasis role="comment">//</emphasis>
00005 <emphasis role="comment">//=============================================================================</emphasis>
00006 
00007 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00008 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00009 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.UI;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Text;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system">Valve.VR.InteractionSystem</link>
00014 {
00015 &#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00016"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;:&#32;MonoBehaviour
00017 &#32;&#32;&#32;&#32;{
<anchor xml:id="__controller_button_hints_8cs_source_1l00018"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a4dadb6b679ec977c980829adfc9673fa">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Material&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a4dadb6b679ec977c980829adfc9673fa">controllerMaterial</link>;
<anchor xml:id="__controller_button_hints_8cs_source_1l00019"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a38b10d9b505fffc030257aac1602758f">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a38b10d9b505fffc030257aac1602758f">flashColor</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(&#32;1.0f,&#32;0.557f,&#32;0.0f&#32;);
<anchor xml:id="__controller_button_hints_8cs_source_1l00020"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ac3205beda1e8ea9bb2869b48d82039a5">00020</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ac3205beda1e8ea9bb2869b48d82039a5">textHintPrefab</link>;
00021 
<anchor xml:id="__controller_button_hints_8cs_source_1l00022"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0fb27da7be6a805617634f7075e794a">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vibration">SteamVR_Action_Vibration</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0fb27da7be6a805617634f7075e794a">hapticFlash</link>&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input">SteamVR_Input</link>.GetAction&lt;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vibration">SteamVR_Action_Vibration</link>&gt;(<emphasis role="stringliteral">&quot;Haptic&quot;</emphasis>);
00023 
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Header(&#32;<emphasis role="stringliteral">&quot;Debug&quot;</emphasis>&#32;)]
<anchor xml:id="__controller_button_hints_8cs_source_1l00025"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0dc92cbb8908e12e4dbe21c9ae18c03">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0dc92cbb8908e12e4dbe21c9ae18c03">debugHints</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00026 
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model">SteamVR_RenderModel</link>&#32;renderModel;
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player">Player</link>&#32;player;
00029 
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;MeshRenderer&gt;&#32;renderers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;MeshRenderer&gt;();
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;MeshRenderer&gt;&#32;flashingRenderers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;MeshRenderer&gt;();
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;startTime;
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;tickCount;
00034 
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;OffsetType
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_valve_1_1_v_r_1ad0398c1325c370eb3a4796d89610b868a258f49887ef8d14ac268c92b02503aaa">Up</link>,
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Right,
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Forward,
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Back
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00042 
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Info&#32;for&#32;each&#32;of&#32;the&#32;buttons</emphasis>
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>ActionHintInfo
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;componentName;
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;MeshRenderer&gt;&#32;renderers;
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;localTransform;
00049 
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Text&#32;hint</emphasis>
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;textHintObject;
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;textStartAnchor;
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;textEndAnchor;
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;textEndOffsetDir;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Transform&#32;canvasOffset;
00056 
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Text&#32;text;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;TextMesh&#32;textMesh;
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Canvas&#32;textCanvas;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;LineRenderer&#32;line;
00061 
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;distanceFromCenter;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;textHintActive&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00065 
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Dictionary&lt;ISteamVR_Action_In_Source,&#32;ActionHintInfo&gt;&#32;actionHintInfos;
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Transform&#32;textHintParent;
00068 
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;colorID;
00070 
<anchor xml:id="__controller_button_hints_8cs_source_1l00071"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a5d3509127dd1aac8bb1df1245861508f">00071</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a5d3509127dd1aac8bb1df1245861508f">initialized</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>;&#32;}
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;centerPosition&#32;=&#32;Vector3.zero;
00073 
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SteamVR_Events.Action&#32;renderModelLoadedAction;
00075 
<anchor xml:id="__controller_button_hints_8cs_source_1l00076"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">00076</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f">SteamVR_Input_Sources</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>;
00077 
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModelLoadedAction&#32;=&#32;SteamVR_Events.RenderModelLoadedAction(&#32;OnRenderModelLoaded&#32;);
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colorID&#32;=&#32;Shader.PropertyToID(&#32;<emphasis role="stringliteral">&quot;_Color&quot;</emphasis>&#32;);
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00084 
00085 
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;player&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player">Player</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player_1ad6c38e0b00917563e4b19d206d20466e">instance</link>;
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00091 
00092 
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HintDebugLog(&#32;<emphasis role="keywordtype">string</emphasis>&#32;msg&#32;)
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0dc92cbb8908e12e4dbe21c9ae18c03">debugHints</link>&#32;)
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;&lt;b&gt;[SteamVR&#32;Interaction]&lt;/b&gt;&#32;Hints:&#32;&quot;</emphasis>&#32;+&#32;msg&#32;);
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00101 
00102 
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModelLoadedAction.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00108 
00109 
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable()
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModelLoadedAction.enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Clear();
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00116 
00117 
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnParentHandInputFocusLost()
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Hide&#32;all&#32;the&#32;hints&#32;when&#32;the&#32;controller&#32;is&#32;no&#32;longer&#32;the&#32;primary&#32;attached&#32;object</emphasis>
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HideAllButtonHints();
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HideAllText();
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00125 
00126 
<anchor xml:id="__controller_button_hints_8cs_source_1l00127"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a2fe333f357924080487804c3e1281a41">00127</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a2fe333f357924080487804c3e1281a41">SetInputSource</link>(<link linkend="_namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f">SteamVR_Input_Sources</link>&#32;newInputSource)
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>&#32;=&#32;newInputSource;
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(renderModel&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model_1a56179c580285575841d60ae39e5685d3">SetInputSource</link>(newInputSource);
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00133 
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Gets&#32;called&#32;when&#32;the&#32;hand&#32;has&#32;been&#32;initialized&#32;and&#32;a&#32;render&#32;model&#32;has&#32;been&#32;set</emphasis>
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnHandInitialized(<emphasis role="keywordtype">int</emphasis>&#32;deviceIndex)
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Create&#32;a&#32;new&#32;render&#32;model&#32;for&#32;the&#32;controller&#32;hints</emphasis>
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(&#32;<emphasis role="stringliteral">&quot;SteamVR_RenderModel&quot;</emphasis>&#32;).AddComponent&lt;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model">SteamVR_RenderModel</link>&gt;();
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.transform.parent&#32;=&#32;transform;
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.transform.localPosition&#32;=&#32;Vector3.zero;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.transform.localRotation&#32;=&#32;Quaternion.identity;
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.transform.localScale&#32;=&#32;Vector3.one;
00145 
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model_1a56179c580285575841d60ae39e5685d3">SetInputSource</link>(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>);
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model_1a0d60fefa83b15ba80676f55753f89274">SetDeviceIndex</link>(deviceIndex);
00148 
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a5d3509127dd1aac8bb1df1245861508f">initialized</link>&#32;)
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//The&#32;controller&#32;hint&#32;render&#32;model&#32;needs&#32;to&#32;be&#32;active&#32;to&#32;get&#32;accurate&#32;transforms&#32;for&#32;all&#32;the&#32;individual&#32;components</emphasis>
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.gameObject.SetActive(&#32;<emphasis role="keyword">true</emphasis>&#32;);
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00155 
00156 
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Dictionary&lt;string,&#32;Transform&gt;&#32;componentTransformMap&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;Transform&gt;();
00158 
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnRenderModelLoaded(SteamVR_RenderModel&#32;renderModel,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;succeess)
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Only&#32;initialize&#32;when&#32;the&#32;render&#32;model&#32;for&#32;the&#32;controller&#32;hints&#32;has&#32;been&#32;loaded</emphasis>
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(renderModel&#32;==&#32;this.renderModel)
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;&lt;b&gt;[SteamVR&#32;Interaction]&lt;/b&gt;&#32;OnRenderModelLoaded:&#32;&quot;&#32;+&#32;this.renderModel.renderModelName);</emphasis>
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a5d3509127dd1aac8bb1df1245861508f">initialized</link>)
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(textHintParent.gameObject);
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;componentTransformMap.Clear();
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flashingRenderers.Clear();
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00172 
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.SetMeshRendererState(<emphasis role="keyword">false</emphasis>);
00174 
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(DoInitialize(renderModel));
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;DoInitialize(SteamVR_RenderModel&#32;renderModel)
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(renderModel.initializedAttachPoints&#32;==&#32;<emphasis role="keyword">false</emphasis>)
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00182 
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textHintParent&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(<emphasis role="stringliteral">&quot;Text&#32;Hints&quot;</emphasis>).transform;
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textHintParent.SetParent(this.transform);
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textHintParent.localPosition&#32;=&#32;Vector3.zero;
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textHintParent.localRotation&#32;=&#32;Quaternion.identity;
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textHintParent.localScale&#32;=&#32;Vector3.one;
00188 
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Get&#32;the&#32;button&#32;mask&#32;for&#32;each&#32;component&#32;of&#32;the&#32;render&#32;model</emphasis>
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;renderModels&#32;=&#32;OpenVR.RenderModels;
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(renderModels&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;renderModelDebug&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
00195 
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0dc92cbb8908e12e4dbe21c9ae18c03">debugHints</link>)
00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModelDebug&#32;=&#32;<emphasis role="stringliteral">&quot;Components&#32;for&#32;render&#32;model&#32;&quot;</emphasis>&#32;+&#32;renderModel.index;
00198 
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;childIndex&#32;=&#32;0;&#32;childIndex&#32;&lt;&#32;renderModel.transform.childCount;&#32;childIndex++)
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;child&#32;=&#32;renderModel.transform.GetChild(childIndex);
00202 
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(componentTransformMap.ContainsKey(child.name))
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0dc92cbb8908e12e4dbe21c9ae18c03">debugHints</link>)
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModelDebug&#32;+=&#32;<emphasis role="stringliteral">&quot;\n\t!&#32;&#32;&#32;&#32;Child&#32;component&#32;already&#32;exists&#32;with&#32;name:&#32;&quot;</emphasis>&#32;+&#32;child.name;
00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;componentTransformMap.Add(child.name,&#32;child);
00210 
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0dc92cbb8908e12e4dbe21c9ae18c03">debugHints</link>)
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModelDebug&#32;+=&#32;<emphasis role="stringliteral">&quot;\n\t&quot;</emphasis>&#32;+&#32;child.name&#32;+&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>;
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00214 
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Uncomment&#32;to&#32;show&#32;the&#32;button&#32;mask&#32;for&#32;each&#32;component&#32;of&#32;the&#32;render&#32;model</emphasis>
00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HintDebugLog(renderModelDebug);
00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00218 
00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actionHintInfos&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;ISteamVR_Action_In_Source,&#32;ActionHintInfo&gt;();
00220 
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;actionIndex&#32;=&#32;0;&#32;actionIndex&#32;&lt;&#32;SteamVR_Input.actionsNonPoseNonSkeletonIn.Length;&#32;actionIndex++)
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ISteamVR_Action_In&#32;action&#32;=&#32;SteamVR_Input.actionsNonPoseNonSkeletonIn[actionIndex];
00224 
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action.GetActive(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>))
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CreateAndAddButtonInfo(action,&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>);
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00228 
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ComputeTextEndTransforms();
00230 
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a5d3509127dd1aac8bb1df1245861508f">initialized</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00232 
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Set&#32;the&#32;controller&#32;hints&#32;render&#32;model&#32;to&#32;not&#32;active</emphasis>
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.SetMeshRendererState(<emphasis role="keyword">true</emphasis>);
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00237 
00238 
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;CreateAndAddButtonInfo(ISteamVR_Action_In&#32;action,&#32;<link linkend="_namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853f">SteamVR_Input_Sources</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>)
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;buttonTransform&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;MeshRenderer&gt;&#32;buttonRenderers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;MeshRenderer&gt;();
00244 
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StringBuilder&#32;buttonDebug&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;StringBuilder();
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.Append(<emphasis role="stringliteral">&quot;Looking&#32;for&#32;action:&#32;&quot;</emphasis>);
00247 
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.AppendLine(action.GetShortName());
00249 
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.Append(<emphasis role="stringliteral">&quot;Action&#32;localized&#32;origin:&#32;&quot;</emphasis>);
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.AppendLine(action.GetLocalizedOrigin(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>));
00252 
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;actionComponentName&#32;=&#32;action.GetRenderModelComponentName(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>);
00254 
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(componentTransformMap.ContainsKey(actionComponentName))
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.AppendLine(<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Found&#32;component:&#32;{0}&#32;for&#32;{1}&quot;</emphasis>,&#32;actionComponentName,&#32;action.GetShortName()));
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;componentTransform&#32;=&#32;componentTransformMap[actionComponentName];
00259 
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonTransform&#32;=&#32;componentTransform;
00261 
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.AppendLine(<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Found&#32;componentTransform:&#32;{0}.&#32;buttonTransform:&#32;{1}&quot;</emphasis>,&#32;componentTransform,&#32;buttonTransform));
00263 
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonRenderers.AddRange(componentTransform.GetComponentsInChildren&lt;MeshRenderer&gt;());
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.AppendLine(<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Can&apos;t&#32;find&#32;component&#32;transform&#32;for&#32;action:&#32;{0}.&#32;Component&#32;name:&#32;\&quot;{1}\&quot;&quot;</emphasis>,&#32;action.GetShortName(),&#32;actionComponentName));
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00270 
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.AppendLine(<emphasis role="keywordtype">string</emphasis>.Format(<emphasis role="stringliteral">&quot;Found&#32;{0}&#32;renderers&#32;for&#32;{1}&quot;</emphasis>,&#32;buttonRenderers.Count,&#32;action.GetShortName()));
00272 
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(&#32;MeshRenderer&#32;renderer&#32;<emphasis role="keywordflow">in</emphasis>&#32;buttonRenderers&#32;)
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.Append(<emphasis role="stringliteral">&quot;\t&quot;</emphasis>);
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buttonDebug.AppendLine(renderer.name);
00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00278 
00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HintDebugLog(&#32;buttonDebug.ToString()&#32;);
00280 
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;buttonTransform&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;)
00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HintDebugLog(&#32;<emphasis role="stringliteral">&quot;Couldn&apos;t&#32;find&#32;buttonTransform&#32;for&#32;&quot;</emphasis>&#32;+&#32;action.GetShortName());
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00286 
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ActionHintInfo&#32;hintInfo&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ActionHintInfo();
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actionHintInfos.Add(&#32;action,&#32;hintInfo&#32;);
00289 
00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.componentName&#32;=&#32;buttonTransform.name;
00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.renderers&#32;=&#32;buttonRenderers;
00292 
00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Get&#32;the&#32;local&#32;transform&#32;for&#32;the&#32;button</emphasis>
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;childIndex&#32;=&#32;0;&#32;childIndex&#32;&lt;&#32;buttonTransform.childCount;&#32;childIndex++)
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;child&#32;=&#32;buttonTransform.GetChild(childIndex);
00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(child.name&#32;==&#32;SteamVR_RenderModel.k_localTransformName)
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.localTransform&#32;=&#32;child;
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00300 
00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OffsetType&#32;offsetType&#32;=&#32;OffsetType.Right;
00302 
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
00304 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;switch&#32;(&#32;buttonID&#32;)</emphasis>
00305 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
00306 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;EVRButtonId.k_EButton_SteamVR_Trigger:</emphasis>
00307 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
00308 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetType&#32;=&#32;OffsetType.Right;</emphasis>
00309 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
00310 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
00311 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;EVRButtonId.k_EButton_ApplicationMenu:</emphasis>
00312 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
00313 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetType&#32;=&#32;OffsetType.Right;</emphasis>
00314 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
00315 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
00316 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;EVRButtonId.k_EButton_System:</emphasis>
00317 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
00318 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetType&#32;=&#32;OffsetType.Right;</emphasis>
00319 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
00320 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
00321 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;Valve.VR.EVRButtonId.k_EButton_Grip:</emphasis>
00322 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
00323 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetType&#32;=&#32;OffsetType.Forward;</emphasis>
00324 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
00325 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
00326 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;Valve.VR.EVRButtonId.k_EButton_SteamVR_Touchpad:</emphasis>
00327 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
00328 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offsetType&#32;=&#32;OffsetType.Up;</emphasis>
00329 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
00330 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
00331 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
00332 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
00333 
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Offset&#32;for&#32;the&#32;text&#32;end&#32;transform</emphasis>
00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(&#32;offsetType&#32;)
00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;OffsetType.Forward:
00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textEndOffsetDir&#32;=&#32;hintInfo.localTransform.forward;
00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;OffsetType.Back:
00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textEndOffsetDir&#32;=&#32;-hintInfo.localTransform.forward;
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;OffsetType.Right:
00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textEndOffsetDir&#32;=&#32;hintInfo.localTransform.right;
00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;OffsetType.Up:
00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textEndOffsetDir&#32;=&#32;hintInfo.localTransform.up;
00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00350 
00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Create&#32;the&#32;text&#32;hint&#32;object</emphasis>
00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;hintStartPos&#32;=&#32;hintInfo.localTransform.position&#32;+&#32;(&#32;hintInfo.localTransform.forward&#32;*&#32;0.01f&#32;);
00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintObject&#32;=&#32;GameObject.Instantiate(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ac3205beda1e8ea9bb2869b48d82039a5">textHintPrefab</link>,&#32;hintStartPos,&#32;Quaternion.identity&#32;)&#32;as&#32;GameObject;
00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintObject.name&#32;=&#32;<emphasis role="stringliteral">&quot;Hint_&quot;</emphasis>&#32;+&#32;hintInfo.componentName&#32;+&#32;<emphasis role="stringliteral">&quot;_Start&quot;</emphasis>;
00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintObject.transform.SetParent(&#32;textHintParent&#32;);
00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintObject.layer&#32;=&#32;gameObject.layer;
00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintObject.tag&#32;=&#32;gameObject.tag;
00358 
00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Get&#32;all&#32;the&#32;relevant&#32;child&#32;objects</emphasis>
00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textStartAnchor&#32;=&#32;hintInfo.textHintObject.transform.Find(&#32;<emphasis role="stringliteral">&quot;Start&quot;</emphasis>&#32;);
00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textEndAnchor&#32;=&#32;hintInfo.textHintObject.transform.Find(&#32;<emphasis role="stringliteral">&quot;End&quot;</emphasis>&#32;);
00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.canvasOffset&#32;=&#32;hintInfo.textHintObject.transform.Find(&#32;<emphasis role="stringliteral">&quot;CanvasOffset&quot;</emphasis>&#32;);
00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.line&#32;=&#32;hintInfo.textHintObject.transform.Find(&#32;<emphasis role="stringliteral">&quot;Line&quot;</emphasis>&#32;).GetComponent&lt;LineRenderer&gt;();
00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textCanvas&#32;=&#32;hintInfo.textHintObject.GetComponentInChildren&lt;Canvas&gt;();
00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.text&#32;=&#32;hintInfo.textCanvas.GetComponentInChildren&lt;Text&gt;();
00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textMesh&#32;=&#32;hintInfo.textCanvas.GetComponentInChildren&lt;TextMesh&gt;();
00367 
00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintObject.SetActive(&#32;<emphasis role="keyword">false</emphasis>&#32;);
00369 
00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textStartAnchor.position&#32;=&#32;hintStartPos;
00371 
00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hintInfo.text&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.text.text&#32;=&#32;hintInfo.componentName;
00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00376 
00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hintInfo.textMesh&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textMesh.text&#32;=&#32;hintInfo.componentName;
00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00381 
00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;centerPosition&#32;+=&#32;hintInfo.textStartAnchor.position;
00383 
00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Scale&#32;hint&#32;components&#32;to&#32;match&#32;player&#32;size</emphasis>
00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textCanvas.transform.localScale&#32;=&#32;Vector3.Scale(&#32;hintInfo.textCanvas.transform.localScale,&#32;player.transform.localScale&#32;);
00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textStartAnchor.transform.localScale&#32;=&#32;Vector3.Scale(&#32;hintInfo.textStartAnchor.transform.localScale,&#32;player.transform.localScale&#32;);
00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textEndAnchor.transform.localScale&#32;=&#32;Vector3.Scale(&#32;hintInfo.textEndAnchor.transform.localScale,&#32;player.transform.localScale&#32;);
00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.line.transform.localScale&#32;=&#32;Vector3.Scale(&#32;hintInfo.line.transform.localScale,&#32;player.transform.localScale&#32;);
00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00390 
00391 
00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ComputeTextEndTransforms()
00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//This&#32;is&#32;done&#32;as&#32;a&#32;separate&#32;step&#32;after&#32;all&#32;the&#32;ButtonHintInfos&#32;have&#32;been&#32;initialized</emphasis>
00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//to&#32;make&#32;the&#32;text&#32;hints&#32;fan&#32;out&#32;appropriately&#32;based&#32;on&#32;the&#32;button&apos;s&#32;position&#32;on&#32;the&#32;controller.</emphasis>
00397 
00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;centerPosition&#32;/=&#32;actionHintInfos.Count;
00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxDistanceFromCenter&#32;=&#32;0.0f;
00400 
00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(&#32;var&#32;hintInfo&#32;<emphasis role="keywordflow">in</emphasis>&#32;actionHintInfos&#32;)
00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.Value.distanceFromCenter&#32;=&#32;Vector3.Distance(&#32;hintInfo.Value.textStartAnchor.position,&#32;centerPosition&#32;);
00404 
00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hintInfo.Value.distanceFromCenter&#32;&gt;&#32;maxDistanceFromCenter&#32;)
00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxDistanceFromCenter&#32;=&#32;hintInfo.Value.distanceFromCenter;
00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00410 
00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(&#32;var&#32;hintInfo&#32;<emphasis role="keywordflow">in</emphasis>&#32;actionHintInfos&#32;)
00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;centerToButton&#32;=&#32;hintInfo.Value.textStartAnchor.position&#32;-&#32;centerPosition;
00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;centerToButton.Normalize();
00415 
00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;centerToButton&#32;=&#32;Vector3.Project(&#32;centerToButton,&#32;renderModel.transform.forward&#32;);
00417 
00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Spread&#32;out&#32;the&#32;text&#32;end&#32;positions&#32;based&#32;on&#32;the&#32;distance&#32;from&#32;the&#32;center</emphasis>
00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;t&#32;=&#32;hintInfo.Value.distanceFromCenter&#32;/&#32;maxDistanceFromCenter;
00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;scale&#32;=&#32;hintInfo.Value.distanceFromCenter&#32;*&#32;Mathf.Pow(&#32;2,&#32;10&#32;*&#32;(&#32;t&#32;-&#32;1.0f&#32;)&#32;)&#32;*&#32;20.0f;
00421 
00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Flip&#32;the&#32;direction&#32;of&#32;the&#32;end&#32;pos&#32;based&#32;on&#32;which&#32;hand&#32;this&#32;is</emphasis>
00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;endPosOffset&#32;=&#32;0.1f;
00424 
00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;hintEndPos&#32;=&#32;hintInfo.Value.textStartAnchor.position&#32;+&#32;(&#32;hintInfo.Value.textEndOffsetDir&#32;*&#32;endPosOffset&#32;)&#32;+&#32;(&#32;centerToButton&#32;*&#32;scale&#32;*&#32;0.1f&#32;);
00426 
00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SteamVR_Utils.IsValid(hintEndPos))
00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.Value.textEndAnchor.position&#32;=&#32;hintEndPos;
00430 
00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.Value.canvasOffset.position&#32;=&#32;hintEndPos;
00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(<emphasis role="stringliteral">&quot;&lt;b&gt;[SteamVR&#32;Interaction]&lt;/b&gt;&#32;Invalid&#32;end&#32;position&#32;for:&#32;&quot;</emphasis>&#32;+&#32;hintInfo.Value.textStartAnchor.name,&#32;hintInfo.Value.textStartAnchor.gameObject);
00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.Value.canvasOffset.localRotation&#32;=&#32;Quaternion.identity;
00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00440 
00441 
00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ShowButtonHint(&#32;params&#32;ISteamVR_Action_In_Source[]&#32;actions&#32;)
00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.gameObject.SetActive(&#32;<emphasis role="keyword">true</emphasis>&#32;);
00446 
00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.GetComponentsInChildren&lt;MeshRenderer&gt;(&#32;renderers&#32;);
00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;renderers.Count;&#32;i++&#32;)
00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Texture&#32;mainTexture&#32;=&#32;renderers[i].material.mainTexture;
00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderers[i].sharedMaterial&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a4dadb6b679ec977c980829adfc9673fa">controllerMaterial</link>;
00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderers[i].material.mainTexture&#32;=&#32;mainTexture;
00453 
00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;is&#32;to&#32;poke&#32;unity&#32;into&#32;setting&#32;the&#32;correct&#32;render&#32;queue&#32;for&#32;the&#32;model</emphasis>
00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderers[i].material.renderQueue&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a4dadb6b679ec977c980829adfc9673fa">controllerMaterial</link>.shader.renderQueue;
00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00457 
00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;actions.Length;&#32;i++&#32;)
00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;actionHintInfos.ContainsKey(&#32;actions[i]&#32;)&#32;)
00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ActionHintInfo&#32;hintInfo&#32;=&#32;actionHintInfos[actions[i]];
00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(&#32;MeshRenderer&#32;renderer&#32;<emphasis role="keywordflow">in</emphasis>&#32;hintInfo.renderers&#32;)
00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!flashingRenderers.Contains(&#32;renderer&#32;)&#32;)
00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flashingRenderers.Add(&#32;renderer&#32;);
00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00472 
00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;startTime&#32;=&#32;Time.realtimeSinceStartup;
00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tickCount&#32;=&#32;0.0f;
00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00476 
00477 
00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HideAllButtonHints()
00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Clear();
00482 
00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(renderModel&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;renderModel.gameObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.gameObject.SetActive(&#32;<emphasis role="keyword">false</emphasis>&#32;);
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00486 
00487 
00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HideButtonHint(&#32;params&#32;ISteamVR_Action_In_Source[]&#32;actions&#32;)
00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;baseColor&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a4dadb6b679ec977c980829adfc9673fa">controllerMaterial</link>.GetColor(&#32;colorID&#32;);
00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;actions.Length;&#32;i++&#32;)
00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;actionHintInfos.ContainsKey(actions[i]&#32;)&#32;)
00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ActionHintInfo&#32;hintInfo&#32;=&#32;actionHintInfos[actions[i]];
00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(&#32;MeshRenderer&#32;renderer&#32;<emphasis role="keywordflow">in</emphasis>&#32;hintInfo.renderers&#32;)
00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderer.material.color&#32;=&#32;baseColor;
00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flashingRenderers.Remove(&#32;renderer&#32;);
00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00504 
00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;flashingRenderers.Count&#32;==&#32;0&#32;)
00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.gameObject.SetActive(&#32;<emphasis role="keyword">false</emphasis>&#32;);
00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00510 
00511 
00512 
00513 
00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsButtonHintActive(ISteamVR_Action_In_Source&#32;action&#32;)
00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;actionHintInfos.ContainsKey(action)&#32;)
00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ActionHintInfo&#32;hintInfo&#32;=&#32;actionHintInfos[action];
00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(&#32;MeshRenderer&#32;buttonRenderer&#32;<emphasis role="keywordflow">in</emphasis>&#32;hintInfo.renderers&#32;)
00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;flashingRenderers.Contains(&#32;buttonRenderer&#32;)&#32;)
00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00528 
00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00531 
00532 
00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;TestButtonHints()
00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(&#32;<emphasis role="keyword">true</emphasis>&#32;)
00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;actionIndex&#32;=&#32;0;&#32;actionIndex&#32;&lt;&#32;SteamVR_Input.actionsNonPoseNonSkeletonIn.Length;&#32;actionIndex++)
00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ISteamVR_Action_In&#32;action&#32;=&#32;SteamVR_Input.actionsNonPoseNonSkeletonIn[actionIndex];
00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action.GetActive(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>))
00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShowButtonHint(action);
00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(1.0f);
00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00550 
00551 
00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;TestTextHints()
00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(&#32;<emphasis role="keyword">true</emphasis>&#32;)
00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;actionIndex&#32;=&#32;0;&#32;actionIndex&#32;&lt;&#32;SteamVR_Input.actionsNonPoseNonSkeletonIn.Length;&#32;actionIndex++)
00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ISteamVR_Action_In&#32;action&#32;=&#32;SteamVR_Input.actionsNonPoseNonSkeletonIn[actionIndex];
00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(action.GetActive(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>))
00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShowText(action,&#32;action.GetShortName());
00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(3.0f);
00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00567 
00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HideAllText();
00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(&#32;3.0f&#32;);
00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00572 
00573 
00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;renderModel&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;renderModel.gameObject.activeInHierarchy&#32;&amp;&amp;&#32;flashingRenderers.Count&#32;&gt;&#32;0&#32;)
00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;baseColor&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a4dadb6b679ec977c980829adfc9673fa">controllerMaterial</link>.GetColor(&#32;colorID&#32;);
00580 
00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;flash&#32;=&#32;(&#32;Time.realtimeSinceStartup&#32;-&#32;startTime&#32;)&#32;*&#32;Mathf.PI&#32;*&#32;2.0f;
00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flash&#32;=&#32;Mathf.Cos(&#32;flash&#32;);
00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flash&#32;=&#32;Util.RemapNumberClamped(&#32;flash,&#32;-1.0f,&#32;1.0f,&#32;0.0f,&#32;1.0f&#32;);
00584 
00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ticks&#32;=&#32;(&#32;Time.realtimeSinceStartup&#32;-&#32;startTime&#32;);
00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;ticks&#32;-&#32;tickCount&#32;&gt;&#32;1.0f&#32;)
00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tickCount&#32;+=&#32;1.0f;
00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ad0fb27da7be6a805617634f7075e794a">hapticFlash</link>.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vibration_1adf68478c0b7a984b01228ba17d1ce196">Execute</link>(0,&#32;0.005f,&#32;0.005f,&#32;1,&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a0058edfb7a42d2c89bb8b713c1df5fca">inputSource</link>);
00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00591 
00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;flashingRenderers.Count;&#32;i++&#32;)
00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Renderer&#32;r&#32;=&#32;flashingRenderers[i];
00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.material.SetColor(&#32;colorID,&#32;Color.Lerp(&#32;baseColor,&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a38b10d9b505fffc030257aac1602758f">flashColor</link>,&#32;flash&#32;)&#32;);
00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00597 
00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a5d3509127dd1aac8bb1df1245861508f">initialized</link>&#32;)
00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(&#32;var&#32;hintInfo&#32;<emphasis role="keywordflow">in</emphasis>&#32;actionHintInfos&#32;)
00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hintInfo.Value.textHintActive&#32;)
00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateTextHint(&#32;hintInfo.Value&#32;);
00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00610 
00611 
00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;UpdateTextHint(&#32;ActionHintInfo&#32;hintInfo&#32;)
00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;playerTransform&#32;=&#32;player.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player_1a1ed62d545589d4e836edcc6e6e5494a3">hmdTransform</link>;
00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;vDir&#32;=&#32;playerTransform.position&#32;-&#32;hintInfo.canvasOffset.position;
00617 
00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;standardLookat&#32;=&#32;Quaternion.LookRotation(&#32;vDir,&#32;Vector3.up&#32;);
00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;upsideDownLookat&#32;=&#32;Quaternion.LookRotation(&#32;vDir,&#32;playerTransform.up&#32;);
00620 
00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;flInterp;
00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;playerTransform.forward.y&#32;&gt;&#32;0.0f&#32;)
00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flInterp&#32;=&#32;Util.RemapNumberClamped(&#32;playerTransform.forward.y,&#32;0.6f,&#32;0.4f,&#32;1.0f,&#32;0.0f&#32;);
00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flInterp&#32;=&#32;Util.RemapNumberClamped(&#32;playerTransform.forward.y,&#32;-0.8f,&#32;-0.6f,&#32;1.0f,&#32;0.0f&#32;);
00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00630 
00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.canvasOffset.rotation&#32;=&#32;Quaternion.Slerp(&#32;standardLookat,&#32;upsideDownLookat,&#32;flInterp&#32;);
00632 
00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;lineTransform&#32;=&#32;hintInfo.line.transform;
00634 
00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.line.useWorldSpace&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.line.SetPosition(&#32;0,&#32;lineTransform.InverseTransformPoint(&#32;hintInfo.textStartAnchor.position&#32;)&#32;);
00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.line.SetPosition(&#32;1,&#32;lineTransform.InverseTransformPoint(&#32;hintInfo.textEndAnchor.position&#32;)&#32;);
00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00639 
00640 
00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Clear()
00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderers.Clear();
00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flashingRenderers.Clear();
00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00647 
00648 
00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ShowText(ISteamVR_Action_In_Source&#32;action,&#32;<emphasis role="keywordtype">string</emphasis>&#32;text,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;highlightButton&#32;=&#32;<emphasis role="keyword">true</emphasis>&#32;)
00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;actionHintInfos.ContainsKey(action)&#32;)
00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ActionHintInfo&#32;hintInfo&#32;=&#32;actionHintInfos[action];
00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintObject.SetActive(&#32;<emphasis role="keyword">true</emphasis>&#32;);
00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintActive&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00657 
00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hintInfo.text&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.text.text&#32;=&#32;text;
00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00662 
00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hintInfo.textMesh&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textMesh.text&#32;=&#32;text;
00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00667 
00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UpdateTextHint(&#32;hintInfo&#32;);
00669 
00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;highlightButton&#32;)
00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShowButtonHint(action);
00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00674 
00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;renderModel.gameObject.SetActive(&#32;<emphasis role="keyword">true</emphasis>&#32;);
00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00678 
00679 
00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HideText(ISteamVR_Action_In_Source&#32;action)
00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;actionHintInfos.ContainsKey(action)&#32;)
00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ActionHintInfo&#32;hintInfo&#32;=&#32;actionHintInfos[action];
00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintObject.SetActive(&#32;<emphasis role="keyword">false</emphasis>&#32;);
00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.textHintActive&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00688 
00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HideButtonHint(action);
00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00692 
00693 
00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HideAllText()
00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(actionHintInfos&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00699 
00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;hintInfo&#32;<emphasis role="keywordflow">in</emphasis>&#32;actionHintInfos)
00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.Value.textHintObject.SetActive(<emphasis role="keyword">false</emphasis>);
00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hintInfo.Value.textHintActive&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00705 
00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HideAllButtonHints();
00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00709 
00710 
00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetActiveHintText(ISteamVR_Action_In_Source&#32;action&#32;)
00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;actionHintInfos.ContainsKey(action)&#32;)
00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ActionHintInfo&#32;hintInfo&#32;=&#32;actionHintInfos[action];
00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hintInfo.textHintActive&#32;)
00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hintInfo.text.text;
00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00724 
00725 
00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;These&#32;are&#32;the&#32;static&#32;functions&#32;which&#32;are&#32;used&#32;to&#32;show/hide&#32;the&#32;hints</emphasis>
00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00729 
00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;ControllerButtonHints&#32;GetControllerButtonHints(&#32;Hand&#32;hand&#32;)
00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hand&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ControllerButtonHints&#32;hints&#32;=&#32;hand.GetComponentInChildren&lt;ControllerButtonHints&gt;();
00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;hints.initialized&#32;)
00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hints;
00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00741 
00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00744 
00745 
00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00747"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1afd53eaebcf77a92658798083cec70efb">00747</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1afd53eaebcf77a92658798083cec70efb">ShowButtonHint</link>(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand,&#32;params&#32;<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source">ISteamVR_Action_In_Source</link>[]&#32;actions&#32;)
00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;hints&#32;=&#32;GetControllerButtonHints(&#32;hand&#32;);
00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hints.ShowButtonHint(&#32;actions&#32;);
00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00755 
00756 
00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00758"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a9251a64a30783b3698e77756b7c8015a">00758</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a9251a64a30783b3698e77756b7c8015a">HideButtonHint</link>(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand,&#32;params&#32;<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source">ISteamVR_Action_In_Source</link>[]&#32;actions&#32;)
00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;hints&#32;=&#32;GetControllerButtonHints(&#32;hand&#32;);
00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hints.HideButtonHint(&#32;actions&#32;);
00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00766 
00767 
00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00769"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a9f0a9b2269509333a344a4af3238586f">00769</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a9f0a9b2269509333a344a4af3238586f">HideAllButtonHints</link>(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand&#32;)
00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;hints&#32;=&#32;GetControllerButtonHints(&#32;hand&#32;);
00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hints.HideAllButtonHints();
00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00777 
00778 
00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00780"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ada4167a32d9f46f9449972d3e32fd625">00780</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1ada4167a32d9f46f9449972d3e32fd625">IsButtonHintActive</link>(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand,&#32;<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source">ISteamVR_Action_In_Source</link>&#32;action&#32;)
00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;hints&#32;=&#32;GetControllerButtonHints(&#32;hand&#32;);
00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hints.IsButtonHintActive(action);
00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00787 
00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00790 
00791 
00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00793"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a8b844addfa29feab6b59064e322a0ca8">00793</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a8b844addfa29feab6b59064e322a0ca8">ShowTextHint</link>(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand,&#32;<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source">ISteamVR_Action_In_Source</link>&#32;action,&#32;<emphasis role="keywordtype">string</emphasis>&#32;text,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;highlightButton&#32;=&#32;<emphasis role="keyword">true</emphasis>&#32;)
00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;hints&#32;=&#32;GetControllerButtonHints(&#32;hand&#32;);
00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hints.ShowText(action,&#32;text,&#32;highlightButton&#32;);
00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00801 
00802 
00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00804"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a25bef79c295ed33b6ea4719007a9a7bc">00804</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a25bef79c295ed33b6ea4719007a9a7bc">HideTextHint</link>(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand,&#32;<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source">ISteamVR_Action_In_Source</link>&#32;action)
00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;hints&#32;=&#32;GetControllerButtonHints(&#32;hand&#32;);
00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hints.HideText(action);
00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00812 
00813 
00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00815"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a3fb4f53e05f7feeb5c397a3747dc7a99">00815</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a3fb4f53e05f7feeb5c397a3747dc7a99">HideAllTextHints</link>(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand&#32;)
00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;hints&#32;=&#32;GetControllerButtonHints(&#32;hand&#32;);
00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hints.HideAllText();
00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00823 
00824 
00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__controller_button_hints_8cs_source_1l00826"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a17c44960af993a2fe0341ef48c7ad727">00826</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints_1a17c44960af993a2fe0341ef48c7ad727">GetActiveHintText</link>(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand,&#32;<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source">ISteamVR_Action_In_Source</link>&#32;action)
00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">ControllerButtonHints</link>&#32;hints&#32;=&#32;GetControllerButtonHints(&#32;hand&#32;);
00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hints&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hints.GetActiveHintText(action);
00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00833 
00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Empty;
00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00836 &#32;&#32;&#32;&#32;}
00837 }
</programlisting></section>
