<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_leap_1_1_controller">
<title>Leap.Controller Class Reference</title>
<indexterm><primary>Leap.Controller</primary></indexterm>
<para>

<para>The <link linkend="_class_leap_1_1_controller">Controller</link> class is your main interface to the <link linkend="_namespace_leap">Leap</link> Motion <link linkend="_class_leap_1_1_controller">Controller</link>. </para>
 
</para>
<para>Inheritance diagram for Leap.Controller:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_leap_1_1_controller.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">PolicyFlag</link> { 
<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6ab59265c49564c97b26e7bcd5010a5f84">PolicyFlag.POLICY_DEFAULT</link> = 0, 
<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6a9fc384525c1401b9857161b983424b2a">PolicyFlag.POLICY_BACKGROUND_FRAMES</link> = (1 &lt;&lt; 0), 
<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6a641dbeeedb2436f6a066543de846bd31">PolicyFlag.POLICY_IMAGES</link> = (1 &lt;&lt; 1), 
<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6abc23e8520336d09d968f5206793d3d8e">PolicyFlag.POLICY_OPTIMIZE_HMD</link> = (1 &lt;&lt; 2), 

<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6a0c44039d577c70083c82666b332bd71b">PolicyFlag.POLICY_ALLOW_PAUSE_RESUME</link> = (1 &lt;&lt; 3), 
<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6a913295f4bfba846c1ee80037a8a2b7be">PolicyFlag.POLICY_MAP_POINTS</link> = (1 &lt;&lt; 7)
 }</para>

<para>The supported controller policies. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1ad2b8546f002e50164178d1cb7fff4d57">Dispose</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_leap_1_1_controller_1a55b80a043ff15459a08b60bf9f85a955">Controller</link> ()</para>

<para>Constructs a <link linkend="_class_leap_1_1_controller">Controller</link> object. </para>
</listitem>
            <listitem><para><link linkend="_class_leap_1_1_controller_1aa96fa3ac415fe7564a7a9578041d5fff">Controller</link> (int connectionKey)</para>

<para>Constructs a <link linkend="_class_leap_1_1_controller">Controller</link> object using the specified connection key. </para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a3e1e2694a23c62c79f9592217529e860">StartConnection</link> ()</para>

<para>Starts the connection. </para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a08c17e46012a2774afe1b5901e82ce6a">StopConnection</link> ()</para>

<para>Stops the connection. </para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a7e862547a7ea735203220e43c0e04a85">SetPolicy</link> (<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">PolicyFlag</link> policy)</para>

<para>Requests setting a policy. </para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a78edc0a692fa7200a07eee4b651012a4">ClearPolicy</link> (<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">PolicyFlag</link> policy)</para>

<para>Requests clearing a policy. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_controller_1af0f85f9c36a57143107952afc26ec5d4">IsPolicySet</link> (<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">PolicyFlag</link> policy)</para>

<para>Gets the active setting for a specific policy. </para>
</listitem>
            <listitem><para><link linkend="_class_leap_1_1_frame">Frame</link> <link linkend="_class_leap_1_1_controller_1ac41dc9c50a3bd2a892cc44af0859ef0d">Frame</link> (int history=0)</para>

<para>In most cases you should get <link linkend="_class_leap_1_1_frame">Frame</link> objects using the <link linkend="_class_leap_1_1_unity_1_1_leap_provider_1a9a5cf65099912311c37f340d3be7e454">LeapProvider.CurrentFrame</link> property. The data in <link linkend="_class_leap_1_1_frame">Frame</link> objects taken directly from a <link linkend="_class_leap_1_1_controller">Leap.Controller</link> instance is still in the <link linkend="_namespace_leap">Leap</link> Motion frame of reference and will not match the hands displayed in a <link linkend="_namespace_leap_1_1_unity">Unity</link> scene. </para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1acab28236972c254e53d3508cb8aaa1cd">Frame</link> (<link linkend="_class_leap_1_1_frame">Frame</link> toFill, int history=0)</para>

<para>Identical to Frame(history) but instead of constructing a new frame and returning it, the user provides a frame object to be filled with data instead. </para>
</listitem>
            <listitem><para>long <link linkend="_class_leap_1_1_controller_1a3babd82558546e8bc5de90fb80d201ec">FrameTimestamp</link> (int history=0)</para>

<para>Returns the timestamp of a recent tracking frame. Use the optional history parameter to specify how many frames in the past to retrieve the timestamp. Leave the history parameter as it&apos;s default value to return the timestamp of the most recent tracked frame. </para>
</listitem>
            <listitem><para><link linkend="_class_leap_1_1_frame">Frame</link> <link linkend="_class_leap_1_1_controller_1ac8b0d112dcaa36505057f7787a0dedda">GetTransformedFrame</link> (<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> trs, int history=0)</para>

<para>Returns the frame object with all hands transformed by the specified transform matrix. </para>
</listitem>
            <listitem><para><link linkend="_class_leap_1_1_frame">Frame</link> <link linkend="_class_leap_1_1_controller_1aa99cf433f25105c63083d9b6f6ded2e9">GetInterpolatedFrame</link> (Int64 time)</para>

<para>Returns the <link linkend="_class_leap_1_1_frame">Frame</link> at the specified time, interpolating the data between existing frames, if necessary. </para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a44c7a28591b2dab45849aa03640b4889">GetInterpolatedFrame</link> (<link linkend="_class_leap_1_1_frame">Frame</link> toFill, Int64 time)</para>

<para>Fills the <link linkend="_class_leap_1_1_frame">Frame</link> with data taken at the specified time, interpolating the data between existing frames, if necessary. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t">LEAP_HEAD_POSE_EVENT</link> <link linkend="_class_leap_1_1_controller_1a569698b8f3bfbf04216145f4c39d317a">GetInterpolatedHeadPose</link> (Int64 time)</para>

<para>Returns the Head pose at the specified time, interpolating the data between existing frames, if necessary. </para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a3a249a28db2fc7e0088440d55a290638">GetInterpolatedHeadPose</link> (ref <link linkend="_struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t">LEAP_HEAD_POSE_EVENT</link> toFill, Int64 time)</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a0992fb52095c6948ab685dada1abfa2d">TelemetryProfiling</link> (ref <link linkend="_struct_leap_internal_1_1_l_e_a_p___t_e_l_e_m_e_t_r_y___d_a_t_a">LEAP_TELEMETRY_DATA</link> telemetryData)</para>
</listitem>
            <listitem><para>UInt64 <link linkend="_class_leap_1_1_controller_1a30f5d6dc2dfdce1cb56bcd8de049c38e">TelemetryGetNow</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a513b19658a9928fbcb338eda0dc49a13">GetPointMapping</link> (ref <link linkend="_struct_leap_1_1_point_mapping">PointMapping</link> pointMapping)</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1a10fe0670c31aa9c8193cde4abd57fcd7">GetInterpolatedLeftRightTransform</link> (Int64 time, Int64 sourceTime, int leftId, int rightId, out <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> leftTransform, out <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> rightTransform)</para>

<para>This is a special variant of GetInterpolatedFrameFromTime, for use with special features that only require the position and orientation of the palm positions, and do not care about pose data or any other data. </para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_controller_1ae025d7fd3e26a385907af50732d5cf6f">GetInterpolatedFrameFromTime</link> (<link linkend="_class_leap_1_1_frame">Frame</link> toFill, Int64 time, Int64 sourceTime)</para>
</listitem>
            <listitem><para>long <link linkend="_class_leap_1_1_controller_1a57650944fa868adcfe4cea8608af5a03">Now</link> ()</para>

<para>Returns a timestamp value as close as possible to the current time. Values are in microseconds, as with all the other timestamp values. </para>
</listitem>
            <listitem><para><link linkend="_class_leap_1_1_failed_device_list">FailedDeviceList</link> <link linkend="_class_leap_1_1_controller_1ab73815d54d49bf570371fe1ec39fe770">FailedDevices</link> ()</para>

<para>A list of any <link linkend="_namespace_leap">Leap</link> Motion hardware devices that are physically connected to the client computer, but are not functioning correctly. The list contains <link linkend="_class_leap_1_1_failed_device">FailedDevice</link> objects containing the pnpID and the reason for failure. No other device information is available. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual void <link linkend="_class_leap_1_1_controller_1a491436d5722a11b55596f2f14434098b">Dispose</link> (bool disposing)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_leap_1_1_controller_1a0e0ce4c3c7526305c2a8c79c7f5cd1a7">OnInit</link> (object sender, <link linkend="_class_leap_1_1_leap_event_args">LeapEventArgs</link> eventArgs)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_leap_1_1_controller_1afb73429c5375282477149dfbb9cc698f">OnConnect</link> (object sender, <link linkend="_class_leap_1_1_connection_event_args">ConnectionEventArgs</link> eventArgs)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_leap_1_1_controller_1a06fff0c5313c992da0b84714f561acff">OnDisconnect</link> (object sender, <link linkend="_class_leap_1_1_connection_lost_event_args">ConnectionLostEventArgs</link> eventArgs)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>SynchronizationContext <link linkend="_class_leap_1_1_controller_1afa47e4254ee6d9fa05ba485593b05e4e">EventContext</link><computeroutput> [get, set]</computeroutput>
</para>

<para>The SynchronizationContext used for dispatching events. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_leap_event_args">LeapEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1aeabfa1a25d7aa3724cb786885195e0b2">Init</link></para>

<para>Dispatched when the connection is initialized (but not necessarily connected). </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_connection_event_args">ConnectionEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1abc23a30fb9ef4327ab4c12dc90698f14">Connect</link></para>

<para>Dispatched when the connection to the service is established. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_connection_lost_event_args">ConnectionLostEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1ac627061e99531a03874428bebc5f1111">Disconnect</link></para>

<para>Dispatched if the connection to the service is lost. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_frame_event_args">FrameEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1af401a79284cacb70afa71d0b109143fe">FrameReady</link></para>

<para>Dispatched when a tracking frame is ready. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_internal_frame_event_args">InternalFrameEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a0713d49768905ceba0ffb63ecc216aa1">InternalFrameReady</link></para>

<para>Dispatched when an internal tracking frame is ready. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_device_event_args">DeviceEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1ac9a2f80c418e12b42b8331c0d5b116b1">Device</link></para>

<para>Dispatched when a <link linkend="_namespace_leap">Leap</link> Motion device is connected. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_device_event_args">DeviceEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a1f624439c16ddaf866ac657aa811a622">DeviceLost</link></para>

<para>Dispatched when a <link linkend="_namespace_leap">Leap</link> Motion device is disconnected. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_device_failure_event_args">DeviceFailureEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1aebe559b634e766a31c1f2041714313ca">DeviceFailure</link></para>

<para>Dispatched when a <link linkend="_namespace_leap">Leap</link> device fails to initialize. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_log_event_args">LogEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a40c12ae7c232621b91f9bb40987a33a3">LogMessage</link></para>

<para>Dispatched when the system generates a loggable event. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_policy_event_args">PolicyEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a0177e366833918615a05f1be4177c53b">PolicyChange</link></para>

<para>Dispatched when a policy changes. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_config_change_event_args">ConfigChangeEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1aa95b8d42774232245cd10c23d90d0343">ConfigChange</link></para>

<para>Dispatched when a configuration setting changes. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_distortion_event_args">DistortionEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a3a00d190090f618416c578d8615e4921">DistortionChange</link></para>

<para>Dispatched when the image distortion map changes. The distortion map can change when the <link linkend="_namespace_leap">Leap</link> device switches orientation, or a new device becomes active. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_dropped_frame_event_args">DroppedFrameEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1ac9829d338d232ab7b09e59fadf2d24c5">DroppedFrame</link></para>

<para>Dispatched when the service drops a tracking frame. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_image_event_args">ImageEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1ad76a140483ce708520eb0e940c345a1f">ImageReady</link></para>

<para>Dispatched when an unrequested image is ready. </para>
</listitem>
            <listitem><para>Action&lt; <link linkend="_struct_leap_1_1_begin_profiling_for_thread_args">BeginProfilingForThreadArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a483c1f8ff0a5557ee0a609bfe242f01c">BeginProfilingForThread</link></para>

<para>Dispatched whenever a thread wants to start profiling for a custom thread. The event is always dispatched from the thread itself. </para>
</listitem>
            <listitem><para>Action&lt; <link linkend="_struct_leap_1_1_end_profiling_for_thread_args">EndProfilingForThreadArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a29354296ef9a6de70e2ce06db251c16b">EndProfilingForThread</link></para>

<para>Dispatched whenever a thread is finished profiling. The event is always dispatched from the thread itself. </para>
</listitem>
            <listitem><para>Action&lt; <link linkend="_struct_leap_1_1_begin_profiling_block_args">BeginProfilingBlockArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a6195a732f3ce5a94f41bda37fecca548">BeginProfilingBlock</link></para>

<para>Dispatched whenever a thread enters a profiling block. The event is always dispatched from the thread itself. </para>
</listitem>
            <listitem><para>Action&lt; <link linkend="_struct_leap_1_1_end_profiling_block_args">EndProfilingBlockArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a47514a57487eb7543323ef7ca8f197e3">EndProfilingBlock</link></para>

<para>Dispatched whenever a thread ends a profiling block. The event is always dispatched from the thread itself. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_point_mapping_change_event_args">PointMappingChangeEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a148e5d3bcc1f4e4d3c972d7482f1d1ab">PointMappingChange</link></para>

<para>Dispatched when point mapping change events are generated by the service. </para>
</listitem>
            <listitem><para>EventHandler&lt; <link linkend="_class_leap_1_1_head_pose_event_args">HeadPoseEventArgs</link> &gt; <link linkend="_class_leap_1_1_controller_1a8f102727031288a8b1c8f2583c31d161">HeadPoseChange</link></para>

<para>Dispatched when a new HeadPose is available. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_controller_1a8ecf0fd02e617da823b46b5f73b38eb0">IsServiceConnected</link><computeroutput> [get]</computeroutput>
</para>

<para>Reports whether your application has a connection to the <link linkend="_namespace_leap">Leap</link> Motion daemon/service. Can be true even if the <link linkend="_namespace_leap">Leap</link> Motion hardware is not available. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_controller_1aac7cccf354ef1a6f1f01222a9b63d8bd">IsConnected</link><computeroutput> [get]</computeroutput>
</para>

<para>Reports whether this <link linkend="_class_leap_1_1_controller">Controller</link> is connected to the <link linkend="_namespace_leap">Leap</link> Motion service and the <link linkend="_namespace_leap">Leap</link> Motion hardware is plugged in. </para>
</listitem>
            <listitem><para><link linkend="_class_leap_1_1_config">Config</link> <link linkend="_class_leap_1_1_controller_1a12503273371b21d58952a99b5fc5b0d9">Config</link><computeroutput> [get]</computeroutput>
</para>

<para>Returns a <link linkend="_class_leap_1_1_config">Config</link> object, which you can use to query the <link linkend="_namespace_leap">Leap</link> Motion system for configuration information. </para>
</listitem>
            <listitem><para><link linkend="_class_leap_1_1_device_list">DeviceList</link> <link linkend="_class_leap_1_1_controller_1aa5e641f54418e5194161ac45dc15c7fb">Devices</link><computeroutput> [get]</computeroutput>
</para>

<para>The list of currently attached and recognized <link linkend="_namespace_leap">Leap</link> Motion controller devices. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_class_leap_1_1_controller">Controller</link> class is your main interface to the <link linkend="_namespace_leap">Leap</link> Motion <link linkend="_class_leap_1_1_controller">Controller</link>. </para>



<para>Create an instance of this <link linkend="_class_leap_1_1_controller">Controller</link> class to access frames of tracking data and configuration information.Frame data can be polled at any time using the <link linkend="_class_leap_1_1_controller_1ac41dc9c50a3bd2a892cc44af0859ef0d">Controller.Frame()</link> function.Call frame() or frame(0) to get the most recent frame.Set the history parameter to a positive integer to access previous frames.A controller stores up to 60 frames in its frame history.</para>

<para>Polling is an appropriate strategy for applications which already have an intrinsic update loop, such as a game. You can also subscribe to the FrameReady event to get tracking frames through an event delegate.</para>

<para>If the current thread implements a SynchronizationContext that contains a message loop, events are posted to that threads message loop. Otherwise, events are called on an independent thread and applications must perform any needed synchronization or marshalling of data between threads. Note that Unity3D does not create an appropriate SynchronizationContext object. Typically, event handlers cannot access any <link linkend="_namespace_leap_1_1_unity">Unity</link> objects.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00039">39</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6"/>    <section>
    <title>PolicyFlag</title>
<indexterm><primary>PolicyFlag</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>PolicyFlag</secondary></indexterm>
<para><computeroutput>enum <link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">Leap.Controller.PolicyFlag</link><computeroutput>[strong]</computeroutput></computeroutput></para><para>

<para>The supported controller policies. </para>
</para>

<para>The supported policy flags are:</para>

<para><emphasis role="bold">POLICY_BACKGROUND_FRAMES</emphasis> &#8211; requests that your application receives frames when it is not the foreground application for user input.</para>

<para>The background frames policy determines whether an application receives frames of tracking data while in the background. By default, the <link linkend="_namespace_leap">Leap</link> Motion software only sends tracking data to the foreground application. Only applications that need this ability should request the background frames policy. The &quot;Allow Background Apps&quot; checkbox must be enabled in the <link linkend="_namespace_leap">Leap</link> Motion Control Panel or this policy will be denied.</para>

<para><emphasis role="bold">POLICY_OPTIMIZE_HMD</emphasis> &#8211; request that the tracking be optimized for head-mounted tracking.</para>

<para>The optimize HMD policy improves tracking in situations where the <link linkend="_namespace_leap">Leap</link> Motion hardware is attached to a head-mounted display. This policy is not granted for devices that cannot be mounted to an HMD, such as <link linkend="_namespace_leap">Leap</link> Motion controllers embedded in a laptop or keyboard.</para>

<para>Some policies can be denied if the user has disabled the feature on their <link linkend="_namespace_leap">Leap</link> Motion control panel.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>POLICY_DEFAULT</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>POLICY_DEFAULT</secondary></indexterm>
<anchor xml:id="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6ab59265c49564c97b26e7bcd5010a5f84"/>POLICY_DEFAULT</entry><entry>
<para>The default policy. </para>
</entry></row><row><entry><indexterm><primary>POLICY_BACKGROUND_FRAMES</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>POLICY_BACKGROUND_FRAMES</secondary></indexterm>
<anchor xml:id="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6a9fc384525c1401b9857161b983424b2a"/>POLICY_BACKGROUND_FRAMES</entry><entry>
<para>Receive background frames. </para>
</entry></row><row><entry><indexterm><primary>POLICY_IMAGES</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>POLICY_IMAGES</secondary></indexterm>
<anchor xml:id="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6a641dbeeedb2436f6a066543de846bd31"/>POLICY_IMAGES</entry><entry>
<para>Allow streaming images. </para>
</entry></row><row><entry><indexterm><primary>POLICY_OPTIMIZE_HMD</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>POLICY_OPTIMIZE_HMD</secondary></indexterm>
<anchor xml:id="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6abc23e8520336d09d968f5206793d3d8e"/>POLICY_OPTIMIZE_HMD</entry><entry>
<para>Optimize the tracking for head-mounted device. </para>
</entry></row><row><entry><indexterm><primary>POLICY_ALLOW_PAUSE_RESUME</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>POLICY_ALLOW_PAUSE_RESUME</secondary></indexterm>
<anchor xml:id="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6a0c44039d577c70083c82666b332bd71b"/>POLICY_ALLOW_PAUSE_RESUME</entry><entry>
<para>Allow pausing and unpausing of the <link linkend="_namespace_leap">Leap</link> Motion service. </para>
</entry></row><row><entry><indexterm><primary>POLICY_MAP_POINTS</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>POLICY_MAP_POINTS</secondary></indexterm>
<anchor xml:id="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6a913295f4bfba846c1ee80037a8a2b7be"/>POLICY_MAP_POINTS</entry><entry>
<para>Allow streaming map point </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00690">690</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_leap_1_1_controller_1a55b80a043ff15459a08b60bf9f85a955"/>    <section>
    <title>Controller()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Controller</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Controller</secondary></indexterm>
<para><computeroutput>Leap.Controller.Controller ( )</computeroutput></para><para>

<para>Constructs a <link linkend="_class_leap_1_1_controller">Controller</link> object. </para>
</para>

<para>The default constructor uses a connection key of 0.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00364">364</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1aa96fa3ac415fe7564a7a9578041d5fff"/>    <section>
    <title>Controller()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Controller</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Controller</secondary></indexterm>
<para><computeroutput>Leap.Controller.Controller (int connectionKey)</computeroutput></para><para>

<para>Constructs a <link linkend="_class_leap_1_1_controller">Controller</link> object using the specified connection key. </para>
</para>

<para>All controller instances using the same key will use the same connection to the service. In general, an application should not use more than one connection for all its controllers. Each connection keeps its own cache of frames and images.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>connectionKey</entry>
                                <entry>
<para>An identifier specifying the connection to use. If a connection with the specified key already exists, that connection is used. Otherwise, a new connection is created. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00378">378</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_leap_1_1_controller_1a78edc0a692fa7200a07eee4b651012a4"/>    <section>
    <title>ClearPolicy()</title>
<indexterm><primary>ClearPolicy</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>ClearPolicy</secondary></indexterm>
<para><computeroutput>void Leap.Controller.ClearPolicy (<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">PolicyFlag</link> policy)</computeroutput></para><para>

<para>Requests clearing a policy. </para>
</para>

<para>Policy changes are completed asynchronously and, because they are subject to user approval or system compatibility checks, may not complete successfully. Call <link linkend="_class_leap_1_1_controller_1af0f85f9c36a57143107952afc26ec5d4">Controller.IsPolicySet()</link> after a suitable interval to test whether the change was accepted. <formalpara><title>Since: </title>

<para>2.1.6 </para>
</formalpara>
</para>
<para>
Implements <link linkend="_interface_leap_1_1_i_controller_1a7aaaef3d250d3b9114a5836d5e470bb3">Leap.IController</link>.</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00450">450</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ad2b8546f002e50164178d1cb7fff4d57"/>    <section>
    <title>Dispose()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Dispose</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Dispose</secondary></indexterm>
<para><computeroutput>void Leap.Controller.Dispose ( )</computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00343">343</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a491436d5722a11b55596f2f14434098b"/>    <section>
    <title>Dispose()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Dispose</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Dispose</secondary></indexterm>
<para><computeroutput>virtual void Leap.Controller.Dispose (bool disposing)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00349">349</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ab73815d54d49bf570371fe1ec39fe770"/>    <section>
    <title>FailedDevices()</title>
<indexterm><primary>FailedDevices</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>FailedDevices</secondary></indexterm>
<para><computeroutput><link linkend="_class_leap_1_1_failed_device_list">FailedDeviceList</link> Leap.Controller.FailedDevices ( )</computeroutput></para><para>

<para>A list of any <link linkend="_namespace_leap">Leap</link> Motion hardware devices that are physically connected to the client computer, but are not functioning correctly. The list contains <link linkend="_class_leap_1_1_failed_device">FailedDevice</link> objects containing the pnpID and the reason for failure. No other device information is available. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00658">658</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ac41dc9c50a3bd2a892cc44af0859ef0d"/>    <section>
    <title>Frame()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Frame</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Frame</secondary></indexterm>
<para><computeroutput><link linkend="_class_leap_1_1_frame">Frame</link> Leap.Controller.Frame (int history = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>In most cases you should get <link linkend="_class_leap_1_1_frame">Frame</link> objects using the <link linkend="_class_leap_1_1_unity_1_1_leap_provider_1a9a5cf65099912311c37f340d3be7e454">LeapProvider.CurrentFrame</link> property. The data in <link linkend="_class_leap_1_1_frame">Frame</link> objects taken directly from a <link linkend="_class_leap_1_1_controller">Leap.Controller</link> instance is still in the <link linkend="_namespace_leap">Leap</link> Motion frame of reference and will not match the hands displayed in a <link linkend="_namespace_leap_1_1_unity">Unity</link> scene. </para>
</para>

<para>Returns a frame of tracking data from the <link linkend="_namespace_leap">Leap</link> Motion software. Use the optional history parameter to specify which frame to retrieve. Call frame() or frame(0) to access the most recent frame; call frame(1) to access the previous frame, and so on. If you use a history value greater than the number of stored frames, then the controller returns an empty frame.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>history</entry>
                                <entry>
<para>The age of the frame to return, counting backwards from the most recent frame (0) into the past and up to the maximum age (59). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>The specified frame; or, if no history parameter is specified, the newest frame. If a frame is not available at the specified history position, an invalid <link linkend="_class_leap_1_1_frame">Frame</link> is returned. </para>
</formalpara>
<formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Implements <link linkend="_interface_leap_1_1_i_controller_1a0f8fe519944cc39eae5cf0d3caeaa33c">Leap.IController</link>.</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00491">491</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1acab28236972c254e53d3508cb8aaa1cd"/>    <section>
    <title>Frame()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Frame</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Frame</secondary></indexterm>
<para><computeroutput>void Leap.Controller.Frame (<link linkend="_class_leap_1_1_frame">Frame</link> toFill, int history = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>Identical to Frame(history) but instead of constructing a new frame and returning it, the user provides a frame object to be filled with data instead. </para>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00501">501</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a3babd82558546e8bc5de90fb80d201ec"/>    <section>
    <title>FrameTimestamp()</title>
<indexterm><primary>FrameTimestamp</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>FrameTimestamp</secondary></indexterm>
<para><computeroutput>long Leap.Controller.FrameTimestamp (int history = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>Returns the timestamp of a recent tracking frame. Use the optional history parameter to specify how many frames in the past to retrieve the timestamp. Leave the history parameter as it&apos;s default value to return the timestamp of the most recent tracked frame. </para>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00514">514</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1aa99cf433f25105c63083d9b6f6ded2e9"/>    <section>
    <title>GetInterpolatedFrame()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GetInterpolatedFrame</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>GetInterpolatedFrame</secondary></indexterm>
<para><computeroutput><link linkend="_class_leap_1_1_frame">Frame</link> Leap.Controller.GetInterpolatedFrame (Int64 time)</computeroutput></para><para>

<para>Returns the <link linkend="_class_leap_1_1_frame">Frame</link> at the specified time, interpolating the data between existing frames, if necessary. </para>
</para>
<para>
Implements <link linkend="_interface_leap_1_1_i_controller_1a47758a602643bb7d6db92e024b334009">Leap.IController</link>.</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00531">531</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a44c7a28591b2dab45849aa03640b4889"/>    <section>
    <title>GetInterpolatedFrame()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GetInterpolatedFrame</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>GetInterpolatedFrame</secondary></indexterm>
<para><computeroutput>void Leap.Controller.GetInterpolatedFrame (<link linkend="_class_leap_1_1_frame">Frame</link> toFill, Int64 time)</computeroutput></para><para>

<para>Fills the <link linkend="_class_leap_1_1_frame">Frame</link> with data taken at the specified time, interpolating the data between existing frames, if necessary. </para>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00538">538</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ae025d7fd3e26a385907af50732d5cf6f"/>    <section>
    <title>GetInterpolatedFrameFromTime()</title>
<indexterm><primary>GetInterpolatedFrameFromTime</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>GetInterpolatedFrameFromTime</secondary></indexterm>
<para><computeroutput>void Leap.Controller.GetInterpolatedFrameFromTime (<link linkend="_class_leap_1_1_frame">Frame</link> toFill, Int64 time, Int64 sourceTime)</computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00583">583</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a569698b8f3bfbf04216145f4c39d317a"/>    <section>
    <title>GetInterpolatedHeadPose()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>GetInterpolatedHeadPose</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>GetInterpolatedHeadPose</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t">LEAP_HEAD_POSE_EVENT</link> Leap.Controller.GetInterpolatedHeadPose (Int64 time)</computeroutput></para><para>

<para>Returns the Head pose at the specified time, interpolating the data between existing frames, if necessary. </para>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00545">545</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a3a249a28db2fc7e0088440d55a290638"/>    <section>
    <title>GetInterpolatedHeadPose()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>GetInterpolatedHeadPose</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>GetInterpolatedHeadPose</secondary></indexterm>
<para><computeroutput>void Leap.Controller.GetInterpolatedHeadPose (ref <link linkend="_struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t">LEAP_HEAD_POSE_EVENT</link> toFill, Int64 time)</computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00549">549</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a10fe0670c31aa9c8193cde4abd57fcd7"/>    <section>
    <title>GetInterpolatedLeftRightTransform()</title>
<indexterm><primary>GetInterpolatedLeftRightTransform</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>GetInterpolatedLeftRightTransform</secondary></indexterm>
<para><computeroutput>void Leap.Controller.GetInterpolatedLeftRightTransform (Int64 time, Int64 sourceTime, int leftId, int rightId, out <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> leftTransform, out <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> rightTransform)</computeroutput></para><para>

<para>This is a special variant of GetInterpolatedFrameFromTime, for use with special features that only require the position and orientation of the palm positions, and do not care about pose data or any other data. </para>
</para>

<para>You must specify the id of the hand that you wish to get a transform for. If you specify an id that is not present in the interpolated frame, the output transform will be the identity transform. </para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00574">574</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a513b19658a9928fbcb338eda0dc49a13"/>    <section>
    <title>GetPointMapping()</title>
<indexterm><primary>GetPointMapping</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>GetPointMapping</secondary></indexterm>
<para><computeroutput>void Leap.Controller.GetPointMapping (ref <link linkend="_struct_leap_1_1_point_mapping">PointMapping</link> pointMapping)</computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00561">561</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ac8b0d112dcaa36505057f7787a0dedda"/>    <section>
    <title>GetTransformedFrame()</title>
<indexterm><primary>GetTransformedFrame</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>GetTransformedFrame</secondary></indexterm>
<para><computeroutput><link linkend="_class_leap_1_1_frame">Frame</link> Leap.Controller.GetTransformedFrame (<link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> trs, int history = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>Returns the frame object with all hands transformed by the specified transform matrix. </para>
</para>
<para>
Implements <link linkend="_interface_leap_1_1_i_controller_1a10970bf31bdf9dfd46f0449a1759151d">Leap.IController</link>.</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00524">524</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1af0f85f9c36a57143107952afc26ec5d4"/>    <section>
    <title>IsPolicySet()</title>
<indexterm><primary>IsPolicySet</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>IsPolicySet</secondary></indexterm>
<para><computeroutput>bool Leap.Controller.IsPolicySet (<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">PolicyFlag</link> policy)</computeroutput></para><para>

<para>Gets the active setting for a specific policy. </para>
</para>

<para>Keep in mind that setting a policy flag is asynchronous, so changes are not effective immediately after calling setPolicyFlag(). In addition, a policy request can be declined by the user. You should always set the policy flags required by your application at startup and check that the policy change request was successful after an appropriate interval.</para>

<para>If the controller object is not connected to the <link linkend="_namespace_leap">Leap</link> Motion software, then the default state for the selected policy is returned.</para>

<para><formalpara><title>Since: </title>

<para>2.1.6 </para>
</formalpara>
</para>
<para>
Implements <link linkend="_interface_leap_1_1_i_controller_1abdb91a0a5278f41c91cb92e37854c27c">Leap.IController</link>.</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00468">468</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a57650944fa868adcfe4cea8608af5a03"/>    <section>
    <title>Now()</title>
<indexterm><primary>Now</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Now</secondary></indexterm>
<para><computeroutput>long Leap.Controller.Now ( )</computeroutput></para><para>

<para>Returns a timestamp value as close as possible to the current time. Values are in microseconds, as with all the other timestamp values. </para>
</para>

<para><formalpara><title>Since: </title>

<para>2.2.7 </para>
</formalpara>
</para>
<para>
Implements <link linkend="_interface_leap_1_1_i_controller_1a965ef8281ece6db686682378a71ce38c">Leap.IController</link>.</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00593">593</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1afb73429c5375282477149dfbb9cc698f"/>    <section>
    <title>OnConnect()</title>
<indexterm><primary>OnConnect</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>OnConnect</secondary></indexterm>
<para><computeroutput>virtual void Leap.Controller.OnConnect (object sender, <link linkend="_class_leap_1_1_connection_event_args">ConnectionEventArgs</link> eventArgs)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00721">721</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a06fff0c5313c992da0b84714f561acff"/>    <section>
    <title>OnDisconnect()</title>
<indexterm><primary>OnDisconnect</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>OnDisconnect</secondary></indexterm>
<para><computeroutput>virtual void Leap.Controller.OnDisconnect (object sender, <link linkend="_class_leap_1_1_connection_lost_event_args">ConnectionLostEventArgs</link> eventArgs)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00725">725</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a0e0ce4c3c7526305c2a8c79c7f5cd1a7"/>    <section>
    <title>OnInit()</title>
<indexterm><primary>OnInit</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>OnInit</secondary></indexterm>
<para><computeroutput>virtual void Leap.Controller.OnInit (object sender, <link linkend="_class_leap_1_1_leap_event_args">LeapEventArgs</link> eventArgs)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00717">717</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a7e862547a7ea735203220e43c0e04a85"/>    <section>
    <title>SetPolicy()</title>
<indexterm><primary>SetPolicy</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>SetPolicy</secondary></indexterm>
<para><computeroutput>void Leap.Controller.SetPolicy (<link linkend="_class_leap_1_1_controller_1a0bdb49fa94aa2da8b098c1ac296528d6">PolicyFlag</link> policy)</computeroutput></para><para>

<para>Requests setting a policy. </para>
</para>

<para>A request to change a policy is subject to user approval and a policy can be changed by the user at any time (using the <link linkend="_namespace_leap">Leap</link> Motion settings dialog). The desired policy flags must be set every time an application runs.</para>

<para>Policy changes are completed asynchronously and, because they are subject to user approval or system compatibility checks, may not complete successfully. Call <link linkend="_class_leap_1_1_controller_1af0f85f9c36a57143107952afc26ec5d4">Controller.IsPolicySet()</link> after a suitable interval to test whether the change was accepted. <formalpara><title>Since: </title>

<para>2.1.6 </para>
</formalpara>
</para>
<para>
Implements <link linkend="_interface_leap_1_1_i_controller_1a12a90db07fb494e152cc937569ec77f0">Leap.IController</link>.</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00437">437</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a3e1e2694a23c62c79f9592217529e860"/>    <section>
    <title>StartConnection()</title>
<indexterm><primary>StartConnection</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>StartConnection</secondary></indexterm>
<para><computeroutput>void Leap.Controller.StartConnection ( )</computeroutput></para><para>

<para>Starts the connection. </para>
</para>

<para>A connection starts automatically when created, but you can use this function to restart the connection after stopping it.</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00397">397</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a08c17e46012a2774afe1b5901e82ce6a"/>    <section>
    <title>StopConnection()</title>
<indexterm><primary>StopConnection</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>StopConnection</secondary></indexterm>
<para><computeroutput>void Leap.Controller.StopConnection ( )</computeroutput></para><para>

<para>Stops the connection. </para>
</para>

<para>No more frames or other events are received from a stopped connection. You can restart with <link linkend="_class_leap_1_1_controller_1a3e1e2694a23c62c79f9592217529e860">StartConnection()</link>.</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00409">409</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a30f5d6dc2dfdce1cb56bcd8de049c38e"/>    <section>
    <title>TelemetryGetNow()</title>
<indexterm><primary>TelemetryGetNow</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>TelemetryGetNow</secondary></indexterm>
<para><computeroutput>UInt64 Leap.Controller.TelemetryGetNow ( )</computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00557">557</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a0992fb52095c6948ab685dada1abfa2d"/>    <section>
    <title>TelemetryProfiling()</title>
<indexterm><primary>TelemetryProfiling</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>TelemetryProfiling</secondary></indexterm>
<para><computeroutput>void Leap.Controller.TelemetryProfiling (ref <link linkend="_struct_leap_internal_1_1_l_e_a_p___t_e_l_e_m_e_t_r_y___d_a_t_a">LEAP_TELEMETRY_DATA</link> telemetryData)</computeroutput></para><para>
Definition at line <link linkend="__controller_8cs_source_1l00553">553</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_leap_1_1_controller_1a6195a732f3ce5a94f41bda37fecca548"/>    <section>
    <title>BeginProfilingBlock</title>
<indexterm><primary>BeginProfilingBlock</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>BeginProfilingBlock</secondary></indexterm>
<para><computeroutput>Action&lt;<link linkend="_struct_leap_1_1_begin_profiling_block_args">BeginProfilingBlockArgs</link>&gt; Leap.Controller.BeginProfilingBlock<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched whenever a thread enters a profiling block. The event is always dispatched from the thread itself. </para>
</para>

<para>The event data will contain the name of the profiling block.</para>

<para><formalpara><title>Since: </title>

<para>4.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00292">292</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a483c1f8ff0a5557ee0a609bfe242f01c"/>    <section>
    <title>BeginProfilingForThread</title>
<indexterm><primary>BeginProfilingForThread</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>BeginProfilingForThread</secondary></indexterm>
<para><computeroutput>Action&lt;<link linkend="_struct_leap_1_1_begin_profiling_for_thread_args">BeginProfilingForThreadArgs</link>&gt; Leap.Controller.BeginProfilingForThread<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched whenever a thread wants to start profiling for a custom thread. The event is always dispatched from the thread itself. </para>
</para>

<para>The event data will contain the name of the thread, as well as an array of all possible profiling blocks that could be entered on that thread.</para>

<para><formalpara><title>Since: </title>

<para>4.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00260">260</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a12503273371b21d58952a99b5fc5b0d9"/>    <section>
    <title>Config</title>
<indexterm><primary>Config</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Config</secondary></indexterm>
<para><computeroutput><link linkend="_class_leap_1_1_config">Config</link> Leap.Controller.Config<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Returns a <link linkend="_class_leap_1_1_config">Config</link> object, which you can use to query the <link linkend="_namespace_leap">Leap</link> Motion system for configuration information. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00624">624</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1aa95b8d42774232245cd10c23d90d0343"/>    <section>
    <title>ConfigChange</title>
<indexterm><primary>ConfigChange</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>ConfigChange</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_config_change_event_args">ConfigChangeEventArgs</link>&gt; Leap.Controller.ConfigChange<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when a configuration setting changes. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00202">202</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1abc23a30fb9ef4327ab4c12dc90698f14"/>    <section>
    <title>Connect</title>
<indexterm><primary>Connect</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Connect</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_connection_event_args">ConnectionEventArgs</link>&gt; Leap.Controller.Connect<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when the connection to the service is established. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00082">82</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ac9a2f80c418e12b42b8331c0d5b116b1"/>    <section>
    <title>Device</title>
<indexterm><primary>Device</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Device</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_device_event_args">DeviceEventArgs</link>&gt; Leap.Controller.Device<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when a <link linkend="_namespace_leap">Leap</link> Motion device is connected. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00137">137</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1aebe559b634e766a31c1f2041714313ca"/>    <section>
    <title>DeviceFailure</title>
<indexterm><primary>DeviceFailure</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>DeviceFailure</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_device_failure_event_args">DeviceFailureEventArgs</link>&gt; Leap.Controller.DeviceFailure<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when a <link linkend="_namespace_leap">Leap</link> device fails to initialize. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00163">163</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a1f624439c16ddaf866ac657aa811a622"/>    <section>
    <title>DeviceLost</title>
<indexterm><primary>DeviceLost</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>DeviceLost</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_device_event_args">DeviceEventArgs</link>&gt; Leap.Controller.DeviceLost<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when a <link linkend="_namespace_leap">Leap</link> Motion device is disconnected. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00150">150</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1aa5e641f54418e5194161ac45dc15c7fb"/>    <section>
    <title>Devices</title>
<indexterm><primary>Devices</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Devices</secondary></indexterm>
<para><computeroutput><link linkend="_class_leap_1_1_device_list">DeviceList</link> Leap.Controller.Devices<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>The list of currently attached and recognized <link linkend="_namespace_leap">Leap</link> Motion controller devices. </para>
</para>

<para>The <link linkend="_class_leap_1_1_device">Device</link> objects in the list describe information such as the range and tracking volume.</para>

<para>Currently, the <link linkend="_namespace_leap">Leap</link> Motion <link linkend="_class_leap_1_1_controller">Controller</link> only allows a single active device at a time, however there may be multiple devices physically attached and listed here. Any active device(s) are guaranteed to be listed first, however order is not determined beyond that.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00644">644</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ac627061e99531a03874428bebc5f1111"/>    <section>
    <title>Disconnect</title>
<indexterm><primary>Disconnect</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Disconnect</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_connection_lost_event_args">ConnectionLostEventArgs</link>&gt; Leap.Controller.Disconnect<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched if the connection to the service is lost. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00098">98</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a3a00d190090f618416c578d8615e4921"/>    <section>
    <title>DistortionChange</title>
<indexterm><primary>DistortionChange</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>DistortionChange</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_distortion_event_args">DistortionEventArgs</link>&gt; Leap.Controller.DistortionChange<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when the image distortion map changes. The distortion map can change when the <link linkend="_namespace_leap">Leap</link> device switches orientation, or a new device becomes active. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00217">217</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ac9829d338d232ab7b09e59fadf2d24c5"/>    <section>
    <title>DroppedFrame</title>
<indexterm><primary>DroppedFrame</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>DroppedFrame</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_dropped_frame_event_args">DroppedFrameEventArgs</link>&gt; Leap.Controller.DroppedFrame<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when the service drops a tracking frame. </para>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00229">229</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a47514a57487eb7543323ef7ca8f197e3"/>    <section>
    <title>EndProfilingBlock</title>
<indexterm><primary>EndProfilingBlock</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>EndProfilingBlock</secondary></indexterm>
<para><computeroutput>Action&lt;<link linkend="_struct_leap_1_1_end_profiling_block_args">EndProfilingBlockArgs</link>&gt; Leap.Controller.EndProfilingBlock<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched whenever a thread ends a profiling block. The event is always dispatched from the thread itself. </para>
</para>

<para>The event data will contain the name of the profiling block.</para>

<para><formalpara><title>Since: </title>

<para>4.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00309">309</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a29354296ef9a6de70e2ce06db251c16b"/>    <section>
    <title>EndProfilingForThread</title>
<indexterm><primary>EndProfilingForThread</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>EndProfilingForThread</secondary></indexterm>
<para><computeroutput>Action&lt;<link linkend="_struct_leap_1_1_end_profiling_for_thread_args">EndProfilingForThreadArgs</link>&gt; Leap.Controller.EndProfilingForThread<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched whenever a thread is finished profiling. The event is always dispatched from the thread itself. </para>
</para>

<para><formalpara><title>Since: </title>

<para>4.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00275">275</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1afa47e4254ee6d9fa05ba485593b05e4e"/>    <section>
    <title>EventContext</title>
<indexterm><primary>EventContext</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>EventContext</secondary></indexterm>
<para><computeroutput>SynchronizationContext Leap.Controller.EventContext<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The SynchronizationContext used for dispatching events. </para>
</para>

<para>By default the synchronization context of the thread creating the controller instance is used. You can change the context if desired. </para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00051">51</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1af401a79284cacb70afa71d0b109143fe"/>    <section>
    <title>FrameReady</title>
<indexterm><primary>FrameReady</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>FrameReady</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_frame_event_args">FrameEventArgs</link>&gt; Leap.Controller.FrameReady<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when a tracking frame is ready. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00111">111</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a8f102727031288a8b1c8f2583c31d161"/>    <section>
    <title>HeadPoseChange</title>
<indexterm><primary>HeadPoseChange</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>HeadPoseChange</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_head_pose_event_args">HeadPoseEventArgs</link>&gt; Leap.Controller.HeadPoseChange<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when a new HeadPose is available. </para>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00334">334</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1ad76a140483ce708520eb0e940c345a1f"/>    <section>
    <title>ImageReady</title>
<indexterm><primary>ImageReady</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>ImageReady</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_image_event_args">ImageEventArgs</link>&gt; Leap.Controller.ImageReady<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when an unrequested image is ready. </para>
</para>

<para><formalpara><title>Since: </title>

<para>4.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00242">242</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1aeabfa1a25d7aa3724cb786885195e0b2"/>    <section>
    <title>Init</title>
<indexterm><primary>Init</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>Init</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_leap_event_args">LeapEventArgs</link>&gt; Leap.Controller.Init<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when the connection is initialized (but not necessarily connected). </para>
</para>

<para>Can be dispatched more than once, if connection is restarted. <formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00066">66</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a0713d49768905ceba0ffb63ecc216aa1"/>    <section>
    <title>InternalFrameReady</title>
<indexterm><primary>InternalFrameReady</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>InternalFrameReady</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_internal_frame_event_args">InternalFrameEventArgs</link>&gt; Leap.Controller.InternalFrameReady<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when an internal tracking frame is ready. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00124">124</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1aac7cccf354ef1a6f1f01222a9b63d8bd"/>    <section>
    <title>IsConnected</title>
<indexterm><primary>IsConnected</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>IsConnected</secondary></indexterm>
<para><computeroutput>bool Leap.Controller.IsConnected<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Reports whether this <link linkend="_class_leap_1_1_controller">Controller</link> is connected to the <link linkend="_namespace_leap">Leap</link> Motion service and the <link linkend="_namespace_leap">Leap</link> Motion hardware is plugged in. </para>
</para>

<para>When you first create a <link linkend="_class_leap_1_1_controller">Controller</link> object, isConnected() returns false. After the controller finishes initializing and connects to the <link linkend="_namespace_leap">Leap</link> Motion software and if the <link linkend="_namespace_leap">Leap</link> Motion hardware is plugged in, isConnected() returns true.</para>

<para>You can either handle the onConnect event using a Listener instance or poll the isConnected() function if you need to wait for your application to be connected to the <link linkend="_namespace_leap">Leap</link> Motion software before performing some other operation.</para>

<para><formalpara><title>Since: </title>

<para>1.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00612">612</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a8ecf0fd02e617da823b46b5f73b38eb0"/>    <section>
    <title>IsServiceConnected</title>
<indexterm><primary>IsServiceConnected</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>IsServiceConnected</secondary></indexterm>
<para><computeroutput>bool Leap.Controller.IsServiceConnected<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Reports whether your application has a connection to the <link linkend="_namespace_leap">Leap</link> Motion daemon/service. Can be true even if the <link linkend="_namespace_leap">Leap</link> Motion hardware is not available. </para>
</para>

<para><formalpara><title>Since: </title>

<para>1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00418">418</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a40c12ae7c232621b91f9bb40987a33a3"/>    <section>
    <title>LogMessage</title>
<indexterm><primary>LogMessage</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>LogMessage</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_log_event_args">LogEventArgs</link>&gt; Leap.Controller.LogMessage<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when the system generates a loggable event. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00176">176</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a148e5d3bcc1f4e4d3c972d7482f1d1ab"/>    <section>
    <title>PointMappingChange</title>
<indexterm><primary>PointMappingChange</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>PointMappingChange</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_point_mapping_change_event_args">PointMappingChangeEventArgs</link>&gt; Leap.Controller.PointMappingChange<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when point mapping change events are generated by the service. </para>
</para>

<para><formalpara><title>Since: </title>

<para>4.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00322">322</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_controller_1a0177e366833918615a05f1be4177c53b"/>    <section>
    <title>PolicyChange</title>
<indexterm><primary>PolicyChange</primary><secondary>Leap.Controller</secondary></indexterm>
<indexterm><primary>Leap.Controller</primary><secondary>PolicyChange</secondary></indexterm>
<para><computeroutput>EventHandler&lt;<link linkend="_class_leap_1_1_policy_event_args">PolicyEventArgs</link>&gt; Leap.Controller.PolicyChange<computeroutput>[add]</computeroutput>, <computeroutput>[remove]</computeroutput></computeroutput></para><para>

<para>Dispatched when a policy changes. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.0 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__controller_8cs_source_1l00189">189</link> of file <link linkend="__controller_8cs_source">Controller.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/<link linkend="__controller_8cs">Controller.cs</link></section>
</section>
