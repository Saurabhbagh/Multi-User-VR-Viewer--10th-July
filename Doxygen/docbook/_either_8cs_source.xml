<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__either_8cs_source">
<title>Either.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Either.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 
00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00013 
<anchor xml:id="__either_8cs_source_1l00019"/><link linkend="_struct_leap_1_1_unity_1_1_either">00019</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt;A,&#32;B&gt;&#32;:&#32;IEquatable&lt;Either&lt;A,&#32;B&gt;&gt;,&#32;IComparable,&#32;IComparable&lt;Either&lt;A,&#32;B&gt;&gt;&#32;{
00020 
<anchor xml:id="__either_8cs_source_1l00024"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>;
00025 
<anchor xml:id="__either_8cs_source_1l00029"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a66c31b6f54097c6a442888bad3aa8b01">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a66c31b6f54097c6a442888bad3aa8b01">isB</link>&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>;
00032 &#32;&#32;&#32;&#32;&#32;&#32;}
00033 &#32;&#32;&#32;&#32;}
00034 
00035 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;A&#32;_a;
00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;readonly&#32;B&#32;_b;
00037 
<anchor xml:id="__either_8cs_source_1l00042"/><link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Maybe&lt;A&gt;&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>)&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Maybe&lt;A&gt;.Some(_a);
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Maybe&lt;A&gt;.None;
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00049 &#32;&#32;&#32;&#32;&#32;&#32;}
00050 &#32;&#32;&#32;&#32;}
00051 
<anchor xml:id="__either_8cs_source_1l00056"/><link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Maybe&lt;B&gt;&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Maybe&lt;B&gt;.None;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Maybe&lt;B&gt;.Some(_b);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00063 &#32;&#32;&#32;&#32;&#32;&#32;}
00064 &#32;&#32;&#32;&#32;}
00065 
<anchor xml:id="__either_8cs_source_1l00069"/><link linkend="_struct_leap_1_1_unity_1_1_either_1aff7e724eb9b602c97e27bba85b4e3aa1">00069</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1aff7e724eb9b602c97e27bba85b4e3aa1">Either</link>(A&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>)&#32;{
00070 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException(<emphasis role="stringliteral">&quot;Cannot&#32;initialize&#32;an&#32;Either&#32;with&#32;a&#32;null&#32;value.&quot;</emphasis>);
00072 &#32;&#32;&#32;&#32;&#32;&#32;}
00073 
00074 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00075 &#32;&#32;&#32;&#32;&#32;&#32;_a&#32;=&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>;
00076 &#32;&#32;&#32;&#32;&#32;&#32;_b&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(B);
00077 &#32;&#32;&#32;&#32;}
00078 
<anchor xml:id="__either_8cs_source_1l00082"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a42d1ab7f4e2bf0794752cc858affec7a">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a42d1ab7f4e2bf0794752cc858affec7a">Either</link>(B&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>)&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException(<emphasis role="stringliteral">&quot;Cannot&#32;initialize&#32;an&#32;Either&#32;with&#32;a&#32;null&#32;value.&quot;</emphasis>);
00085 &#32;&#32;&#32;&#32;&#32;&#32;}
00086 
00087 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00088 &#32;&#32;&#32;&#32;&#32;&#32;_b&#32;=&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>;
00089 &#32;&#32;&#32;&#32;&#32;&#32;_a&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(A);
00090 &#32;&#32;&#32;&#32;}
00091 
<anchor xml:id="__either_8cs_source_1l00096"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a4c0eaf284c03842b99f53ec3f059faac">00096</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a4c0eaf284c03842b99f53ec3f059faac">Match</link>(Action&lt;A&gt;&#32;ifA,&#32;Action&lt;B&gt;&#32;ifB)&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>)&#32;{
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ifA&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;ifA(_a);
00099 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ifB&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;ifB(_b);
00101 &#32;&#32;&#32;&#32;&#32;&#32;}
00102 &#32;&#32;&#32;&#32;}
00103 
<anchor xml:id="__either_8cs_source_1l00108"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a7ef635be83e9e5e874739d9f363692ef">00108</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a7ef635be83e9e5e874739d9f363692ef">TryGetA</link>(out&#32;A&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>)&#32;{
00109 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>&#32;=&#32;_a;
00110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>;
00111 &#32;&#32;&#32;&#32;}
00112 
<anchor xml:id="__either_8cs_source_1l00117"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a2936191d85fa4d7dcb85c12ca2f2f471">00117</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a2936191d85fa4d7dcb85c12ca2f2f471">TryGetB</link>(out&#32;B&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>)&#32;{
00118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>&#32;=&#32;_b;
00119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>;
00120 &#32;&#32;&#32;&#32;}
00121 
<anchor xml:id="__either_8cs_source_1l00122"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a033f69b0b8238d2f434d49d097e94788">00122</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a033f69b0b8238d2f434d49d097e94788">GetHashCode</link>()&#32;{
00123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>)&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_a.GetHashCode();
00125 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_b.GetHashCode();
00127 &#32;&#32;&#32;&#32;&#32;&#32;}
00128 &#32;&#32;&#32;&#32;}
00129 
<anchor xml:id="__either_8cs_source_1l00130"/><link linkend="_struct_leap_1_1_unity_1_1_either_1ab1a67555ab3c674e42abce4fd3365134">00130</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ab1a67555ab3c674e42abce4fd3365134">Equals</link>(<emphasis role="keywordtype">object</emphasis>&#32;obj)&#32;{
00131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;is&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>)&#32;{
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ab1a67555ab3c674e42abce4fd3365134">Equals</link>((<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>)obj);
00133 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00135 &#32;&#32;&#32;&#32;&#32;&#32;}
00136 &#32;&#32;&#32;&#32;}
00137 
<anchor xml:id="__either_8cs_source_1l00138"/><link linkend="_struct_leap_1_1_unity_1_1_either_1ae55d660db9359d936f67d988d7078cc1">00138</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ae55d660db9359d936f67d988d7078cc1">Equals</link>(<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;other)&#32;{
00139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>&#32;!=&#32;other.<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>)&#32;{
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00141 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>)&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_a.Equals(other._a);
00143 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_b.Equals(other._b);
00145 &#32;&#32;&#32;&#32;&#32;&#32;}
00146 &#32;&#32;&#32;&#32;}
00147 
<anchor xml:id="__either_8cs_source_1l00148"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825">00148</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825">CompareTo</link>(<emphasis role="keywordtype">object</emphasis>&#32;obj)&#32;{
00149 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(obj&#32;is&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>))&#32;{
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentException();
00151 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825">CompareTo</link>((<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>)obj);
00153 &#32;&#32;&#32;&#32;&#32;&#32;}
00154 &#32;&#32;&#32;&#32;}
00155 
<anchor xml:id="__either_8cs_source_1l00156"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a91e207fc83d8fa9442a9dcfffcdbe2d4">00156</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a91e207fc83d8fa9442a9dcfffcdbe2d4">CompareTo</link>(<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;other)&#32;{
00157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>&#32;!=&#32;other.<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>)&#32;{
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>&#32;?&#32;-1&#32;:&#32;1;
00159 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link>)&#32;{
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IComparable&lt;A&gt;&#32;ca&#32;=&#32;_a&#32;as&#32;IComparable&lt;A&gt;;
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ca&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ca.CompareTo(other._a);
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IComparable&#32;c&#32;=&#32;_a&#32;as&#32;IComparable;
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c.CompareTo(other._b);
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00171 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IComparable&lt;B&gt;&#32;cb&#32;=&#32;_b&#32;as&#32;IComparable&lt;B&gt;;
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cb&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cb.CompareTo(other._b);
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IComparable&#32;c&#32;=&#32;_b&#32;as&#32;IComparable;
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c.CompareTo(other._b);
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00183 &#32;&#32;&#32;&#32;&#32;&#32;}
00184 &#32;&#32;&#32;&#32;}
00185 
<anchor xml:id="__either_8cs_source_1l00186"/><link linkend="_struct_leap_1_1_unity_1_1_either_1ac635dd45bbe22cd73bb1c850d7294087">00186</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ac635dd45bbe22cd73bb1c850d7294087">operator ==</link>(<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either0,&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either1)&#32;{
00187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;either0.<link linkend="_struct_leap_1_1_unity_1_1_either_1ab1a67555ab3c674e42abce4fd3365134">Equals</link>(either1);
00188 &#32;&#32;&#32;&#32;}
00189 
<anchor xml:id="__either_8cs_source_1l00190"/><link linkend="_struct_leap_1_1_unity_1_1_either_1ac30ec0b03336fd8a86a119c60889cebf">00190</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ac30ec0b03336fd8a86a119c60889cebf">operator !=</link>(<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either0,&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either1)&#32;{
00191 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!either0.<link linkend="_struct_leap_1_1_unity_1_1_either_1ab1a67555ab3c674e42abce4fd3365134">Equals</link>(either1);
00192 &#32;&#32;&#32;&#32;}
00193 
<anchor xml:id="__either_8cs_source_1l00194"/><link linkend="_struct_leap_1_1_unity_1_1_either_1ae6ef9429d3c8ef042af9ca7c798aeb76">00194</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ae6ef9429d3c8ef042af9ca7c798aeb76">operator &gt;</link>(<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either0,&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either1)&#32;{
00195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;either0.<link linkend="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825">CompareTo</link>(either1)&#32;&gt;&#32;0;
00196 &#32;&#32;&#32;&#32;}
00197 
<anchor xml:id="__either_8cs_source_1l00198"/><link linkend="_struct_leap_1_1_unity_1_1_either_1ae181b781714ebcac842831560838a723">00198</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ae181b781714ebcac842831560838a723">operator &gt;=</link>(<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either0,&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either1)&#32;{
00199 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;either0.<link linkend="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825">CompareTo</link>(either1)&#32;&gt;=&#32;0;
00200 &#32;&#32;&#32;&#32;}
00201 
<anchor xml:id="__either_8cs_source_1l00202"/><link linkend="_struct_leap_1_1_unity_1_1_either_1ab37b777230207b8c28d6dd31a3973d31">00202</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ab37b777230207b8c28d6dd31a3973d31">operator &lt;</link>(<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either0,&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either1)&#32;{
00203 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;either0.<link linkend="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825">CompareTo</link>(either1)&#32;&lt;&#32;0;
00204 &#32;&#32;&#32;&#32;}
00205 
<anchor xml:id="__either_8cs_source_1l00206"/><link linkend="_struct_leap_1_1_unity_1_1_either_1a8f0100a083842f17c4fb7264168a98bd">00206</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1a8f0100a083842f17c4fb7264168a98bd">operator &lt;=</link>(<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either0,&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>&#32;either1)&#32;{
00207 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;either0.<link linkend="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825">CompareTo</link>(either1)&#32;&lt;=&#32;0;
00208 &#32;&#32;&#32;&#32;}
00209 
<anchor xml:id="__either_8cs_source_1l00210"/><link linkend="_struct_leap_1_1_unity_1_1_either_1aad4cf5d2660fccc66c7fb8af73670645">00210</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>(A&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>)&#32;{
00211 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>(<link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>);
00212 &#32;&#32;&#32;&#32;}
00213 
<anchor xml:id="__either_8cs_source_1l00214"/><link linkend="_struct_leap_1_1_unity_1_1_either_1aad64b8a106656a151294f1e5f9c70aef">00214</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>(B&#32;<link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>)&#32;{
00215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_either">Either&lt;A, B&gt;</link>(<link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>);
00216 &#32;&#32;&#32;&#32;}
00217 &#32;&#32;}
00218 }
</programlisting></section>
