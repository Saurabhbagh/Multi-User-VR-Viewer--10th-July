<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_interface_unity_ads">
<title>UnityAds Class Reference</title>
<indexterm><primary>UnityAds</primary></indexterm>
<para>
<computeroutput>#import &lt;UnityAds.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for UnityAds:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="interface_unity_ads.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Instance Methods    </title>
        <itemizedlist>
            <listitem><para>(instancetype) - <link linkend="_interface_unity_ads_1a5e5d2f9d0967ae24896451e0fa1d7d05">NS_UNAVAILABLE</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Class Methods    </title>
        <itemizedlist>
            <listitem><para>(instancetype) + <link linkend="_interface_unity_ads_1a5e5d2f9d0967ae24896451e0fa1d7d05">NS_UNAVAILABLE</link></para>
</listitem>
            <listitem><para>(void) + <link linkend="_interface_unity_ads_1a89dc56c878efb376b6014d0ef67778a9">initialize:delegate:</link></para>
</listitem>
            <listitem><para>(void) + <link linkend="_interface_unity_ads_1a95a142d4966bb89652bfec178795e017">initialize:delegate:testMode:</link></para>
</listitem>
            <listitem><para>(void) + <link linkend="_interface_unity_ads_1a9246ffcfb9c831021f57cf81c21d3757">show:</link></para>
</listitem>
            <listitem><para>(void) + <link linkend="_interface_unity_ads_1a3b26d257b4fcc8807df6878bb0db09ea">show:placementId:</link></para>
</listitem>
            <listitem><para>(id&lt; <link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link> &gt;) + <link linkend="_interface_unity_ads_1a4b9aac259a3cb9906685eca5cbf5af5e">getDelegate</link></para>
</listitem>
            <listitem><para>(void) + <link linkend="_interface_unity_ads_1af3fd5286dccef9e7f0557694cc0d747b">setDelegate:</link></para>
</listitem>
            <listitem><para>(BOOL) + <link linkend="_interface_unity_ads_1ad7d6aade30273f805bd0f077fd29e0c9">getDebugMode</link></para>
</listitem>
            <listitem><para>(void) + <link linkend="_interface_unity_ads_1a8fb72943aa227334bf7219725ef8eb5b">setDebugMode:</link></para>
</listitem>
            <listitem><para>(BOOL) + <link linkend="_interface_unity_ads_1a88647c57b1d0a967ac74d9f847982561">isSupported</link></para>
</listitem>
            <listitem><para>(BOOL) + <link linkend="_interface_unity_ads_1ad6957c0e6ebdd2b2e5f17e97310ccd2d">isReady</link></para>
</listitem>
            <listitem><para>(BOOL) + <link linkend="_interface_unity_ads_1ab599b1f26750aa88f4e0c7be90203276">isReady:</link></para>
</listitem>
            <listitem><para>(UnityAdsPlacementState) + <link linkend="_interface_unity_ads_1ae6cb2c812b3ecb379d4ece62e6d22b34">getPlacementState</link></para>
</listitem>
            <listitem><para>(UnityAdsPlacementState) + <link linkend="_interface_unity_ads_1abcd2309e4f159ca5f6c8bc55e1d13e78">getPlacementState:</link></para>
</listitem>
            <listitem><para>(NSString *) + <link linkend="_interface_unity_ads_1adfc15977cddb12f40d465060e23f79f4">getVersion</link></para>
</listitem>
            <listitem><para>(BOOL) + <link linkend="_interface_unity_ads_1a8698d281f4758d79a70bd20f6db4a622">isInitialized</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> is a static class with methods for preparing and showing ads.</para>

<para><warning><title>Warning: </title>

<para>In order to ensure expected behaviour, the delegate must always be set. </para>
</warning>
</para>
<para>
Definition at line <link linkend="__unity_ads_8h_source_1l00147">147</link> of file <link linkend="__unity_ads_8h_source">UnityAds.h</link>.</para>
</section>
<section>
<title>Method Documentation</title>
<anchor xml:id="_interface_unity_ads_1ad7d6aade30273f805bd0f077fd29e0c9"/>    <section>
    <title>getDebugMode()</title>
<indexterm><primary>getDebugMode</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>getDebugMode</secondary></indexterm>
<para><computeroutput>+ (BOOL) getDebugMode  </computeroutput></para>
<para>Get the current debug status of <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput>.</para>

<para><formalpara><title>Returns: </title>

<para>If <computeroutput>YES</computeroutput>, <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> will provide verbose logs. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1a4b9aac259a3cb9906685eca5cbf5af5e"/>    <section>
    <title>getDelegate()</title>
<indexterm><primary>getDelegate</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>getDelegate</secondary></indexterm>
<para><computeroutput>+ (id&lt;<link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link>&gt;) getDelegate  </computeroutput></para>
<para>Provides the currently assigned <computeroutput><link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link></computeroutput>.</para>

<para><formalpara><title>Returns: </title>

<para>The current <computeroutput><link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link></computeroutput>. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1ae6cb2c812b3ecb379d4ece62e6d22b34"/>    <section>
    <title>getPlacementState()</title>
<indexterm><primary>getPlacementState</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>getPlacementState</secondary></indexterm>
<para><computeroutput>+ (UnityAdsPlacementState) getPlacementState  </computeroutput></para>
<para>Check the current state of the default placement.</para>

<para><formalpara><title>Returns: </title>

<para>If this is <computeroutput>kUnityAdsPlacementStateReady</computeroutput>, the placement is ready to show ads. Other states represent errors. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1abcd2309e4f159ca5f6c8bc55e1d13e78"/>    <section>
    <title>getPlacementState:()</title>
<indexterm><primary>getPlacementState:</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>getPlacementState:</secondary></indexterm>
<para><computeroutput>+ (UnityAdsPlacementState) getPlacementState: (NSString *) placementId</computeroutput></para>
<para>Check the current state of a placement.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>placementId</entry>
                                <entry>
<para>The placement ID, as defined in Unity Ads admin tools.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>If this is <computeroutput>kUnityAdsPlacementStateReady</computeroutput>, the placement is ready to show ads. Other states represent errors. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1adfc15977cddb12f40d465060e23f79f4"/>    <section>
    <title>getVersion()</title>
<indexterm><primary>getVersion</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>getVersion</secondary></indexterm>
<para><computeroutput>+ (NSString *) getVersion  </computeroutput></para>
<para>Check the version of this <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> SDK</para>

<para><formalpara><title>Returns: </title>

<para>String representing the current version name. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1a89dc56c878efb376b6014d0ef67778a9"/>    <section>
    <title>initialize:delegate:()</title>
<indexterm><primary>initialize:delegate:</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>initialize:delegate:</secondary></indexterm>
<para><computeroutput>+ (void) initialize: (NSString *) gameId(nullable id&lt; <link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link> &gt;) delegate</computeroutput></para>
<para>Initializes <link linkend="_interface_unity_ads">UnityAds</link>. <link linkend="_interface_unity_ads">UnityAds</link> should be initialized when app starts.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>gameId</entry>
                                <entry>
<para>Unique identifier for a game, given by Unity Ads admin tools or Unity editor. </para>
</entry>
                            </row>
                            <row>
                                <entry>delegate</entry>
                                <entry>
<para>delegate for <link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link> callbacks </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_interface_unity_ads_1a95a142d4966bb89652bfec178795e017"/>    <section>
    <title>initialize:delegate:testMode:()</title>
<indexterm><primary>initialize:delegate:testMode:</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>initialize:delegate:testMode:</secondary></indexterm>
<para><computeroutput>+ (void) initialize: (NSString *) gameId(nullable id&lt; <link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link> &gt;) delegate(BOOL) testMode</computeroutput></para>
<para>Initializes <link linkend="_interface_unity_ads">UnityAds</link>. <link linkend="_interface_unity_ads">UnityAds</link> should be initialized when app starts.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>gameId</entry>
                                <entry>
<para>Unique identifier for a game, given by Unity Ads admin tools or Unity editor. </para>
</entry>
                            </row>
                            <row>
                                <entry>delegate</entry>
                                <entry>
<para>delegate for <link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link> callbacks </para>
</entry>
                            </row>
                            <row>
                                <entry>testMode</entry>
                                <entry>
<para>Set this flag to <computeroutput>YES</computeroutput> to indicate test mode and show only test ads. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_interface_unity_ads_1a8698d281f4758d79a70bd20f6db4a622"/>    <section>
    <title>isInitialized()</title>
<indexterm><primary>isInitialized</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>isInitialized</secondary></indexterm>
<para><computeroutput>+ (BOOL) isInitialized  </computeroutput></para>
<para>Check that <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> has been initialized. This might be useful for debugging initialization problems.</para>

<para><formalpara><title>Returns: </title>

<para>If <computeroutput>YES</computeroutput>, Unity Ads has been successfully initialized. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1ad6957c0e6ebdd2b2e5f17e97310ccd2d"/>    <section>
    <title>isReady()</title>
<indexterm><primary>isReady</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>isReady</secondary></indexterm>
<para><computeroutput>+ (BOOL) isReady  </computeroutput></para>
<para>Check if the default placement is ready to show an ad.</para>

<para><formalpara><title>Returns: </title>

<para>If <computeroutput>YES</computeroutput>, the default placement is ready to show an ad. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1ab599b1f26750aa88f4e0c7be90203276"/>    <section>
    <title>isReady:()</title>
<indexterm><primary>isReady:</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>isReady:</secondary></indexterm>
<para><computeroutput>+ (BOOL) isReady: (NSString *) placementId</computeroutput></para>
<para>Check if a particular placement is ready to show an ad.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>placementId</entry>
                                <entry>
<para>The placement ID being checked.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns: </title>

<para>If <computeroutput>YES</computeroutput>, the placement is ready to show an ad. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1a88647c57b1d0a967ac74d9f847982561"/>    <section>
    <title>isSupported()</title>
<indexterm><primary>isSupported</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>isSupported</secondary></indexterm>
<para><computeroutput>+ (BOOL) isSupported  </computeroutput></para>
<para>Check to see if the current device supports using Unity Ads.</para>

<para><formalpara><title>Returns: </title>

<para>If <computeroutput>NO</computeroutput>, the current device cannot initialize <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput> or show ads. </para>
</formalpara>
</para>
    </section><anchor xml:id="_interface_unity_ads_1a5e5d2f9d0967ae24896451e0fa1d7d05"/>    <section>
    <title>NS_UNAVAILABLE()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>NS_UNAVAILABLE</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>NS_UNAVAILABLE</secondary></indexterm>
<para><computeroutput>+ (instancetype) NS_UNAVAILABLE  </computeroutput></para>    </section><anchor xml:id="_interface_unity_ads_1a5e5d2f9d0967ae24896451e0fa1d7d05"/>    <section>
    <title>NS_UNAVAILABLE()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>NS_UNAVAILABLE</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>NS_UNAVAILABLE</secondary></indexterm>
<para><computeroutput>- (instancetype) NS_UNAVAILABLE  </computeroutput></para>    </section><anchor xml:id="_interface_unity_ads_1a8fb72943aa227334bf7219725ef8eb5b"/>    <section>
    <title>setDebugMode:()</title>
<indexterm><primary>setDebugMode:</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>setDebugMode:</secondary></indexterm>
<para><computeroutput>+ (void) setDebugMode: (BOOL) enableDebugMode</computeroutput></para>
<para>Set the logging verbosity of <computeroutput><link linkend="_interface_unity_ads">UnityAds</link></computeroutput>. Debug mode indicates verbose logging. <warning><title>Warning: </title>

<para>Does not relate to test mode for ad content. </para>
</warning>

                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>enableDebugMode</entry>
                                <entry>
<para><computeroutput>YES</computeroutput> for verbose logging. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_interface_unity_ads_1af3fd5286dccef9e7f0557694cc0d747b"/>    <section>
    <title>setDelegate:()</title>
<indexterm><primary>setDelegate:</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>setDelegate:</secondary></indexterm>
<para><computeroutput>+ (void) setDelegate: (id&lt; <link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link> &gt;) delegate</computeroutput></para>
<para>Allows the delegate to be reassigned after <link linkend="_interface_unity_ads">UnityAds</link> has already been initialized.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>delegate</entry>
                                <entry>
<para>The new &#8216;<link linkend="_protocol_unity_ads_delegate-p">UnityAdsDelegate</link>&#8217; for <link linkend="_interface_unity_ads">UnityAds</link> to send callbacks to. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_interface_unity_ads_1a9246ffcfb9c831021f57cf81c21d3757"/>    <section>
    <title>show:()</title>
<indexterm><primary>show:</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>show:</secondary></indexterm>
<para><computeroutput>+ (void) show: (UIViewController *) viewController</computeroutput></para>
<para>Show an ad using the defaul placement.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>viewController</entry>
                                <entry>
<para>The <computeroutput>UIViewController</computeroutput> that is to present the ad view controller. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_interface_unity_ads_1a3b26d257b4fcc8807df6878bb0db09ea"/>    <section>
    <title>show:placementId:()</title>
<indexterm><primary>show:placementId:</primary><secondary>UnityAds</secondary></indexterm>
<indexterm><primary>UnityAds</primary><secondary>show:placementId:</secondary></indexterm>
<para><computeroutput>+ (void) <link linkend="_interface_unity_ads_1a9246ffcfb9c831021f57cf81c21d3757">show:</link> (UIViewController *) viewController(NSString *) placementId</computeroutput></para>
<para>Show an ad using the provided placement ID.</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>viewController</entry>
                                <entry>
<para>The <computeroutput>UIViewController</computeroutput> that is to present the ad view controller. </para>
</entry>
                            </row>
                            <row>
                                <entry>placementId</entry>
                                <entry>
<para>The placement ID, as defined in Unity Ads admin tools. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.ads@2.0.8/Editor/Resources/iOS/builds/UnityAds.framework/Headers/<link linkend="__unity_ads_8h">UnityAds.h</link></section>
</section>
