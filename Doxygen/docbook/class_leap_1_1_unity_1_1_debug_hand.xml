<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_leap_1_1_unity_1_1_debug_hand">
<title>Leap.Unity.DebugHand Class Reference</title>
<indexterm><primary>Leap.Unity.DebugHand</primary></indexterm>
<para>Inheritance diagram for Leap.Unity.DebugHand:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_leap_1_1_unity_1_1_debug_hand.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>override <link linkend="_class_leap_1_1_hand">Hand</link> <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1a406218fbf7d947d156064ccc5ac84d06">GetLeapHand</link> ()</para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1a22cf0421f70d6ab4129c169116d0d83c">SetLeapHand</link> (<link linkend="_class_leap_1_1_hand">Hand</link> hand)</para>
</listitem>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1ab2f2c81a42220b3b96cbdabadbfefd17">SupportsEditorPersistence</link> ()</para>

<para>Returns whether or not this hand model supports editor persistence. This is false by default and must be opt-in by a developer making their own hand model script if they want editor persistence. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1a504064bb8442d990fbd080bda3c1c02c">InitHand</link> ()</para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1a72947d57d9e6eaabade4aa289d5052bd">UpdateHand</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1abb49cc3a3a3716e71a59c193fe7e58b1">DrawBasis</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> position, <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> basis, float scale)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1a013b3eb2cdabba0ddcc7e38aa3ee3044">DrawDebugLines</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>Color [] <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1abe57d750cd5877dc24cc93f593fb0d3b">colors</link> = { Color.gray, Color.yellow, Color.cyan, Color.magenta }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1ae5f9ba1586c260729c18963e5ce2bd92">VisualizeBasis</link><computeroutput> [get, set]</computeroutput>
</para>
</listitem>
            <listitem><para>override <link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0">ModelType</link> <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1aa83762c9f8d2288619683ea6c423dda3">HandModelType</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>override <link linkend="_namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606f">Chirality</link> <link linkend="_class_leap_1_1_unity_1_1_debug_hand_1a28c11b6ea4043f473e856168d5af15fa">Handedness</link><computeroutput> [get, set]</computeroutput>
</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A <link linkend="_class_leap_1_1_unity_1_1_hand_model">HandModel</link> that draws lines for the bones in the hand and its fingers.</para>

<para>The debugs lines are only drawn in the Editor Scene view (when a hand is tracked) and not in the Game view. Use debug hands when you aren&apos;t using visible hands in a scene so that you can see where the hands are in the scene view. </para>
<para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00022">22</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1abb49cc3a3a3716e71a59c193fe7e58b1"/>    <section>
    <title>DrawBasis()</title>
<indexterm><primary>DrawBasis</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>DrawBasis</secondary></indexterm>
<para><computeroutput>void Leap.Unity.DebugHand.DrawBasis (<link linkend="_struct_leap_1_1_vector">Vector</link> position, <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> basis, float scale)</computeroutput></para><para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00098">98</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1a013b3eb2cdabba0ddcc7e38aa3ee3044"/>    <section>
    <title>DrawDebugLines()</title>
<indexterm><primary>DrawDebugLines</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>DrawDebugLines</secondary></indexterm>
<para><computeroutput>void Leap.Unity.DebugHand.DrawDebugLines ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Draws lines from elbow to wrist, wrist to palm, and normal to the palm. </para>
<para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00076">76</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1a406218fbf7d947d156064ccc5ac84d06"/>    <section>
    <title>GetLeapHand()</title>
<indexterm><primary>GetLeapHand</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>GetLeapHand</secondary></indexterm>
<para><computeroutput>override <link linkend="_class_leap_1_1_hand">Hand</link> Leap.Unity.DebugHand.GetLeapHand ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1aa24ca02bf4a64ba33b0370ad6da8731f">Leap.Unity.HandModelBase</link>.</para>
<para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00047">47</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1a504064bb8442d990fbd080bda3c1c02c"/>    <section>
    <title>InitHand()</title>
<indexterm><primary>InitHand</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>InitHand</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.DebugHand.InitHand ( )<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Initializes the hand and calls the line drawing function. </para>
<para>
Reimplemented from <link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1a4789222f2b16957437c703f15afc1bbf">Leap.Unity.HandModelBase</link>.</para>
<para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00062">62</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1a22cf0421f70d6ab4129c169116d0d83c"/>    <section>
    <title>SetLeapHand()</title>
<indexterm><primary>SetLeapHand</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>SetLeapHand</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.DebugHand.SetLeapHand (<link linkend="_class_leap_1_1_hand">Hand</link> hand)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1ab8830cac842482ed7d1045beeb54e98c">Leap.Unity.HandModelBase</link>.</para>
<para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00051">51</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1ab2f2c81a42220b3b96cbdabadbfefd17"/>    <section>
    <title>SupportsEditorPersistence()</title>
<indexterm><primary>SupportsEditorPersistence</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>SupportsEditorPersistence</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.DebugHand.SupportsEditorPersistence ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Returns whether or not this hand model supports editor persistence. This is false by default and must be opt-in by a developer making their own hand model script if they want editor persistence. </para>
</para>
<para>
Reimplemented from <link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1acd4789523584dd7d240e1d426b4d321c">Leap.Unity.HandModelBase</link>.</para>
<para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00055">55</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1a72947d57d9e6eaabade4aa289d5052bd"/>    <section>
    <title>UpdateHand()</title>
<indexterm><primary>UpdateHand</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>UpdateHand</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.DebugHand.UpdateHand ( )<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Updates the hand and calls the line drawing function. </para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1ae80b6c96322d078f01aacc02639d9dd0">Leap.Unity.HandModelBase</link>.</para>
<para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00069">69</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1abe57d750cd5877dc24cc93f593fb0d3b"/>    <section>
    <title>colors</title>
<indexterm><primary>colors</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>colors</secondary></indexterm>
<para><computeroutput>Color [] Leap.Unity.DebugHand.colors = { Color.gray, Color.yellow, Color.cyan, Color.magenta }<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>The colors used for each bone. </para>
<para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00030">30</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1a28c11b6ea4043f473e856168d5af15fa"/>    <section>
    <title>Handedness</title>
<indexterm><primary>Handedness</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>Handedness</secondary></indexterm>
<para><computeroutput>override <link linkend="_namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606f">Chirality</link> Leap.Unity.DebugHand.Handedness<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00040">40</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1aa83762c9f8d2288619683ea6c423dda3"/>    <section>
    <title>HandModelType</title>
<indexterm><primary>HandModelType</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>HandModelType</secondary></indexterm>
<para><computeroutput>override <link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0">ModelType</link> Leap.Unity.DebugHand.HandModelType<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00032">32</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_debug_hand_1ae5f9ba1586c260729c18963e5ce2bd92"/>    <section>
    <title>VisualizeBasis</title>
<indexterm><primary>VisualizeBasis</primary><secondary>Leap.Unity.DebugHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.DebugHand</primary><secondary>VisualizeBasis</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.DebugHand.VisualizeBasis<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__debug_hand_8cs_source_1l00027">27</link> of file <link linkend="__debug_hand_8cs_source">DebugHand.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/<link linkend="__debug_hand_8cs">DebugHand.cs</link></section>
</section>
