<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_service_provider_editor_8cs_source">
<title>LeapServiceProviderEditor.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/LeapServiceProviderEditor.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00014 
00015 &#32;&#32;[CustomEditor(typeof(LeapServiceProvider))]
<anchor xml:id="__leap_service_provider_editor_8cs_source_1l00016"/><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor">00016</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor">LeapServiceProviderEditor</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base">CustomEditorBase</link>&lt;LeapServiceProvider&gt;&#32;{
00017 
<anchor xml:id="__leap_service_provider_editor_8cs_source_1l00018"/><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a6d8c4c320f95c193100feccb73eda40c">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a6d8c4c320f95c193100feccb73eda40c">deviceRotation</link>&#32;=&#32;Quaternion.identity;
<anchor xml:id="__leap_service_provider_editor_8cs_source_1l00019"/><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a278deb2ba3b172f743bd54d2515643bd">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a278deb2ba3b172f743bd54d2515643bd">isVRProvider</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00020 
<anchor xml:id="__leap_service_provider_editor_8cs_source_1l00021"/><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1afc0676788bab922a1179d58946180c86">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1afc0676788bab922a1179d58946180c86">controllerOffset</link>&#32;=&#32;Vector3.zero;
00022 
00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;BOX_RADIUS&#32;=&#32;0.45f;
00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;BOX_WIDTH&#32;=&#32;0.965f;
00025 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;BOX_DEPTH&#32;=&#32;0.6671f;
00026 
<anchor xml:id="__leap_service_provider_editor_8cs_source_1l00027"/><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1ab843b1617ce2fff5b73493530fc4e959">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1ab843b1617ce2fff5b73493530fc4e959">OnEnable</link>()&#32;{
00028 &#32;&#32;&#32;&#32;&#32;&#32;base.OnEnable();
00029 
00030 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ac4af66143c23aa0601e20d58bb3f532e">specifyCustomDecorator</link>(<emphasis role="stringliteral">&quot;_frameOptimization&quot;</emphasis>,&#32;frameOptimizationWarning);
00031 
00032 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(<emphasis role="stringliteral">&quot;_frameOptimization&quot;</emphasis>,
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link>.<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1aded29faa9adf0b09e63a1659e5b0f82d">FrameOptimizationMode</link>.None,
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_physicsExtrapolation&quot;</emphasis>,
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_physicsExtrapolationTime&quot;</emphasis>);
00036 
00037 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(<emphasis role="stringliteral">&quot;_physicsExtrapolation&quot;</emphasis>,
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link>.<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1a2ce142abf998f86ac23b3d30032ea82e">PhysicsExtrapolationMode</link>.Manual,
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_physicsExtrapolationTime&quot;</emphasis>);
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1f7e4b6641ca944bac1efc1679a40afd">deferProperty</link>(<emphasis role="stringliteral">&quot;_workerThreadProfiling&quot;</emphasis>);
00042 &#32;&#32;&#32;&#32;}
00043 
00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;frameOptimizationWarning(SerializedProperty&#32;property)&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;mode&#32;=&#32;(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link>.<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1aded29faa9adf0b09e63a1659e5b0f82d">FrameOptimizationMode</link>)property.intValue;
00046 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;warningText;
00047 
00048 &#32;&#32;&#32;&#32;&#32;&#32;switch&#32;(mode)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link>.<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1aded29faa9adf0b09e63a1659e5b0f82d">FrameOptimizationMode</link>.ReuseUpdateForPhysics:
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warningText&#32;=&#32;<emphasis role="stringliteral">&quot;Reusing&#32;update&#32;frames&#32;for&#32;physics&#32;introduces&#32;a&#32;frame&#32;of&#32;latency&#32;&quot;</emphasis>
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;for&#32;physics&#32;interactions.&quot;</emphasis>;
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link>.<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_1aded29faa9adf0b09e63a1659e5b0f82d">FrameOptimizationMode</link>.ReusePhysicsForUpdate:
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warningText&#32;=&#32;<emphasis role="stringliteral">&quot;This&#32;optimization&#32;REQUIRES&#32;physics&#32;framerate&#32;to&#32;match&#32;your&#32;&quot;</emphasis>
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;target&#32;framerate&#32;EXACTLY.&quot;</emphasis>;
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00059 &#32;&#32;&#32;&#32;&#32;&#32;}
00060 
00061 &#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(warningText,&#32;MessageType.Warning);
00062 &#32;&#32;&#32;&#32;}
00063 
<anchor xml:id="__leap_service_provider_editor_8cs_source_1l00064"/><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1ae7198f5589929f399b0956e271139494">00064</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1ae7198f5589929f399b0956e271139494">OnInspectorGUI</link>()&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_unity_editor">UnityEditor</link>.PlayerSettings.virtualRealitySupported&#32;&amp;&amp;&#32;!<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a278deb2ba3b172f743bd54d2515643bd">isVRProvider</link>)&#32;{
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;VR&#32;support&#32;is&#32;enabled.&#32;If&#32;your&#32;Leap&#32;is&#32;mounted&#32;to&#32;your&#32;headset,&#32;you&#32;should&#32;be&#32;&quot;</emphasis>
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;using&#32;LeapXRServiceProvider&#32;instead&#32;of&#32;LeapServiceProvider.&#32;(If&#32;your&#32;Leap&#32;&quot;</emphasis>
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;is&#32;not&#32;mounted&#32;to&#32;your&#32;headset,&#32;you&#32;can&#32;safely&#32;ignore&#32;this&#32;warning.)&quot;</emphasis>,
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MessageType.Warning);
00071 &#32;&#32;&#32;&#32;&#32;&#32;}
00072 
00073 &#32;&#32;&#32;&#32;&#32;&#32;base.OnInspectorGUI();
00074 &#32;&#32;&#32;&#32;}
00075 
<anchor xml:id="__leap_service_provider_editor_8cs_source_1l00076"/><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a25d4ecd6fae74e7fd8bf6d358fe93568">00076</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a25d4ecd6fae74e7fd8bf6d358fe93568">OnSceneGUI</link>()&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;origin&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform.TransformPoint(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1afc0676788bab922a1179d58946180c86">controllerOffset</link>);
00078 
00079 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;local_top_left,&#32;top_left,&#32;local_top_right,&#32;top_right,
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;local_bottom_left,&#32;bottom_left,&#32;local_bottom_right,&#32;bottom_right;
00081 &#32;&#32;&#32;&#32;&#32;&#32;getLocalGlobalPoint(-1,&#32;1,&#32;1,&#32;out&#32;local_top_left,&#32;out&#32;top_left);
00082 &#32;&#32;&#32;&#32;&#32;&#32;getLocalGlobalPoint(1,&#32;1,&#32;1,&#32;out&#32;local_top_right,&#32;out&#32;top_right);
00083 &#32;&#32;&#32;&#32;&#32;&#32;getLocalGlobalPoint(-1,&#32;1,&#32;-1,&#32;out&#32;local_bottom_left,&#32;out&#32;bottom_left);
00084 &#32;&#32;&#32;&#32;&#32;&#32;getLocalGlobalPoint(1,&#32;1,&#32;-1,&#32;out&#32;local_bottom_right,&#32;out&#32;bottom_right);
00085 
00086 &#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine(origin,&#32;top_left);
00087 &#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine(origin,&#32;top_right);
00088 &#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine(origin,&#32;bottom_left);
00089 &#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine(origin,&#32;bottom_right);
00090 
00091 &#32;&#32;&#32;&#32;&#32;&#32;drawControllerEdge(origin,&#32;local_top_left,&#32;local_top_right);
00092 &#32;&#32;&#32;&#32;&#32;&#32;drawControllerEdge(origin,&#32;local_bottom_left,&#32;local_top_left);
00093 &#32;&#32;&#32;&#32;&#32;&#32;drawControllerEdge(origin,&#32;local_bottom_left,&#32;local_bottom_right);
00094 &#32;&#32;&#32;&#32;&#32;&#32;drawControllerEdge(origin,&#32;local_bottom_right,&#32;local_top_right);
00095 
00096 &#32;&#32;&#32;&#32;&#32;&#32;drawControllerArc(origin,&#32;local_top_left,&#32;local_bottom_left,&#32;local_top_right,
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;local_bottom_right);
00098 &#32;&#32;&#32;&#32;&#32;&#32;drawControllerArc(origin,&#32;local_top_left,&#32;local_top_right,&#32;local_bottom_left,
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;local_bottom_right);
00100 &#32;&#32;&#32;&#32;}
00101 
00102 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;getLocalGlobalPoint(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;z,
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;Vector3&#32;local,&#32;out&#32;Vector3&#32;global)&#32;{
00104 &#32;&#32;&#32;&#32;&#32;&#32;local&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1a6d8c4c320f95c193100feccb73eda40c">deviceRotation</link>&#32;*&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(x&#32;*&#32;BOX_WIDTH,&#32;y&#32;*&#32;BOX_RADIUS,&#32;z&#32;*&#32;BOX_DEPTH);
00105 &#32;&#32;&#32;&#32;&#32;&#32;global&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform.TransformPoint(<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor_1afc0676788bab922a1179d58946180c86">controllerOffset</link>
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;BOX_RADIUS&#32;*&#32;local.normalized);
00107 &#32;&#32;&#32;&#32;}
00108 
00109 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawControllerEdge(Vector3&#32;origin,
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;edge0,&#32;Vector3&#32;edge1)&#32;{
00111 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;right_normal&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.TransformDirection(Vector3.Cross(edge0,&#32;edge1));
00113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;right_angle&#32;=&#32;Vector3.Angle(edge0,&#32;edge1);
00114 
00115 &#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawWireArc(origin,&#32;right_normal,&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform.TransformDirection(edge0),
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;right_angle,&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform.lossyScale.x&#32;*&#32;BOX_RADIUS);
00117 &#32;&#32;&#32;&#32;}
00118 
00119 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawControllerArc(Vector3&#32;origin,
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;edgeA0,&#32;Vector3&#32;edgeA1,
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;edgeB0,&#32;Vector3&#32;edgeB1)&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;faceA&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform.rotation&#32;*&#32;Vector3.Lerp(edgeA0,&#32;edgeA1,&#32;0.5f);
00123 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;faceB&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform.rotation&#32;*&#32;Vector3.Lerp(edgeB0,&#32;edgeB1,&#32;0.5f);
00124 
00125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;resolutionIncrement&#32;=&#32;1f&#32;/&#32;50f;
00126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>&#32;i&#32;=&#32;0f;&#32;i&#32;&lt;&#32;1f;&#32;i&#32;+=&#32;resolutionIncrement)&#32;{
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;begin&#32;=&#32;Vector3.Lerp(faceA,&#32;faceB,&#32;i).normalized
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform.lossyScale.x&#32;*&#32;BOX_RADIUS;
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;end&#32;=&#32;Vector3.Lerp(faceA,&#32;faceB,&#32;i&#32;+&#32;resolutionIncrement).normalized&#32;
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.transform.lossyScale.x&#32;*&#32;BOX_RADIUS;
00131 
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Handles.DrawLine(origin&#32;+&#32;begin,&#32;origin&#32;+&#32;end);
00133 &#32;&#32;&#32;&#32;&#32;&#32;}
00134 &#32;&#32;&#32;&#32;}
00135 &#32;&#32;}
00136 }
</programlisting></section>
