<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__empty_folder_utility_8cs_source">
<title>EmptyFolderUtility.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/EmptyFolderUtility.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;System.IO;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Linq;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00015 
00016 <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>EmptyFolderUtility&#32;{
00017 
00018 &#32;&#32;[MenuItem(<emphasis role="stringliteral">&quot;Assets/Delete&#32;Empty&#32;Folders&quot;</emphasis>)]
00019 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DeleteEmptyFolders()&#32;{
00020 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;directories&#32;=&#32;Directory.GetDirectories(<emphasis role="stringliteral">&quot;Assets&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;*&quot;</emphasis>,&#32;SearchOption.AllDirectories);
00021 
00022 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;directory&#32;<emphasis role="keywordflow">in</emphasis>&#32;directories)&#32;{
00023 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Directory.Exists(directory))&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00027 
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Directory.GetFiles(directory,&#32;<emphasis role="stringliteral">&quot;*&quot;</emphasis>,&#32;SearchOption.AllDirectories).Count(p&#32;=&gt;&#32;Path.GetExtension(p)&#32;!=&#32;<emphasis role="stringliteral">&quot;.meta&quot;</emphasis>)&#32;&gt;&#32;0)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00031 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;e)&#32;{
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogException(e);
00033 &#32;&#32;&#32;&#32;&#32;&#32;}
00034 
00035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Directory.Delete(directory,&#32;recursive:&#32;<emphasis role="keyword">true</emphasis>);
00037 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;e)&#32;{
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Could&#32;not&#32;delete&#32;directory&#32;&quot;</emphasis>&#32;+&#32;directory);
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogException(e);
00040 &#32;&#32;&#32;&#32;&#32;&#32;}
00041 
00042 &#32;&#32;&#32;&#32;}
00043 
00044 &#32;&#32;&#32;&#32;AssetDatabase.Refresh();
00045 &#32;&#32;}
00046 }
</programlisting></section>
