<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__swap_grasp_example_8cs_source">
<title>SwapGraspExample.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Examples/8. Swap Grasp/Scripts/SwapGraspExample.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link>;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_examples">Leap.Unity.Examples</link>&#32;{
00014 
<anchor xml:id="__swap_grasp_example_8cs_source_1l00015"/><link linkend="_namespace_leap_1_1_unity_1_1_examples_1a009a8c553109ae98a972c43c460d0041">00015</link> &#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">IntObj</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link>;
00016 
00017 &#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
<anchor xml:id="__swap_grasp_example_8cs_source_1l00018"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example">00018</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example">SwapGraspExample</link>&#32;:&#32;MonoBehaviour&#32;{
00019 
<anchor xml:id="__swap_grasp_example_8cs_source_1l00020"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1af2944977cfc97cf74f06613c5b01f6ad">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">IntObj</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1af2944977cfc97cf74f06613c5b01f6ad">objA</link>,&#32;objB;
00021 
<anchor xml:id="__swap_grasp_example_8cs_source_1l00022"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1a1aca750068585029a35a8cca2adfa7aa">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_button">InteractionButton</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1a1aca750068585029a35a8cca2adfa7aa">swapButton</link>;
00023 
00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_swapScheduled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00025 
00026 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1a1aca750068585029a35a8cca2adfa7aa">swapButton</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_button_1a20976dd4b5068d794d00f49f894c7139">OnUnpress</link>&#32;+=&#32;scheduleSwap;
00028 
00029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wait&#32;for&#32;just&#32;after&#32;the&#32;PhysX&#32;update&#32;to&#32;swap&#32;a&#32;grasp;</emphasis>
00030 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;allows&#32;the&#32;swapped&#32;object&#32;to&#32;inherit&#32;the&#32;_latest_&#32;rigidbody&#32;position&#32;and</emphasis>
00031 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rotation&#32;from&#32;the&#32;original&#32;held&#32;object&#32;(which&#32;needs&#32;the&#32;PhysX&#32;update&#32;to&#32;receive</emphasis>
00032 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;scheduled&#32;force&#32;/&#32;MovePosition&#32;/&#32;MoveRotation&#32;changes&#32;from&#32;the&#32;grasped&#32;movement</emphasis>
00033 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;system).</emphasis>
00034 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_physics_callbacks">PhysicsCallbacks</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_physics_callbacks_1a2cd49a878de846df442e1e81d33a110d">OnPostPhysics</link>&#32;+=&#32;onPostPhysics;
00035 &#32;&#32;&#32;&#32;}
00036 
00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;scheduleSwap()&#32;{
00038 &#32;&#32;&#32;&#32;&#32;&#32;_swapScheduled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00039 &#32;&#32;&#32;&#32;}
00040 
00041 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;onPostPhysics()&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Swapping&#32;when&#32;both&#32;objects&#32;are&#32;grasped&#32;is&#32;unsupported</emphasis>
00043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1af2944977cfc97cf74f06613c5b01f6ad">objA</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1ad6176dc89403f491f7496e6781be9a8f">isGrasped</link>&#32;&amp;&amp;&#32;objB.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1ad6176dc89403f491f7496e6781be9a8f">isGrasped</link>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
00044 &#32;&#32;
00045 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_swapScheduled&#32;&amp;&amp;&#32;(<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1af2944977cfc97cf74f06613c5b01f6ad">objA</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1ad6176dc89403f491f7496e6781be9a8f">isGrasped</link>&#32;||&#32;objB.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1ad6176dc89403f491f7496e6781be9a8f">isGrasped</link>))&#32;{
00046 
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Swap&#32;&quot;a&quot;&#32;for&#32;&quot;b&quot;;&#32;a&#32;will&#32;be&#32;whichever&#32;object&#32;is&#32;the&#32;grasped&#32;one.</emphasis>
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_leap_1_1_unity_1_1_examples_1a009a8c553109ae98a972c43c460d0041">IntObj</link>&#32;a,&#32;b;
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1af2944977cfc97cf74f06613c5b01f6ad">objA</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1ad6176dc89403f491f7496e6781be9a8f">isGrasped</link>)&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1af2944977cfc97cf74f06613c5b01f6ad">objA</link>;
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;objB;
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;objB;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example_1af2944977cfc97cf74f06613c5b01f6ad">objA</link>;
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00057 
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(Optional)&#32;Remember&#32;B&apos;s&#32;pose&#32;and&#32;motion&#32;to&#32;apply&#32;to&#32;A&#32;post-swap.</emphasis>
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;bPose&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Pose(b.rigidbody.position,&#32;b.rigidbody.rotation);
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;bVel&#32;=&#32;b.rigidbody.velocity;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;bAngVel&#32;=&#32;b.rigidbody.angularVelocity;
00062 
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Match&#32;the&#32;rigidbody&#32;pose&#32;of&#32;the&#32;originally&#32;held&#32;object&#32;before&#32;swapping.</emphasis>
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;it&#32;exists,&#32;always&#32;use&#32;the&#32;latestScheduledGraspPose&#32;to&#32;perform&#32;a&#32;SwapGrasp!</emphasis>
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;prevents&#32;subtle&#32;slippage&#32;with&#32;non-kinematic&#32;objects&#32;that&#32;may&#32;experience</emphasis>
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;gravity&#32;forces,&#32;drag,&#32;or&#32;hit&#32;other&#32;objects,&#32;which&#32;can&#32;leak&#32;into&#32;the&#32;new</emphasis>
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;grasping&#32;pose&#32;when&#32;the&#32;SwapGrasp&#32;is&#32;performed.</emphasis>
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a.latestScheduledGraspPose.HasValue)&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b.rigidbody.position&#32;=&#32;a.latestScheduledGraspPose.Value.position;
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b.rigidbody.rotation&#32;=&#32;a.latestScheduledGraspPose.Value.rotation;
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b.rigidbody.position&#32;=&#32;a.rigidbody.position;
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b.rigidbody.rotation&#32;=&#32;a.rigidbody.rotation;
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00076 
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Swap!</emphasis>
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.graspingController.SwapGrasp(b);
00079 
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;A&#32;over&#32;to&#32;where&#32;B&#32;was,&#32;and&#32;for&#32;fun,&#32;let&apos;s&#32;give&#32;it&#32;B&apos;s&#32;motion&#32;as&#32;well.</emphasis>
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.rigidbody.position&#32;=&#32;bPose.position;
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.rigidbody.rotation&#32;=&#32;bPose.rotation;
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.rigidbody.velocity&#32;=&#32;bVel;
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.rigidbody.angularVelocity&#32;=&#32;bAngVel;
00085 &#32;&#32;&#32;&#32;&#32;&#32;}
00086 
00087 &#32;&#32;&#32;&#32;&#32;&#32;_swapScheduled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00088 &#32;&#32;&#32;&#32;}
00089 &#32;&#32;}
00090 
00091 }
00092 
</programlisting></section>
