<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__flower_planted_8cs_source">
<title>FlowerPlanted.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Samples/Scripts/FlowerPlanted.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//=======&#32;Copyright&#32;(c)&#32;Valve&#32;Corporation,&#32;All&#32;rights&#32;reserved.&#32;===============</emphasis>
00002 
00003 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00004 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00005 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00006 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_valve">Valve</link>.<link linkend="_namespace_valve_1_1_v_r">VR</link>.<link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system">InteractionSystem</link>;
00007 
00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system_1_1_sample">Valve.VR.InteractionSystem.Sample</link>
00009 {
<anchor xml:id="__flower_planted_8cs_source_1l00010"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_flower_planted">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_flower_planted">FlowerPlanted</link>&#32;:&#32;MonoBehaviour
00011 &#32;&#32;&#32;&#32;{
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_flower_planted_1a79e0a5f2b2a65e52b129250e7d571bbb">Plant</link>();
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00016 
<anchor xml:id="__flower_planted_8cs_source_1l00017"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_flower_planted_1a79e0a5f2b2a65e52b129250e7d571bbb">00017</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_flower_planted_1a79e0a5f2b2a65e52b129250e7d571bbb">Plant</link>()
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(DoPlant());
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00021 
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;DoPlant()
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;plantPosition;
00025 
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RaycastHit&#32;hitInfo;
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hit&#32;=&#32;Physics.Raycast(this.transform.position,&#32;Vector3.down,&#32;out&#32;hitInfo);
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hit)
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plantPosition&#32;=&#32;hitInfo.point&#32;+&#32;(Vector3.up&#32;*&#32;0.05f);
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plantPosition&#32;=&#32;this.transform.position;
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;plantPosition.y&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player">Player</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player_1ad6c38e0b00917563e4b19d206d20466e">instance</link>.transform.position.y;
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00037 
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;planting&#32;=&#32;this.gameObject;
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;planting.transform.position&#32;=&#32;plantPosition;
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;planting.transform.rotation&#32;=&#32;Quaternion.Euler(0,&#32;Random.value&#32;*&#32;360f,&#32;0);
00041 
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;planting.GetComponentInChildren&lt;MeshRenderer&gt;().material.SetColor(<emphasis role="stringliteral">&quot;_TintColor&quot;</emphasis>,&#32;Random.ColorHSV(0f,&#32;1f,&#32;1f,&#32;1f,&#32;0.5f,&#32;1f));
00043 
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;rigidbody&#32;=&#32;planting.GetComponent&lt;Rigidbody&gt;();
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rigidbody&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.isKinematic&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00047 
00048 
00049 
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;initialScale&#32;=&#32;Vector3.one&#32;*&#32;0.01f;
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;targetScale&#32;=&#32;Vector3.one&#32;*&#32;(1&#32;+&#32;(Random.value&#32;*&#32;0.25f));
00052 
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;startTime&#32;=&#32;Time.time;
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;overTime&#32;=&#32;0.5f;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;endTime&#32;=&#32;startTime&#32;+&#32;overTime;
00056 
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(Time.time&#32;&lt;&#32;endTime)
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;planting.transform.localScale&#32;=&#32;Vector3.Slerp(initialScale,&#32;targetScale,&#32;(Time.time&#32;-&#32;startTime)&#32;/&#32;overTime);
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00062 
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rigidbody&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.isKinematic&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00067 &#32;&#32;&#32;&#32;}
00068 }
</programlisting></section>
