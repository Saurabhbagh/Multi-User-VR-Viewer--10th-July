<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__serializable_hash_set_8cs_source">
<title>SerializableHashSet.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/SerializableHashSet.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00014 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00015 
00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00017 
00018 &#32;&#32;[Obsolete(<emphasis role="stringliteral">&quot;It&#32;is&#32;no&#32;longer&#32;required&#32;to&#32;annotate&#32;SerializableHashSets&#32;with&#32;the&#32;SHashSet&#32;attribute.&quot;</emphasis>)]
<anchor xml:id="__serializable_hash_set_8cs_source_1l00019"/><link linkend="_class_leap_1_1_unity_1_1_s_hash_set_attribute">00019</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_s_hash_set_attribute">SHashSetAttribute</link>&#32;:&#32;PropertyAttribute&#32;{&#32;}
00020 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00021"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_base">00021</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_base">SerializableHashSetBase</link>&#32;{&#32;}
00022 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00023"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set">00023</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set">SerializableHashSet</link>&lt;T&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_base">SerializableHashSetBase</link>,
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_i_can_report_duplicate_information">ICanReportDuplicateInformation</link>,
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ISerializationCallbackReceiver,
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IEnumerable&lt;T&gt;&#32;{
00027 
00028 &#32;&#32;&#32;&#32;[SerializeField]
00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;T&gt;&#32;_values&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;T&gt;();
00030 
00031 &#32;&#32;&#32;&#32;[NonSerialized]
00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;T&gt;&#32;_set&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;T&gt;();
00033 
00034 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;HASH&#32;SET&#32;API</emphasis>
00035 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00036"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1af3fc7601c948946fedee5d2dfd1cd327">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1af3fc7601c948946fedee5d2dfd1cd327">Count</link>&#32;{
00037 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_set.Count;&#32;}
00038 &#32;&#32;&#32;&#32;}
00039 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00040"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1adcbfeb02f08f6dd1e3be3c61a48ca197">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1adcbfeb02f08f6dd1e3be3c61a48ca197">Add</link>(T&#32;item)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_set.Add(item);
00042 &#32;&#32;&#32;&#32;}
00043 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00044"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a54a8a46ea0b8b525ef10ef18d7e2aba6">00044</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a54a8a46ea0b8b525ef10ef18d7e2aba6">Clear</link>()&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;_set.Clear();
00046 &#32;&#32;&#32;&#32;}
00047 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00048"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1afd24f67131e4189af190b752954a3b54">00048</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1afd24f67131e4189af190b752954a3b54">Contains</link>(T&#32;item)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_set.Contains(item);
00050 &#32;&#32;&#32;&#32;}
00051 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00052"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1aa35a7b3cb3fe6ea85546859aded859d9">00052</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1aa35a7b3cb3fe6ea85546859aded859d9">Remove</link>(T&#32;item)&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_set.Remove(item);
00054 &#32;&#32;&#32;&#32;}
00055 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00056"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a46561c48fd511eb590c80714553ccfdb">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;HashSet&lt;T&gt;(<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set">SerializableHashSet&lt;T&gt;</link>&#32;serializableHashSet)&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;serializableHashSet._set;
00058 &#32;&#32;&#32;&#32;}
00059 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00060"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a808032a7cbd3efb4c443539e1e4b3ed0">00060</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IEnumerator&lt;T&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a808032a7cbd3efb4c443539e1e4b3ed0">GetEnumerator</link>()&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_set.GetEnumerator();
00062 &#32;&#32;&#32;&#32;}
00063 
00064 &#32;&#32;&#32;&#32;IEnumerator&#32;IEnumerable.GetEnumerator()&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_set.GetEnumerator();
00066 &#32;&#32;&#32;&#32;}
00067 
00068 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00069 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00070"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a18418a33019aabad71aa45c18e9de587">00070</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a18418a33019aabad71aa45c18e9de587">ClearDuplicates</link>()&#32;{
00071 &#32;&#32;&#32;&#32;&#32;&#32;HashSet&lt;T&gt;&#32;takenValues&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;T&gt;();
00072 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;_values.Count;&#32;i--&#32;!=&#32;0;)&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;value&#32;=&#32;_values[i];
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(takenValues.Contains(value))&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_values.RemoveAt(i);
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;takenValues.Add(value);
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00079 &#32;&#32;&#32;&#32;&#32;&#32;}
00080 &#32;&#32;&#32;&#32;}
00081 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00082"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a0e117658b43a2531d8ffc15297cab253">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;List&lt;int&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a0e117658b43a2531d8ffc15297cab253">GetDuplicationInformation</link>()&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;Dictionary&lt;T,&#32;int&gt;&#32;info&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;T,&#32;int&gt;();
00084 
00085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;value&#32;<emphasis role="keywordflow">in</emphasis>&#32;_values)&#32;{
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00089 
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(info.ContainsKey(value))&#32;{
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info[value]++;
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info[value]&#32;=&#32;1;
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00095 &#32;&#32;&#32;&#32;&#32;&#32;}
00096 
00097 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;dups&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00098 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;value&#32;<emphasis role="keywordflow">in</emphasis>&#32;_values)&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00102 
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dups.Add(info[value]);
00104 &#32;&#32;&#32;&#32;&#32;&#32;}
00105 
00106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dups;
00107 &#32;&#32;&#32;&#32;}
00108 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00109"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a21160145dc04dea5c5b37940ef8e3939">00109</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1a21160145dc04dea5c5b37940ef8e3939">OnAfterDeserialize</link>()&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;_set.Clear();
00111 
00112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_values&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;value&#32;<emphasis role="keywordflow">in</emphasis>&#32;_values)&#32;{
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_set.Add(value);
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00118 &#32;&#32;&#32;&#32;&#32;&#32;}
00119 
00120 <emphasis role="preprocessor">#if&#32;!UNITY_EDITOR</emphasis>
00121 &#32;&#32;&#32;&#32;&#32;&#32;_values.Clear();
00122 <emphasis role="preprocessor">#endif</emphasis>
00123 &#32;&#32;&#32;&#32;}
00124 
<anchor xml:id="__serializable_hash_set_8cs_source_1l00125"/><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1ae67754584f3b010df7600c4f9bbf39de">00125</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_1ae67754584f3b010df7600c4f9bbf39de">OnBeforeSerialize</link>()&#32;{
00126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_values&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_values&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;T&gt;();
00128 &#32;&#32;&#32;&#32;&#32;&#32;}
00129 
00130 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Delete&#32;any&#32;values&#32;not&#32;present</emphasis>
00132 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;_values.Count;&#32;i--&#32;!=&#32;0;)&#32;{
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;value&#32;=&#32;_values[i];
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00137 
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_set.Contains(value))&#32;{
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_values.RemoveAt(i);
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00141 &#32;&#32;&#32;&#32;&#32;&#32;}
00142 
00143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Add&#32;any&#32;values&#32;not&#32;accounted&#32;for</emphasis>
00144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;value&#32;<emphasis role="keywordflow">in</emphasis>&#32;_set)&#32;{
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isNull(value))&#32;{
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_values.Query().Any(obj&#32;=&gt;&#32;isNull(obj)))&#32;{
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_values.Add(value);
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_values.Contains(value))&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_values.Add(value);
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00154 &#32;&#32;&#32;&#32;&#32;&#32;}
00155 <emphasis role="preprocessor">#else</emphasis>
00156 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//At&#32;runtime&#32;we&#32;just&#32;recreate&#32;the&#32;list</emphasis>
00157 &#32;&#32;&#32;&#32;&#32;&#32;_values.Clear();
00158 &#32;&#32;&#32;&#32;&#32;&#32;_values.AddRange(<emphasis role="keyword">this</emphasis>);
00159 <emphasis role="preprocessor">#endif</emphasis>
00160 &#32;&#32;&#32;&#32;}
00161 
00162 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isNull(<emphasis role="keywordtype">object</emphasis>&#32;obj)&#32;{
00163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00165 &#32;&#32;&#32;&#32;&#32;&#32;}
00166 
00167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;is&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object)&#32;{
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(obj&#32;as&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object)&#32;==&#32;<emphasis role="keyword">null</emphasis>;
00169 &#32;&#32;&#32;&#32;&#32;&#32;}
00170 
00171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00172 &#32;&#32;&#32;&#32;}
00173 &#32;&#32;}
00174 }
</programlisting></section>
