<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__haptic_rack_8cs_source">
<title>HapticRack.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Core/Scripts/HapticRack.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//=======&#32;Copyright&#32;(c)&#32;Valve&#32;Corporation,&#32;All&#32;rights&#32;reserved.&#32;===============</emphasis>
00002 <emphasis role="comment">//</emphasis>
00003 <emphasis role="comment">//&#32;Purpose:&#32;Triggers&#32;haptic&#32;pulses&#32;based&#32;on&#32;a&#32;linear&#32;mapping</emphasis>
00004 <emphasis role="comment">//</emphasis>
00005 <emphasis role="comment">//=============================================================================</emphasis>
00006 
00007 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00008 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Events;
00009 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00010 
00011 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system">Valve.VR.InteractionSystem</link>
00012 {
00013 &#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------------------------------</emphasis>
00014 &#32;&#32;&#32;&#32;[RequireComponent(&#32;typeof(&#32;Interactable&#32;)&#32;)]
<anchor xml:id="__haptic_rack_8cs_source_1l00015"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack">00015</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack">HapticRack</link>&#32;:&#32;MonoBehaviour
00016 &#32;&#32;&#32;&#32;{
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(&#32;<emphasis role="stringliteral">&quot;The&#32;linear&#32;mapping&#32;driving&#32;the&#32;haptic&#32;rack&quot;</emphasis>&#32;)]
<anchor xml:id="__haptic_rack_8cs_source_1l00018"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a665f0329fcdd77f679dcce3ef9bc9d14">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_mapping">LinearMapping</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a665f0329fcdd77f679dcce3ef9bc9d14">linearMapping</link>;
00019 
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(&#32;<emphasis role="stringliteral">&quot;The&#32;number&#32;of&#32;haptic&#32;pulses&#32;evenly&#32;distributed&#32;along&#32;the&#32;mapping&quot;</emphasis>&#32;)]
<anchor xml:id="__haptic_rack_8cs_source_1l00021"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1af0af6b8328a17e2f2056a19fa4944948">00021</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1af0af6b8328a17e2f2056a19fa4944948">teethCount</link>&#32;=&#32;128;
00022 
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(&#32;<emphasis role="stringliteral">&quot;Minimum&#32;duration&#32;of&#32;the&#32;haptic&#32;pulse&quot;</emphasis>&#32;)]
<anchor xml:id="__haptic_rack_8cs_source_1l00024"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a13deb2304d856fcb88e3b784538ddd49">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a13deb2304d856fcb88e3b784538ddd49">minimumPulseDuration</link>&#32;=&#32;500;
00025 
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(&#32;<emphasis role="stringliteral">&quot;Maximum&#32;duration&#32;of&#32;the&#32;haptic&#32;pulse&quot;</emphasis>&#32;)]
<anchor xml:id="__haptic_rack_8cs_source_1l00027"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a9d7205ed4c8bf7ad634f224e3cfc6f0f">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a9d7205ed4c8bf7ad634f224e3cfc6f0f">maximumPulseDuration</link>&#32;=&#32;900;
00028 
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Tooltip(&#32;<emphasis role="stringliteral">&quot;This&#32;event&#32;is&#32;triggered&#32;every&#32;time&#32;a&#32;haptic&#32;pulse&#32;is&#32;made&quot;</emphasis>&#32;)]
<anchor xml:id="__haptic_rack_8cs_source_1l00030"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a19cca547466e55f45d5e5faf2e22cd13">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;UnityEvent&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a19cca547466e55f45d5e5faf2e22cd13">onPulse</link>;
00031 
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand;
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;previousToothIndex&#32;=&#32;-1;
00034 
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a665f0329fcdd77f679dcce3ef9bc9d14">linearMapping</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;)
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a665f0329fcdd77f679dcce3ef9bc9d14">linearMapping</link>&#32;=&#32;GetComponent&lt;LinearMapping&gt;();
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00043 
00044 
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnHandHoverBegin(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand&#32;)
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hand&#32;=&#32;hand;
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00050 
00051 
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnHandHoverEnd(&#32;Hand&#32;hand&#32;)
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.hand&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00057 
00058 
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentToothIndex&#32;=&#32;Mathf.RoundToInt(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a665f0329fcdd77f679dcce3ef9bc9d14">linearMapping</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_mapping_1a775b4f01f606f8083af2dc1ae0f373a5">value</link>&#32;*&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1af0af6b8328a17e2f2056a19fa4944948">teethCount</link>&#32;-&#32;0.5f&#32;);
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currentToothIndex&#32;!=&#32;previousToothIndex&#32;)
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pulse();
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;previousToothIndex&#32;=&#32;currentToothIndex;
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00069 
00070 
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Pulse()
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hand&#32;&amp;&amp;&#32;(hand.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand_1a5171ff0d839ba09534a71011ed9a2dc2">isActive</link>)&#32;&amp;&amp;&#32;(&#32;hand.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand_1aef5b383b995bb0674bf3e53eaadd76e6">GetBestGrabbingType</link>()&#32;!=&#32;<link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system_1ae03ab84d315f5997fd000817bfb96a0f">GrabTypes</link>.None&#32;)&#32;)
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ushort&#32;duration&#32;=&#32;(ushort)Random.Range(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a13deb2304d856fcb88e3b784538ddd49">minimumPulseDuration</link>,&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a9d7205ed4c8bf7ad634f224e3cfc6f0f">maximumPulseDuration</link>&#32;+&#32;1&#32;);
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hand.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand_1ab9e8c722bbad5cb37f0268f4c1745118">TriggerHapticPulse</link>(&#32;duration&#32;);
00078 
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack_1a19cca547466e55f45d5e5faf2e22cd13">onPulse</link>.Invoke();
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00082 &#32;&#32;&#32;&#32;}
00083 }
</programlisting></section>
