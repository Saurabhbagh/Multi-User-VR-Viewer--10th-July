<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_leap_1_1_unity_1_1_multi_typed_reference">
<title>Leap.Unity.MultiTypedReference&lt; BaseType &gt; Class Template Reference</title>
<indexterm><primary>Leap.Unity.MultiTypedReference&lt; BaseType &gt;</primary></indexterm>
<para>

<para>Represents a single reference to a value of type BaseType. </para>
 
</para>
<para>Inheritance diagram for Leap.Unity.MultiTypedReference&lt; BaseType &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_leap_1_1_unity_1_1_multi_typed_reference.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<section>
<title>Detailed Description</title>

<para>Represents a single reference to a value of type BaseType. </para>



<para>Unlike a normal reference, when <link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link> is serialized it is able to support a certain amount of polymorphism. To use <link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link> you must specify exactly which types could possibly be referenced. To must also pre-declare a non-generic version of the chosen class, mucgh in the same style as UnityEvent. </para>
<simplesect><title>Type Constraints</title>
<para><emphasis role="strong">BaseType:class</emphasis></para>
</simplesect>
<para>
Definition at line <link linkend="__multi_typed_reference_8cs_source_1l00028">28</link> of file <link linkend="__multi_typed_reference_8cs_source">MultiTypedReference.cs</link>.</para>
<para>
The documentation for this class was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/<link linkend="__multi_typed_reference_8cs">MultiTypedReference.cs</link></section>
</section>
