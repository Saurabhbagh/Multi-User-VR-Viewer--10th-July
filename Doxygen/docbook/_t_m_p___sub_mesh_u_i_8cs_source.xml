<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__t_m_p___sub_mesh_u_i_8cs_source">
<title>TMP_SubMeshUI.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.textmeshpro@1.3.0/Scripts/Runtime/TMP_SubMeshUI.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00002 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.UI;
00003 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00004 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00005 
00006 <emphasis role="preprocessor">#pragma&#32;warning&#32;disable&#32;0414&#32;//&#32;Disabled&#32;a&#32;few&#32;warnings&#32;related&#32;to&#32;serialized&#32;variables&#32;not&#32;used&#32;in&#32;this&#32;script&#32;but&#32;used&#32;in&#32;the&#32;editor.</emphasis>
00007 
00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_t_m_pro">TMPro</link>
00009 {
00010 
00011 &#32;&#32;&#32;&#32;[ExecuteInEditMode]
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00012"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i">00012</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i">TMP_SubMeshUI</link>&#32;:&#32;MaskableGraphic,&#32;IClippable,&#32;IMaskable,&#32;IMaterialModifier
00013 &#32;&#32;&#32;&#32;{
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___font_asset">TMP_FontAsset</link>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1ac26089f074be39cd7f88b0b2b36c9e6b">fontAsset</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00018"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1ac26089f074be39cd7f88b0b2b36c9e6b">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_fontAsset;&#32;}
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;m_fontAsset&#32;=&#32;value;&#32;}
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___font_asset">TMP_FontAsset</link>&#32;m_fontAsset;
00024 
00025 
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sprite_asset">TMP_SpriteAsset</link>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a4d6484238e6c880ce9c7065cf9172db2">spriteAsset</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00030"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a4d6484238e6c880ce9c7065cf9172db2">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_spriteAsset;&#32;}
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;m_spriteAsset&#32;=&#32;value;&#32;}
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sprite_asset">TMP_SpriteAsset</link>&#32;m_spriteAsset;
00036 
00037 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;Texture&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a455c7c479e81a37c0de77570b4bf3578">mainTexture</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00042"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a455c7c479e81a37c0de77570b4bf3578">00042</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this.<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a05ed962e084767f371f3971078a84ec7">sharedMaterial</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a05ed962e084767f371f3971078a84ec7">sharedMaterial</link>.GetTexture(ShaderUtilities.ID_MainTex);
00047 
00048 
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00052 
00053 
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;Material&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6bd5b75c3ee5ddfdda01f26c7052bb97">material</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00058"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6bd5b75c3ee5ddfdda01f26c7052bb97">00058</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;a&#32;new&#32;Instance&#32;of&#32;the&#32;Material&#32;if&#32;none&#32;exists.&#32;Otherwise&#32;return&#32;the&#32;current&#32;Material&#32;Instance.</emphasis>
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;GetMaterial(m_sharedMaterial);&#32;}
00061 
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assign&#32;new&#32;font&#32;material</emphasis>
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_sharedMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;m_sharedMaterial.GetInstanceID()&#32;==&#32;value.GetInstanceID())
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00067 
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_sharedMaterial&#32;=&#32;m_material&#32;=&#32;value;
00069 
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_padding&#32;=&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a7d5c58041ab5f14071b3a39108bd3408">GetPaddingForMaterial</link>();
00071 
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a2597031429dd905eb468c86df32850a8">SetVerticesDirty</link>();
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a5aae214407f49b19377ba6b3c99bd3e9">SetMaterialDirty</link>();
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;m_material;
00078 
00079 
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Material&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a05ed962e084767f371f3971078a84ec7">sharedMaterial</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00084"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a05ed962e084767f371f3971078a84ec7">00084</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_sharedMaterial;&#32;}
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;SetSharedMaterial(value);&#32;}
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;m_sharedMaterial;
00090 
00091 
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Material&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a752da89e0deb52b9e005365ebc315fa1">fallbackMaterial</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00096"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a752da89e0deb52b9e005365ebc315fa1">00096</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_fallbackMaterial;&#32;}
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_fallbackMaterial&#32;==&#32;value)&#32;<emphasis role="keywordflow">return</emphasis>;
00101 
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_fallbackMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;m_fallbackMaterial&#32;!=&#32;value)
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_MaterialManager.ReleaseFallbackMaterial(m_fallbackMaterial);
00104 
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_fallbackMaterial&#32;=&#32;value;
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_MaterialManager.AddFallbackMaterialReference(m_fallbackMaterial);
00107 
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetSharedMaterial(m_fallbackMaterial);
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;m_fallbackMaterial;
00112 
00113 
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Material&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a9b771a5f56a567373c07d24fae47011c">fallbackSourceMaterial</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00118"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a9b771a5f56a567373c07d24fae47011c">00118</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_fallbackSourceMaterial;&#32;}
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;m_fallbackSourceMaterial&#32;=&#32;value;&#32;}
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;m_fallbackSourceMaterial;
00123 
00124 
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;Material&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1acf8eb0b73fe8fe9f4b12d71550739bb1">materialForRendering</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00129"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1acf8eb0b73fe8fe9f4b12d71550739bb1">00129</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;TMP_MaterialManager.GetMaterialForRendering(<emphasis role="keyword">this</emphasis>,&#32;m_sharedMaterial);
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00135 
00136 
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1afeb2c2de9cff26385cf00802a8d356da">isDefaultMaterial</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00141"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1afeb2c2de9cff26385cf00802a8d356da">00141</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_isDefaultMaterial;&#32;}
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;m_isDefaultMaterial&#32;=&#32;value;&#32;}
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_isDefaultMaterial;
00147 
00148 
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a739f793cbda2c66b096ddf5ce3b1658f">padding</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00153"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a739f793cbda2c66b096ddf5ce3b1658f">00153</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_padding;&#32;}
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;m_padding&#32;=&#32;value;&#32;}
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_padding;
00159 
00160 
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;CanvasRenderer&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a4888f8c9e99911b05312c1ed5a578a33">canvasRenderer</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00165"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a4888f8c9e99911b05312c1ed5a578a33">00165</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_canvasRenderer&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;m_canvasRenderer&#32;=&#32;GetComponent&lt;CanvasRenderer&gt;();
00167 
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_canvasRenderer;
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;CanvasRenderer&#32;m_canvasRenderer;
00173 
00174 
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Mesh&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a90820457f70262482c28723f1265876a">mesh</link>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00179"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a90820457f70262482c28723f1265876a">00179</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_mesh&#32;==&#32;<emphasis role="keyword">null</emphasis>)
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_mesh&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Mesh();
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_mesh.hideFlags&#32;=&#32;HideFlags.HideAndDontSave;
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00187 
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_mesh;
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;m_mesh&#32;=&#32;value;&#32;}
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Mesh&#32;m_mesh;
00193 
00194 
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_text_mesh_pro_u_g_u_i">TextMeshProUGUI</link>&#32;m_TextComponent;
00197 
00198 
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[System.NonSerialized]
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_isRegisteredForEvents;
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_materialDirty;
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SerializeField]
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_materialReferenceIndex;
00204 
00205 
00206 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00213"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a72235ccd83b46453ebb152ff645602be">00213</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i">TMP_SubMeshUI</link>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a72235ccd83b46453ebb152ff645602be">AddSubTextObject</link>(<link linkend="_class_t_m_pro_1_1_text_mesh_pro_u_g_u_i">TextMeshProUGUI</link>&#32;textComponent,&#32;<link linkend="_struct_t_m_pro_1_1_material_reference">MaterialReference</link>&#32;materialReference)
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;go&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(<emphasis role="stringliteral">&quot;TMP&#32;UI&#32;SubObject&#32;[&quot;</emphasis>&#32;+&#32;materialReference.<link linkend="_struct_t_m_pro_1_1_material_reference_1ab5f2e88a52f52cea5eb3f62ff9d452ef">material</link>.name&#32;+&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>,&#32;typeof(RectTransform));
00216 
00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;go.transform.SetParent(textComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1aa0aea09b889f063a8bea42ab981d0569">transform</link>,&#32;<emphasis role="keyword">false</emphasis>);
00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;go.layer&#32;=&#32;textComponent.gameObject.layer;
00219 
00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;rectTransform&#32;=&#32;go.GetComponent&lt;RectTransform&gt;();
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.anchorMin&#32;=&#32;Vector2.zero;
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.anchorMax&#32;=&#32;Vector2.one;
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.sizeDelta&#32;=&#32;Vector2.zero;
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.pivot&#32;=&#32;textComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1adf46752eab5ab6c5c0d0d7b58e3bf847">rectTransform</link>.pivot;
00225 
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i">TMP_SubMeshUI</link>&#32;subMesh&#32;=&#32;go.AddComponent&lt;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i">TMP_SubMeshUI</link>&gt;();
00227 
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subMesh.m_canvasRenderer&#32;=&#32;subMesh.<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a4888f8c9e99911b05312c1ed5a578a33">canvasRenderer</link>;
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subMesh.m_TextComponent&#32;=&#32;textComponent;
00230 
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subMesh.m_materialReferenceIndex&#32;=&#32;materialReference.<link linkend="_struct_t_m_pro_1_1_material_reference_1af0e1e670567aeaa6b1b1bc67b41d4d3d">index</link>;
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subMesh.m_fontAsset&#32;=&#32;materialReference.<link linkend="_struct_t_m_pro_1_1_material_reference_1a57d6038454b7627a678c178751ae7b2e">fontAsset</link>;
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subMesh.m_spriteAsset&#32;=&#32;materialReference.<link linkend="_struct_t_m_pro_1_1_material_reference_1a1ebf5e832a0bc9cab36327cc0208362e">spriteAsset</link>;
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subMesh.m_isDefaultMaterial&#32;=&#32;materialReference.<link linkend="_struct_t_m_pro_1_1_material_reference_1ab986ec897bc828a682be0bc9d254e0a5">isDefaultMaterial</link>;
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subMesh.SetSharedMaterial(materialReference.<link linkend="_struct_t_m_pro_1_1_material_reference_1ab5f2e88a52f52cea5eb3f62ff9d452ef">material</link>);
00236 
00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;subMesh;
00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00239 
00240 
00241 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00245"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a685c041796705a824e2432c1cf075db6">00245</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a685c041796705a824e2432c1cf075db6">OnEnable</link>()
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;***&#32;SubObject&#32;OnEnable()&#32;***&quot;);</emphasis>
00248 
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Register&#32;Callbacks&#32;for&#32;various&#32;events.</emphasis>
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_isRegisteredForEvents)
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00252 
00253 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.MATERIAL_PROPERTY_EVENT.Add(ON_MATERIAL_PROPERTY_CHANGED);
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.FONT_PROPERTY_EVENT.Add(ON_FONT_PROPERTY_CHANGED);
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TMPro_EventManager.TEXTMESHPRO_PROPERTY_EVENT.Add(ON_TEXTMESHPRO_PROPERTY_CHANGED);</emphasis>
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.DRAG_AND_DROP_MATERIAL_EVENT.Add(ON_DRAG_AND_DROP_MATERIAL);
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TMPro_EventManager.TEXT_STYLE_PROPERTY_EVENT.Add(ON_TEXT_STYLE_CHANGED);</emphasis>
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.SPRITE_ASSET_PROPERTY_EVENT.Add(ON_SPRITE_ASSET_PROPERTY_CHANGED);
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TMPro_EventManager.TMP_SETTINGS_PROPERTY_EVENT.Add(ON_TMP_SETTINGS_CHANGED);</emphasis>
00261 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00262 
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_isRegisteredForEvents&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00265 
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ShouldRecalculateStencil&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6505e4b6f7c11eeb4ea155d7d6ef4248">RecalculateClipping</link>();
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6f662a8acac8a908a79012344a8e2330">RecalculateMasking</link>();
00269 
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SetAllDirty();</emphasis>
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00272 
00273 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00274"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a06ee252d51e45e951fdef895135559b4">00274</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a06ee252d51e45e951fdef895135559b4">OnDisable</link>()
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;***&#32;SubObject&#32;OnDisable()&#32;***&quot;);</emphasis>
00277 
00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_canvasRenderer.Clear();</emphasis>
00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___update_registry">TMP_UpdateRegistry</link>.<link linkend="_class_t_m_pro_1_1_t_m_p___update_registry_1abdd464c5a6919c3383c4d8fa19fe60df">UnRegisterCanvasElementForRebuild</link>(<emphasis role="keyword">this</emphasis>);
00280 
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_MaskMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_MaterialManager.ReleaseStencilMaterial(m_MaskMaterial);
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00286 
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_fallbackMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_MaterialManager.ReleaseFallbackMaterial(m_fallbackMaterial);
00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_fallbackMaterial&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00292 
00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.OnDisable();
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00295 
00296 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00297"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1aebef8466a825a92f2d403efd056f20a6">00297</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1aebef8466a825a92f2d403efd056f20a6">OnDestroy</link>()
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;***&#32;OnDestroy()&#32;***&quot;);</emphasis>
00300 
00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Destroy&#32;Mesh</emphasis>
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_mesh&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;DestroyImmediate(m_mesh);
00303 
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_MaskMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_MaterialManager.ReleaseStencilMaterial(m_MaskMaterial);
00306 
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_fallbackMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_MaterialManager.ReleaseFallbackMaterial(m_fallbackMaterial);
00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_fallbackMaterial&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00312 
00313 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unregister&#32;the&#32;event&#32;this&#32;object&#32;was&#32;listening&#32;to</emphasis>
00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.MATERIAL_PROPERTY_EVENT.Remove(ON_MATERIAL_PROPERTY_CHANGED);
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.FONT_PROPERTY_EVENT.Remove(ON_FONT_PROPERTY_CHANGED);
00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TMPro_EventManager.TEXTMESHPRO_PROPERTY_EVENT.Remove(ON_TEXTMESHPRO_PROPERTY_CHANGED);</emphasis>
00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.DRAG_AND_DROP_MATERIAL_EVENT.Remove(ON_DRAG_AND_DROP_MATERIAL);
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TMPro_EventManager.TEXT_STYLE_PROPERTY_EVENT.Remove(ON_TEXT_STYLE_CHANGED);</emphasis>
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.SPRITE_ASSET_PROPERTY_EVENT.Remove(ON_SPRITE_ASSET_PROPERTY_CHANGED);
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TMPro_EventManager.TMP_SETTINGS_PROPERTY_EVENT.Remove(ON_TMP_SETTINGS_CHANGED);</emphasis>
00322 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00323 
00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_isRegisteredForEvents&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00325 
00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6505e4b6f7c11eeb4ea155d7d6ef4248">RecalculateClipping</link>();
00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00328 
00329 
00330 
00331 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Event&#32;received&#32;when&#32;custom&#32;material&#32;editor&#32;properties&#32;are&#32;changed.</emphasis>
00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ON_MATERIAL_PROPERTY_CHANGED(<emphasis role="keywordtype">bool</emphasis>&#32;isChanged,&#32;Material&#32;mat)
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;***&#32;ON_MATERIAL_PROPERTY_CHANGED&#32;***&quot;);</emphasis>
00336 
00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;targetMaterialID&#32;=&#32;mat.GetInstanceID();
00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sharedMaterialID&#32;=&#32;m_sharedMaterial.GetInstanceID();
00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maskingMaterialID&#32;=&#32;m_MaskMaterial&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;0&#32;:&#32;m_MaskMaterial.GetInstanceID();
00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fallbackSourceMaterialID&#32;=&#32;m_fallbackSourceMaterial&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;0&#32;:&#32;m_fallbackSourceMaterial.GetInstanceID();
00341 
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Filter&#32;events&#32;and&#32;return&#32;if&#32;the&#32;affected&#32;material&#32;is&#32;not&#32;this&#32;object&apos;s&#32;material.</emphasis>
00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(targetMaterialID&#32;!=&#32;sharedMaterialID&#32;&amp;&amp;&#32;targetMaterialID&#32;!=&#32;maskingMaterialID)&#32;return;</emphasis>
00344 
00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Filter&#32;events&#32;and&#32;return&#32;if&#32;the&#32;affected&#32;material&#32;is&#32;not&#32;this&#32;object&apos;s&#32;material.</emphasis>
00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_fallbackMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;fallbackSourceMaterialID&#32;==&#32;targetMaterialID)
00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_MaterialManager.CopyMaterialPresetProperties(mat,&#32;m_fallbackMaterial);
00348 
00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_TextComponent&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;m_TextComponent&#32;=&#32;GetComponentInParent&lt;TextMeshProUGUI&gt;();
00350 
00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;material&#32;properties&#32;are&#32;synchronized&#32;between&#32;the&#32;assigned&#32;material&#32;and&#32;masking&#32;material.</emphasis>
00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_MaskMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.Undo.RecordObject(m_MaskMaterial,&#32;<emphasis role="stringliteral">&quot;Material&#32;Property&#32;Changes&quot;</emphasis>);
00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.Undo.RecordObject(m_sharedMaterial,&#32;<emphasis role="stringliteral">&quot;Material&#32;Property&#32;Changes&quot;</emphasis>);
00356 
00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targetMaterialID&#32;==&#32;sharedMaterialID)
00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;Copy&#32;base&#32;material&#32;properties&#32;to&#32;masking&#32;material&#32;if&#32;not&#32;null.&quot;);</emphasis>
00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;stencilID&#32;=&#32;m_MaskMaterial.GetFloat(ShaderUtilities.ID_StencilID);
00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;stencilComp&#32;=&#32;m_MaskMaterial.GetFloat(ShaderUtilities.ID_StencilComp);
00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial.CopyPropertiesFromMaterial(mat);
00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial.shaderKeywords&#32;=&#32;mat.shaderKeywords;
00364 
00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial.SetFloat(ShaderUtilities.ID_StencilID,&#32;stencilID);
00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial.SetFloat(ShaderUtilities.ID_StencilComp,&#32;stencilComp);
00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(targetMaterialID&#32;==&#32;maskingMaterialID)
00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;the&#32;padding&#32;</emphasis>
00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a7d5c58041ab5f14071b3a39108bd3408">GetPaddingForMaterial</link>(mat);
00372 
00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_sharedMaterial.CopyPropertiesFromMaterial(mat);
00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_sharedMaterial.shaderKeywords&#32;=&#32;mat.shaderKeywords;
00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_sharedMaterial.SetFloat(ShaderUtilities.ID_StencilID,&#32;0);
00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_sharedMaterial.SetFloat(ShaderUtilities.ID_StencilComp,&#32;8);
00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fallbackSourceMaterialID&#32;==&#32;targetMaterialID)
00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;stencilID&#32;=&#32;m_MaskMaterial.GetFloat(ShaderUtilities.ID_StencilID);
00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;stencilComp&#32;=&#32;m_MaskMaterial.GetFloat(ShaderUtilities.ID_StencilComp);
00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial.CopyPropertiesFromMaterial(m_fallbackMaterial);
00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial.shaderKeywords&#32;=&#32;m_fallbackMaterial.shaderKeywords;
00384 
00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial.SetFloat(ShaderUtilities.ID_StencilID,&#32;stencilID);
00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial.SetFloat(ShaderUtilities.ID_StencilComp,&#32;stencilComp);
00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00389 
00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_padding&#32;=&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a7d5c58041ab5f14071b3a39108bd3408">GetPaddingForMaterial</link>();
00391 
00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a2597031429dd905eb468c86df32850a8">SetVerticesDirty</link>();
00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ShouldRecalculateStencil&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6505e4b6f7c11eeb4ea155d7d6ef4248">RecalculateClipping</link>();
00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6f662a8acac8a908a79012344a8e2330">RecalculateMasking</link>();
00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00397 
00398 
00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Event&#32;to&#32;Track&#32;Material&#32;Changed&#32;resulting&#32;from&#32;Drag-n-drop.</emphasis>
00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ON_DRAG_AND_DROP_MATERIAL(GameObject&#32;obj,&#32;Material&#32;currentMaterial,&#32;Material&#32;newMaterial)
00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;event&#32;applies&#32;to&#32;this&#32;current&#32;object</emphasis>
00403 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_2018_2_OR_NEWER</emphasis>
00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;==&#32;gameObject&#32;||&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.PrefabUtility.GetCorrespondingObjectFromSource(gameObject)&#32;==&#32;obj)
00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#<emphasis role="keywordflow">else</emphasis>
00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;==&#32;gameObject&#32;||&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.PrefabUtility.GetPrefabParent(gameObject)&#32;==&#32;obj)
00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif
00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_isDefaultMaterial)&#32;<emphasis role="keywordflow">return</emphasis>;
00410 
00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;we&#32;have&#32;a&#32;valid&#32;reference&#32;to&#32;the&#32;renderer.</emphasis>
00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_canvasRenderer&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;m_canvasRenderer&#32;=&#32;GetComponent&lt;CanvasRenderer&gt;();
00413 
00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.Undo.RecordObject(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="stringliteral">&quot;Material&#32;Assignment&quot;</emphasis>);
00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.Undo.RecordObject(m_canvasRenderer,&#32;<emphasis role="stringliteral">&quot;Material&#32;Assignment&quot;</emphasis>);
00416 
00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetSharedMaterial(newMaterial);
00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1a7e0fb1ed735ea717f9b98373b9de6e73">havePropertiesChanged</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00421 
00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Event&#32;received&#32;when&#32;font&#32;asset&#32;properties&#32;are&#32;changed&#32;in&#32;Font&#32;Inspector</emphasis>
00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ON_SPRITE_ASSET_PROPERTY_CHANGED(<emphasis role="keywordtype">bool</emphasis>&#32;isChanged,&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object&#32;obj)
00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(spriteSheet&#32;!=&#32;null&#32;&amp;&amp;&#32;(obj&#32;as&#32;TMP_SpriteAsset&#32;==&#32;m_spriteAsset&#32;||&#32;obj&#32;as&#32;Texture2D&#32;==&#32;m_spriteAsset.spriteSheet))</emphasis>
00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_TextComponent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1a7e0fb1ed735ea717f9b98373b9de6e73">havePropertiesChanged</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_TextComponent.SetVerticesDirty();</emphasis>
00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00432 
00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00435 
00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Event&#32;received&#32;when&#32;font&#32;asset&#32;properties&#32;are&#32;changed&#32;in&#32;Font&#32;Inspector</emphasis>
00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ON_FONT_PROPERTY_CHANGED(<emphasis role="keywordtype">bool</emphasis>&#32;isChanged,&#32;TMP_FontAsset&#32;font)
00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_fontAsset&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;font.GetInstanceID()&#32;==&#32;m_fontAsset.GetInstanceID())
00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Copy&#32;Normal&#32;and&#32;Bold&#32;Weight</emphasis>
00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_fallbackMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_fallbackMaterial.SetFloat(ShaderUtilities.ID_WeightNormal,&#32;m_fontAsset.<link linkend="_class_t_m_pro_1_1_t_m_p___font_asset_1a5e537de3b95199926e373e61b27fc197">normalStyle</link>);
00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_fallbackMaterial.SetFloat(ShaderUtilities.ID_WeightBold,&#32;m_fontAsset.<link linkend="_class_t_m_pro_1_1_t_m_p___font_asset_1a16dbe5f4d6f79766b9cd9745c94bbc9c">boldStyle</link>);
00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00449 
00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ON_TMP_SETTINGS_CHANGED()
00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;TMP&#32;Setting&#32;have&#32;changed.&quot;);</emphasis>
00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SetVerticesDirty();</emphasis>
00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SetMaterialDirty();</emphasis>
00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00459 <emphasis role="preprocessor">#endif</emphasis>
00460 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00464"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a37e6c09ce69b4b53a9245571c981f41c">00464</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a37e6c09ce69b4b53a9245571c981f41c">OnTransformParentChanged</link>()
00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.IsActive())
00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00468 
00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ShouldRecalculateStencil&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6505e4b6f7c11eeb4ea155d7d6ef4248">RecalculateClipping</link>();
00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6f662a8acac8a908a79012344a8e2330">RecalculateMasking</link>();
00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00473 
00474 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00480"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a687aa0d711bf32e50c11a403493c2667">00480</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;Material&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a687aa0d711bf32e50c11a403493c2667">GetModifiedMaterial</link>(Material&#32;baseMaterial)
00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Material&#32;mat&#32;=&#32;baseMaterial;
00483 
00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_ShouldRecalculateStencil)
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_StencilValue&#32;=&#32;TMP_MaterialManager.GetStencilID(gameObject);
00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_ShouldRecalculateStencil&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00489 
00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_StencilValue&#32;&gt;&#32;0)
00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat&#32;=&#32;TMP_MaterialManager.GetStencilMaterial(baseMaterial,&#32;m_StencilValue);
00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_MaskMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_MaterialManager.ReleaseStencilMaterial(m_MaskMaterial);
00495 
00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_MaskMaterial&#32;=&#32;mat;
00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00498 
00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat;
00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00501 
00502 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00507"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a7d5c58041ab5f14071b3a39108bd3408">00507</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a7d5c58041ab5f14071b3a39108bd3408">GetPaddingForMaterial</link>()
00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a739f793cbda2c66b096ddf5ce3b1658f">padding</link>&#32;=&#32;ShaderUtilities.GetPadding(m_sharedMaterial,&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1aa06b7d7a7054e899c0be4fa8ed9943b5">extraPadding</link>,&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1a2ad3845a02f7fd35f5b9bd7a34f5bd52">isUsingBold</link>);
00510 
00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a739f793cbda2c66b096ddf5ce3b1658f">padding</link>;
00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00513 
00514 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00519"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a0039a3effee201741725425d2376c801">00519</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a0039a3effee201741725425d2376c801">GetPaddingForMaterial</link>(Material&#32;mat)
00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a739f793cbda2c66b096ddf5ce3b1658f">padding</link>&#32;=&#32;ShaderUtilities.GetPadding(mat,&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1aa06b7d7a7054e899c0be4fa8ed9943b5">extraPadding</link>,&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1a2ad3845a02f7fd35f5b9bd7a34f5bd52">isUsingBold</link>);
00522 
00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a739f793cbda2c66b096ddf5ce3b1658f">padding</link>;
00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00525 
00526 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00532"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a0f39c16f271cb73553d4b1917a9fe4ba">00532</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a0f39c16f271cb73553d4b1917a9fe4ba">UpdateMeshPadding</link>(<emphasis role="keywordtype">bool</emphasis>&#32;isExtraPadding,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isUsingBold)
00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_padding&#32;=&#32;ShaderUtilities.GetPadding(m_sharedMaterial,&#32;isExtraPadding,&#32;isUsingBold);
00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00536 
00537 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00541"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1abb694c1dd941ef112c04d913fb460044">00541</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1abb694c1dd941ef112c04d913fb460044">SetAllDirty</link>()
00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SetLayoutDirty();</emphasis>
00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SetVerticesDirty();</emphasis>
00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SetMaterialDirty();</emphasis>
00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00547 
00548 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00552"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a2597031429dd905eb468c86df32850a8">00552</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a2597031429dd905eb468c86df32850a8">SetVerticesDirty</link>()
00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.IsActive())
00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00556 
00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;is&#32;called&#32;on&#32;the&#32;parent&#32;TextMeshPro&#32;component.</emphasis>
00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_TextComponent&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1a7e0fb1ed735ea717f9b98373b9de6e73">havePropertiesChanged</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_text_mesh_pro_u_g_u_i_1acc18f45edf09f79d04d6a9e461633d7c">SetVerticesDirty</link>();
00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00564 
00565 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00569"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1af0fb2011a25e14eab43fe51adbc62cbb">00569</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1af0fb2011a25e14eab43fe51adbc62cbb">SetLayoutDirty</link>()
00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00571 
00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00573 
00574 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00578"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a5aae214407f49b19377ba6b3c99bd3e9">00578</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a5aae214407f49b19377ba6b3c99bd3e9">SetMaterialDirty</link>()
00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;***&#32;STO-UI&#32;-&#32;SetMaterialDirty()&#32;***&#32;FRAME&#32;(&quot;&#32;+&#32;Time.frameCount&#32;+&#32;&quot;)&quot;);</emphasis>
00581 
00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(!this.IsActive())</emphasis>
00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;return;</emphasis>
00584 
00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_materialDirty&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00586 
00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1af58b19bacdca0f7738002d4f2601cacc">UpdateMaterial</link>();
00588 
00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_OnDirtyMaterialCallback&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_OnDirtyMaterialCallback();
00591 
00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TMP_ITextElementUpdateManager.RegisterTextElementForGraphicRebuild(this);</emphasis>
00593 
00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//TMP_UpdateRegistry.RegisterCanvasElementForGraphicRebuild((ICanvasElement)this);</emphasis>
00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_TextComponent.SetMaterialDirty();</emphasis>
00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00597 
00598 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00602"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a9db1f46942567925b79b2290171bd24a">00602</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a9db1f46942567925b79b2290171bd24a">SetPivotDirty</link>()
00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.IsActive())
00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00606 
00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.rectTransform.pivot&#32;=&#32;m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1adf46752eab5ab6c5c0d0d7b58e3bf847">rectTransform</link>.pivot;
00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00609 
00610 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00616"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1ab4b2cf894e690a63576d8713a5729099">00616</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1ab4b2cf894e690a63576d8713a5729099">Cull</link>(Rect&#32;clipRect,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;validRect)
00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_TextComponent.<link linkend="_class_t_m_pro_1_1_t_m_p___text_1ae26a7d66454f3871e5668b0585c0735a">ignoreRectMaskCulling</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
00619 
00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.Cull(clipRect,&#32;validRect);
00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00622 
00623 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00627"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6b99dad67454e0b386bc261e9d11aceb">00627</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6b99dad67454e0b386bc261e9d11aceb">UpdateGeometry</link>()
00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Need&#32;to&#32;override&#32;to&#32;prevent&#32;Unity&#32;from&#32;changing&#32;the&#32;geometry&#32;of&#32;the&#32;object.</emphasis>
00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.Log(<emphasis role="stringliteral">&quot;UpdateGeometry()&quot;</emphasis>);
00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00632 
00633 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00638"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1aa1918700dd7e78768075a88b31db98a2">00638</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1aa1918700dd7e78768075a88b31db98a2">Rebuild</link>(CanvasUpdate&#32;update)
00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(update&#32;==&#32;CanvasUpdate.PreRender)
00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_materialDirty)&#32;<emphasis role="keywordflow">return</emphasis>;
00643 
00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1af58b19bacdca0f7738002d4f2601cacc">UpdateMaterial</link>();
00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_materialDirty&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00648 
00649 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00653"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1ac6bb1546f8b9fe175ba68e2d253935b5">00653</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1ac6bb1546f8b9fe175ba68e2d253935b5">RefreshMaterial</link>()
00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1af58b19bacdca0f7738002d4f2601cacc">UpdateMaterial</link>();
00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00657 
00658 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00662"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1af58b19bacdca0f7738002d4f2601cacc">00662</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1af58b19bacdca0f7738002d4f2601cacc">UpdateMaterial</link>()
00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;***&#32;STO-UI&#32;-&#32;UpdateMaterial()&#32;***&#32;FRAME&#32;(&quot;&#32;+&#32;Time.frameCount&#32;+&#32;&quot;)&quot;);</emphasis>
00665 
00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(!this.IsActive())</emphasis>
00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;return;</emphasis>
00668 
00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_canvasRenderer&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;m_canvasRenderer&#32;=&#32;this.<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a4888f8c9e99911b05312c1ed5a578a33">canvasRenderer</link>;
00670 
00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_canvasRenderer.materialCount&#32;=&#32;1;
00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_canvasRenderer.SetMaterial(<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1acf8eb0b73fe8fe9f4b12d71550739bb1">materialForRendering</link>,&#32;0);
00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_canvasRenderer.SetTexture(<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a455c7c479e81a37c0de77570b4bf3578">mainTexture</link>);
00674 
00675 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_sharedMaterial&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;gameObject.name&#32;!=&#32;<emphasis role="stringliteral">&quot;TMP&#32;SubMeshUI&#32;[&quot;</emphasis>&#32;+&#32;m_sharedMaterial.name&#32;+&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>)
00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gameObject.name&#32;=&#32;<emphasis role="stringliteral">&quot;TMP&#32;SubMeshUI&#32;[&quot;</emphasis>&#32;+&#32;m_sharedMaterial.name&#32;+&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
00678 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00680 
00681 
00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;IClippable&#32;implementation</emphasis>
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00686"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6505e4b6f7c11eeb4ea155d7d6ef4248">00686</link> <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6505e4b6f7c11eeb4ea155d7d6ef4248">RecalculateClipping</link>()
00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;***&#32;RecalculateClipping()&#32;***&quot;);</emphasis>
00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.RecalculateClipping();
00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00691 
00692 
<anchor xml:id="__t_m_p___sub_mesh_u_i_8cs_source_1l00696"/><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6f662a8acac8a908a79012344a8e2330">00696</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a6f662a8acac8a908a79012344a8e2330">RecalculateMasking</link>()
00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;RecalculateMasking()&quot;);</emphasis>
00699 
00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_ShouldRecalculateStencil&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a5aae214407f49b19377ba6b3c99bd3e9">SetMaterialDirty</link>();
00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00703 
00704 
00705 
00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Material&#32;GetMaterial()
00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;we&#32;have&#32;a&#32;valid&#32;reference&#32;to&#32;the&#32;renderer.</emphasis>
00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(m_renderer&#32;==&#32;null)&#32;m_renderer&#32;=&#32;GetComponent&lt;Renderer&gt;();</emphasis>
00714 
00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(m_material&#32;==&#32;null&#32;||&#32;m_isNewSharedMaterial)</emphasis>
00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;m_renderer.material&#32;=&#32;m_sharedMaterial;</emphasis>
00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;m_material&#32;=&#32;m_renderer.material;</emphasis>
00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;m_sharedMaterial&#32;=&#32;m_material;</emphasis>
00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;m_padding&#32;=&#32;ShaderUtilities.GetPadding(m_sharedMaterial,&#32;m_TextMeshPro.extraPadding,&#32;false);</emphasis>
00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;m_isNewSharedMaterial&#32;=&#32;false;</emphasis>
00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
00723 
00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_sharedMaterial;
00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00726 
00727 
00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Function&#32;called&#32;internally&#32;when&#32;a&#32;new&#32;material&#32;is&#32;assigned&#32;via&#32;the&#32;fontMaterial&#32;property.</emphasis>
00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Material&#32;GetMaterial(Material&#32;mat)
00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;in&#32;case&#32;Object&#32;is&#32;disabled.&#32;If&#32;so,&#32;we&#32;don&apos;t&#32;have&#32;a&#32;valid&#32;reference&#32;to&#32;the&#32;Renderer.</emphasis>
00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;can&#32;occur&#32;when&#32;the&#32;Duplicate&#32;Material&#32;Context&#32;menu&#32;is&#32;used&#32;on&#32;an&#32;inactive&#32;object.</emphasis>
00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(m_renderer&#32;==&#32;null)</emphasis>
00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;m_renderer&#32;=&#32;GetComponent&lt;Renderer&gt;();</emphasis>
00735 
00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;Instance&#32;Material&#32;only&#32;if&#32;the&#32;new&#32;material&#32;is&#32;not&#32;the&#32;same&#32;instance&#32;previously&#32;used.</emphasis>
00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_material&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;m_material.GetInstanceID()&#32;!=&#32;mat.GetInstanceID())
00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_material&#32;=&#32;CreateMaterialInstance(mat);
00739 
00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_sharedMaterial&#32;=&#32;m_material;
00741 
00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;and&#32;Set&#32;new&#32;padding&#32;values&#32;for&#32;this&#32;new&#32;material.&#32;</emphasis>
00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_padding&#32;=&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a7d5c58041ab5f14071b3a39108bd3408">GetPaddingForMaterial</link>();
00744 
00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a2597031429dd905eb468c86df32850a8">SetVerticesDirty</link>();
00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a5aae214407f49b19377ba6b3c99bd3e9">SetMaterialDirty</link>();
00747 
00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_sharedMaterial;
00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00750 
00751 
00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Material&#32;CreateMaterialInstance(Material&#32;source)
00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Material&#32;mat&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Material(source);
00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat.shaderKeywords&#32;=&#32;source.shaderKeywords;
00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat.name&#32;+=&#32;<emphasis role="stringliteral">&quot;&#32;(Instance)&quot;</emphasis>;
00762 
00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat;
00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00765 
00766 
00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Material&#32;GetSharedMaterial()
00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_canvasRenderer&#32;==&#32;<emphasis role="keyword">null</emphasis>)
00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_canvasRenderer&#32;=&#32;GetComponent&lt;CanvasRenderer&gt;();
00775 
00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_canvasRenderer.GetMaterial();
00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00778 
00779 
00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetSharedMaterial(Material&#32;mat)
00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.Log(&quot;***&#32;SetSharedMaterial&#32;UI()&#32;***&#32;FRAME&#32;(&quot;&#32;+&#32;Time.frameCount&#32;+&#32;&quot;)&quot;);</emphasis>
00787 
00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assign&#32;new&#32;material.</emphasis>
00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_sharedMaterial&#32;=&#32;mat;
00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_Material&#32;=&#32;m_sharedMaterial;
00791 
00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//m_isDefaultMaterial&#32;=&#32;false;</emphasis>
00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(mat.GetInstanceID()&#32;==&#32;m_fontAsset.material.GetInstanceID())</emphasis>
00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;m_isDefaultMaterial&#32;=&#32;true;</emphasis>
00795 
00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;and&#32;Set&#32;new&#32;padding&#32;values&#32;for&#32;this&#32;new&#32;material.</emphasis>
00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_padding&#32;=&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a7d5c58041ab5f14071b3a39108bd3408">GetPaddingForMaterial</link>();
00798 
00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SetVerticesDirty();</emphasis>
00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i_1a5aae214407f49b19377ba6b3c99bd3e9">SetMaterialDirty</link>();
00801 
00802 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(m_sharedMaterial&#32;!=&#32;null)</emphasis>
00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;gameObject.name&#32;=&#32;&quot;TMP&#32;SubMesh&#32;[&quot;&#32;+&#32;m_sharedMaterial.name&#32;+&#32;&quot;]&quot;;</emphasis>
00805 <emphasis role="preprocessor">#endif</emphasis>
00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00807 &#32;&#32;&#32;&#32;}
00808 }
</programlisting></section>
