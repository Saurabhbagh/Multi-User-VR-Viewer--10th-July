<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__rigid_hand_8cs_source">
<title>RigidHand.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/RigidHand.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>;
00013 
00014 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
<anchor xml:id="__rigid_hand_8cs_source_1l00016"/><link linkend="_class_leap_1_1_unity_1_1_rigid_hand">00016</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_rigid_hand">RigidHand</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_skeletal_hand">SkeletalHand</link>&#32;{
<anchor xml:id="__rigid_hand_8cs_source_1l00017"/><link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1a27e950ca795a12ee3b52dcf5de8e5032">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0">ModelType</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1a27e950ca795a12ee3b52dcf5de8e5032">HandModelType</link>&#32;{
00018 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0">ModelType</link>.Physics;
00020 &#32;&#32;&#32;&#32;&#32;&#32;}
00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__rigid_hand_8cs_source_1l00022"/><link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1af6249c00fe304a74ce18ed16716de07b">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1af6249c00fe304a74ce18ed16716de07b">filtering</link>&#32;=&#32;0.5f;
00023 
<anchor xml:id="__rigid_hand_8cs_source_1l00024"/><link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1ae917a680f49c928d78c59a842798d7ae">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1ae917a680f49c928d78c59a842798d7ae">SupportsEditorPersistence</link>()&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00026 &#32;&#32;&#32;&#32;}
00027 
<anchor xml:id="__rigid_hand_8cs_source_1l00028"/><link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1a7e76c7f3a3128c1a2e0343a43e177efa">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1a7e76c7f3a3128c1a2e0343a43e177efa">InitHand</link>()&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;base.InitHand();
00030 &#32;&#32;&#32;&#32;}
00031 
<anchor xml:id="__rigid_hand_8cs_source_1l00032"/><link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1a335a489bb61e5d3a95119ffdda8794b1">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_rigid_hand_1a335a489bb61e5d3a95119ffdda8794b1">UpdateHand</link>()&#32;{
00033 
00034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;f&#32;=&#32;0;&#32;f&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee">fingers</link>.Length;&#32;++f)&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee">fingers</link>[f]&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a51a8c47034746f5961815b6276db2eee">fingers</link>[f].<link linkend="_class_leap_1_1_unity_1_1_finger_model_1a9103f063172a8f99a9aa083407ada2a2">UpdateFinger</link>();
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00038 &#32;&#32;&#32;&#32;&#32;&#32;}
00039 
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1">palm</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;palmBody&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1">palm</link>.GetComponent&lt;Rigidbody&gt;();
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(palmBody)&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palmBody.MovePosition(<link linkend="_class_leap_1_1_unity_1_1_skeletal_hand_1aa499e691e131221612553967bbd9cc93">GetPalmCenter</link>());
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palmBody.MoveRotation(<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a5aa1271238fe3c0ef203b0150b84cf4c">GetPalmRotation</link>());
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1">palm</link>.position&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_skeletal_hand_1aa499e691e131221612553967bbd9cc93">GetPalmCenter</link>();
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1">palm</link>.rotation&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a5aa1271238fe3c0ef203b0150b84cf4c">GetPalmRotation</link>();
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00049 &#32;&#32;&#32;&#32;&#32;&#32;}
00050 
00051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0">forearm</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;arm&#32;dimensions.</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CapsuleCollider&#32;capsule&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0">forearm</link>.GetComponent&lt;CapsuleCollider&gt;();
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(capsule&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialization</emphasis>
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capsule.direction&#32;=&#32;2;
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0">forearm</link>.localScale&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3(1f&#32;/&#32;transform.lossyScale.x,&#32;1f&#32;/&#32;transform.lossyScale.y,&#32;1f&#32;/&#32;transform.lossyScale.z);
00058 
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update</emphasis>
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capsule.radius&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1ab6e83399ea1b0940cb8053d8484de6b9">GetArmWidth</link>()&#32;/&#32;2f;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capsule.height&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1af2b710f410b9eacd44d9ec1d3e36bad6">GetArmLength</link>()&#32;+&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1ab6e83399ea1b0940cb8053d8484de6b9">GetArmWidth</link>();
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;forearmBody&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0">forearm</link>.GetComponent&lt;Rigidbody&gt;();
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(forearmBody)&#32;{
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;forearmBody.MovePosition(<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a2b99e4722e90a53601927c31c4ef2954">GetArmCenter</link>());
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;forearmBody.MoveRotation(<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a2bea9f9359bb0eb9f2a66a1e2a7c889f">GetArmRotation</link>());
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0">forearm</link>.position&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a2b99e4722e90a53601927c31c4ef2954">GetArmCenter</link>();
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a50b236af9574f8f2b5e9fedba8aa5ff0">forearm</link>.rotation&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_hand_model_1a2bea9f9359bb0eb9f2a66a1e2a7c889f">GetArmRotation</link>();
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00072 &#32;&#32;&#32;&#32;&#32;&#32;}
00073 &#32;&#32;&#32;&#32;}
00074 &#32;&#32;}
00075 }
</programlisting></section>
