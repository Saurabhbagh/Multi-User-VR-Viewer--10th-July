<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_leap_1_1_unity_1_1_either">
<title>Leap.Unity.Either&lt; A, B &gt; Struct Template Reference</title>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary></indexterm>
<para>

<para>A data structure that represents either a value of type A or a value of type B. The value can never be both A and B. Neither A nor B can ever be null. </para>
 
</para>
<para>Inheritance diagram for Leap.Unity.Either&lt; A, B &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_leap_1_1_unity_1_1_either.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_either_1aff7e724eb9b602c97e27bba85b4e3aa1">Either</link> (A <link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>)</para>

<para>Constructs an <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> with a value of A. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_either_1a42d1ab7f4e2bf0794752cc858affec7a">Either</link> (B <link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>)</para>

<para>Constructs an <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> with a value of B. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_leap_1_1_unity_1_1_either_1a4c0eaf284c03842b99f53ec3f059faac">Match</link> (Action&lt; A &gt; ifA, Action&lt; B &gt; ifB)</para>

<para>Calls the first delegate with the value of A if it is present, else calls the second delegate with the value of B. </para>
</listitem>
            <listitem><para>bool <link linkend="_struct_leap_1_1_unity_1_1_either_1a7ef635be83e9e5e874739d9f363692ef">TryGetA</link> (out A <link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>)</para>

<para>If this either contains the value of A, the out argument is filled with that value and this method returns true, else it returns false. </para>
</listitem>
            <listitem><para>bool <link linkend="_struct_leap_1_1_unity_1_1_either_1a2936191d85fa4d7dcb85c12ca2f2f471">TryGetB</link> (out B <link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>)</para>

<para>If this either contains the value of B, the out argument is filled with that value and this method returns true, else it returns false. </para>
</listitem>
            <listitem><para>override int <link linkend="_struct_leap_1_1_unity_1_1_either_1a033f69b0b8238d2f434d49d097e94788">GetHashCode</link> ()</para>
</listitem>
            <listitem><para>override bool <link linkend="_struct_leap_1_1_unity_1_1_either_1ab1a67555ab3c674e42abce4fd3365134">Equals</link> (object obj)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_leap_1_1_unity_1_1_either_1ae55d660db9359d936f67d988d7078cc1">Equals</link> (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; other)</para>
</listitem>
            <listitem><para>int <link linkend="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825">CompareTo</link> (object obj)</para>
</listitem>
            <listitem><para>int <link linkend="_struct_leap_1_1_unity_1_1_either_1a91e207fc83d8fa9442a9dcfffcdbe2d4">CompareTo</link> (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; other)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static bool <link linkend="_struct_leap_1_1_unity_1_1_either_1ac635dd45bbe22cd73bb1c850d7294087">operator==</link> (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_leap_1_1_unity_1_1_either_1ac30ec0b03336fd8a86a119c60889cebf">operator !=</link> (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_leap_1_1_unity_1_1_either_1ae6ef9429d3c8ef042af9ca7c798aeb76">operator &gt;</link> (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_leap_1_1_unity_1_1_either_1ae181b781714ebcac842831560838a723">operator &gt;=</link> (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_leap_1_1_unity_1_1_either_1ab37b777230207b8c28d6dd31a3973d31">operator&lt;</link> (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_leap_1_1_unity_1_1_either_1a8f0100a083842f17c4fb7264168a98bd">operator&lt;=</link> (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)</para>
</listitem>
            <listitem><para>static implicit <link linkend="_struct_leap_1_1_unity_1_1_either_1aad4cf5d2660fccc66c7fb8af73670645">operator Either&lt; A, B &gt;</link> (A <link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link>)</para>
</listitem>
            <listitem><para>static implicit <link linkend="_struct_leap_1_1_unity_1_1_either_1aad64b8a106656a151294f1e5f9c70aef">operator Either&lt; A, B &gt;</link> (B <link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>readonly bool <link linkend="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f">isA</link></para>

<para>Returns whether or not this <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> contains the first value. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_struct_leap_1_1_unity_1_1_either_1a66c31b6f54097c6a442888bad3aa8b01">isB</link><computeroutput> [get]</computeroutput>
</para>

<para>Returns whether or not this <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> contains the second value. </para>
</listitem>
            <listitem><para>Maybe&lt; A &gt; <link linkend="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928">a</link><computeroutput> [get]</computeroutput>
</para>

<para>Returns a <link linkend="_struct_leap_1_1_unity_1_1_maybe">Maybe</link> that contains the value of A if it exists, or no value if it doesn&apos;t. </para>
</listitem>
            <listitem><para>Maybe&lt; B &gt; <link linkend="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c">b</link><computeroutput> [get]</computeroutput>
</para>

<para>Returns a <link linkend="_struct_leap_1_1_unity_1_1_maybe">Maybe</link> that contains the value of B if it exists, or no value if it doesn&apos;t. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A data structure that represents either a value of type A or a value of type B. The value can never be both A and B. Neither A nor B can ever be null. </para>


<para>
Definition at line <link linkend="__either_8cs_source_1l00019">19</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_either_1aff7e724eb9b602c97e27bba85b4e3aa1"/>    <section>
    <title>Either()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Either</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>Either</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> (A a)</computeroutput></para><para>

<para>Constructs an <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> with a value of A. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00069">69</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a42d1ab7f4e2bf0794752cc858affec7a"/>    <section>
    <title>Either()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Either</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>Either</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> (B b)</computeroutput></para><para>

<para>Constructs an <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> with a value of B. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00082">82</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a1b677bf5b50b5b6e794821f17b201825"/>    <section>
    <title>CompareTo()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>CompareTo</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>CompareTo</secondary></indexterm>
<para><computeroutput>int <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.CompareTo (object obj)</computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00148">148</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a91e207fc83d8fa9442a9dcfffcdbe2d4"/>    <section>
    <title>CompareTo()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>CompareTo</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>CompareTo</secondary></indexterm>
<para><computeroutput>int <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.CompareTo (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; other)</computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00156">156</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1ab1a67555ab3c674e42abce4fd3365134"/>    <section>
    <title>Equals()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>override bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.Equals (object obj)</computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00130">130</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1ae55d660db9359d936f67d988d7078cc1"/>    <section>
    <title>Equals()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Equals</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>Equals</secondary></indexterm>
<para><computeroutput>bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.Equals (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; other)</computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00138">138</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a033f69b0b8238d2f434d49d097e94788"/>    <section>
    <title>GetHashCode()</title>
<indexterm><primary>GetHashCode</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>GetHashCode</secondary></indexterm>
<para><computeroutput>override int <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.GetHashCode ( )</computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00122">122</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a4c0eaf284c03842b99f53ec3f059faac"/>    <section>
    <title>Match()</title>
<indexterm><primary>Match</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>Match</secondary></indexterm>
<para><computeroutput>void <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.Match (Action&lt; A &gt; ifA, Action&lt; B &gt; ifB)</computeroutput></para><para>

<para>Calls the first delegate with the value of A if it is present, else calls the second delegate with the value of B. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00096">96</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1ac30ec0b03336fd8a86a119c60889cebf"/>    <section>
    <title>operator !=()</title>
<indexterm><primary>operator !=</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>operator !=</secondary></indexterm>
<para><computeroutput>static bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.operator != (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00190">190</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1ae6ef9429d3c8ef042af9ca7c798aeb76"/>    <section>
    <title>operator &gt;()</title>
<indexterm><primary>operator &gt;</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>operator &gt;</secondary></indexterm>
<para><computeroutput>static bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.operator &gt; (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00194">194</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1ae181b781714ebcac842831560838a723"/>    <section>
    <title>operator &gt;=()</title>
<indexterm><primary>operator &gt;=</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>operator &gt;=</secondary></indexterm>
<para><computeroutput>static bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.operator &gt;= (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00198">198</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1aad4cf5d2660fccc66c7fb8af73670645"/>    <section>
    <title>operator Either&lt; A, B &gt;()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator Either&lt; A, B &gt;</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>operator Either&lt; A, B &gt;</secondary></indexterm>
<para><computeroutput>static implicit <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.operator <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; (A a)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00210">210</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1aad64b8a106656a151294f1e5f9c70aef"/>    <section>
    <title>operator Either&lt; A, B &gt;()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator Either&lt; A, B &gt;</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>operator Either&lt; A, B &gt;</secondary></indexterm>
<para><computeroutput>static implicit <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.operator <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; (B b)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00214">214</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1ab37b777230207b8c28d6dd31a3973d31"/>    <section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput>static bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.operator&lt; (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00202">202</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a8f0100a083842f17c4fb7264168a98bd"/>    <section>
    <title>operator&lt;=()</title>
<indexterm><primary>operator&lt;=</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>operator&lt;=</secondary></indexterm>
<para><computeroutput>static bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.operator&lt;= (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00206">206</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1ac635dd45bbe22cd73bb1c850d7294087"/>    <section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>static bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.operator== (<link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either0, <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link>&lt; A, B &gt; either1)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__either_8cs_source_1l00186">186</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a7ef635be83e9e5e874739d9f363692ef"/>    <section>
    <title>TryGetA()</title>
<indexterm><primary>TryGetA</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>TryGetA</secondary></indexterm>
<para><computeroutput>bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.TryGetA (out A a)</computeroutput></para><para>

<para>If this either contains the value of A, the out argument is filled with that value and this method returns true, else it returns false. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00108">108</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a2936191d85fa4d7dcb85c12ca2f2f471"/>    <section>
    <title>TryGetB()</title>
<indexterm><primary>TryGetB</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>TryGetB</secondary></indexterm>
<para><computeroutput>bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.TryGetB (out B b)</computeroutput></para><para>

<para>If this either contains the value of B, the out argument is filled with that value and this method returns true, else it returns false. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00117">117</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a40ac2be2f7b6cf84befee547151bab6f"/>    <section>
    <title>isA</title>
<indexterm><primary>isA</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>isA</secondary></indexterm>
<para><computeroutput>readonly bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.isA</computeroutput></para><para>

<para>Returns whether or not this <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> contains the first value. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00024">24</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_either_1ac7c612037b34bbfb23251111dae09928"/>    <section>
    <title>a</title>
<indexterm><primary>a</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>a</secondary></indexterm>
<para><computeroutput>Maybe&lt;A&gt; <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.a<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Returns a <link linkend="_struct_leap_1_1_unity_1_1_maybe">Maybe</link> that contains the value of A if it exists, or no value if it doesn&apos;t. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00042">42</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1aaa579850040ea7c13ab798269e23fd0c"/>    <section>
    <title>b</title>
<indexterm><primary>b</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>b</secondary></indexterm>
<para><computeroutput>Maybe&lt;B&gt; <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.b<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Returns a <link linkend="_struct_leap_1_1_unity_1_1_maybe">Maybe</link> that contains the value of B if it exists, or no value if it doesn&apos;t. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00056">56</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_either_1a66c31b6f54097c6a442888bad3aa8b01"/>    <section>
    <title>isB</title>
<indexterm><primary>isB</primary><secondary>Leap.Unity.Either&lt; A, B &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Either&lt; A, B &gt;</primary><secondary>isB</secondary></indexterm>
<para><computeroutput>bool <link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either</link>&lt; A, B &gt;.isB<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Returns whether or not this <link linkend="_struct_leap_1_1_unity_1_1_either">Either</link> contains the second value. </para>
</para>
<para>
Definition at line <link linkend="__either_8cs_source_1l00029">29</link> of file <link linkend="__either_8cs_source">Either.cs</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/<link linkend="__either_8cs">Either.cs</link></section>
</section>
