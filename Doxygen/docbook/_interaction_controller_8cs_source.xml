<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__interaction_controller_8cs_source">
<title>InteractionController.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Scripts/InteractionController.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;InteractionEngineUtility;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_space">Space</link>;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link>.<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1_1_internal">Internal</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;System;
00014 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00015 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00016 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00017 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_runtime_gizmos">RuntimeGizmos</link>;
00018 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_attributes">Attributes</link>;
00019 
00020 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_interaction">Leap.Unity.Interaction</link>&#32;{
00021 
00022 &#32;&#32;[Serializable]
<anchor xml:id="__interaction_controller_8cs_source_1l00023"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_set">00023</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_set">InteractionControllerSet</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set">SerializableHashSet</link>&lt;InteractionController&gt;&#32;{&#32;}
00024 
<anchor xml:id="__interaction_controller_8cs_source_1l00029"/><link linkend="_namespace_leap_1_1_unity_1_1_interaction_1aba04c439c84829d617115cfd977cb11b">00029</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1aba04c439c84829d617115cfd977cb11b">IgnoreHoverMode</link>&#32;{&#32;None,&#32;<link linkend="_namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606fa945d5e233cf7d6240f6b783b36a374ff">Left</link>,&#32;<link linkend="_namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606fa92b09c7c48c520c3c55e497875da437c">Right</link>,&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1aba04c439c84829d617115cfd977cb11ba130c5b3473c57faa76e2a1c54e26f88e">Both</link>&#32;}
00030 
<anchor xml:id="__interaction_controller_8cs_source_1l00036"/><link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6b">00036</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6b">ControllerType</link>&#32;{&#32;<link linkend="_class_leap_1_1_hand">Hand</link>,&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6ba6ecc9ec5b0bb5f525f4d0e14e8b77382">XRController</link>&#32;}
00037 
00038 &#32;&#32;[DisallowMultipleComponent]
<anchor xml:id="__interaction_controller_8cs_source_1l00039"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">00039</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link>&#32;:&#32;MonoBehaviour,
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_internal_interaction_controller">IInternalInteractionController</link>&#32;{
00041 
00042 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Inspector</emphasis>
00043 
00044 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;manager&#32;responsible&#32;for&#32;this&#32;interaction&#32;controller.&#32;Interaction&#32;&quot;</emphasis>
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;controllers&#32;should&#32;be&#32;children&#32;of&#32;their&#32;interaction&#32;manager.&quot;</emphasis>)]
<anchor xml:id="__interaction_controller_8cs_source_1l00046"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager">InteractionManager</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>;
00047 
00048 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Interaction&#32;Types&quot;</emphasis>)]
00049 
00050 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;If&#32;disabled,&#32;this&#32;interaction&#32;controller&#32;will&#32;not&#32;be&#32;used&#32;to&#32;generate&#32;&quot;</emphasis>
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;hover&#32;information&#32;or&#32;primary&#32;hover&#32;information.&#32;Warning:&#32;Primary&#32;hover&#32;&quot;</emphasis>
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;data&#32;is&#32;required&#32;for&#32;Interaction&#32;Engine&#32;user&#32;interface&#32;components&#32;like&#32;&quot;</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;InteractionButton&#32;and&#32;InteractionSlider&#32;to&#32;function,&#32;so&#32;this&#32;controller&#32;&quot;</emphasis>
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;won&apos;t&#32;able&#32;to&#32;interact&#32;with&#32;UI&#32;components.&quot;</emphasis>)]
00055 &#32;&#32;&#32;&#32;[SerializeField]
00056 &#32;&#32;&#32;&#32;[OnEditorChange(<emphasis role="stringliteral">&quot;hoverEnabled&quot;</emphasis>)]
00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_hoverEnabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interaction_controller_8cs_source_1l00058"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a17364abc0f18966b489ee8125c0386ff">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a17364abc0f18966b489ee8125c0386ff">hoverEnabled</link>&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_hoverEnabled;&#32;}
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoverEnabled&#32;=&#32;value;
00062 
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_hoverEnabled)&#32;{
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a01f1951bc78ef7b3362df72bfbff4613">ClearHoverTracking</link>();
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00066 &#32;&#32;&#32;&#32;&#32;&#32;}
00067 &#32;&#32;&#32;&#32;}
00068 
00069 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;If&#32;disabled,&#32;this&#32;interaction&#32;controller&#32;will&#32;not&#32;collide&#32;with&#32;interaction&#32;&quot;</emphasis>
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;objects&#32;and&#32;objects&#32;will&#32;not&#32;receive&#32;contact&#32;callbacks.&quot;</emphasis>)]
00071 &#32;&#32;&#32;&#32;[SerializeField]
00072 &#32;&#32;&#32;&#32;[OnEditorChange(<emphasis role="stringliteral">&quot;contactEnabled&quot;</emphasis>)]
00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_contactEnabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interaction_controller_8cs_source_1l00074"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1acb035b29714d862ed7378ac8c71f03e1">00074</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1acb035b29714d862ed7378ac8c71f03e1">contactEnabled</link>&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_contactEnabled;&#32;}
00076 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactEnabled&#32;=&#32;value;
00078 
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_contactEnabled)&#32;{
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disableContactBoneCollision();
00081 
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9496bf1f9d82ea3a027b2bdf630df4e5">ClearContactTracking</link>();
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resetContactBonePose();
00086 
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>();
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00089 &#32;&#32;&#32;&#32;&#32;&#32;}
00090 &#32;&#32;&#32;&#32;}
00091 
00092 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;If&#32;disabled,&#32;this&#32;interaction&#32;controller&#32;will&#32;not&#32;be&#32;able&#32;to&#32;grasp&#32;&quot;</emphasis>
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;interaction&#32;objects.&quot;</emphasis>)]
00094 &#32;&#32;&#32;&#32;[SerializeField]
00095 &#32;&#32;&#32;&#32;[OnEditorChange(<emphasis role="stringliteral">&quot;graspingEnabled&quot;</emphasis>)]
00096 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_graspingEnabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interaction_controller_8cs_source_1l00097"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa8c6c126e8c40ce9874739f531c7f53f">00097</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa8c6c126e8c40ce9874739f531c7f53f">graspingEnabled</link>&#32;{
00098 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_graspingEnabled;&#32;}
00099 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graspingEnabled&#32;=&#32;value;
00101 
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_graspingEnabled)&#32;{
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>();
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3468a89e21c685d6df962ce70684c92f">ReleaseGrasp</link>();
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00106 &#32;&#32;&#32;&#32;&#32;&#32;}
00107 &#32;&#32;&#32;&#32;}
00108 
00109 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00110 
00111 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Public&#32;API</emphasis>
00112 
<anchor xml:id="__interaction_controller_8cs_source_1l00119"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">00119</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00120 
<anchor xml:id="__interaction_controller_8cs_source_1l00125"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a13751c0258117ae3af9b7d116f749a12">00125</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a13751c0258117ae3af9b7d116f749a12">isBeingMoved</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00126 
<anchor xml:id="__interaction_controller_8cs_source_1l00131"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae14f805d22faabfecf3c6b818e97374a">00131</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae14f805d22faabfecf3c6b818e97374a">isLeft</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00132 
<anchor xml:id="__interaction_controller_8cs_source_1l00137"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1af27c573638d3cb8b5886f0f6b12347d9">00137</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1af27c573638d3cb8b5886f0f6b12347d9">isRight</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae14f805d22faabfecf3c6b818e97374a">isLeft</link>;&#32;}&#32;}
00138 
<anchor xml:id="__interaction_controller_8cs_source_1l00142"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae76036f3e88ac60d8fcaaf5496963773">00142</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae76036f3e88ac60d8fcaaf5496963773">position</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00143 
<anchor xml:id="__interaction_controller_8cs_source_1l00147"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a783f8f2327ab0ef060ac319153883dba">00147</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a783f8f2327ab0ef060ac319153883dba">rotation</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00148 
<anchor xml:id="__interaction_controller_8cs_source_1l00152"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a33eaec5343487f2c11c8254c1e3b3d2f">00152</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a33eaec5343487f2c11c8254c1e3b3d2f">velocity</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00153 
<anchor xml:id="__interaction_controller_8cs_source_1l00160"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a92f1e18d2bbdd8b1e3eea0d3c98c0b9f">00160</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6b">ControllerType</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a92f1e18d2bbdd8b1e3eea0d3c98c0b9f">controllerType</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00161 
<anchor xml:id="__interaction_controller_8cs_source_1l00166"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa1fbc2fcb4bbb72436b53d5e74b5cd4f">00166</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa1fbc2fcb4bbb72436b53d5e74b5cd4f">intHand</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00167 
<anchor xml:id="__interaction_controller_8cs_source_1l00172"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ab14c000b2374afa1b711f394ca45fead">00172</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ab14c000b2374afa1b711f394ca45fead">scale</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.transform.lossyScale.x;&#32;}&#32;}
00173 
00174 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00175 
00176 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Events</emphasis>
00177 
<anchor xml:id="__interaction_controller_8cs_source_1l00184"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a650dbb36420d01848fe0103dd927f84c">00184</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&lt;InteractionBehaviour&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a650dbb36420d01848fe0103dd927f84c">OnBeginPrimaryHoveringObject</link>&#32;=&#32;(intObj)&#32;=&gt;&#32;{&#32;};
00185 
<anchor xml:id="__interaction_controller_8cs_source_1l00192"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5f8e8be344906d62743703848f2f20bb">00192</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&lt;InteractionBehaviour&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5f8e8be344906d62743703848f2f20bb">OnEndPrimaryHoveringObject</link>&#32;=&#32;(intObj)&#32;=&gt;&#32;{&#32;};
00193 
<anchor xml:id="__interaction_controller_8cs_source_1l00197"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ada639d7fe85125f34caa98faabe131c2">00197</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&lt;InteractionBehaviour&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ada639d7fe85125f34caa98faabe131c2">OnStayPrimaryHoveringObject</link>&#32;=&#32;(intObj)&#32;=&gt;&#32;{&#32;};
00198 
<anchor xml:id="__interaction_controller_8cs_source_1l00202"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ac6f8d116e41ed7b2dadd1dcad335a3a2">00202</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ac6f8d116e41ed7b2dadd1dcad335a3a2">OnGraspBegin</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00203 
<anchor xml:id="__interaction_controller_8cs_source_1l00207"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aecda4487fc96ce08c3159d1b4cc92c52">00207</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aecda4487fc96ce08c3159d1b4cc92c52">OnGraspStay</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00208 
<anchor xml:id="__interaction_controller_8cs_source_1l00212"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ff810c665a33a222e7d736ac224d839">00212</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ff810c665a33a222e7d736ac224d839">OnGraspEnd</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00213 
00214 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00215 
00216 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Unity&#32;Events</emphasis>
00217 
<anchor xml:id="__interaction_controller_8cs_source_1l00218"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a593d87fbcfe464b2308a56a60b4796d5">00218</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a593d87fbcfe464b2308a56a60b4796d5">Reset</link>()&#32;{
00219 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>&#32;=&#32;GetComponentInParent&lt;InteractionManager&gt;();
00220 &#32;&#32;&#32;&#32;}
00221 
<anchor xml:id="__interaction_controller_8cs_source_1l00222"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a885d51f3ef8f88ce9be49f77fb9b1198">00222</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a885d51f3ef8f88ce9be49f77fb9b1198">OnEnable</link>()&#32;{
00223 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_contactInitialized)&#32;{
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>();
00225 
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resetContactBonePose();
00227 &#32;&#32;&#32;&#32;&#32;&#32;}
00228 &#32;&#32;&#32;&#32;}
00229 
<anchor xml:id="__interaction_controller_8cs_source_1l00230"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a697f206b8e73d177c203b3ca12874cb6">00230</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a697f206b8e73d177c203b3ca12874cb6">Start</link>()&#32;{
00231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager">InteractionManager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ad59361bc7c0cc65f18f0c9b9b0fac587">instance</link>;
00232 &#32;&#32;&#32;&#32;}
00233 
<anchor xml:id="__interaction_controller_8cs_source_1l00234"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a426c454683c1da5fefe1469a5f0f29e4">00234</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a426c454683c1da5fefe1469a5f0f29e4">OnDisable</link>()&#32;{
00235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_contactInitialized)&#32;{
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>();
00237 &#32;&#32;&#32;&#32;&#32;&#32;}
00238 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3468a89e21c685d6df962ce70684c92f">ReleaseGrasp</link>();
00239 
00240 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a01f1951bc78ef7b3362df72bfbff4613">ClearHoverTracking</link>();
00241 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a023df36bea05721df061204ea1e3fc65">ClearPrimaryHoverTracking</link>();
00242 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9496bf1f9d82ea3a027b2bdf630df4e5">ClearContactTracking</link>();
00243 &#32;&#32;&#32;&#32;}
00244 
00245 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00246 
00247 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;list&#32;of&#32;InteractionControllers&#32;for&#32;use&#32;as&#32;a&#32;temporary&#32;buffer.</emphasis>
00248 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;InteractionController&gt;&#32;_controllerListBuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;InteractionController&gt;();
00249 
00254 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_internal_interaction_controller">IInternalInteractionController</link>.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_internal_interaction_controller_1a9977430f30f8238a45ea091ae1c91ede">FixedUpdateController</link>()&#32;{
00255 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad66e5a09bdbe3e9573a504734bbc34f8">fixedUpdateController</link>();
00256 
00257 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a17364abc0f18966b489ee8125c0386ff">hoverEnabled</link>)&#32;&#32;&#32;&#32;fixedUpdateHovering();
00258 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1acb035b29714d862ed7378ac8c71f03e1">contactEnabled</link>)&#32;&#32;fixedUpdateContact();
00259 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa8c6c126e8c40ce9874739f531c7f53f">graspingEnabled</link>)&#32;fixedUpdateGrasping();
00260 &#32;&#32;&#32;&#32;}
00261 
<anchor xml:id="__interaction_controller_8cs_source_1l00262"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a6872fdce5368a5c4eb91f0fc1f0b8930">00262</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a6872fdce5368a5c4eb91f0fc1f0b8930">NotifyObjectUnregistered</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj)&#32;{
00263 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9de6995d8a1409d6ac9ea3520eb7d0c4">ClearHoverTrackingForObject</link>(intObj);
00264 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5dd3dbbc1e54365599aa7f8890be5ca0">ClearContactTrackingForObject</link>(intObj);
00265 
00266 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a0798edd8ad92d6b7f6229e3d9ac26d07">onObjectUnregistered</link>(intObj);
00267 &#32;&#32;&#32;&#32;}
00268 
00277 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a0798edd8ad92d6b7f6229e3d9ac26d07">onObjectUnregistered</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj);
00278 
<anchor xml:id="__interaction_controller_8cs_source_1l00286"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad66e5a09bdbe3e9573a504734bbc34f8">00286</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad66e5a09bdbe3e9573a504734bbc34f8">fixedUpdateController</link>()&#32;{&#32;}
00287 
00288 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Hovering</emphasis>
00289 
<anchor xml:id="__interaction_controller_8cs_source_1l00295"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a877fe13bf17b656525d7bf63e3baa8d8">00295</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Func&lt;IInteractionBehaviour,&#32;bool&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a877fe13bf17b656525d7bf63e3baa8d8">customHoverActivityFilter</link>&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00296 
00297 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Hover&#32;Activity&#32;Filter</emphasis>
00298 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Func&lt;Collider,&#32;IInteractionBehaviour&gt;&#32;hoverActivityFilter;
00299 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;hoverFilterFunc(Collider&#32;collider)&#32;{
00300 &#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;rigidbody&#32;=&#32;collider.attachedRigidbody;
00301 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00302 
00303 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;objectValidForHover&#32;=&#32;rigidbody&#32;!=&#32;<emphasis role="keyword">null</emphasis>
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(rigidbody,&#32;out&#32;intObj)
00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!intObj.ShouldIgnoreHover(<emphasis role="keyword">this</emphasis>)
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a877fe13bf17b656525d7bf63e3baa8d8">customHoverActivityFilter</link>&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a877fe13bf17b656525d7bf63e3baa8d8">customHoverActivityFilter</link>(intObj));
00307 
00308 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(objectValidForHover)&#32;<emphasis role="keywordflow">return</emphasis>&#32;intObj;
00309 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00310 &#32;&#32;&#32;&#32;}
00311 
00312 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Layer&#32;mask&#32;for&#32;the&#32;hover&#32;acitivity&#32;manager.</emphasis>
00313 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Func&lt;int&gt;&#32;hoverLayerMaskAccessor;
00314 
00315 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Hover&#32;Activity&#32;Manager</emphasis>
00316 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_activity_manager">ActivityManager&lt;IInteractionBehaviour&gt;</link>&#32;_hoverActivityManager;
<anchor xml:id="__interaction_controller_8cs_source_1l00317"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1c4c17da6cee8659687cf864381f1473">00317</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_activity_manager">ActivityManager&lt;IInteractionBehaviour&gt;</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1c4c17da6cee8659687cf864381f1473">hoverActivityManager</link>&#32;{
00318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_hoverActivityManager&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hoverActivityFilter&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;hoverActivityFilter&#32;=&#32;hoverFilterFunc;
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hoverLayerMaskAccessor&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;hoverLayerMaskAccessor&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ac8f4cc8c3f11fb6f67640072100b7e8a">GetInteractionLayerMask</link>;
00322 
00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoverActivityManager&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_activity_manager">ActivityManager&lt;IInteractionBehaviour&gt;</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a64d2d9e76c9c255c51cceab432176b7e">hoverActivationRadius</link>,
00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hoverActivityFilter);
00325 
00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoverActivityManager.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_activity_manager_1a37e3a110090bac9e2498bb3f978c823f">activationLayerFunction</link>&#32;=&#32;hoverLayerMaskAccessor;
00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_hoverActivityManager;
00329 &#32;&#32;&#32;&#32;&#32;&#32;}
00330 &#32;&#32;&#32;&#32;}
00331 
00335 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_primaryHoverLocked&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interaction_controller_8cs_source_1l00340"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">00340</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">primaryHoverLocked</link>&#32;{
00341 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_primaryHoverLocked;&#32;}
00342 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;_primaryHoverLocked&#32;=&#32;value;&#32;}
00343 &#32;&#32;&#32;&#32;}
00344 
<anchor xml:id="__interaction_controller_8cs_source_1l00351"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a08ba5639e6af985fa056a25ff2981278">00351</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a08ba5639e6af985fa056a25ff2981278">LockPrimaryHover</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link>&#32;intObj)&#32;{
00352 &#32;&#32;&#32;&#32;&#32;&#32;_primaryHoveredObject&#32;=&#32;intObj;
00353 &#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverLocked&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00354 &#32;&#32;&#32;&#32;}
00355 
<anchor xml:id="__interaction_controller_8cs_source_1l00361"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7c2b239ce82be01d82b7d8305dbfe0e5">00361</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7c2b239ce82be01d82b7d8305dbfe0e5">hoverPoint</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00362 
00363 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_hoveredObjects&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
<anchor xml:id="__interaction_controller_8cs_source_1l00368"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a37ded7f3535bc34b8a9c6c2337e4eb6d">00368</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_hash_set">ReadonlyHashSet&lt;IInteractionBehaviour&gt;</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a37ded7f3535bc34b8a9c6c2337e4eb6d">hoveredObjects</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_hoveredObjects;&#32;}&#32;}
00369 
<anchor xml:id="__interaction_controller_8cs_source_1l00370"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a18c2955004efd717b06bc82eecae7698">00370</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;List&lt;Transform&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a18c2955004efd717b06bc82eecae7698">_primaryHoverPoints</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
<anchor xml:id="__interaction_controller_8cs_source_1l00375"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">00375</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_list">ReadonlyList&lt;Transform&gt;</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">primaryHoverPoints</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a18c2955004efd717b06bc82eecae7698">_primaryHoverPoints</link>;&#32;}&#32;}
00376 
<anchor xml:id="__interaction_controller_8cs_source_1l00381"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad4ef88d6265a7fce226b2f873237e45c">00381</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad4ef88d6265a7fce226b2f873237e45c">isPrimaryHovering</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00382 
00383 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;_primaryHoveredObject;
<anchor xml:id="__interaction_controller_8cs_source_1l00388"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">00388</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_primaryHoveredObject;&#32;}&#32;}
00389 
00390 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_primaryHoverDistance&#32;=&#32;<emphasis role="keywordtype">float</emphasis>.PositiveInfinity;
<anchor xml:id="__interaction_controller_8cs_source_1l00395"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afeb62318cb32bef4787258c43412e0cf">00395</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afeb62318cb32bef4787258c43412e0cf">primaryHoverDistance</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_primaryHoverDistance;&#32;}&#32;}
00396 
<anchor xml:id="__interaction_controller_8cs_source_1l00402"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a554d29bd982480dc182546ef3ed72c23">00402</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a554d29bd982480dc182546ef3ed72c23">primaryHoveringPoint</link>&#32;{
00403 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad4ef88d6265a7fce226b2f873237e45c">isPrimaryHovering</link>&#32;?&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a18c2955004efd717b06bc82eecae7698">_primaryHoverPoints</link>[_primaryHoverPointIdx].position
00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;Vector3.zero;
00406 &#32;&#32;&#32;&#32;&#32;&#32;}
00407 &#32;&#32;&#32;&#32;}
00408 
<anchor xml:id="__interaction_controller_8cs_source_1l00413"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aaf9e4b9336f1afd0e0043bc0cffe8aeb">00413</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aaf9e4b9336f1afd0e0043bc0cffe8aeb">primaryHoveringPointIndex</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_primaryHoverPointIdx;&#32;}&#32;}
00414 
00416 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverPointIdx&#32;=&#32;-1;
00417 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;IInteractionBehaviour&gt;&#32;_perPointPrimaryHovered&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IInteractionBehaviour&gt;();
00418 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;float&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_perPointPrimaryHoverDistance&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;float&gt;();
00419 
00420 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;fixedUpdateHovering()&#32;{
00421 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_profiler_sample">ProfilerSample</link>(<emphasis role="stringliteral">&quot;Fixed&#32;Update&#32;InteractionController&#32;Hovering&quot;</emphasis>))&#32;{
00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reset&#32;hover&#32;lock&#32;if&#32;the&#32;controller&#32;loses&#32;tracking.</emphasis>
00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">primaryHoverLocked</link>)&#32;{
00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverLocked&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00426 
00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;hover&#32;state.</emphasis>
00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1c4c17da6cee8659687cf864381f1473">hoverActivityManager</link>.activationRadius&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a36150064a656dc0d048f5d234b8ff88f">WorldHoverActivationRadius</link>;
00429 
00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3?&#32;queryPosition&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>&#32;?&#32;(Vector3?)<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7c2b239ce82be01d82b7d8305dbfe0e5">hoverPoint</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>;
00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1c4c17da6cee8659687cf864381f1473">hoverActivityManager</link>.UpdateActivityQuery(queryPosition,&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space">LeapSpace</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_1abb31d6bf34c02c7b40fe0e34efad87cb">allEnabled</link>);
00432 
00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;all&#32;returned&#32;objects&#32;as&#32;&quot;hovered&quot;.</emphasis>
00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;closest&#32;objects&#32;per&#32;primary&#32;hover&#32;point&#32;to&#32;update&#32;primary&#32;hover&#32;state.</emphasis>
00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_profiler_sample">ProfilerSample</link>(<emphasis role="stringliteral">&quot;Find&#32;Closest&#32;Objects&#32;for&#32;Primary&#32;Hover&quot;</emphasis>))&#32;{
00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refreshHoverState(_hoverActivityManager.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_activity_manager_1a6eb798f1ce61155a8ae329cf61d750df">ActiveObjects</link>);
00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00438 
00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Refresh&#32;buffer&#32;information&#32;from&#32;the&#32;previous&#32;frame&#32;to&#32;be&#32;able&#32;to&#32;fire</emphasis>
00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;appropriate&#32;hover&#32;state&#32;callbacks.</emphasis>
00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refreshHoverStateBuffers();
00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refreshPrimaryHoverStateBuffers();
00443 
00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Support&#32;interactions&#32;in&#32;curved&#32;(&quot;warped&quot;)&#32;space&#32;by&#32;&quot;unwarping&quot;&#32;hands&#32;into</emphasis>
00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;curved&#32;space&apos;s&#32;physics&#32;(rectilinear)&#32;space.</emphasis>
00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad4ef88d6265a7fce226b2f873237e45c">isPrimaryHovering</link>)&#32;{
00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component">ISpaceComponent</link>&#32;space&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a34b32f80ec8744c9634f5aea547cc0b0">space</link>;
00448 
00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(space&#32;!=&#32;<emphasis role="keyword">null</emphasis>
00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;space.<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component_1aa8e8762d2a71655cd50455d87e6a9ef4">anchor</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>
00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;space.<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component_1aa8e8762d2a71655cd50455d87e6a9ef4">anchor</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a77daae8f1a9f57ef4dc3e75fe5801bcd">space</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aef6aebf580bed0a675b59e1c4a267376">unwarpColliders</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">primaryHoverPoints</link>[_primaryHoverPointIdx],&#32;space);
00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00455 &#32;&#32;&#32;&#32;&#32;&#32;}
00456 &#32;&#32;&#32;&#32;}
00457 
00484 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aef6aebf580bed0a675b59e1c4a267376">unwarpColliders</link>(Transform&#32;primaryHoverPoint,
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component">ISpaceComponent</link>&#32;warpedSpaceElement);
00486 
00487 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Hover&#32;history,&#32;handled&#32;as&#32;part&#32;of&#32;the&#32;Interaction&#32;Manager&apos;s&#32;state-check&#32;calls.</emphasis>
00488 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IInteractionBehaviour&#32;_primaryHoveredLastFrame&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00489 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_hoveredLastFrame&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
00490 
00495 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;refreshHoverState(HashSet&lt;IInteractionBehaviour&gt;&#32;hoverCandidates)&#32;{
00496 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;data&#32;from&#32;last&#32;frame&#32;for&#32;hysteresis&#32;later&#32;on.</emphasis>
00497 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;primaryHoverPointIdxLastFrame&#32;=&#32;_primaryHoveredLastFrame&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;_primaryHoverPointIdx&#32;:&#32;-1;
00498 
00499 &#32;&#32;&#32;&#32;&#32;&#32;_hoveredObjects.Clear();
00500 
00501 &#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;lockedPrimaryHoveredObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00502 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">primaryHoverLocked</link>)&#32;{
00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lockedPrimaryHoveredObject&#32;=&#32;_primaryHoveredObject;
00504 &#32;&#32;&#32;&#32;&#32;&#32;}
00505 &#32;&#32;&#32;&#32;&#32;&#32;_primaryHoveredObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00506 &#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverDistance&#32;=&#32;<emphasis role="keywordtype">float</emphasis>.PositiveInfinity;
00507 &#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverPointIdx&#32;=&#32;-1;
00508 &#32;&#32;&#32;&#32;&#32;&#32;_perPointPrimaryHovered.Clear();
00509 &#32;&#32;&#32;&#32;&#32;&#32;_perPointPrimaryHoverDistance.Clear();
00510 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">primaryHoverPoints</link>.Count;&#32;i++)&#32;{
00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_perPointPrimaryHovered.Add(<emphasis role="keyword">null</emphasis>);
00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_perPointPrimaryHoverDistance.Add(<emphasis role="keywordtype">float</emphasis>.PositiveInfinity);
00513 &#32;&#32;&#32;&#32;&#32;&#32;}
00514 
00515 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;can&#32;only&#32;update&#32;hover&#32;information&#32;if&#32;there&apos;s&#32;tracked&#32;data.</emphasis>
00516 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
00517 
00518 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Determine&#32;values&#32;to&#32;apply&#32;hysteresis&#32;to&#32;the&#32;primary&#32;hover&#32;state.</emphasis>
00519 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxNewPrimaryHoverDistance&#32;=&#32;<emphasis role="keywordtype">float</emphasis>.PositiveInfinity;
00520 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_primaryHoveredLastFrame&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;primaryHoverPointIdxLastFrame&#32;!=&#32;-1
00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">primaryHoverPoints</link>[primaryHoverPointIdxLastFrame]&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00522 
00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_contactBehaviours.ContainsKey(_primaryHoveredLastFrame))&#32;{
00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;we&apos;re&#32;actually&#32;touching&#32;the&#32;last&#32;primary&#32;hover,&#32;prevent&#32;the&#32;primary&#32;hover&#32;from&#32;changing&#32;at&#32;all.</emphasis>
00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxNewPrimaryHoverDistance&#32;=&#32;0F;
00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;distanceToLastPrimaryHover&#32;=&#32;_primaryHoveredLastFrame.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a5f314b48c8c3b8f6f5067bcf5a97003c">GetHoverDistance</link>(
00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">primaryHoverPoints</link>[primaryHoverPointIdxLastFrame].<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae76036f3e88ac60d8fcaaf5496963773">position</link>);
00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Otherwise...</emphasis>
00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;distance&#32;to&#32;a&#32;new&#32;object&#32;must&#32;be&#32;even&#32;closer&#32;than&#32;the&#32;current&#32;primary&#32;hover</emphasis>
00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;distance&#32;in&#32;order&#32;for&#32;that&#32;object&#32;to&#32;become&#32;the&#32;new&#32;primary&#32;hover.</emphasis>
00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxNewPrimaryHoverDistance&#32;=&#32;distanceToLastPrimaryHover
00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;distanceToLastPrimaryHover.Map(0.009F,&#32;0.018F,&#32;0.4F,&#32;0.95F);
00535 
00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00537 &#32;&#32;&#32;&#32;&#32;&#32;}
00538 
00539 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(IInteractionBehaviour&#32;behaviour&#32;<emphasis role="keywordflow">in</emphasis>&#32;hoverCandidates)&#32;{
00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;All&#32;hover&#32;candidates&#32;automatically&#32;count&#32;as&#32;hovered.</emphasis>
00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoveredObjects.Add(behaviour);
00542 
00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Some&#32;objects&#32;can&#32;ignore&#32;consideration&#32;for&#32;primary&#32;hover&#32;as&#32;an</emphasis>
00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;optimization,&#32;since&#32;it&#32;can&#32;require&#32;a&#32;lot&#32;of&#32;distance&#32;checks.</emphasis>
00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(behaviour.ignorePrimaryHover)&#32;<emphasis role="keywordflow">continue</emphasis>;
00546 
00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;further&#32;processing&#32;to&#32;determine&#32;the&#32;primary&#32;hover&#32;if&#32;primary&#32;hover&#32;isn&apos;t</emphasis>
00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;locked.</emphasis>
00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">primaryHoverLocked</link>)&#32;{
00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processPrimaryHover(behaviour,&#32;maxNewPrimaryHoverDistance);
00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00552 &#32;&#32;&#32;&#32;&#32;&#32;}
00553 
00554 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;primary&#32;hover&#32;is&#32;locked,&#32;we&#32;need&#32;to&#32;process&#32;primary&#32;hover&#32;specifically</emphasis>
00555 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;the&#32;locked&#32;object.</emphasis>
00556 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">primaryHoverLocked</link>&#32;&amp;&amp;&#32;lockedPrimaryHoveredObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processPrimaryHover(lockedPrimaryHoveredObject,&#32;<emphasis role="keywordtype">float</emphasis>.PositiveInfinity);
00558 &#32;&#32;&#32;&#32;&#32;&#32;}
00559 &#32;&#32;&#32;&#32;}
00560 
00561 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;processPrimaryHover(IInteractionBehaviour&#32;behaviour,&#32;<emphasis role="keywordtype">float</emphasis>&#32;maxNewPrimaryHoverDistance)&#32;{
00562 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;against&#32;all&#32;positions&#32;currently&#32;registered&#32;as&#32;primary&#32;hover&#32;points,</emphasis>
00563 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;finding&#32;the&#32;closest&#32;one&#32;and&#32;updating&#32;hover&#32;data&#32;accordingly.</emphasis>
00564 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;shortestPointDistance&#32;=&#32;<emphasis role="keywordtype">float</emphasis>.PositiveInfinity;
00565 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">primaryHoverPoints</link>.Count;&#32;i++)&#32;{
00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;primaryHoverPoint&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">primaryHoverPoints</link>[i];
00567 
00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;It&apos;s&#32;possible&#32;to&#32;disable&#32;primary&#32;hover&#32;points&#32;to&#32;ignore&#32;them&#32;for&#32;hover</emphasis>
00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;consideration.</emphasis>
00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(primaryHoverPoint&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">continue</emphasis>;
00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!primaryHoverPoint.gameObject.activeInHierarchy)&#32;<emphasis role="keywordflow">continue</emphasis>;
00572 
00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;non-index&#32;fingers&#32;for&#32;InteractionHands&#32;if&#32;they&#32;aren&apos;t&#32;extended.</emphasis>
00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa1fbc2fcb4bbb72436b53d5e74b5cd4f">intHand</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa1fbc2fcb4bbb72436b53d5e74b5cd4f">intHand</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand_1a49dba50672251b00081f95e8de3c2993">leapHand</link>).Fingers[i].IsExtended&#32;&amp;&amp;&#32;i&#32;!=&#32;1)&#32;{&#32;<emphasis role="keywordflow">continue</emphasis>;&#32;}
00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00577 
00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;primary&#32;hover&#32;for&#32;the&#32;primary&#32;hover&#32;point.</emphasis>
00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;behaviourDistance&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a78d837eccab12304e8c02b79fda189d1">GetHoverDistance</link>(primaryHoverPoint.position,&#32;behaviour);
00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(behaviourDistance&#32;&lt;&#32;shortestPointDistance)&#32;{
00581 
00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;is&#32;the&#32;closest&#32;behaviour&#32;to&#32;this&#32;primary&#32;hover&#32;point.</emphasis>
00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_perPointPrimaryHovered[i]&#32;=&#32;behaviour;
00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_perPointPrimaryHoverDistance[i]&#32;=&#32;behaviourDistance;
00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shortestPointDistance&#32;=&#32;behaviourDistance;
00586 
00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">primaryHoverLocked</link>)&#32;{
00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;primary&#32;hover&#32;is&#32;locked,&#32;there&apos;s&#32;only&#32;one&#32;object&#32;to&#32;consider,</emphasis>
00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;the&#32;current&#32;primary&#32;hover&#32;point&#32;is&#32;the&#32;closest&#32;one&#32;to&#32;the&#32;object</emphasis>
00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;far,&#32;so&#32;update&#32;primary&#32;hover&#32;accordingly.</emphasis>
00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoveredObject&#32;=&#32;_perPointPrimaryHovered[i];&#32;<emphasis role="comment">//&#32;(redundant)</emphasis>
00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverDistance&#32;=&#32;_perPointPrimaryHoverDistance[i];
00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverPointIdx&#32;=&#32;i;
00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shortestPointDistance&#32;&lt;&#32;_primaryHoverDistance
00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(behaviour&#32;==&#32;_primaryHoveredLastFrame&#32;||&#32;behaviourDistance&#32;&lt;&#32;maxNewPrimaryHoverDistance))&#32;{
00597 
00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;is&#32;the&#32;closest&#32;behaviour&#32;to&#32;ANY&#32;primary&#32;hover&#32;point,&#32;and&#32;the</emphasis>
00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;distance&#32;is&#32;less&#32;than&#32;the&#32;hysteresis&#32;distance&#32;to&#32;transition&#32;away&#32;from</emphasis>
00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;previous&#32;primary&#32;hovered&#32;object.</emphasis>
00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoveredObject&#32;=&#32;_perPointPrimaryHovered[i];
00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverDistance&#32;=&#32;_perPointPrimaryHoverDistance[i];
00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverPointIdx&#32;=&#32;i;
00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00606 &#32;&#32;&#32;&#32;&#32;&#32;}
00607 &#32;&#32;&#32;&#32;}
00608 
<anchor xml:id="__interaction_controller_8cs_source_1l00615"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a01f1951bc78ef7b3362df72bfbff4613">00615</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a01f1951bc78ef7b3362df72bfbff4613">ClearHoverTracking</link>()&#32;{
00616 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Clear();
00617 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Add(<emphasis role="keyword">this</emphasis>);
00618 
00619 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;tempObjs&#32;=&#32;Pool&lt;HashSet&lt;IInteractionBehaviour&gt;&gt;.Spawn();
00620 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;intObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a37ded7f3535bc34b8a9c6c2337e4eb6d">hoveredObjects</link>)&#32;{
00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempObjs.Add(intObj);
00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00624 
00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;intObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;tempObjs)&#32;{
00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prevents&#32;normal&#32;hover&#32;state&#32;checking&#32;on&#32;the&#32;next&#32;frame&#32;from&#32;firing&#32;duplicate</emphasis>
00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hover-end&#32;callbacks.&#32;If&#32;the&#32;object&#32;is&#32;still&#32;hovered&#32;(and&#32;the&#32;controller&#32;is</emphasis>
00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;still&#32;in&#32;an&#32;enabled&#32;state),&#32;the&#32;object&#32;WILL&#32;receive&#32;a&#32;hover&#32;begin&#32;callback</emphasis>
00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;the&#32;next&#32;frame.</emphasis>
00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoveredObjects.Remove(intObj);
00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoveredLastFrame.Remove(intObj);
00632 
00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intObj.EndHover(_controllerListBuffer);
00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00635 &#32;&#32;&#32;&#32;&#32;&#32;}
00636 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">finally</emphasis>&#32;{
00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempObjs.Clear();
00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;HashSet&lt;IInteractionBehaviour&gt;&gt;.Recycle(tempObjs);
00639 &#32;&#32;&#32;&#32;&#32;&#32;}
00640 &#32;&#32;&#32;&#32;}
00641 
<anchor xml:id="__interaction_controller_8cs_source_1l00649"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9de6995d8a1409d6ac9ea3520eb7d0c4">00649</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9de6995d8a1409d6ac9ea3520eb7d0c4">ClearHoverTrackingForObject</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj)&#32;{
00650 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a37ded7f3535bc34b8a9c6c2337e4eb6d">hoveredObjects</link>.Contains(intObj))&#32;<emphasis role="keywordflow">return</emphasis>;
00651 
00652 &#32;&#32;&#32;&#32;&#32;&#32;_hoveredObjects.Remove(intObj);
00653 &#32;&#32;&#32;&#32;&#32;&#32;_hoveredLastFrame.Remove(intObj);
00654 
00655 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Clear();
00656 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Add(<emphasis role="keyword">this</emphasis>);
00657 
00658 &#32;&#32;&#32;&#32;&#32;&#32;intObj.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1aba5485bd77f8d0a4d1af803a506f7c11">EndHover</link>(_controllerListBuffer);
00659 &#32;&#32;&#32;&#32;}
00660 
00661 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Hover&#32;State&#32;Checks</emphasis>
00662 
00663 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_hoverEndedBuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
00664 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_hoverBeganBuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
00665 
00666 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;IInteractionBehaviour&gt;&#32;_hoverRemovalCache&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IInteractionBehaviour&gt;();
00667 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;refreshHoverStateBuffers()&#32;{
00668 &#32;&#32;&#32;&#32;&#32;&#32;_hoverBeganBuffer.Clear();
00669 &#32;&#32;&#32;&#32;&#32;&#32;_hoverEndedBuffer.Clear();
00670 
00671 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;trackedBehaviours&#32;=&#32;_hoverActivityManager.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_activity_manager_1a6eb798f1ce61155a8ae329cf61d750df">ActiveObjects</link>;
00672 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;hoverable&#32;<emphasis role="keywordflow">in</emphasis>&#32;trackedBehaviours)&#32;{
00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;inLastFrame&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;inCurFrame&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a37ded7f3535bc34b8a9c6c2337e4eb6d">hoveredObjects</link>.Contains(hoverable))&#32;{
00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inCurFrame&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_hoveredLastFrame.Contains(hoverable))&#32;{
00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inLastFrame&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00680 
00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(inCurFrame&#32;&amp;&amp;&#32;!inLastFrame)&#32;{
00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoverBeganBuffer.Add(hoverable);
00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoveredLastFrame.Add(hoverable);
00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!inCurFrame&#32;&amp;&amp;&#32;inLastFrame)&#32;{
00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoverEndedBuffer.Add(hoverable);
00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoveredLastFrame.Remove(hoverable);
00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00689 &#32;&#32;&#32;&#32;&#32;&#32;}
00690 
00691 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;hoverable&#32;<emphasis role="keywordflow">in</emphasis>&#32;_hoveredLastFrame)&#32;{
00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!trackedBehaviours.Contains(hoverable))&#32;{
00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoverEndedBuffer.Add(hoverable);
00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoverRemovalCache.Add(hoverable);
00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00696 &#32;&#32;&#32;&#32;&#32;&#32;}
00697 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;hoverable&#32;<emphasis role="keywordflow">in</emphasis>&#32;_hoverRemovalCache)&#32;{
00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_hoveredLastFrame.Remove(hoverable);
00699 &#32;&#32;&#32;&#32;&#32;&#32;}
00700 &#32;&#32;&#32;&#32;&#32;&#32;_hoverRemovalCache.Clear();
00701 &#32;&#32;&#32;&#32;}
00702 
00708 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckHoverEnd(out&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;hoverEndedObjects)&#32;{
00709 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Hover&#32;checks&#32;via&#32;the&#32;activity&#32;manager&#32;are&#32;robust&#32;to&#32;destroyed&#32;or&#32;made-invalid&#32;objects,</emphasis>
00710 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;no&#32;additional&#32;validity&#32;checking&#32;is&#32;required.</emphasis>
00711 &#32;&#32;&#32;&#32;&#32;&#32;hoverEndedObjects&#32;=&#32;_hoverEndedBuffer;
00712 
00713 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_hoverEndedBuffer.Count&#32;&gt;&#32;0;
00714 &#32;&#32;&#32;&#32;}
00715 
00721 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckHoverBegin(out&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;hoverBeganObjects)&#32;{
00722 &#32;&#32;&#32;&#32;&#32;&#32;hoverBeganObjects&#32;=&#32;_hoverBeganBuffer;
00723 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_hoverBeganBuffer.Count&#32;&gt;&#32;0;
00724 &#32;&#32;&#32;&#32;}
00725 
00731 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckHoverStay(out&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a37ded7f3535bc34b8a9c6c2337e4eb6d">hoveredObjects</link>)&#32;{
00732 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a37ded7f3535bc34b8a9c6c2337e4eb6d">hoveredObjects</link>&#32;=&#32;_hoveredObjects;
00733 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a37ded7f3535bc34b8a9c6c2337e4eb6d">hoveredObjects</link>.Count&#32;&gt;&#32;0;
00734 &#32;&#32;&#32;&#32;}
00735 
00736 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00737 
<anchor xml:id="__interaction_controller_8cs_source_1l00745"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a023df36bea05721df061204ea1e3fc65">00745</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a023df36bea05721df061204ea1e3fc65">ClearPrimaryHoverTracking</link>()&#32;{
00746 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad4ef88d6265a7fce226b2f873237e45c">isPrimaryHovering</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
00747 
00748 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;will&#32;cause&#32;the&#32;primary-hover-end&#32;check&#32;to&#32;return&#32;this&#32;object,&#32;and&#32;prevent</emphasis>
00749 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;a&#32;duplicate&#32;primary-hover-end&#32;call&#32;when&#32;refreshPrimaryHoverStateBuffers()&#32;is</emphasis>
00750 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;called&#32;on&#32;the&#32;next&#32;frame.</emphasis>
00751 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;formerlyPrimaryHoveredObj&#32;=&#32;_primaryHoveredObject;
00752 &#32;&#32;&#32;&#32;&#32;&#32;_primaryHoveredObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00753 &#32;&#32;&#32;&#32;&#32;&#32;_primaryHoveredLastFrame&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00754 
00755 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">primaryHoverLocked</link>)&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afa44de31d034ff2bceb41ee6a20d0253">primaryHoverLocked</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00756 
00757 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Clear();
00758 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Add(<emphasis role="keyword">this</emphasis>);
00759 
00760 &#32;&#32;&#32;&#32;&#32;&#32;formerlyPrimaryHoveredObj.EndPrimaryHover(_controllerListBuffer);
00761 &#32;&#32;&#32;&#32;}
00762 
00763 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Primary&#32;Hover&#32;State&#32;Checks</emphasis>
00764 
00765 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;_primaryHoverEndedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00766 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;_primaryHoverBeganObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00767 
00768 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;refreshPrimaryHoverStateBuffers()&#32;{
00769 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>&#32;!=&#32;_primaryHoveredLastFrame)&#32;{
00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_primaryHoveredLastFrame&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_primaryHoverEndedObject&#32;=&#32;_primaryHoveredLastFrame;
00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;_primaryHoverEndedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00772 
00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoveredLastFrame&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>;
00774 
00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_primaryHoveredLastFrame&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;_primaryHoverBeganObject&#32;=&#32;_primaryHoveredLastFrame;
00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;_primaryHoverBeganObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00777 &#32;&#32;&#32;&#32;&#32;&#32;}
00778 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverEndedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_primaryHoverBeganObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00781 &#32;&#32;&#32;&#32;&#32;&#32;}
00782 &#32;&#32;&#32;&#32;}
00783 
00789 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckPrimaryHoverEnd(out&#32;IInteractionBehaviour&#32;primaryHoverEndedObject)&#32;{
00790 &#32;&#32;&#32;&#32;&#32;&#32;primaryHoverEndedObject&#32;=&#32;_primaryHoverEndedObject;
00791 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;primaryHoverEnded&#32;=&#32;primaryHoverEndedObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
00792 
00793 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(primaryHoverEnded&#32;&amp;&amp;&#32;_primaryHoverEndedObject&#32;is&#32;InteractionBehaviour)&#32;{
00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5f8e8be344906d62743703848f2f20bb">OnEndPrimaryHoveringObject</link>(_primaryHoverEndedObject&#32;as&#32;InteractionBehaviour);
00795 &#32;&#32;&#32;&#32;&#32;&#32;}
00796 
00797 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;primaryHoverEnded;
00798 &#32;&#32;&#32;&#32;}
00799 
00805 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckPrimaryHoverBegin(out&#32;IInteractionBehaviour&#32;primaryHoverBeganObject)&#32;{
00806 &#32;&#32;&#32;&#32;&#32;&#32;primaryHoverBeganObject&#32;=&#32;_primaryHoverBeganObject;
00807 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;primaryHoverBegan&#32;=&#32;primaryHoverBeganObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
00808 
00809 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(primaryHoverBegan&#32;&amp;&amp;&#32;_primaryHoverBeganObject&#32;is&#32;InteractionBehaviour)&#32;{
00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a650dbb36420d01848fe0103dd927f84c">OnBeginPrimaryHoveringObject</link>(_primaryHoverBeganObject&#32;as&#32;InteractionBehaviour);
00811 &#32;&#32;&#32;&#32;&#32;&#32;}
00812 
00813 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;primaryHoverBegan;
00814 &#32;&#32;&#32;&#32;}
00815 
00821 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckPrimaryHoverStay(out&#32;IInteractionBehaviour&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>)&#32;{
00822 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>&#32;=&#32;_primaryHoveredObject;
00823 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;primaryHoverStayed&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
00824 
00825 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(primaryHoverStayed&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>&#32;is&#32;InteractionBehaviour)&#32;{
00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ada639d7fe85125f34caa98faabe131c2">OnStayPrimaryHoveringObject</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a56d551f3efcbfc06ecae0bb0d5e45f82">primaryHoveredObject</link>&#32;as&#32;InteractionBehaviour);
00827 &#32;&#32;&#32;&#32;&#32;&#32;}
00828 
00829 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;primaryHoverStayed;
00830 &#32;&#32;&#32;&#32;}
00831 
00832 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00833 
<anchor xml:id="__interaction_controller_8cs_source_1l00838"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a78d837eccab12304e8c02b79fda189d1">00838</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a78d837eccab12304e8c02b79fda189d1">GetHoverDistance</link>(Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7c2b239ce82be01d82b7d8305dbfe0e5">hoverPoint</link>,&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;behaviour)&#32;{
00839 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(behaviour.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a34b32f80ec8744c9634f5aea547cc0b0">space</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;behaviour.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a5f314b48c8c3b8f6f5067bcf5a97003c">GetHoverDistance</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a8a3b2a0cac8dd47e4a447c5d188b8ca8">TransformPoint</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7c2b239ce82be01d82b7d8305dbfe0e5">hoverPoint</link>,&#32;behaviour.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a34b32f80ec8744c9634f5aea547cc0b0">space</link>));
00841 &#32;&#32;&#32;&#32;&#32;&#32;}
00842 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;behaviour.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a5f314b48c8c3b8f6f5067bcf5a97003c">GetHoverDistance</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7c2b239ce82be01d82b7d8305dbfe0e5">hoverPoint</link>);
00844 &#32;&#32;&#32;&#32;&#32;&#32;}
00845 &#32;&#32;&#32;&#32;}
00846 
<anchor xml:id="__interaction_controller_8cs_source_1l00850"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a8a3b2a0cac8dd47e4a447c5d188b8ca8">00850</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a8a3b2a0cac8dd47e4a447c5d188b8ca8">TransformPoint</link>(Vector3&#32;worldPoint,&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component">ISpaceComponent</link>&#32;element)&#32;{
00851 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(element.<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component_1aa8e8762d2a71655cd50455d87e6a9ef4">anchor</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;element.<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component_1aa8e8762d2a71655cd50455d87e6a9ef4">anchor</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a77daae8f1a9f57ef4dc3e75fe5801bcd">space</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localPos&#32;=&#32;element.<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component_1aa8e8762d2a71655cd50455d87e6a9ef4">anchor</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a77daae8f1a9f57ef4dc3e75fe5801bcd">space</link>.transform.InverseTransformPoint(worldPoint);
00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element.<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component_1aa8e8762d2a71655cd50455d87e6a9ef4">anchor</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a77daae8f1a9f57ef4dc3e75fe5801bcd">space</link>.transform.TransformPoint(element.<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component_1aa8e8762d2a71655cd50455d87e6a9ef4">anchor</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a6f98d35d75f83e2ff2c978715520c836">transformer</link>.<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1ad919653073748169561e99cace4f5931">InverseTransformPoint</link>(localPos));
00854 &#32;&#32;&#32;&#32;&#32;&#32;}
00855 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;worldPoint;
00857 &#32;&#32;&#32;&#32;&#32;&#32;}
00858 &#32;&#32;&#32;&#32;}
00859 
00860 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00861 
00862 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Contact</emphasis>
00863 
<anchor xml:id="__interaction_controller_8cs_source_1l00868"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa6604231c26a97eeade073ea2dc60d21">00868</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_hash_set">ReadonlyHashSet&lt;IInteractionBehaviour&gt;</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa6604231c26a97eeade073ea2dc60d21">contactingObjects</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_contactBehavioursSet;&#32;}&#32;}
00869 
00870 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Contact&#32;Bones</emphasis>
00871 
<anchor xml:id="__interaction_controller_8cs_source_1l00872"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a11c7de0dc654832053eb8cdd2ab6bce8">00872</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a11c7de0dc654832053eb8cdd2ab6bce8">DEAD_ZONE_FRACTION</link>&#32;=&#32;0.04F;
00873 
00874 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_softContactDislocationDistance&#32;=&#32;0.03F;
<anchor xml:id="__interaction_controller_8cs_source_1l00875"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a434834ae5912df87a8a0ac876ed0757c">00875</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a434834ae5912df87a8a0ac876ed0757c">softContactDislocationDistance</link>&#32;{
00876 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_softContactDislocationDistance;&#32;}
00877 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;_softContactDislocationDistance&#32;=&#32;value;&#32;}
00878 &#32;&#32;&#32;&#32;}
00879 
00880 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;PhysicMaterial&#32;s_defaultContactBoneMaterial;
<anchor xml:id="__interaction_controller_8cs_source_1l00881"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ab4e6b3b0d4793ea376619f9dc452b9f4">00881</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;PhysicMaterial&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ab4e6b3b0d4793ea376619f9dc452b9f4">defaultContactBoneMaterial</link>&#32;{
00882 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s_defaultContactBoneMaterial&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initDefaultContactBoneMaterial();
00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;s_defaultContactBoneMaterial;
00887 &#32;&#32;&#32;&#32;&#32;&#32;}
00888 &#32;&#32;&#32;&#32;}
00889 
00894 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;initDefaultContactBoneMaterial()&#32;{
00895 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s_defaultContactBoneMaterial&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_defaultContactBoneMaterial&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;PhysicMaterial();
00897 &#32;&#32;&#32;&#32;&#32;&#32;}
00898 &#32;&#32;&#32;&#32;&#32;&#32;s_defaultContactBoneMaterial.hideFlags&#32;=&#32;HideFlags.HideAndDontSave;
00899 &#32;&#32;&#32;&#32;&#32;&#32;s_defaultContactBoneMaterial.bounceCombine&#32;=&#32;PhysicMaterialCombine.Minimum;
00900 &#32;&#32;&#32;&#32;&#32;&#32;s_defaultContactBoneMaterial.bounciness&#32;=&#32;0F;
00901 &#32;&#32;&#32;&#32;}
00902 
00903 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_contactInitialized&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interaction_controller_8cs_source_1l00904"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad42f1bf4fa7ae05e23a3fbc314c6020f">00904</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad42f1bf4fa7ae05e23a3fbc314c6020f">_wasContactInitialized</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_contactInitialized;&#32;}&#32;}
<anchor xml:id="__interaction_controller_8cs_source_1l00905"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">00905</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link>[]&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
<anchor xml:id="__interaction_controller_8cs_source_1l00906"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">00906</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;GameObject&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
<anchor xml:id="__interaction_controller_8cs_source_1l00907"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a2a4bd7c1286aac2da300fd0d93273b28">00907</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a2a4bd7c1286aac2da300fd0d93273b28">lastObjectTouchedAdjustedMassMass</link>&#32;=&#32;0.2f;
00908 
00909 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3[]&#32;&#32;&#32;&#32;_boneTargetPositions;
00910 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Quaternion[]&#32;_boneTargetRotations;
00911 
00932 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5d9713dd48f3093aefbd8ebbba3b0251">initContact</link>();
00933 
00934 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;finishInitContact()&#32;{
00935 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.layer&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8d638a6bce8faff14a6ceedf0d7cd9eb">contactBoneLayer</link>;
00936 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.transform.parent&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.transform;
00937 
00938 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;comment&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.GetComponent&lt;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_parent">ContactBoneParent</link>&gt;();
00939 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(comment&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;comment&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.AddComponent&lt;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_parent">ContactBoneParent</link>&gt;();
00941 &#32;&#32;&#32;&#32;&#32;&#32;}
00942 &#32;&#32;&#32;&#32;&#32;&#32;comment.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_parent_1a535222c923c8d491b39216cb899080ee">controller</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
00943 
00944 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;contactBone&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>)&#32;{
00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.rigidbody.maxAngularVelocity&#32;=&#32;30F;
00946 
00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.gameObject.layer&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8d638a6bce8faff14a6ceedf0d7cd9eb">contactBoneLayer</link>;
00948 &#32;&#32;&#32;&#32;&#32;&#32;}
00949 
00950 &#32;&#32;&#32;&#32;&#32;&#32;_boneTargetPositions&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>.Length];
00951 &#32;&#32;&#32;&#32;&#32;&#32;_boneTargetRotations&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Quaternion[<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>.Length];
00952 &#32;&#32;&#32;&#32;}
00953 
00954 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;fixedUpdateContact()&#32;{
00955 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;contact&#32;data&#32;is&#32;initialized.</emphasis>
00956 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_contactInitialized)&#32;{
00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5d9713dd48f3093aefbd8ebbba3b0251">initContact</link>())&#32;{
00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;finishInitContact();
00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactInitialized&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00964 &#32;&#32;&#32;&#32;&#32;&#32;}
00965 
00966 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;contact&#32;data&#32;if&#32;we&#32;lose&#32;tracking.</emphasis>
00967 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>&#32;&amp;&amp;&#32;_contactBehaviours.Count&#32;&gt;&#32;0)&#32;{
00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours.Clear();
00969 
00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Also&#32;clear&#32;soft&#32;contact&#32;state&#32;if&#32;tracking&#32;is&#32;lost.</emphasis>
00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactCollisions.Clear();
00972 &#32;&#32;&#32;&#32;&#32;&#32;}
00973 
00974 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Disable&#32;contact&#32;bone&#32;parent&#32;if&#32;we&#32;lose&#32;tracking.</emphasis>
00975 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>)&#32;{
00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.SetActive(<emphasis role="keyword">false</emphasis>);
00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00978 &#32;&#32;&#32;&#32;&#32;&#32;}
00979 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.activeSelf)&#32;{
00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.SetActive(<emphasis role="keyword">true</emphasis>);
00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00983 &#32;&#32;&#32;&#32;&#32;&#32;}
00984 
00985 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Request&#32;and&#32;store&#32;target&#32;bone&#32;positions&#32;and&#32;rotations</emphasis>
00986 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;use&#32;during&#32;the&#32;contact&#32;update.</emphasis>
00987 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;Update&#32;Contact&#32;Bone&#32;Targets&quot;</emphasis>))&#32;{
00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>.Length;&#32;i++)&#32;{
00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae5ccd0183ff87fd51107a5b082116ce0">getColliderBoneTargetPositionRotation</link>(i,&#32;out&#32;_boneTargetPositions[i],
00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;_boneTargetRotations[i]);
00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00992 &#32;&#32;&#32;&#32;&#32;&#32;}
00993 
00994 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;Update&#32;Contact&#32;Bones&quot;</emphasis>))&#32;{
00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normalizeBoneMasses();
00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>.Length;&#32;i++)&#32;{
00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updateContactBone(i,&#32;_boneTargetPositions[i],&#32;_boneTargetRotations[i]);
00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00999 &#32;&#32;&#32;&#32;&#32;&#32;}
01000 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;Update&#32;Soft&#32;Contact&quot;</emphasis>))&#32;{
01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixedUpdateSoftContact();
01002 &#32;&#32;&#32;&#32;&#32;&#32;}
01003 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;Update&#32;Contact&#32;Callbacks&quot;</emphasis>))&#32;{
01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fixedUpdateContactState();
01005 &#32;&#32;&#32;&#32;&#32;&#32;}
01006 &#32;&#32;&#32;&#32;}
01007 
01016 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae5ccd0183ff87fd51107a5b082116ce0">getColliderBoneTargetPositionRotation</link>(<emphasis role="keywordtype">int</emphasis>&#32;contactBoneIndex,
01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;Vector3&#32;targetPosition,
01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;Quaternion&#32;targetRotation);
01019 
01020 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;normalizeBoneMasses()&#32;{
01021 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//If&#32;any&#32;of&#32;the&#32;contact&#32;bones&#32;have&#32;contacted&#32;an&#32;object&#32;that&#32;the&#32;others&#32;have&#32;not</emphasis>
01022 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Propagate&#32;that&#32;change&#32;in&#32;mass&#32;to&#32;the&#32;rest&#32;of&#32;the&#32;bones&#32;in&#32;the&#32;hand</emphasis>
01023 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;tempAdjustedMass&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a2a4bd7c1286aac2da300fd0d93273b28">lastObjectTouchedAdjustedMassMass</link>;
01024 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>.Length;&#32;i++)&#32;{
01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>[i]._lastObjectTouchedAdjustedMass&#32;!=&#32;tempAdjustedMass)&#32;{
01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempAdjustedMass&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>[i].<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a703d40dc7b6b968a768515b9f0c07b69">_lastObjectTouchedAdjustedMass</link>;
01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>.Length;&#32;j++)&#32;{
01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>[j].<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a703d40dc7b6b968a768515b9f0c07b69">_lastObjectTouchedAdjustedMass</link>&#32;=&#32;tempAdjustedMass;
01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01032 &#32;&#32;&#32;&#32;&#32;&#32;}
01033 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a2a4bd7c1286aac2da300fd0d93273b28">lastObjectTouchedAdjustedMassMass</link>&#32;=&#32;tempAdjustedMass;
01034 &#32;&#32;&#32;&#32;}
01035 
01036 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;updateContactBone(<emphasis role="keywordtype">int</emphasis>&#32;contactBoneIndex,&#32;Vector3&#32;targetPosition,&#32;Quaternion&#32;targetRotation)&#32;{
01037 &#32;&#32;&#32;&#32;&#32;&#32;ContactBone&#32;contactBone&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>[contactBoneIndex];
01038 &#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;body&#32;=&#32;contactBone.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1af615ba6957558427e50254b0d412858d">rigidbody</link>;
01039 
01040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Infer&#32;ahead&#32;if&#32;the&#32;Interaction&#32;Manager&#32;has&#32;a&#32;moving&#32;frame&#32;of&#32;reference.</emphasis>
01041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//manager.TransformAheadByFixedUpdate(targetPosition,&#32;targetRotation,&#32;out&#32;targetPosition,&#32;out&#32;targetRotation);</emphasis>
01042 
01043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;a&#32;fixed&#32;rotation&#32;for&#32;bones;&#32;otherwise&#32;most&#32;friction&#32;is&#32;lost</emphasis>
01044 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;as&#32;any&#32;capsule&#32;or&#32;spherical&#32;bones&#32;will&#32;roll&#32;on&#32;contact.</emphasis>
01045 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;updateContactBone:&#32;MoveRotation&quot;</emphasis>))&#32;{
01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body.MoveRotation(targetRotation);
01047 &#32;&#32;&#32;&#32;&#32;&#32;}
01048 
01049 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;how&#32;far&#32;off&#32;its&#32;target&#32;the&#32;contact&#32;bone&#32;is.</emphasis>
01050 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;errorDistance&#32;=&#32;0f;
01051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;errorFraction&#32;=&#32;0f;
01052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;updateContactBone:&#32;errorDistance,&#32;errorFraction&quot;</emphasis>))&#32;{
01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;lastTargetPositionTransformedAhead&#32;=&#32;contactBone.lastTargetPosition;
01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1aadad63856353238fd977cb228cd7f6bf">hasMovingFrameOfReference</link>)&#32;{
01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ab3f0e103a262ec1e7a9689e243cb62ad">TransformAheadByFixedUpdate</link>(contactBone.lastTargetPosition,&#32;out&#32;lastTargetPositionTransformedAhead);
01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorDistance&#32;=&#32;Vector3.Distance(lastTargetPositionTransformedAhead,&#32;body.position);
01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorFraction&#32;=&#32;errorDistance&#32;/&#32;contactBone.width;
01059 &#32;&#32;&#32;&#32;&#32;&#32;}
01060 
01061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Adjust&#32;the&#32;mass&#32;of&#32;the&#32;contact&#32;bone&#32;based&#32;on&#32;the&#32;mass&#32;of</emphasis>
01062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;object&#32;it&#32;is&#32;currently&#32;touching.</emphasis>
01063 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;speed&#32;=&#32;0f;
01064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;updateContactBone:&#32;speed&#32;&amp;&#32;massScale&quot;</emphasis>))&#32;{
01065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;speed&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a33eaec5343487f2c11c8254c1e3b3d2f">velocity</link>.magnitude;
01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;massScale&#32;=&#32;Mathf.Clamp(1.0F&#32;-&#32;(errorFraction&#32;*&#32;2.0F),&#32;0.1F,&#32;1.0F)
01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Mathf.Clamp(speed&#32;*&#32;10F,&#32;1F,&#32;10F);
01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body.mass&#32;=&#32;massScale&#32;*&#32;contactBone._lastObjectTouchedAdjustedMass;
01069 &#32;&#32;&#32;&#32;&#32;&#32;}
01070 
01071 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Potentially&#32;enable&#32;Soft&#32;Contact&#32;if&#32;our&#32;error&#32;is&#32;too&#32;large.</emphasis>
01072 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;updateContactBone:&#32;maybe&#32;enable&#32;Soft&#32;Contact&quot;</emphasis>))&#32;{
01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_softContactEnabled&#32;&amp;&amp;&#32;errorDistance&#32;&gt;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a434834ae5912df87a8a0ac876ed0757c">softContactDislocationDistance</link>
01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;speed&#32;&lt;&#32;1.5F
01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&amp;&amp;&#32;boneArrayIndex&#32;!=&#32;NUM_FINGERS&#32;*&#32;BONES_PER_FINGER&#32;*/</emphasis>)&#32;{
01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>();
01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01078 &#32;&#32;&#32;&#32;&#32;&#32;}
01079 
01080 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Attempt&#32;to&#32;move&#32;the&#32;contact&#32;bone&#32;to&#32;its&#32;target&#32;position&#32;and&#32;rotation</emphasis>
01081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;by&#32;setting&#32;its&#32;target&#32;velocity&#32;and&#32;angular&#32;velocity.&#32;Include&#32;a&#32;&quot;deadzone&quot;</emphasis>
01082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;position&#32;to&#32;avoid&#32;tiny&#32;vibrations.</emphasis>
01083 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;updateContactBone:&#32;Move&#32;to&#32;target,&#32;with&#32;deadzone&quot;</emphasis>))&#32;{
01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;deadzone&#32;=&#32;Mathf.Min(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a11c7de0dc654832053eb8cdd2ab6bce8">DEAD_ZONE_FRACTION</link>&#32;*&#32;contactBone.width,&#32;0.01F&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ab14c000b2374afa1b711f394ca45fead">scale</link>);
01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;delta&#32;=&#32;(targetPosition&#32;-&#32;body.position);
01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;deltaMag&#32;=&#32;delta.magnitude;
01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(deltaMag&#32;&lt;=&#32;deadzone)&#32;{
01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body.velocity&#32;=&#32;Vector3.zero;
01089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.lastTargetPosition&#32;=&#32;body.position;
01090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delta&#32;*=&#32;(deltaMag&#32;-&#32;deadzone)&#32;/&#32;deltaMag;
01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.lastTargetPosition&#32;=&#32;body.position&#32;+&#32;delta;
01094 
01095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;targetVelocity&#32;=&#32;delta&#32;/&#32;Time.fixedDeltaTime;
01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;targetVelocityMag&#32;=&#32;targetVelocity.magnitude;
01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body.velocity&#32;=&#32;(targetVelocity&#32;/&#32;targetVelocityMag)
01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;Mathf.Clamp(targetVelocityMag,&#32;0F,&#32;100F);
01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;deltaRot&#32;=&#32;targetRotation&#32;*&#32;Quaternion.Inverse(body.rotation);
01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;body.angularVelocity&#32;=&#32;PhysicsUtility.ToAngularVelocity(deltaRot,&#32;Time.fixedDeltaTime);
01102 &#32;&#32;&#32;&#32;&#32;&#32;}
01103 &#32;&#32;&#32;&#32;}
01104 
01105 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
01106 
01107 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Soft&#32;Contact</emphasis>
01108 
01109 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_softContactEnabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interaction_controller_8cs_source_1l01110"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7efdf9619c04ed13e0f223c12c6ae429">01110</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7efdf9619c04ed13e0f223c12c6ae429">softContactEnabled</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_softContactEnabled;&#32;}&#32;}
01111 
01112 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_disableSoftContactEnqueued&#32;=&#32;<emphasis role="keyword">false</emphasis>;
01113 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;_delayedDisableSoftContactCoroutine;
01114 
01115 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Collider[]&#32;_softContactColliderBuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Collider[32];
01116 
01117 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_notTrackedLastFrame&#32;=&#32;<emphasis role="keyword">true</emphasis>;
01118 
01119 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;fixedUpdateSoftContact()&#32;{
01120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>)&#32;{
01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_notTrackedLastFrame&#32;=&#32;<emphasis role="keyword">true</emphasis>;
01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
01123 &#32;&#32;&#32;&#32;&#32;&#32;}
01124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;hand&#32;was&#32;just&#32;initialized,&#32;initialize&#32;with&#32;soft&#32;contact.</emphasis>
01126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_notTrackedLastFrame)&#32;{
01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>();
01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01129 
01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_notTrackedLastFrame&#32;=&#32;<emphasis role="keyword">false</emphasis>;
01131 &#32;&#32;&#32;&#32;&#32;&#32;}
01132 
01133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_softContactEnabled)&#32;{
01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;contactBone&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>)&#32;{
01135 <emphasis role="preprocessor">#if&#32;UNITY_ANDROID</emphasis>
01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//for(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_softContactColliderBuffer.Length;&#32;i++)&#32;{</emphasis>
01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;_softContactColliderBuffer[i]&#32;=&#32;null;</emphasis>
01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HACK:&#32;assume&#32;only&#32;using&#32;hands&#32;on&#32;android</emphasis>
01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;This&#32;probably&#32;doesn&apos;t&#32;take&#32;into&#32;accoutn&#32;ignoreContact&#32;settings</emphasis>
01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsUtility.generateSphereContacts(contactBone.rigidbody.position,
01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.02f&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a129650833ce143b39615e9f2906a3669">SimulationScale</link>,
01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.rigidbody.velocity,
01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1abeed762876c9d024999e75142a523c80">interactionLayer</link>.<link linkend="_struct_leap_1_1_unity_1_1_single_layer_1a7679475c49c9314d9849150b8bc84e70">layerMask</link>,
01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a70605cd65741d1ec3409745fdf09c3ee">_softContacts</link>,
01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a049c0b24c30386942bb3abe7d3118b6e">_softContactOriginalVelocities</link>,
01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;_softContactColliderBuffer);
01148 
01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_softContactColliderBuffer.Length;&#32;i++)&#32;{</emphasis>
01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(_softContactColliderBuffer[i]&#32;!=&#32;null)&#32;{</emphasis>
01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;NotifySoftContactOverlap(contactBone,&#32;_softContactColliderBuffer[i]);</emphasis>
01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
01154 <emphasis role="preprocessor">#else</emphasis>
01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Collider&#32;contactBoneCollider&#32;=&#32;contactBone.collider;
01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(contactBoneCollider&#32;is&#32;SphereCollider)&#32;{
01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;boneSphere&#32;=&#32;contactBoneCollider&#32;as&#32;SphereCollider;
01158 
01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numCollisions&#32;=&#32;Physics.OverlapSphereNonAlloc(contactBone.transform.TransformPoint(boneSphere.center),
01160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.transform.lossyScale.x&#32;*&#32;boneSphere.radius,
01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactColliderBuffer,
01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ac8f4cc8c3f11fb6f67640072100b7e8a">GetInteractionLayerMask</link>(),
01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryTriggerInteraction.Ignore);
01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numCollisions;&#32;i++)&#32;{
01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//NotifySoftContactOverlap(contactBone,&#32;_softContactColliderBuffer[i]);</emphasis>
01166 
01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;rigidbody&#32;is&#32;null,&#32;the&#32;object&#32;may&#32;have&#32;been&#32;destroyed.</emphasis>
01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_softContactColliderBuffer[i].attachedRigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">continue</emphasis>;
01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;intObj;
01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(_softContactColliderBuffer[i].attachedRigidbody,&#32;out&#32;intObj))&#32;{
01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;soft&#32;contact&#32;if&#32;the&#32;object&#32;is&#32;ignoring&#32;contact.</emphasis>
01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(intObj.ignoreContact)&#32;<emphasis role="keywordflow">continue</emphasis>;
01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(intObj.isGrasped)&#32;<emphasis role="keywordflow">continue</emphasis>;
01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01175 
01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsUtility.generateSphereContact(boneSphere,&#32;0,&#32;_softContactColliderBuffer[i],
01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a70605cd65741d1ec3409745fdf09c3ee">_softContacts</link>,
01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a049c0b24c30386942bb3abe7d3118b6e">_softContactOriginalVelocities</link>);
01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(contactBoneCollider&#32;is&#32;CapsuleCollider)&#32;{
01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;boneCapsule&#32;=&#32;contactBoneCollider&#32;as&#32;CapsuleCollider;
01183 
01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;point0,&#32;point1;
01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boneCapsule.GetCapsulePoints(out&#32;point0,&#32;out&#32;point1);
01186 
01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numCollisions&#32;=&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0a50ae99e9c35446c2580e4b540b0fd104">Physics</link>.OverlapCapsuleNonAlloc(point0,&#32;point1,
01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.transform.lossyScale.x&#32;*&#32;boneCapsule.radius,
01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactColliderBuffer,
01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ac8f4cc8c3f11fb6f67640072100b7e8a">GetInteractionLayerMask</link>(),
01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryTriggerInteraction.Ignore);
01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numCollisions;&#32;i++)&#32;{
01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//NotifySoftContactOverlap(contactBone,&#32;_softContactColliderBuffer[i]);</emphasis>
01194 
01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;rigidbody&#32;is&#32;null,&#32;the&#32;object&#32;may&#32;have&#32;been&#32;destroyed.</emphasis>
01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_softContactColliderBuffer[i].attachedRigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">continue</emphasis>;
01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;intObj;
01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(_softContactColliderBuffer[i].attachedRigidbody,&#32;out&#32;intObj))&#32;{
01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;soft&#32;contact&#32;if&#32;the&#32;object&#32;is&#32;ignoring&#32;contact.</emphasis>
01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(intObj.ignoreContact)&#32;<emphasis role="keywordflow">continue</emphasis>;
01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(intObj.isGrasped)&#32;<emphasis role="keywordflow">continue</emphasis>;
01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01203 
01204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsUtility.generateCapsuleContact(boneCapsule,&#32;0,
01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactColliderBuffer[i],
01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a70605cd65741d1ec3409745fdf09c3ee">_softContacts</link>,
01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a049c0b24c30386942bb3abe7d3118b6e">_softContactOriginalVelocities</link>);
01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;boneBox&#32;=&#32;contactBoneCollider&#32;as&#32;BoxCollider;
01212 
01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boneBox&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Unsupported&#32;collider&#32;type&#32;in&#32;ContactBone.&#32;Supported&#32;&quot;</emphasis>
01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;types&#32;are&#32;SphereCollider,&#32;CapsuleCollider,&#32;and&#32;&quot;</emphasis>
01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;BoxCollider.&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>);
01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01219 
01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numCollisions&#32;=&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0a50ae99e9c35446c2580e4b540b0fd104">Physics</link>.OverlapBoxNonAlloc(boneBox.transform.TransformPoint(boneBox.center),
01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.Scale(boneBox.size&#32;*&#32;0.5F,&#32;contactBone.transform.lossyScale),
01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactColliderBuffer,
01223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boneBox.transform.rotation,
01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ac8f4cc8c3f11fb6f67640072100b7e8a">GetInteractionLayerMask</link>(),
01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;QueryTriggerInteraction.Ignore);
01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numCollisions;&#32;i++)&#32;{
01227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//NotifySoftContactOverlap(contactBone,&#32;_softContactColliderBuffer[i]);</emphasis>
01228 
01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;rigidbody&#32;is&#32;null,&#32;the&#32;object&#32;may&#32;have&#32;been&#32;destroyed.</emphasis>
01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_softContactColliderBuffer[i].attachedRigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">continue</emphasis>;
01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;intObj;
01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(_softContactColliderBuffer[i].attachedRigidbody,&#32;out&#32;intObj))&#32;{
01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Skip&#32;soft&#32;contact&#32;if&#32;the&#32;object&#32;is&#32;ignoring&#32;contact.</emphasis>
01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(intObj.ignoreContact)&#32;<emphasis role="keywordflow">continue</emphasis>;
01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(intObj.isGrasped)&#32;<emphasis role="keywordflow">continue</emphasis>;
01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01237 
01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PhysicsUtility.generateBoxContact(boneBox,&#32;0,&#32;_softContactColliderBuffer[i],
01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a70605cd65741d1ec3409745fdf09c3ee">_softContacts</link>,
01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a049c0b24c30386942bb3abe7d3118b6e">_softContactOriginalVelocities</link>);
01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01243 <emphasis role="preprocessor">#endif</emphasis>
01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01245 
01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Implement&#32;me&#32;to&#32;replace&#32;trigger&#32;colliders</emphasis>
01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//FinishSoftContactOverlapChecks();</emphasis>
01248 
01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;contactBones.Length;&#32;i++)&#32;{</emphasis>
01250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;Vector3&#32;bonePosition&#32;=&#32;_boneTargetPositions[i];</emphasis>
01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;Quaternion&#32;boneRotation&#32;=&#32;_boneTargetRotations[i];</emphasis>
01252 
01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;Generate&#32;soft&#32;contact&#32;data&#32;based&#32;on&#32;spheres&#32;at&#32;each&#32;bonePosition</emphasis>
01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;of&#32;radius&#32;softContactBoneRadius.</emphasis>
01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;bool&#32;sphereIntersecting;</emphasis>
01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;using&#32;(new&#32;ProfilerSample(&quot;Generate&#32;Soft&#32;Contacts&quot;))&#32;{</emphasis>
01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;sphereIntersecting&#32;=&#32;PhysicsUtility.generateSphereContacts(bonePosition,</emphasis>
01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactBoneRadius,</emphasis>
01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(bonePosition&#32;-&#32;_bonePositionsLastFrame[i])&#32;/&#32;Time.fixedDeltaTime,</emphasis>
01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1&#32;&lt;&lt;&#32;manager.interactionLayer,</emphasis>
01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;manager._softContacts,</emphasis>
01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;manager._softContactOriginalVelocities,</emphasis>
01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;_tempColliderArray);</emphasis>
01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
01265 
01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;_bonePositionsLastFrame[i]&#32;=&#32;bonePosition;</emphasis>
01267 
01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;softlyContacting&#32;=&#32;sphereIntersecting&#32;?&#32;true&#32;:&#32;softlyContacting;</emphasis>
01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
01270 
01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_softContactCollisions.Count&#32;&gt;&#32;0)&#32;{
01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_disableSoftContactEnqueued&#32;=&#32;<emphasis role="keyword">false</emphasis>;
01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_delayedDisableSoftContactCoroutine&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.StopCoroutine(_delayedDisableSoftContactCoroutine);
01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;there&#32;are&#32;no&#32;detected&#32;Contacts,&#32;exit&#32;soft&#32;contact&#32;mode.</emphasis>
01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4eb0f0252af42b94cc6ec92d02e365af">DisableSoftContact</link>();
01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01281 &#32;&#32;&#32;&#32;&#32;&#32;}
01282 &#32;&#32;&#32;&#32;}
01283 
<anchor xml:id="__interaction_controller_8cs_source_1l01292"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae5952ec4f81442c19ecb558bbcfebaa2">01292</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae5952ec4f81442c19ecb558bbcfebaa2">onPreEnableSoftContact</link>()&#32;{&#32;}
01293 
<anchor xml:id="__interaction_controller_8cs_source_1l01302"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad9c7c365e25236d6c2441d60d9ce6130">01302</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad9c7c365e25236d6c2441d60d9ce6130">onPostDisableSoftContact</link>()&#32;{&#32;}
01303 
<anchor xml:id="__interaction_controller_8cs_source_1l01304"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">01304</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>()&#32;{
01305 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
01306 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_profiler_sample">ProfilerSample</link>(<emphasis role="stringliteral">&quot;Enable&#32;Soft&#32;Contact&quot;</emphasis>))&#32;{
01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_disableSoftContactEnqueued&#32;=&#32;<emphasis role="keyword">false</emphasis>;
01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_softContactEnabled)&#32;{
01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae5952ec4f81442c19ecb558bbcfebaa2">onPreEnableSoftContact</link>();
01310 
01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactEnabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
01312 
01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_delayedDisableSoftContactCoroutine&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.StopCoroutine(_delayedDisableSoftContactCoroutine);
01315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01316 
01317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>.Length;&#32;i++)&#32;{
01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>[i].collider&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">continue</emphasis>;
01320 
01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disableContactBoneCollision();
01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01325 &#32;&#32;&#32;&#32;&#32;&#32;}
01326 &#32;&#32;&#32;&#32;}
01327 
<anchor xml:id="__interaction_controller_8cs_source_1l01328"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4eb0f0252af42b94cc6ec92d02e365af">01328</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4eb0f0252af42b94cc6ec92d02e365af">DisableSoftContact</link>()&#32;{
01329 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_profiler_sample">ProfilerSample</link>(<emphasis role="stringliteral">&quot;Enqueue&#32;Disable&#32;Soft&#32;Contact&quot;</emphasis>))&#32;{
01330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_disableSoftContactEnqueued)&#32;{
01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_delayedDisableSoftContactCoroutine&#32;=&#32;DelayedDisableSoftContact();
01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.StartCoroutine(_delayedDisableSoftContactCoroutine);
01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_disableSoftContactEnqueued&#32;=&#32;<emphasis role="keyword">true</emphasis>;
01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01335 &#32;&#32;&#32;&#32;&#32;&#32;}
01336 &#32;&#32;&#32;&#32;}
01337 
01338 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;DelayedDisableSoftContact()&#32;{
01339 &#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSecondsRealtime(0.3f);
01340 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_disableSoftContactEnqueued)&#32;{
01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_profiler_sample">ProfilerSample</link>(<emphasis role="stringliteral">&quot;Disable&#32;Soft&#32;Contact&quot;</emphasis>))&#32;{
01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactEnabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>.Length;&#32;i++)&#32;{
01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enableContactBoneCollision();
01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01346 
01347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad9c7c365e25236d6c2441d60d9ce6130">onPostDisableSoftContact</link>();
01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01349 &#32;&#32;&#32;&#32;&#32;&#32;}
01350 &#32;&#32;&#32;&#32;}
01351 
01352 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Soft&#32;Contact&#32;Collision&#32;Tracking</emphasis>
01353 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
01354 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;TODO:&#32;Make&#32;this&#32;a&#32;thing&#32;so&#32;we&#32;aren&apos;t&#32;using&#32;triggers</emphasis>
01355 <emphasis role="comment">&#32;&#32;&#32;&#32;private&#32;void&#32;NotifySoftContactOverlap(ContactBone&#32;contactBone,&#32;Collider&#32;otherCollider)&#32;{</emphasis>
01356 <emphasis role="comment"></emphasis>
01357 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
01358 <emphasis role="comment"></emphasis>
01359 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;TODO:&#32;Make&#32;this&#32;a&#32;thing&#32;so&#32;we&#32;aren&apos;t&#32;using&#32;triggers</emphasis>
01360 <emphasis role="comment">&#32;&#32;&#32;&#32;private&#32;void&#32;FinishSoftContactOverlapChecks()&#32;{</emphasis>
01361 <emphasis role="comment"></emphasis>
01362 <emphasis role="comment">&#32;&#32;&#32;&#32;}*/</emphasis>
01363 
01364 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Maintaining&#32;a&#32;reference&#32;to&#32;the&#32;interaction&#32;object&#32;doesn&apos;t&#32;appear&#32;to&#32;be</emphasis>
01365 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;necessary&#32;here,&#32;so&#32;get&#32;rid&#32;of&#32;the&#32;Pair&#32;class&#32;as&#32;a&#32;small&#32;optimization</emphasis>
01366 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Dictionary&lt;BoneIntObjPair,&#32;HashSet&lt;Collider&gt;&gt;&#32;_softContactCollisions&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;BoneIntObjPair,&#32;HashSet&lt;Collider&gt;&gt;();
01367 
01368 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>BoneIntObjPair&#32;:&#32;IEquatable&lt;BoneIntObjPair&gt;&#32;{
01369 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ContactBone&#32;bone;
01370 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;IInteractionBehaviour&#32;intObj;
01371 
01372 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Equals(<emphasis role="keywordtype">object</emphasis>&#32;obj)&#32;{
01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj&#32;is&#32;BoneIntObjPair&#32;&amp;&amp;&#32;<emphasis role="keyword">this</emphasis>&#32;==&#32;(BoneIntObjPair)obj;
01374 &#32;&#32;&#32;&#32;&#32;&#32;}
01375 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Equals(BoneIntObjPair&#32;other)&#32;{
01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">this</emphasis>&#32;==&#32;other;
01377 &#32;&#32;&#32;&#32;&#32;&#32;}
01378 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;!=(BoneIntObjPair&#32;one,&#32;BoneIntObjPair&#32;other)&#32;{
01379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(one&#32;==&#32;other);
01380 &#32;&#32;&#32;&#32;&#32;&#32;}
01381 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;==(BoneIntObjPair&#32;one,&#32;BoneIntObjPair&#32;other)&#32;{
01382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;one.bone&#32;==&#32;other.bone&#32;&amp;&amp;&#32;one.intObj&#32;==&#32;other.intObj;
01383 &#32;&#32;&#32;&#32;&#32;&#32;}
01384 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;GetHashCode()&#32;{
01385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bone.GetHashCode()&#32;^&#32;intObj.GetHashCode();
01386 &#32;&#32;&#32;&#32;&#32;&#32;}
01387 &#32;&#32;&#32;&#32;}
01388 
<anchor xml:id="__interaction_controller_8cs_source_1l01389"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a85e7d1ae481b963c1b002b3ad447679a">01389</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a85e7d1ae481b963c1b002b3ad447679a">NotifySoftContactCollisionEnter</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link>&#32;bone,
01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj,
01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Collider&#32;collider)&#32;{
01392 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;pair&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;BoneIntObjPair()&#32;{&#32;bone&#32;=&#32;bone,&#32;intObj&#32;=&#32;intObj&#32;};
01393 
01394 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_softContactCollisions.ContainsKey(pair))&#32;{
01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactCollisions[pair]&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;Collider&gt;();
01396 &#32;&#32;&#32;&#32;&#32;&#32;}
01397 &#32;&#32;&#32;&#32;&#32;&#32;_softContactCollisions[pair].Add(collider);
01398 &#32;&#32;&#32;&#32;}
01399 
<anchor xml:id="__interaction_controller_8cs_source_1l01400"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3cbc9651adc83ff8012cad6fa299beaf">01400</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3cbc9651adc83ff8012cad6fa299beaf">NotifySoftContactCollisionExit</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link>&#32;bone,
01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj,
01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Collider&#32;collider)&#32;{
01403 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;pair&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;BoneIntObjPair()&#32;{&#32;bone&#32;=&#32;bone,&#32;intObj&#32;=&#32;intObj&#32;};
01404 
01405 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_softContactCollisions.ContainsKey(pair))&#32;{
01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;No&#32;collision&#32;set&#32;found&#32;for&#32;this&#32;pair&#32;of&#32;collisions;&#32;Exit&#32;method&#32;&quot;</emphasis>
01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;was&#32;called&#32;without&#32;a&#32;prior,&#32;corresponding&#32;Enter&#32;method!&quot;</emphasis>,&#32;<emphasis role="keyword">this</emphasis>);
01408 &#32;&#32;&#32;&#32;&#32;&#32;}
01409 &#32;&#32;&#32;&#32;&#32;&#32;_softContactCollisions[pair].Remove(collider);
01410 
01411 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_softContactCollisions[pair].Count&#32;==&#32;0)&#32;{
01412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_softContactCollisions.Remove(pair);
01413 &#32;&#32;&#32;&#32;&#32;&#32;}
01414 &#32;&#32;&#32;&#32;}
01415 
01416 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
01417 
01418 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
01419 
01420 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Contact&#32;Callbacks</emphasis>
01421 
01422 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_contactBehavioursSet&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
01423 
01424 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Dictionary&lt;IInteractionBehaviour,&#32;int&gt;&#32;_contactBehaviours&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;IInteractionBehaviour,&#32;int&gt;();
01425 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_contactBehavioursLastFrame&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
01426 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;IInteractionBehaviour&gt;&#32;_contactBehaviourRemovalCache&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IInteractionBehaviour&gt;();
01427 
01428 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_contactEndedBuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
01429 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_contactBeganBuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
01430 
<anchor xml:id="__interaction_controller_8cs_source_1l01431"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a879fe5f12fdb87f95b08b50dc492fb5f">01431</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a879fe5f12fdb87f95b08b50dc492fb5f">NotifyContactBoneCollisionEnter</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link>&#32;contactBone,&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;interactionObj)&#32;{
01432 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count;
01433 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_contactBehaviours.TryGetValue(interactionObj,&#32;out&#32;count))&#32;{
01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours[interactionObj]&#32;=&#32;count&#32;+&#32;1;
01435 &#32;&#32;&#32;&#32;&#32;&#32;}
01436 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours[interactionObj]&#32;=&#32;1;
01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursSet.Add(interactionObj);
01439 &#32;&#32;&#32;&#32;&#32;&#32;}
01440 &#32;&#32;&#32;&#32;}
01441 
<anchor xml:id="__interaction_controller_8cs_source_1l01442"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a84a7f5e9c214510936475e37c65f0a3c">01442</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a84a7f5e9c214510936475e37c65f0a3c">NotifyContactBoneCollisionStay</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link>&#32;contactBone,&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;interactionObj)&#32;{
01443 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;Contact&#32;state&#32;is&#32;cleared&#32;manually&#32;or&#32;due&#32;to&#32;the&#32;controller&#32;being&#32;disabled,</emphasis>
01444 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;it&#32;will&#32;be&#32;restored&#32;here.</emphasis>
01445 
01446 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count;
01447 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_contactBehaviours.TryGetValue(interactionObj,&#32;out&#32;count))&#32;{
01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours[interactionObj]&#32;=&#32;1;
01449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursSet.Add(interactionObj);
01450 &#32;&#32;&#32;&#32;&#32;&#32;}
01451 &#32;&#32;&#32;&#32;}
01452 
<anchor xml:id="__interaction_controller_8cs_source_1l01453"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9bae79d10f8020e2f1179042f93e1f3c">01453</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9bae79d10f8020e2f1179042f93e1f3c">NotifyContactBoneCollisionExit</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link>&#32;contactBone,&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;interactionObj)&#32;{
01454 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(interactionObj.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1ae619369a8370040fb52505934254f1d1">ignoreContact</link>)&#32;{
01455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_contactBehaviours.ContainsKey(interactionObj))&#32;_contactBehaviours.Remove(interactionObj);
01456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
01457 &#32;&#32;&#32;&#32;&#32;&#32;}
01458 
01459 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sometimes&#32;when&#32;the&#32;controller&#32;is&#32;disabled&#32;and&#32;re-enabled,&#32;we&#32;might&#32;be&#32;missing&#32;the</emphasis>
01460 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;key&#32;in&#32;the&#32;dictionary&#32;already.</emphasis>
01461 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_contactBehaviours.ContainsKey(interactionObj))&#32;<emphasis role="keywordflow">return</emphasis>;
01462 
01463 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;_contactBehaviours[interactionObj];
01464 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;==&#32;1)&#32;{
01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours.Remove(interactionObj);
01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursSet.Remove(interactionObj);
01467 &#32;&#32;&#32;&#32;&#32;&#32;}
01468 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours[interactionObj]&#32;=&#32;count&#32;-&#32;1;
01470 &#32;&#32;&#32;&#32;&#32;&#32;}
01471 &#32;&#32;&#32;&#32;}
01472 
<anchor xml:id="__interaction_controller_8cs_source_1l01480"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9496bf1f9d82ea3a027b2bdf630df4e5">01480</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9496bf1f9d82ea3a027b2bdf630df4e5">ClearContactTracking</link>()&#32;{
01481 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Clear();
01482 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Add(<emphasis role="keyword">this</emphasis>);
01483 
01484 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;tempObjs&#32;=&#32;Pool&lt;HashSet&lt;IInteractionBehaviour&gt;&gt;.Spawn();
01485 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
01486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;intObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa6604231c26a97eeade073ea2dc60d21">contactingObjects</link>)&#32;{
01487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempObjs.Add(intObj);
01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01489 
01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;intObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;tempObjs)&#32;{
01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursSet.Remove(intObj);
01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours.Remove(intObj);
01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursLastFrame.Remove(intObj);
01494 
01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intObj.EndContact(_controllerListBuffer);
01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01497 &#32;&#32;&#32;&#32;&#32;&#32;}
01498 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">finally</emphasis>&#32;{
01499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;HashSet&lt;IInteractionBehaviour&gt;&gt;.Recycle(tempObjs);
01500 &#32;&#32;&#32;&#32;&#32;&#32;}
01501 &#32;&#32;&#32;&#32;}
01502 
<anchor xml:id="__interaction_controller_8cs_source_1l01510"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5dd3dbbc1e54365599aa7f8890be5ca0">01510</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5dd3dbbc1e54365599aa7f8890be5ca0">ClearContactTrackingForObject</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj)&#32;{
01511 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aa6604231c26a97eeade073ea2dc60d21">contactingObjects</link>.Contains(intObj))&#32;<emphasis role="keywordflow">return</emphasis>;
01512 
01513 &#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursSet.Remove(intObj);
01514 &#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours.Remove(intObj);
01515 &#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursLastFrame.Remove(intObj);
01516 
01517 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Clear();
01518 &#32;&#32;&#32;&#32;&#32;&#32;_controllerListBuffer.Add(<emphasis role="keyword">this</emphasis>);
01519 
01520 &#32;&#32;&#32;&#32;&#32;&#32;intObj.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a5a85de0cc00d9c393b84c7fec456e506">EndContact</link>(_controllerListBuffer);
01521 &#32;&#32;&#32;&#32;}
01522 
01527 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;fixedUpdateContactState()&#32;{
01528 &#32;&#32;&#32;&#32;&#32;&#32;_contactEndedBuffer.Clear();
01529 &#32;&#32;&#32;&#32;&#32;&#32;_contactBeganBuffer.Clear();
01530 
01531 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;contact&#32;ended&#32;state.</emphasis>
01532 &#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviourRemovalCache.Clear();
01533 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;interactionObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;_contactBehavioursLastFrame)&#32;{
01534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_contactBehaviours.ContainsKey(interactionObj)
01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.activeInHierarchy
01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;||&#32;!contactEnabled&#32;TODO:&#32;Use&#32;properties&#32;to&#32;support&#32;disabling&#32;contact&#32;at&#32;runtime!&#32;*/</emphasis>)&#32;{
01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactEndedBuffer.Add(interactionObj);
01538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviourRemovalCache.Add(interactionObj);
01539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01540 &#32;&#32;&#32;&#32;&#32;&#32;}
01541 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;interactionObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;_contactBehaviourRemovalCache)&#32;{
01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursLastFrame.Remove(interactionObj);
01543 &#32;&#32;&#32;&#32;&#32;&#32;}
01544 
01545 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;contact&#32;began&#32;state.</emphasis>
01546 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>.activeInHierarchy&#32;<emphasis role="comment">/*&#32;&amp;&amp;&#32;contactEnabled&#32;TODO:&#32;can&#32;this&#32;just&#32;be&#32;removed&#32;cleanly?*/</emphasis>)&#32;{
01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;intObjCountPair&#32;<emphasis role="keywordflow">in</emphasis>&#32;_contactBehaviours)&#32;{
01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;interactionObj&#32;=&#32;intObjCountPair.Key;
01549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_contactBehavioursLastFrame.Contains(interactionObj))&#32;{
01550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBeganBuffer.Add(interactionObj);
01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehavioursLastFrame.Add(interactionObj);
01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01554 &#32;&#32;&#32;&#32;&#32;&#32;}
01555 &#32;&#32;&#32;&#32;}
01556 
01557 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;IInteractionBehaviour&gt;&#32;_removeContactObjsBuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IInteractionBehaviour&gt;();
01563 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckContactEnd(out&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;contactEndedObjects)&#32;{
01564 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Ensure&#32;contact&#32;objects&#32;haven&apos;t&#32;been&#32;destroyed&#32;or&#32;set&#32;to&#32;ignore&#32;contact</emphasis>
01565 &#32;&#32;&#32;&#32;&#32;&#32;_removeContactObjsBuffer.Clear();
01566 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;objTouchCountPair&#32;<emphasis role="keywordflow">in</emphasis>&#32;_contactBehaviours)&#32;{
01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(objTouchCountPair.Key.gameObject&#32;==&#32;<emphasis role="keyword">null</emphasis>
01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;objTouchCountPair.Key.rigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>
01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;objTouchCountPair.Key.ignoreContact
01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>)&#32;{
01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_removeContactObjsBuffer.Add(objTouchCountPair.Key);
01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01573 &#32;&#32;&#32;&#32;&#32;&#32;}
01574 
01575 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clean&#32;out&#32;removed,&#32;invalid,&#32;or&#32;ignoring-contact&#32;objects</emphasis>
01576 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;intObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;_removeContactObjsBuffer)&#32;{
01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactBehaviours.Remove(intObj);
01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactEndedBuffer.Add(intObj);
01579 &#32;&#32;&#32;&#32;&#32;&#32;}
01580 
01581 &#32;&#32;&#32;&#32;&#32;&#32;contactEndedObjects&#32;=&#32;_contactEndedBuffer;
01582 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_contactEndedBuffer.Count&#32;&gt;&#32;0;
01583 &#32;&#32;&#32;&#32;}
01584 
01590 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckContactBegin(out&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;contactBeganObjects)&#32;{
01591 &#32;&#32;&#32;&#32;&#32;&#32;contactBeganObjects&#32;=&#32;_contactBeganBuffer;
01592 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_contactBeganBuffer.Count&#32;&gt;&#32;0;
01593 &#32;&#32;&#32;&#32;}
01594 
01595 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;_contactedObjects&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;IInteractionBehaviour&gt;();
01601 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckContactStay(out&#32;HashSet&lt;IInteractionBehaviour&gt;&#32;contactedObjects)&#32;{
01602 &#32;&#32;&#32;&#32;&#32;&#32;_contactedObjects.Clear();
01603 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;objCountPair&#32;<emphasis role="keywordflow">in</emphasis>&#32;_contactBehaviours)&#32;{
01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_contactedObjects.Add(objCountPair.Key);
01605 &#32;&#32;&#32;&#32;&#32;&#32;}
01606 
01607 &#32;&#32;&#32;&#32;&#32;&#32;contactedObjects&#32;=&#32;_contactedObjects;
01608 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;contactedObjects.Count&#32;&gt;&#32;0;
01609 &#32;&#32;&#32;&#32;}
01610 
01611 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
01612 
01613 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;disableContactBoneCollision()&#32;{
01614 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;contactBone&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>)&#32;{
01615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.collider.isTrigger&#32;=&#32;<emphasis role="keyword">true</emphasis>;
01616 &#32;&#32;&#32;&#32;&#32;&#32;}
01617 &#32;&#32;&#32;&#32;}
01618 
01619 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;enableContactBoneCollision()&#32;{
01620 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;contactBone&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>)&#32;{
01621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.collider.isTrigger&#32;=&#32;<emphasis role="keyword">false</emphasis>;
01622 &#32;&#32;&#32;&#32;&#32;&#32;}
01623 &#32;&#32;&#32;&#32;}
01624 
01625 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;resetContactBonePose()&#32;{
01626 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_valve_1_1_v_r_1ac40c4bdf0a3dcd6e69cad2d85f287c67a6a992d5529f459a44fee58c733255e86">index</link>&#32;=&#32;0;
01627 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;contactBone&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3a38ed3721ae2338689cf256c789b691">contactBones</link>)&#32;{
01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae76036f3e88ac60d8fcaaf5496963773">position</link>;
01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a783f8f2327ab0ef060ac319153883dba">rotation</link>;
01630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae5ccd0183ff87fd51107a5b082116ce0">getColliderBoneTargetPositionRotation</link>(index++,&#32;out&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae76036f3e88ac60d8fcaaf5496963773">position</link>,&#32;out&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a783f8f2327ab0ef060ac319153883dba">rotation</link>);
01631 
01632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.rigidbody.position&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae76036f3e88ac60d8fcaaf5496963773">position</link>;
01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.rigidbody.rotation&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a783f8f2327ab0ef060ac319153883dba">rotation</link>;
01634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.rigidbody.velocity&#32;=&#32;Vector3.zero;
01635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactBone.rigidbody.angularVelocity&#32;=&#32;Vector3.zero;
01636 &#32;&#32;&#32;&#32;&#32;&#32;}
01637 &#32;&#32;&#32;&#32;}
01638 
01639 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
01640 
01641 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Grasping</emphasis>
01642 
<anchor xml:id="__interaction_controller_8cs_source_1l01644"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afd400c908dffa22a7fb025f067df34e5">01644</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afd400c908dffa22a7fb025f067df34e5">isGraspingObject</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_graspedObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
01645 
<anchor xml:id="__interaction_controller_8cs_source_1l01647"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aecfb55af7f506df76774eac811ad25fc">01647</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aecfb55af7f506df76774eac811ad25fc">graspedObject</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_graspedObject;&#32;}&#32;}
01648 
<anchor xml:id="__interaction_controller_8cs_source_1l01650"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7b07298222ede0d272988129488ef445">01650</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_hash_set">ReadonlyHashSet&lt;IInteractionBehaviour&gt;</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7b07298222ede0d272988129488ef445">graspCandidates</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;graspActivityManager.ActiveObjects;&#32;}&#32;}
01651 
<anchor xml:id="__interaction_controller_8cs_source_1l01660"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a6f7f56adcad9f72d65f02e7490403df2">01660</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;List&lt;Vector3&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a6f7f56adcad9f72d65f02e7490403df2">graspManipulatorPoints</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
01661 
01667 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aca84a24dd5f2f73a7c8bee6a15cea0a4">GetGraspPoint</link>();
01668 
<anchor xml:id="__interaction_controller_8cs_source_1l01674"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a45ba36ef191ab50b94feba99fcc8c05d">01674</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a45ba36ef191ab50b94feba99fcc8c05d">TryGrasp</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj)&#32;{
01675 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a99f071b469073deb8265da627e90ad0c">checkShouldGraspAtemporal</link>(intObj))&#32;{
01676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graspedObject&#32;=&#32;intObj;
01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ac6f8d116e41ed7b2dadd1dcad335a3a2">OnGraspBegin</link>();
01678 
01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
01680 &#32;&#32;&#32;&#32;&#32;&#32;}
01681 
01682 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01683 &#32;&#32;&#32;&#32;}
01684 
<anchor xml:id="__interaction_controller_8cs_source_1l01693"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a329e2f56f76c46d70a93b4508e867196">01693</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a329e2f56f76c46d70a93b4508e867196">SwapGrasp</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;replacement)&#32;{
01694 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspedObject&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;InvalidOperationException(<emphasis role="stringliteral">&quot;Cannot&#32;swap&#32;grasp&#32;if&#32;we&#32;are&#32;not&#32;currently&#32;grasping.&quot;</emphasis>);
01696 &#32;&#32;&#32;&#32;&#32;&#32;}
01697 
01698 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(replacement&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException(<emphasis role="stringliteral">&quot;The&#32;replacement&#32;object&#32;is&#32;null!&quot;</emphasis>);
01700 &#32;&#32;&#32;&#32;&#32;&#32;}
01701 
01702 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(replacement.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a2f4a6d4d2cddd4d05332b29e6647b6a1">isGrasped</link>&#32;&amp;&amp;&#32;!replacement.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a2d40283366cf463bb4431204810579b5">allowMultiGrasp</link>)&#32;{
01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;InvalidOperationException(<emphasis role="stringliteral">&quot;Cannot&#32;swap&#32;grasp&#32;if&#32;the&#32;replacement&#32;object&#32;is&#32;already&#32;grasped&#32;and&#32;does&#32;not&#32;support&#32;multi&#32;grasp.&quot;</emphasis>);
01704 &#32;&#32;&#32;&#32;&#32;&#32;}
01705 
01706 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Notify&#32;the&#32;currently&#32;grasped&#32;object&#32;that&#32;it&#32;is&#32;being&#32;released</emphasis>
01707 &#32;&#32;&#32;&#32;&#32;&#32;_releasingControllersBuffer.Clear();
01708 &#32;&#32;&#32;&#32;&#32;&#32;_releasingControllersBuffer.Add(<emphasis role="keyword">this</emphasis>);
01709 &#32;&#32;&#32;&#32;&#32;&#32;_graspedObject.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a337f8e0a31f507a3fcd2bdcf1abb9df1">EndGrasp</link>(_releasingControllersBuffer);
01710 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ff810c665a33a222e7d736ac224d839">OnGraspEnd</link>();
01711 
01712 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Switch&#32;to&#32;the&#32;replacement&#32;object</emphasis>
01713 &#32;&#32;&#32;&#32;&#32;&#32;_graspedObject&#32;=&#32;replacement;
01714 
01715 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;tempControllers&#32;=&#32;Pool&lt;List&lt;InteractionController&gt;&gt;.Spawn();
01716 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Let&#32;the&#32;replacement&#32;object&#32;know&#32;that&#32;it&#32;is&#32;being&#32;grasped</emphasis>
01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempControllers.Add(<emphasis role="keyword">this</emphasis>);
01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;replacement.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1af603fe6d03b61ae9e5d05c7809b05160">BeginGrasp</link>(tempControllers);
01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ac6f8d116e41ed7b2dadd1dcad335a3a2">OnGraspBegin</link>();
01721 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;
01722 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">finally</emphasis>&#32;{
01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempControllers.Clear();
01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;List&lt;InteractionController&gt;&gt;.Recycle(tempControllers);
01725 &#32;&#32;&#32;&#32;&#32;&#32;}
01726 &#32;&#32;&#32;&#32;}
01727 
01740 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a99f071b469073deb8265da627e90ad0c">checkShouldGraspAtemporal</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj);
01741 
01742 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Func&lt;Collider,&#32;IInteractionBehaviour&gt;&#32;graspActivityFilter;
01743 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;graspFilterFunc(Collider&#32;collider)&#32;{
01744 &#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;body&#32;=&#32;collider.attachedRigidbody;
01745 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;intObj&#32;=&#32;<emphasis role="keyword">null</emphasis>;
01746 
01747 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;validForGrasping&#32;=&#32;body&#32;!=&#32;<emphasis role="keyword">null</emphasis>
01748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(body,&#32;out&#32;intObj)
01749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;!intObj.ignoreGrasping;
01750 
01751 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(validForGrasping)&#32;<emphasis role="keywordflow">return</emphasis>&#32;intObj;
01752 
01753 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
01754 &#32;&#32;&#32;&#32;}
01755 
01756 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Layer&#32;mask&#32;for&#32;the&#32;hover&#32;acitivity&#32;manager.</emphasis>
01757 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Func&lt;int&gt;&#32;graspLayerMaskAccessor;
01758 
01759 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Grasp&#32;Activity&#32;Manager</emphasis>
01760 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;ActivityManager&lt;IInteractionBehaviour&gt;&#32;_graspActivityManager;
01762 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;ActivityManager&lt;IInteractionBehaviour&gt;&#32;graspActivityManager&#32;{
01763 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspActivityManager&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(graspActivityFilter&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;graspActivityFilter&#32;=&#32;graspFilterFunc;
01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(graspLayerMaskAccessor&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;graspLayerMaskAccessor&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ac8f4cc8c3f11fb6f67640072100b7e8a">GetInteractionLayerMask</link>;
01767 
01768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graspActivityManager&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;ActivityManager&lt;IInteractionBehaviour&gt;(1F,&#32;graspActivityFilter);
01769 
01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graspActivityManager.activationLayerFunction&#32;=&#32;graspLayerMaskAccessor;
01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_graspActivityManager;
01773 &#32;&#32;&#32;&#32;&#32;&#32;}
01774 &#32;&#32;&#32;&#32;}
01775 
01776 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IInteractionBehaviour&#32;_graspedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
01777 
01778 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;fixedUpdateGrasping()&#32;{
01779 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;ProfilerSample(<emphasis role="stringliteral">&quot;Fixed&#32;Update&#32;Controller&#32;Grasping&quot;</emphasis>))&#32;{
01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3?&#32;graspPoint&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>&#32;?&#32;(Vector3?)<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7c2b239ce82be01d82b7d8305dbfe0e5">hoverPoint</link>&#32;:&#32;<emphasis role="keyword">null</emphasis>;
01781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;graspActivityManager.UpdateActivityQuery(graspPoint,&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space">LeapSpace</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_1abb31d6bf34c02c7b40fe0e34efad87cb">allEnabled</link>);
01782 
01783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5d182056bac8aea2d0ec005e35f768ca">fixedUpdateGraspingState</link>();
01784 &#32;&#32;&#32;&#32;&#32;&#32;}
01785 &#32;&#32;&#32;&#32;}
01786 
01795 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5d182056bac8aea2d0ec005e35f768ca">fixedUpdateGraspingState</link>();
01796 
<anchor xml:id="__interaction_controller_8cs_source_1l01802"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9850539b1321c83e5a71c5e47eef6df1">01802</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9850539b1321c83e5a71c5e47eef6df1">onGraspedObjectForciblyReleased</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;objectToBeReleased)&#32;{&#32;}
01803 
01808 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a672d3a9313dbe37a693702024a61657d">checkShouldGrasp</link>(out&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;objectToGrasp);
01809 
01814 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ac2f99423db66dad0d889723c6acff62f">checkShouldRelease</link>(out&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;objectToRelease);
01815 
01816 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;InteractionController&gt;&#32;_releasingControllersBuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;InteractionController&gt;();
<anchor xml:id="__interaction_controller_8cs_source_1l01823"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3468a89e21c685d6df962ce70684c92f">01823</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3468a89e21c685d6df962ce70684c92f">ReleaseGrasp</link>()&#32;{
01824 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspedObject&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01826 &#32;&#32;&#32;&#32;&#32;&#32;}
01827 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Release&#32;this&#32;controller&apos;s&#32;grasp.</emphasis>
01829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_releasingControllersBuffer.Clear();
01830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_releasingControllersBuffer.Add(<emphasis role="keyword">this</emphasis>);
01831 
01832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calling&#32;things&#32;in&#32;the&#32;right&#32;order&#32;requires&#32;we&#32;remember&#32;the&#32;object&#32;we&apos;re</emphasis>
01833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;releasing.</emphasis>
01834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;tempGraspedObject&#32;=&#32;_graspedObject;
01835 
01836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;controller&#32;grasped&#32;object,&#32;and&#32;enable&#32;soft&#32;contact.</emphasis>
01837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ff810c665a33a222e7d736ac224d839">OnGraspEnd</link>();
01838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graspedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
01839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>();
01840 
01841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fire&#32;object&apos;s&#32;grasp-end&#32;callback.</emphasis>
01842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempGraspedObject.EndGrasp(_releasingControllersBuffer);
01843 
01844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;grasped&#32;object&#32;was&#32;forcibly&#32;released;&#32;some&#32;controllers&#32;hook&#32;into&#32;this</emphasis>
01845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;by&#32;virtual&#32;method&#32;implementation.</emphasis>
01846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9850539b1321c83e5a71c5e47eef6df1">onGraspedObjectForciblyReleased</link>(tempGraspedObject);
01847 
01848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
01849 &#32;&#32;&#32;&#32;&#32;&#32;}
01850 &#32;&#32;&#32;&#32;}
01851 
<anchor xml:id="__interaction_controller_8cs_source_1l01863"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1abbf648deb30c375dc846e7af2166dd26">01863</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1abbf648deb30c375dc846e7af2166dd26">ReleaseGrasps</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;graspedObj,
01864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_readonly_hash_set">ReadonlyHashSet&lt;InteractionController&gt;</link>&#32;controllers)&#32;{
01865 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;controllersBuffer&#32;=&#32;Pool&lt;List&lt;InteractionController&gt;&gt;.Spawn();
01866 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
01867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;controller&#32;<emphasis role="keywordflow">in</emphasis>&#32;controllers)&#32;{
01868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(controller.graspedObject&#32;!=&#32;graspedObj)&#32;{
01869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Argument&#32;intObj&#32;&quot;</emphasis>&#32;+&#32;graspedObj.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a5256833af662deddb8436e6839f84369">name</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;is&#32;not&#32;held&#32;by&#32;&quot;</emphasis>
01870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;controller&#32;&quot;</emphasis>&#32;+&#32;controller.name&#32;+&#32;<emphasis role="stringliteral">&quot;;&#32;skipping&#32;release&#32;for&#32;this&#32;&quot;</emphasis>
01871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;controller.&quot;</emphasis>);
01872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
01873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01874 
01875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controllersBuffer.Add(controller);
01876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01877 
01878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Enable&#32;soft&#32;contact&#32;on&#32;releasing&#32;controllers,&#32;and&#32;clear&#32;grasp&#32;state.</emphasis>
01879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Note:&#32;controllersBuffer&#32;is&#32;iterated&#32;twice&#32;to&#32;preserve&#32;state&#32;modification&#32;order.</emphasis>
01880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;reference&#32;order,&#32;see&#32;InteractionController.ReleaseGrasp()&#32;above.</emphasis>
01881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;controller&#32;<emphasis role="keywordflow">in</emphasis>&#32;controllersBuffer)&#32;{
01882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fire&#32;grasp&#32;end&#32;callback&#32;for&#32;the&#32;controller.</emphasis>
01883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controller.OnGraspEnd();
01884 
01885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;grasped&#32;object&#32;state.</emphasis>
01886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controller._graspedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
01887 
01888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Avoid&#32;&quot;popping&quot;&#32;of&#32;released&#32;objects&#32;by&#32;enabling&#32;soft&#32;contact&#32;on&#32;releasing</emphasis>
01889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;controllers.</emphasis>
01890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controller.EnableSoftContact();
01891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01892 
01893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Evaluate&#32;object&#32;logic&#32;for&#32;being&#32;released&#32;by&#32;each&#32;controller.</emphasis>
01894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;graspedObj.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour_1a337f8e0a31f507a3fcd2bdcf1abb9df1">EndGrasp</link>(controllersBuffer);
01895 
01896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Object&#32;was&#32;forcibly&#32;released,&#32;so&#32;fire&#32;virtual&#32;callbacks&#32;on&#32;each&#32;controller.</emphasis>
01897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;controller&#32;<emphasis role="keywordflow">in</emphasis>&#32;controllersBuffer)&#32;{
01898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controller.onGraspedObjectForciblyReleased(graspedObj);
01899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01900 &#32;&#32;&#32;&#32;&#32;&#32;}
01901 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">finally</emphasis>&#32;{
01902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;controllersBuffer.Clear();
01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;List&lt;InteractionController&gt;&gt;.Recycle(controllersBuffer);
01904 &#32;&#32;&#32;&#32;&#32;&#32;}
01905 &#32;&#32;&#32;&#32;}
01906 
<anchor xml:id="__interaction_controller_8cs_source_1l01911"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4f865088ea9a5504f0e965764e7514a8">01911</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4f865088ea9a5504f0e965764e7514a8">ReleaseGrasp</link>(out&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;releasedObject)&#32;{
01912 &#32;&#32;&#32;&#32;&#32;&#32;releasedObject&#32;=&#32;_graspedObject;
01913 
01914 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3468a89e21c685d6df962ce70684c92f">ReleaseGrasp</link>())&#32;{
01915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;releasedObject&#32;will&#32;be&#32;non-null</emphasis>
01916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
01917 &#32;&#32;&#32;&#32;&#32;&#32;}
01918 
01919 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;releasedObject&#32;will&#32;be&#32;null</emphasis>
01920 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01921 &#32;&#32;&#32;&#32;}
01922 
<anchor xml:id="__interaction_controller_8cs_source_1l01927"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afcd8f7927d59f8dfd8a022c2d4dea11a">01927</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1afcd8f7927d59f8dfd8a022c2d4dea11a">ReleaseObject</link>(<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;toRelease)&#32;{
01928 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(toRelease&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01929 
01930 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspedObject&#32;==&#32;toRelease)&#32;{
01931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3468a89e21c685d6df962ce70684c92f">ReleaseGrasp</link>();
01932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
01933 &#32;&#32;&#32;&#32;&#32;&#32;}
01934 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01936 &#32;&#32;&#32;&#32;&#32;&#32;}
01937 &#32;&#32;&#32;&#32;}
01938 
01939 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Grasp&#32;State&#32;Checking</emphasis>
01940 
01945 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_internal_interaction_controller">IInternalInteractionController</link>.<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_internal_interaction_controller_1a20a159e9b86998c02186e7198bf29dc4">CheckGraspEnd</link>(out&#32;<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link>&#32;releasedObject)&#32;{
01946 &#32;&#32;&#32;&#32;&#32;&#32;releasedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
01947 
01948 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;shouldReleaseObject&#32;=&#32;<emphasis role="keyword">false</emphasis>;
01949 
01950 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;releasing&#32;against&#32;interaction&#32;state.</emphasis>
01951 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspedObject&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01953 &#32;&#32;&#32;&#32;&#32;&#32;}
01954 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspedObject.ignoreGrasping)&#32;{
01955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9850539b1321c83e5a71c5e47eef6df1">onGraspedObjectForciblyReleased</link>(_graspedObject);
01956 
01957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;releasedObject&#32;=&#32;_graspedObject;
01958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shouldReleaseObject&#32;=&#32;<emphasis role="keyword">true</emphasis>;
01959 &#32;&#32;&#32;&#32;&#32;&#32;}
01960 
01961 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Actually&#32;check&#32;whether&#32;the&#32;controller&#32;implementation&#32;will&#32;release&#32;its&#32;grasp.</emphasis>
01962 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!shouldReleaseObject)&#32;shouldReleaseObject&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ac2f99423db66dad0d889723c6acff62f">checkShouldRelease</link>(out&#32;releasedObject);
01963 
01964 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shouldReleaseObject)&#32;{
01965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ff810c665a33a222e7d736ac224d839">OnGraspEnd</link>();
01966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graspedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
01967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a1ca697cb7222397e5047941731edd03b">EnableSoftContact</link>();&#32;<emphasis role="comment">//&#32;prevent&#32;objects&#32;popping&#32;out&#32;of&#32;the&#32;hand&#32;on&#32;release</emphasis>
01968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
01969 &#32;&#32;&#32;&#32;&#32;&#32;}
01970 
01971 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01972 &#32;&#32;&#32;&#32;}
01973 
01978 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckGraspBegin(out&#32;IInteractionBehaviour&#32;newlyGraspedObject)&#32;{
01979 &#32;&#32;&#32;&#32;&#32;&#32;newlyGraspedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
01980 
01981 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;grasping&#32;against&#32;interaction&#32;state.</emphasis>
01982 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspedObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
01983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Can&apos;t&#32;grasp&#32;any&#32;object&#32;if&#32;we&apos;re&#32;already&#32;grasping&#32;one&#32;or</emphasis>
01984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;grasping&#32;is&#32;disabled.</emphasis>
01985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01986 &#32;&#32;&#32;&#32;&#32;&#32;}
01987 
01988 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Actually&#32;check&#32;whether&#32;the&#32;controller&#32;implementation&#32;will&#32;grasp.</emphasis>
01989 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;shouldGraspObject&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a672d3a9313dbe37a693702024a61657d">checkShouldGrasp</link>(out&#32;newlyGraspedObject);
01990 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(shouldGraspObject)&#32;{
01991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_graspedObject&#32;=&#32;newlyGraspedObject;
01992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ac6f8d116e41ed7b2dadd1dcad335a3a2">OnGraspBegin</link>();
01993 
01994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
01995 &#32;&#32;&#32;&#32;&#32;&#32;}
01996 
01997 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
01998 &#32;&#32;&#32;&#32;}
01999 
02005 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckGraspHold(out&#32;IInteractionBehaviour&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aecfb55af7f506df76774eac811ad25fc">graspedObject</link>)&#32;{
02006 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aecfb55af7f506df76774eac811ad25fc">graspedObject</link>&#32;=&#32;_graspedObject;
02007 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aecda4487fc96ce08c3159d1b4cc92c52">OnGraspStay</link>();
02008 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aecfb55af7f506df76774eac811ad25fc">graspedObject</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
02009 &#32;&#32;&#32;&#32;}
02010 
02016 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckSuspensionBegin(out&#32;IInteractionBehaviour&#32;suspendedObject)&#32;{
02017 &#32;&#32;&#32;&#32;&#32;&#32;suspendedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
02018 
02019 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspedObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>&#32;&amp;&amp;&#32;!_graspedObject.isSuspended)&#32;{
02020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suspendedObject&#32;=&#32;_graspedObject;
02021 &#32;&#32;&#32;&#32;&#32;&#32;}
02022 
02023 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;suspendedObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
02024 &#32;&#32;&#32;&#32;}
02025 
02031 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IInternalInteractionController.CheckSuspensionEnd(out&#32;IInteractionBehaviour&#32;resumedObject)&#32;{
02032 &#32;&#32;&#32;&#32;&#32;&#32;resumedObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
02033 
02034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_graspedObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a592bdfe3ece33ca9ce7a35f279fcacbf">isTracked</link>&#32;&amp;&amp;&#32;_graspedObject.isSuspended)&#32;{
02035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resumedObject&#32;=&#32;_graspedObject;
02036 &#32;&#32;&#32;&#32;&#32;&#32;}
02037 
02038 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;resumedObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
02039 &#32;&#32;&#32;&#32;}
02040 
02041 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
02042 
02043 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
02044 
02045 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Gizmos</emphasis>
02046 
02047 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>GizmoColors&#32;{
02048 
02049 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;ContactBone&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Color.green.WithAlpha(0.5F);&#32;}&#32;}
02050 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;SoftContactBone&#32;&#32;&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Color.white.WithAlpha(0.5F);&#32;}&#32;}
02051 
02052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;HoverPoint&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Color.yellow.WithAlpha(0.5F);&#32;}&#32;}
02053 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;PrimaryHoverPoint&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Color.Lerp(Color.red,&#32;Color.yellow,&#32;0.5F).WithAlpha(0.5F);&#32;}&#32;}
02054 
02055 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;GraspPoint&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Color.Lerp(Color.blue,&#32;Color.cyan,&#32;0.3F).WithAlpha(0.5F);&#32;}&#32;}
02056 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;Graspable&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Color.cyan.WithAlpha(0.5F);&#32;}&#32;}
02057 
02058 &#32;&#32;&#32;&#32;}
02059 
<anchor xml:id="__interaction_controller_8cs_source_1l02066"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aea16165952781a04b0da774cca6561a1">02066</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aea16165952781a04b0da774cca6561a1">OnDrawRuntimeGizmos</link>(<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer">RuntimeGizmoDrawer</link>&#32;drawer)&#32;{
02067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!this.isActiveAndEnabled)&#32;<emphasis role="keywordflow">return</emphasis>;
02068 
02069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
02070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7efdf9619c04ed13e0f223c12c6ae429">softContactEnabled</link>)&#32;{
02071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drawer.<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer_1abc3204be6b869c39d35876457ce8c9f0">color</link>&#32;=&#32;GizmoColors.ContactBone;
02072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
02074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drawer.<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer_1abc3204be6b869c39d35876457ce8c9f0">color</link>&#32;=&#32;GizmoColors.SoftContactBone;
02075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02076 
02077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drawer.<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer_1a16bef61806ee819707718cf4f347cd29">DrawColliders</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5e1d7a2a31f10a9f1a2fe49ddd37bf75">contactBoneParent</link>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
02078 &#32;&#32;&#32;&#32;&#32;&#32;}
02079 
02080 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Hover&#32;Point</emphasis>
02081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a17364abc0f18966b489ee8125c0386ff">hoverEnabled</link>)&#32;{
02082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a91d025406da30ca80629fd01898b6935">drawHoverPoint</link>(drawer,&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a7c2b239ce82be01d82b7d8305dbfe0e5">hoverPoint</link>);
02083 &#32;&#32;&#32;&#32;&#32;&#32;}
02084 
02085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Primary&#32;Hover&#32;Points</emphasis>
02086 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a17364abc0f18966b489ee8125c0386ff">hoverEnabled</link>)&#32;{
02087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;point&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a4ac00d9dac22e9a958b3bbff49fffdc1">primaryHoverPoints</link>)&#32;{
02088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(point&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">continue</emphasis>;
02089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1abab3a785a24c9d0d028ca7757d7aa657">drawPrimaryHoverPoint</link>(drawer,&#32;point.position);
02090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02091 &#32;&#32;&#32;&#32;&#32;&#32;}
02092 &#32;&#32;&#32;&#32;}
02093 
<anchor xml:id="__interaction_controller_8cs_source_1l02094"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a91d025406da30ca80629fd01898b6935">02094</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a91d025406da30ca80629fd01898b6935">drawHoverPoint</link>(<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer">RuntimeGizmoDrawer</link>&#32;drawer,&#32;Vector3&#32;pos)&#32;{
02095 &#32;&#32;&#32;&#32;&#32;&#32;drawer.<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer_1abc3204be6b869c39d35876457ce8c9f0">color</link>&#32;=&#32;GizmoColors.HoverPoint;
02096 &#32;&#32;&#32;&#32;&#32;&#32;drawer.<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer_1a37f724a49840d699acbfb538883132ef">DrawWireSphere</link>(pos,&#32;0.03F);
02097 &#32;&#32;&#32;&#32;}
02098 
<anchor xml:id="__interaction_controller_8cs_source_1l02099"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1abab3a785a24c9d0d028ca7757d7aa657">02099</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1abab3a785a24c9d0d028ca7757d7aa657">drawPrimaryHoverPoint</link>(<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer">RuntimeGizmoDrawer</link>&#32;drawer,&#32;Vector3&#32;pos)&#32;{
02100 &#32;&#32;&#32;&#32;&#32;&#32;drawer.<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer_1abc3204be6b869c39d35876457ce8c9f0">color</link>&#32;=&#32;GizmoColors.PrimaryHoverPoint;
02101 &#32;&#32;&#32;&#32;&#32;&#32;drawer.<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer_1a37f724a49840d699acbfb538883132ef">DrawWireSphere</link>(pos,&#32;0.015F);
02102 &#32;&#32;&#32;&#32;}
02103 
02104 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
02105 
02106 &#32;&#32;}
02107 
02108 }
</programlisting></section>
