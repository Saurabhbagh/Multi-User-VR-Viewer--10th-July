<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__anchorable_behaviour_editor_8cs_source">
<title>AnchorableBehaviourEditor.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Scripts/UI/Anchors/Editor/AnchorableBehaviourEditor.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00016 
00017 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_interaction">Leap.Unity.Interaction</link>&#32;{
00018 
00019 &#32;&#32;[CanEditMultipleObjects]
00020 &#32;&#32;[CustomEditor(typeof(AnchorableBehaviour))]
<anchor xml:id="__anchorable_behaviour_editor_8cs_source_1l00021"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_editor">00021</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_editor">AnchorableBehaviourEditor</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base">CustomEditorBase</link>&lt;AnchorableBehaviour&gt;&#32;{
00022 
<anchor xml:id="__anchorable_behaviour_editor_8cs_source_1l00023"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_editor_1a6e5c7f06d6840902fde3326ad0ecb0a0">00023</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_editor_1a6e5c7f06d6840902fde3326ad0ecb0a0">OnEnable</link>()&#32;{
00024 &#32;&#32;&#32;&#32;&#32;&#32;base.OnEnable();
00025 
00026 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a1f7e4b6641ca944bac1efc1679a40afd">deferProperty</link>(<emphasis role="stringliteral">&quot;_eventTable&quot;</emphasis>);
00027 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1aab8bbda3edcc92a5c3d5a5360988c265">specifyCustomDrawer</link>(<emphasis role="stringliteral">&quot;_eventTable&quot;</emphasis>,&#32;drawEventTable);
00028 
00029 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(<emphasis role="stringliteral">&quot;lockWhenAttached&quot;</emphasis>,
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;matchAnchorMotionWhileAttaching&quot;</emphasis>);
00031 
00032 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(<emphasis role="stringliteral">&quot;useTrajectory&quot;</emphasis>,
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_motionlessRangeFraction&quot;</emphasis>,
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_maxMotionlessRange&quot;</emphasis>,
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_maxAttachmentAngle&quot;</emphasis>);
00036 
00037 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(()&#32;=&gt;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.interactionBehaviour&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;},
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;detachWhenGrasped&quot;</emphasis>,
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_tryAnchorNearestOnGraspEnd&quot;</emphasis>,
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;isAttractedByHand&quot;</emphasis>,
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;maxAttractionReach&quot;</emphasis>,
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;attractionReachByDistance&quot;</emphasis>);
00043 
00044 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a050b2c7054d16bc8e497877eed360664">specifyConditionalDrawing</link>(<emphasis role="stringliteral">&quot;isAttractedByHand&quot;</emphasis>,
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;maxAttractionReach&quot;</emphasis>,
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;attractionReachByDistance&quot;</emphasis>);
00047 &#32;&#32;&#32;&#32;}
00048 
00049 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor">EnumEventTableEditor</link>&#32;_tableEditor;
00050 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawEventTable(SerializedProperty&#32;property)&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_tableEditor&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_tableEditor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor">EnumEventTableEditor</link>(property,&#32;typeof(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour">AnchorableBehaviour</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47">EventType</link>));
00053 &#32;&#32;&#32;&#32;&#32;&#32;}
00054 
00055 &#32;&#32;&#32;&#32;&#32;&#32;_tableEditor.<link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor_1a0750f6e4ebe155b598189387c896ade0">DoGuiLayout</link>();
00056 &#32;&#32;&#32;&#32;}
00057 
<anchor xml:id="__anchorable_behaviour_editor_8cs_source_1l00058"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_editor_1a7ec140adf78746ff5657caa47f3b79b9">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_editor_1a7ec140adf78746ff5657caa47f3b79b9">OnInspectorGUI</link>()&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;drawWarningMessages();
00060 
00061 &#32;&#32;&#32;&#32;&#32;&#32;drawAttachmentHelperButtons();
00062 
00063 &#32;&#32;&#32;&#32;&#32;&#32;base.OnInspectorGUI();
00064 &#32;&#32;&#32;&#32;}
00065 
00066 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawWarningMessages()&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;While&#32;the&#32;editor&#32;application&#32;is&#32;playing,&#32;we&#32;expect&#32;there&#32;to&#32;be&#32;at&#32;least&#32;the&#32;empty&#32;lambda&#32;that&#32;initializes&#32;the&#32;Action</emphasis>
00068 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;the&#32;UnityEvent&#32;subscription.</emphasis>
00069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;While&#32;in&#32;edit-mode,&#32;we&#32;only&#32;expect&#32;there&#32;to&#32;be&#32;the&#32;empty&#32;lambda&#32;that&#32;initializes&#32;the&#32;Action.</emphasis>
00070 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;expectedMinimumActionListeners&#32;=&#32;EditorApplication.isPlaying&#32;?&#32;2&#32;:&#32;1;
00071 
00072 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasInvalidPostGraspEndCallback&#32;=&#32;!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.tryAnchorNearestOnGraspEnd
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.OnPostTryAnchorOnGraspEnd.GetInvocationList().Length&#32;&gt;&#32;expectedMinimumActionListeners
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(_tableEditor&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_tableEditor.<link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor_1aa8e88f2c5b8385d9d99a2eb844aa7b27">HasAnyCallbacks</link>((<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour">AnchorableBehaviour</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_1aaca223949e4a2b5124579fe4681e3d47">EventType</link>.OnPostTryAnchorOnGraspEnd)));
00076 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasInvalidPostGraspEndCallback)&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.HelpBox(<emphasis role="stringliteral">&quot;This&#32;object&apos;s&#32;OnPostObjectGraspEnd&#32;is&#32;subscribed&#32;to,&#32;but&#32;the&#32;event&#32;will&#32;never&#32;&quot;</emphasis>
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;fire&#32;because&#32;tryAnchorNearestOnGraspEnd&#32;is&#32;disabled.&quot;</emphasis>,
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MessageType.Warning);
00080 &#32;&#32;&#32;&#32;&#32;&#32;}
00081 &#32;&#32;&#32;&#32;}
00082 
00083 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawAttachmentHelperButtons()&#32;{
00084 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!EditorApplication.isPlaying)&#32;{
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Attach&#32;/&#32;Detach&#32;Object</emphasis>
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginHorizontal();
00087 
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;anyTargetsCanAnchor&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>.Query().Any(t&#32;=&gt;&#32;t.anchor&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;!<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a20eea7e492831d5b4cde7eeaf0ce749e">target</link>.isAttached);
00089 
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(!anyTargetsCanAnchor);
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Attach&#32;Object&quot;</emphasis>&#32;+&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>.Length&#32;&gt;&#32;1&#32;?&#32;<emphasis role="stringliteral">&quot;s&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>),
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Will&#32;attach&#32;the&#32;object&#32;to&#32;its&#32;anchor.&#32;If&#32;the&#32;object&#32;is&#32;not&#32;currently&#32;at&#32;its&#32;anchor,&#32;&quot;</emphasis>
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;currently&#32;at&#32;its&#32;anchor,&#32;it&#32;will&#32;begin&#32;move&#32;to&#32;it&#32;when&#32;play&#32;mode&#32;begins.&quot;</emphasis>)))&#32;{
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.IncrementCurrentGroup();
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;singleTarget&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>)&#32;{
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(singleTarget,&#32;<emphasis role="stringliteral">&quot;Try&#32;Attach&#32;Object&quot;</emphasis>);
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;singleTarget.TryAttach(ignoreRange:&#32;<emphasis role="keyword">true</emphasis>);
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
00101 
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;anyTargetsCanDetach&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>.Query().Any(t&#32;=&gt;&#32;t.isAttached);
00103 
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(!anyTargetsCanDetach);
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Detach&#32;Object&quot;</emphasis>&#32;+&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>.Length&#32;&gt;&#32;1&#32;?&#32;<emphasis role="stringliteral">&quot;s&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>),
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Will&#32;detach&#32;the&#32;object&#32;from&#32;its&#32;anchor.&#32;AnchorableBehaviours&#32;won&apos;t&#32;seek&#32;out&#32;an&#32;anchor&#32;&quot;</emphasis>
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;until&#32;they&#32;are&#32;specifically&#32;told&#32;to&#32;attach&#32;to&#32;one.&quot;</emphasis>)))&#32;{
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.IncrementCurrentGroup();
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;singleTarget&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>)&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(singleTarget,&#32;<emphasis role="stringliteral">&quot;Try&#32;Detach&#32;Object&quot;</emphasis>);
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;singleTarget.Detach();
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
00115 
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndHorizontal();
00117 
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;Object&#32;to&#32;Anchor</emphasis>
00119 
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;anyTranslatedFromAnchor&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;anyRotatedFromAnchor&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00122 
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;singleTarget&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>)&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anyTranslatedFromAnchor&#32;&#32;|=&#32;singleTarget.anchor&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;Vector3.Distance(singleTarget.transform.position,&#32;singleTarget.anchor.transform.position)&#32;&gt;&#32;0.0001F;
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anyRotatedFromAnchor&#32;&#32;&#32;&#32;&#32;|=&#32;singleTarget.anchor&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;singleTarget.anchorRotation
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;Quaternion.Angle(singleTarget.transform.rotation,&#32;singleTarget.anchor.transform.rotation)&#32;&gt;&#32;0.1F;
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00128 
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(anyTranslatedFromAnchor&#32;||&#32;anyRotatedFromAnchor)&#32;{
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button(<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Move&#32;Object&quot;</emphasis>&#32;+&#32;(<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>.Length&#32;&gt;&#32;1&#32;?&#32;<emphasis role="stringliteral">&quot;s&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;To&#32;Anchor&quot;</emphasis>,
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Detected&#32;that&#32;the&#32;object&#32;is&#32;not&#32;currently&#32;at&#32;its&#32;anchor,&#32;but&#32;upon&#32;pressing&#32;play,&#32;&quot;</emphasis>
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;the&#32;object&#32;will&#32;move&#32;to&#32;to&#32;match&#32;its&#32;anchor.&#32;If&#32;you&apos;d&#32;like&#32;the&#32;object&#32;to&#32;move&#32;to&#32;&quot;</emphasis>
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;its&#32;anchor&#32;now,&#32;click&#32;this&#32;button.&quot;</emphasis>)))&#32;{
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.IncrementCurrentGroup();
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;singleTarget&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1ab3c7d33ed1e58869160ccc7d1a189264">targets</link>)&#32;{
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(singleTarget.transform,&#32;<emphasis role="stringliteral">&quot;Move&#32;Target&#32;Transform&#32;to&#32;Anchor&quot;</emphasis>);
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;singleTarget.transform.position&#32;=&#32;singleTarget.anchor.transform.position;
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(singleTarget.anchorRotation)&#32;singleTarget.transform.rotation&#32;=&#32;singleTarget.anchor.transform.rotation;
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00142 &#32;&#32;&#32;&#32;&#32;&#32;}
00143 &#32;&#32;&#32;&#32;}
00144 
00145 &#32;&#32;}
00146 
00147 }
</programlisting></section>
