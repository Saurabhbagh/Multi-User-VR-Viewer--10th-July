<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__vector_8cs_source">
<title>Vector.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Vector.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap">Leap</link>&#32;{
00011 &#32;&#32;<emphasis role="keyword">using</emphasis>&#32;System;
00012 
00016 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>Constants&#32;{
00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;PI&#32;=&#32;3.1415926536f;
00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;DEG_TO_RAD&#32;=&#32;0.0174532925f;
00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;RAD_TO_DEG&#32;=&#32;57.295779513f;
00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;EPSILON&#32;=&#32;1.192092896e-07f;
00021 &#32;&#32;}
00022 
00036 &#32;&#32;[Serializable]
<anchor xml:id="__vector_8cs_source_1l00037"/><link linkend="_struct_leap_1_1_vector">00037</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_vector">Vector</link>&#32;:&#32;IEquatable&lt;Vector&gt;&#32;{
00038 
<anchor xml:id="__vector_8cs_source_1l00039"/><link linkend="_struct_leap_1_1_vector_1af056d6d462839c1e5d3d9fa7d0507f11">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1af056d6d462839c1e5d3d9fa7d0507f11">operator +</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v1,&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v2)&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(v1.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;+&#32;v2.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>,&#32;v1.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;+&#32;v2.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>,&#32;v1.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;+&#32;v2.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>);
00041 &#32;&#32;&#32;&#32;}
00042 
<anchor xml:id="__vector_8cs_source_1l00043"/><link linkend="_struct_leap_1_1_vector_1ac35b7560d4ac5acb9217120aa6281f41">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1ac35b7560d4ac5acb9217120aa6281f41">operator -</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v1,&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v2)&#32;{
00044 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(v1.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;-&#32;v2.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>,&#32;v1.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;-&#32;v2.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>,&#32;v1.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;-&#32;v2.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>);
00045 &#32;&#32;&#32;&#32;}
00046 
<anchor xml:id="__vector_8cs_source_1l00047"/><link linkend="_struct_leap_1_1_vector_1a9189471d23ea61609806cbee7b1808bf">00047</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a9189471d23ea61609806cbee7b1808bf">operator *</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scalar)&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(v1.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;*&#32;scalar,&#32;v1.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;*&#32;scalar,&#32;v1.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;*&#32;scalar);
00049 &#32;&#32;&#32;&#32;}
00050 
<anchor xml:id="__vector_8cs_source_1l00051"/><link linkend="_struct_leap_1_1_vector_1a7a1839d6ea30d92eb3a7591b73c41a63">00051</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a7a1839d6ea30d92eb3a7591b73c41a63">operator *</link>(<emphasis role="keywordtype">float</emphasis>&#32;scalar,&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v1)&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(v1.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;*&#32;scalar,&#32;v1.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;*&#32;scalar,&#32;v1.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;*&#32;scalar);
00053 &#32;&#32;&#32;&#32;}
00054 
<anchor xml:id="__vector_8cs_source_1l00055"/><link linkend="_struct_leap_1_1_vector_1a8a707fa512d65682a773f87308c6d0e9">00055</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a8a707fa512d65682a773f87308c6d0e9">operator /</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v1,&#32;<emphasis role="keywordtype">float</emphasis>&#32;scalar)&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(v1.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;/&#32;scalar,&#32;v1.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;/&#32;scalar,&#32;v1.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;/&#32;scalar);
00057 &#32;&#32;&#32;&#32;}
00058 
<anchor xml:id="__vector_8cs_source_1l00059"/><link linkend="_struct_leap_1_1_vector_1ab08ec541871ec6fefb7f66331fdb6f0d">00059</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1ab08ec541871ec6fefb7f66331fdb6f0d">operator -</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v1)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(-v1.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>,&#32;-v1.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>,&#32;-v1.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>);
00061 &#32;&#32;&#32;&#32;}
00062 
<anchor xml:id="__vector_8cs_source_1l00063"/><link linkend="_struct_leap_1_1_vector_1ae3811a09e999d99576d40d361d5871fd">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1ae3811a09e999d99576d40d361d5871fd">operator ==</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v1,&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v2)&#32;{
00064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;v1.<link linkend="_struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de">Equals</link>(v2);
00065 &#32;&#32;&#32;&#32;}
00066 
<anchor xml:id="__vector_8cs_source_1l00067"/><link linkend="_struct_leap_1_1_vector_1a6c834842a05008442e86353a7209d17b">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a6c834842a05008442e86353a7209d17b">operator !=</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v1,&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v2)&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!v1.<link linkend="_struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de">Equals</link>(v2);
00069 &#32;&#32;&#32;&#32;}
00070 
<anchor xml:id="__vector_8cs_source_1l00071"/><link linkend="_struct_leap_1_1_vector_1ac5cd8263402ee3da54d342c65bde2511">00071</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;<link linkend="_struct_leap_1_1_vector_1ac5cd8263402ee3da54d342c65bde2511">ToFloatArray</link>()&#32;{
00072 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;{&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>,&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>,&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;};
00073 &#32;&#32;&#32;&#32;}
00074 
<anchor xml:id="__vector_8cs_source_1l00079"/><link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">00079</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>,&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>)&#32;:
00080 &#32;&#32;&#32;&#32;&#32;&#32;this()&#32;{
00081 &#32;&#32;&#32;&#32;&#32;&#32;this.x&#32;=&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>;
00082 &#32;&#32;&#32;&#32;&#32;&#32;this.y&#32;=&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>;
00083 &#32;&#32;&#32;&#32;&#32;&#32;this.z&#32;=&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>;
00084 &#32;&#32;&#32;&#32;}
00085 
<anchor xml:id="__vector_8cs_source_1l00090"/><link linkend="_struct_leap_1_1_vector_1a1058e5cc80c4eb8f521f485269f7b614">00090</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a1058e5cc80c4eb8f521f485269f7b614">Vector</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;vector)&#32;:
00091 &#32;&#32;&#32;&#32;&#32;&#32;this()&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;=&#32;vector.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>;
00093 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;=&#32;vector.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>;
00094 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;=&#32;vector.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>;
00095 &#32;&#32;&#32;&#32;}
00096 
<anchor xml:id="__vector_8cs_source_1l00103"/><link linkend="_struct_leap_1_1_vector_1a9a192946523c91fc5aec3541cc09b762">00103</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a9a192946523c91fc5aec3541cc09b762">DistanceTo</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;other)&#32;{
00104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)Math.Sqrt((<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;-&#32;other.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>)&#32;*&#32;(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;-&#32;other.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>)&#32;+
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;-&#32;other.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>)&#32;*&#32;(<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;-&#32;other.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>)&#32;+
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;-&#32;other.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>)&#32;*&#32;(<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;-&#32;other.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>));
00107 
00108 &#32;&#32;&#32;&#32;}
00109 
<anchor xml:id="__vector_8cs_source_1l00121"/><link linkend="_struct_leap_1_1_vector_1a5833741990af0c182a41c75053d628b7">00121</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a5833741990af0c182a41c75053d628b7">AngleTo</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;other)&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;denom&#32;=&#32;<link linkend="_struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143">MagnitudeSquared</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143">MagnitudeSquared</link>;
00123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(denom&#32;&lt;=&#32;Constants.EPSILON)&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0f;
00125 &#32;&#32;&#32;&#32;&#32;&#32;}
00126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;val&#32;=&#32;<link linkend="_struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804">Dot</link>(other)&#32;/&#32;(float)Math.Sqrt(denom);
00127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;&gt;=&#32;1.0f)&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0f;
00129 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;&lt;=&#32;-1.0f)&#32;{
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Constants.PI;
00131 &#32;&#32;&#32;&#32;&#32;&#32;}
00132 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)Math.Acos(val);
00133 &#32;&#32;&#32;&#32;}
00134 
<anchor xml:id="__vector_8cs_source_1l00142"/><link linkend="_struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804">00142</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a9177e8852525449bc0817f77de9a9804">Dot</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;other)&#32;{
00143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>)&#32;+&#32;(<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>)&#32;+&#32;(<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>);
00144 &#32;&#32;&#32;&#32;}
00145 
<anchor xml:id="__vector_8cs_source_1l00156"/><link linkend="_struct_leap_1_1_vector_1acdd326aa3bd6ac8eaf4d0c321db129cb">00156</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1acdd326aa3bd6ac8eaf4d0c321db129cb">Cross</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;other)&#32;{
00157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>((<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>)&#32;-&#32;(<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>),
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>)&#32;-&#32;(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>),
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>)&#32;-&#32;(<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;*&#32;other.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>));
00160 &#32;&#32;&#32;&#32;}
00161 
<anchor xml:id="__vector_8cs_source_1l00166"/><link linkend="_struct_leap_1_1_vector_1a0da414710f7b4d8bab10ed4685750599">00166</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a0da414710f7b4d8bab10ed4685750599">ToString</link>()&#32;{
00167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;(&quot;</emphasis>&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;+&#32;<emphasis role="stringliteral">&quot;)&quot;</emphasis>;
00168 &#32;&#32;&#32;&#32;}
00169 
<anchor xml:id="__vector_8cs_source_1l00174"/><link linkend="_struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de">00174</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de">Equals</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;v)&#32;{
00175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>.NearlyEquals(v.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>)&#32;&amp;&amp;&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>.NearlyEquals(v.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>)&#32;&amp;&amp;&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>.NearlyEquals(v.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>);
00176 &#32;&#32;&#32;&#32;}
00177 
<anchor xml:id="__vector_8cs_source_1l00178"/><link linkend="_struct_leap_1_1_vector_1a024719e566f2af651da6494e0f5cd86c">00178</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a024719e566f2af651da6494e0f5cd86c">Equals</link>(<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>&#32;obj)&#32;{
00179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj&#32;is&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;&amp;&amp;&#32;<link linkend="_struct_leap_1_1_vector_1aafba24baa2a58a85c0b07ba28b4a56de">Equals</link>((<link linkend="_struct_leap_1_1_vector">Vector</link>)obj);
00180 &#32;&#32;&#32;&#32;}
00181 
<anchor xml:id="__vector_8cs_source_1l00187"/><link linkend="_struct_leap_1_1_vector_1aae57324c0e393fc8f8b799092964efbb">00187</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aae57324c0e393fc8f8b799092964efbb">IsValid</link>()&#32;{
00188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(<emphasis role="keywordtype">float</emphasis>.IsNaN(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>)&#32;||&#32;<emphasis role="keywordtype">float</emphasis>.IsInfinity(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>)&#32;||
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>.IsNaN(<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>)&#32;||&#32;<emphasis role="keywordtype">float</emphasis>.IsInfinity(<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>)&#32;||
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>.IsNaN(<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>)&#32;||&#32;<emphasis role="keywordtype">float</emphasis>.IsInfinity(<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>));
00191 &#32;&#32;&#32;&#32;}
00192 
<anchor xml:id="__vector_8cs_source_1l00198"/><link linkend="_struct_leap_1_1_vector_1af92a9eb06277dd8eebbf3e1cf61360ca">00198</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<emphasis role="keyword">this</emphasis>[uint&#32;index]&#32;{
00199 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;0)
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>;
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;1)
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>;
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;2)
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>;
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;IndexOutOfRangeException();
00207 &#32;&#32;&#32;&#32;&#32;&#32;}
00208 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;0)
00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;=&#32;value;
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;1)
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;=&#32;value;
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;==&#32;2)
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;=&#32;value;
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;IndexOutOfRangeException();
00216 &#32;&#32;&#32;&#32;&#32;&#32;}
00217 &#32;&#32;&#32;&#32;}
00218 
<anchor xml:id="__vector_8cs_source_1l00219"/><link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">00219</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>;
<anchor xml:id="__vector_8cs_source_1l00220"/><link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">00220</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>;
<anchor xml:id="__vector_8cs_source_1l00221"/><link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">00221</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>;
00222 
<anchor xml:id="__vector_8cs_source_1l00230"/><link linkend="_struct_leap_1_1_vector_1afd51a6a7664efda2e5dde7a5e6a5313a">00230</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1afd51a6a7664efda2e5dde7a5e6a5313a">Magnitude</link>&#32;{
00231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)Math.Sqrt(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;*&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;*&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;*&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>);&#32;}
00232 &#32;&#32;&#32;&#32;}
00233 
<anchor xml:id="__vector_8cs_source_1l00238"/><link linkend="_struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143">00238</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143">MagnitudeSquared</link>&#32;{
00239 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;*&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;*&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;*&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>;&#32;}
00240 &#32;&#32;&#32;&#32;}
00241 
<anchor xml:id="__vector_8cs_source_1l00253"/><link linkend="_struct_leap_1_1_vector_1acc5105f55edfdc7a3d5cc6cd6cb8dc8f">00253</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1acc5105f55edfdc7a3d5cc6cd6cb8dc8f">Pitch</link>&#32;{
00254 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)Math.Atan2(<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>,&#32;-<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>);&#32;}
00255 &#32;&#32;&#32;&#32;}
00256 
<anchor xml:id="__vector_8cs_source_1l00273"/><link linkend="_struct_leap_1_1_vector_1afa775e6c104537383493e027f6a462f7">00273</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1afa775e6c104537383493e027f6a462f7">Roll</link>&#32;{
00274 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)Math.Atan2(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>,&#32;-<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>);&#32;}
00275 &#32;&#32;&#32;&#32;}
00276 
<anchor xml:id="__vector_8cs_source_1l00288"/><link linkend="_struct_leap_1_1_vector_1ac6f5feaf332862e1ebc0d5b219e55eaa">00288</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1ac6f5feaf332862e1ebc0d5b219e55eaa">Yaw</link>&#32;{
00289 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)Math.Atan2(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>,&#32;-<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>);&#32;}
00290 &#32;&#32;&#32;&#32;}
00291 
<anchor xml:id="__vector_8cs_source_1l00300"/><link linkend="_struct_leap_1_1_vector_1a14c14f9559420ad1f1a9e1b8884859c4">00300</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a14c14f9559420ad1f1a9e1b8884859c4">Normalized</link>&#32;{
00301 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;denom&#32;=&#32;<link linkend="_struct_leap_1_1_vector_1aec7fdb9c75f451a3c0a28fddfba97143">MagnitudeSquared</link>;
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(denom&#32;&lt;=&#32;Constants.EPSILON)&#32;{
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">Zero</link>;
00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;denom&#32;=&#32;1.0f&#32;/&#32;(float)Math.Sqrt(denom);
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;*&#32;denom,&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;*&#32;denom,&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;*&#32;denom);
00308 &#32;&#32;&#32;&#32;&#32;&#32;}
00309 &#32;&#32;&#32;&#32;}
00310 
<anchor xml:id="__vector_8cs_source_1l00314"/><link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">00314</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">Zero</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(0,&#32;0,&#32;0);
00315 
<anchor xml:id="__vector_8cs_source_1l00319"/><link linkend="_struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d">00319</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d">Ones</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(1,&#32;1,&#32;1);
00320 
<anchor xml:id="__vector_8cs_source_1l00324"/><link linkend="_struct_leap_1_1_vector_1ad62a202318bf591b431928859449b19c">00324</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1ad62a202318bf591b431928859449b19c">XAxis</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(1,&#32;0,&#32;0);
00325 
<anchor xml:id="__vector_8cs_source_1l00329"/><link linkend="_struct_leap_1_1_vector_1abf07de0f419b3de5776e046d35c0843e">00329</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1abf07de0f419b3de5776e046d35c0843e">YAxis</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(0,&#32;1,&#32;0);
00330 
<anchor xml:id="__vector_8cs_source_1l00334"/><link linkend="_struct_leap_1_1_vector_1a2b2f1a3a9334e812e832e3b1b6cd4384">00334</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a2b2f1a3a9334e812e832e3b1b6cd4384">ZAxis</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(0,&#32;0,&#32;1);
00335 
<anchor xml:id="__vector_8cs_source_1l00339"/><link linkend="_struct_leap_1_1_vector_1a2ec88fe91f8086e18e78ee2dcc078525">00339</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a2ec88fe91f8086e18e78ee2dcc078525">Forward</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(0,&#32;0,&#32;-1);
00340 
<anchor xml:id="__vector_8cs_source_1l00344"/><link linkend="_struct_leap_1_1_vector_1ad8dd1ac8e87611c590c9dcc58f8fdf8c">00344</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1ad8dd1ac8e87611c590c9dcc58f8fdf8c">Backward</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(0,&#32;0,&#32;1);
00345 
<anchor xml:id="__vector_8cs_source_1l00349"/><link linkend="_struct_leap_1_1_vector_1a62b9bbd54a4b89f695a106f42fcff881">00349</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a62b9bbd54a4b89f695a106f42fcff881">Left</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(-1,&#32;0,&#32;0);
00350 
<anchor xml:id="__vector_8cs_source_1l00354"/><link linkend="_struct_leap_1_1_vector_1aa2cefa3d6f93e552fcd95621e82da158">00354</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1aa2cefa3d6f93e552fcd95621e82da158">Right</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(1,&#32;0,&#32;0);
00355 
<anchor xml:id="__vector_8cs_source_1l00359"/><link linkend="_struct_leap_1_1_vector_1ad90a5266422b507db81c857829b9a915">00359</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1ad90a5266422b507db81c857829b9a915">Up</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(0,&#32;1,&#32;0);
00360 
<anchor xml:id="__vector_8cs_source_1l00364"/><link linkend="_struct_leap_1_1_vector_1a5f080cc88e908cd5d4c3e593767cdb17">00364</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a5f080cc88e908cd5d4c3e593767cdb17">Down</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(0,&#32;-1,&#32;0);
00365 
00366 
<anchor xml:id="__vector_8cs_source_1l00367"/><link linkend="_struct_leap_1_1_vector_1a5732837cc5c84d689d44d9f3836fe639">00367</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;<link linkend="_struct_leap_1_1_vector_1a5732837cc5c84d689d44d9f3836fe639">Lerp</link>(<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;a,&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>&#32;b,&#32;<emphasis role="keywordtype">float</emphasis>&#32;t)&#32;{
00368 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1a2d4bd80855cf435476d47c378a22ca8d">Vector</link>(
00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;+&#32;t&#32;*&#32;(b.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>&#32;-&#32;a.<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>),
00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;+&#32;t&#32;*&#32;(b.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>&#32;-&#32;a.<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>),
00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;+&#32;t&#32;*&#32;(b.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>&#32;-&#32;a.<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>)
00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
00373 &#32;&#32;&#32;&#32;}
00374 
<anchor xml:id="__vector_8cs_source_1l00375"/><link linkend="_struct_leap_1_1_vector_1aa95778cb029f0b2b59e7077eb1c3c980">00375</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_leap_1_1_vector_1aa95778cb029f0b2b59e7077eb1c3c980">GetHashCode</link>()&#32;{
00376 &#32;&#32;&#32;&#32;&#32;&#32;unchecked&#32;<emphasis role="comment">//&#32;Overflow&#32;is&#32;fine,&#32;just&#32;wrap</emphasis>
00377 &#32;&#32;&#32;&#32;&#32;&#32;{
00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hash&#32;=&#32;17;
00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;hash&#32;*&#32;23&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1aa567a19970c776ccb9ebe9a09cb14828">x</link>.GetHashCode();
00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;hash&#32;*&#32;23&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1a458897a143435a1292796d8dfb1d760d">y</link>.GetHashCode();
00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hash&#32;=&#32;hash&#32;*&#32;23&#32;+&#32;<link linkend="_struct_leap_1_1_vector_1afd2f32c0771e6e15fcef62f0fbf57658">z</link>.GetHashCode();
00382 
00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hash;
00384 &#32;&#32;&#32;&#32;&#32;&#32;}
00385 &#32;&#32;&#32;&#32;}
00386 &#32;&#32;}
00387 }
</programlisting></section>
