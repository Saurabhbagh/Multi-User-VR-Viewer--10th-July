<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__anchor_8cs_source">
<title>Anchor.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Scripts/UI/Anchors/Anchor.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_attributes">Attributes</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_runtime_gizmos">RuntimeGizmos</link>;
00012 <emphasis role="keyword">using</emphasis>&#32;System;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00014 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00016 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Events;
00017 
00018 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_interaction">Leap.Unity.Interaction</link>&#32;{
00019 
<anchor xml:id="__anchor_8cs_source_1l00020"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor">00020</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor">Anchor</link>&#32;:&#32;MonoBehaviour&#32;{
00021 
00022 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;Anchor&gt;&#32;_allAnchors;&#32;
<anchor xml:id="__anchor_8cs_source_1l00023"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac55ba01abd9142448ba2ec9dc1f66baa">00023</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;HashSet&lt;Anchor&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac55ba01abd9142448ba2ec9dc1f66baa">allAnchors</link>&#32;{
00024 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_allAnchors&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_allAnchors&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;Anchor&gt;();
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_allAnchors;
00029 &#32;&#32;&#32;&#32;&#32;&#32;}
00030 &#32;&#32;&#32;&#32;}
00031 
00032 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Should&#32;this&#32;anchor&#32;allow&#32;multiple&#32;objects&#32;to&#32;be&#32;attached&#32;to&#32;it&#32;at&#32;the&#32;same&#32;time?&#32;&quot;</emphasis>
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;This&#32;property&#32;is&#32;enforced&#32;by&#32;AnchorGroups&#32;and&#32;AnchorableBehaviours.&quot;</emphasis>)]
<anchor xml:id="__anchor_8cs_source_1l00034"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ad0581637844a848f9e8948a48abfc77d">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ad0581637844a848f9e8948a48abfc77d">allowMultipleObjects</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00035 
00036 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Should&#32;this&#32;anchor&#32;attempt&#32;to&#32;enable&#32;and&#32;disable&#32;the&#32;GameObjects&#32;of&#32;attached&#32;&quot;</emphasis>
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;AnchorableBehaviours&#32;when&#32;its&#32;own&#32;active&#32;state&#32;changes?&#32;If&#32;this&#32;setting&#32;is&#32;enabled,&#32;&quot;</emphasis>
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;the&#32;Anchor&#32;will&#32;deactivate&#32;the&#32;attached&#32;objects&#32;when&#32;its&#32;own&#32;GameObject&#32;is&#32;deactivated&#32;&quot;</emphasis>
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;or&#32;if&#32;its&#32;script&#32;is&#32;disabled,&#32;and&#32;similarly&#32;for&#32;becoming&#32;active&#32;or&#32;enabled.&quot;</emphasis>)]
<anchor xml:id="__anchor_8cs_source_1l00040"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ab0e29c02f3673a8b43bb2ac49e2d8c25">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ab0e29c02f3673a8b43bb2ac49e2d8c25">matchActiveStateWithAttachedObjects</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00041 
00042 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;AnchorGroup&gt;&#32;_groups&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;AnchorGroup&gt;();
<anchor xml:id="__anchor_8cs_source_1l00043"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a4f233c6361e5c63d04fd58abb1a9e1f6">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;HashSet&lt;AnchorGroup&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a4f233c6361e5c63d04fd58abb1a9e1f6">groups</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_groups;&#32;}&#32;}
00044 
00045 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;AnchorableBehaviour&gt;&#32;_preferringAnchorables&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;AnchorableBehaviour&gt;();
00046 
00047 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;HashSet&lt;AnchorableBehaviour&gt;&#32;_anchoredObjects&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;HashSet&lt;AnchorableBehaviour&gt;();
<anchor xml:id="__anchor_8cs_source_1l00051"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a33e0bc00ec1ff195fac8f709abe72cbc">00051</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;HashSet&lt;AnchorableBehaviour&gt;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a33e0bc00ec1ff195fac8f709abe72cbc">anchoredObjects</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_anchoredObjects;&#32;}&#32;}
00052 
<anchor xml:id="__anchor_8cs_source_1l00053"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a86227a39919928835b07fa93eda32551">00053</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a86227a39919928835b07fa93eda32551">isPreferred</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_preferringAnchorables.Count&#32;&gt;&#32;0;&#32;}&#32;}
00054 
<anchor xml:id="__anchor_8cs_source_1l00055"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a0eead1f76beaa595b1cc2655d38e56bb">00055</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a0eead1f76beaa595b1cc2655d38e56bb">hasAnchoredObjects</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_anchoredObjects.Count&#32;&gt;&#32;0;&#32;}&#32;}
00056 
00057 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Events</emphasis>
00058 
<anchor xml:id="__anchor_8cs_source_1l00063"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1aa38b7abb27aec5bc6b81b417f735d572">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1aa38b7abb27aec5bc6b81b417f735d572">OnAnchorPreferred</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00064 
<anchor xml:id="__anchor_8cs_source_1l00068"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a6ab1aee0208ab327529f22fc6d54aecc">00068</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a6ab1aee0208ab327529f22fc6d54aecc">OnAnchorNotPreferred</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00069 
<anchor xml:id="__anchor_8cs_source_1l00073"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a98e0e252c0ef198399129d56f2586061">00073</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a98e0e252c0ef198399129d56f2586061">WhileAnchorPreferred</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00074 
<anchor xml:id="__anchor_8cs_source_1l00078"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a967d19ba4ff0dfb898679a7903845d26">00078</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a967d19ba4ff0dfb898679a7903845d26">OnAnchorablesAttached</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00079 
<anchor xml:id="__anchor_8cs_source_1l00083"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a5c735581eb8e1e360c0d46accfa5c38e">00083</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a5c735581eb8e1e360c0d46accfa5c38e">OnNoAnchorablesAttached</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00084 
<anchor xml:id="__anchor_8cs_source_1l00088"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af4206b9e6f47ad010b61035b4bc5fe5f">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af4206b9e6f47ad010b61035b4bc5fe5f">WhileAnchorablesAttached</link>&#32;=&#32;()&#32;=&gt;&#32;{&#32;};
00089 
00090 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00091 
00092 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()&#32;{
00093 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac55ba01abd9142448ba2ec9dc1f66baa">allAnchors</link>.Add(<emphasis role="keyword">this</emphasis>);
00094 &#32;&#32;&#32;&#32;}
00095 
00096 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ab0e29c02f3673a8b43bb2ac49e2d8c25">matchActiveStateWithAttachedObjects</link>)&#32;{
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;anchObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;_anchoredObjects)&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchObj.gameObject.SetActive(<emphasis role="keyword">true</emphasis>);
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00101 &#32;&#32;&#32;&#32;&#32;&#32;}
00102 &#32;&#32;&#32;&#32;}
00103 
00104 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;initUnityEvents();
00106 &#32;&#32;&#32;&#32;}
00107 
00108 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()&#32;{
00109 &#32;&#32;&#32;&#32;&#32;&#32;updateAnchorCallbacks();
00110 &#32;&#32;&#32;&#32;}
00111 
00112 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnAnchorDisabled()&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ab0e29c02f3673a8b43bb2ac49e2d8c25">matchActiveStateWithAttachedObjects</link>)&#32;{
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;anchObj&#32;<emphasis role="keywordflow">in</emphasis>&#32;_anchoredObjects)&#32;{
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchObj.gameObject.SetActive(<emphasis role="keyword">false</emphasis>);
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00117 &#32;&#32;&#32;&#32;&#32;&#32;}
00118 &#32;&#32;&#32;&#32;}
00119 
00120 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDestroy()&#32;{
00121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;group&#32;<emphasis role="keywordflow">in</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a4f233c6361e5c63d04fd58abb1a9e1f6">groups</link>)&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;group.Remove(<emphasis role="keyword">this</emphasis>);
00123 &#32;&#32;&#32;&#32;&#32;&#32;}
00124 
00125 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac55ba01abd9142448ba2ec9dc1f66baa">allAnchors</link>.Remove(<emphasis role="keyword">this</emphasis>);
00126 &#32;&#32;&#32;&#32;}
00127 
00128 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Anchor&#32;Callbacks</emphasis>
00129 
<anchor xml:id="__anchor_8cs_source_1l00130"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a063da3d8209d998112e4268f024ececa">00130</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a063da3d8209d998112e4268f024ececa">NotifyAttached</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour">AnchorableBehaviour</link>&#32;anchObj)&#32;{
00131 &#32;&#32;&#32;&#32;&#32;&#32;_anchoredObjects.Add(anchObj);
00132 
00133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_anchoredObjects.Count&#32;==&#32;1)&#32;{
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a967d19ba4ff0dfb898679a7903845d26">OnAnchorablesAttached</link>();
00135 &#32;&#32;&#32;&#32;&#32;&#32;}
00136 &#32;&#32;&#32;&#32;}
00137 
<anchor xml:id="__anchor_8cs_source_1l00138"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af1262853ca7469aec0058bc30d1b9f31">00138</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af1262853ca7469aec0058bc30d1b9f31">NotifyDetached</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour">AnchorableBehaviour</link>&#32;anchObj)&#32;{
00139 &#32;&#32;&#32;&#32;&#32;&#32;_anchoredObjects.Remove(anchObj);
00140 
00141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_anchoredObjects.Count&#32;==&#32;0)&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a5c735581eb8e1e360c0d46accfa5c38e">OnNoAnchorablesAttached</link>();
00143 &#32;&#32;&#32;&#32;&#32;&#32;}
00144 &#32;&#32;&#32;&#32;}
00145 
00146 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;updateAnchorCallbacks()&#32;{
00147 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a98e0e252c0ef198399129d56f2586061">WhileAnchorPreferred</link>();
00148 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af4206b9e6f47ad010b61035b4bc5fe5f">WhileAnchorablesAttached</link>();
00149 &#32;&#32;&#32;&#32;}
00150 
<anchor xml:id="__anchor_8cs_source_1l00151"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac796b1e8a66df11300cf9766543fbe31">00151</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac796b1e8a66df11300cf9766543fbe31">NotifyAnchorPreference</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour">AnchorableBehaviour</link>&#32;anchObj)&#32;{
00152 &#32;&#32;&#32;&#32;&#32;&#32;_preferringAnchorables.Add(anchObj);
00153 
00154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_preferringAnchorables.Count&#32;==&#32;1)&#32;{
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1aa38b7abb27aec5bc6b81b417f735d572">OnAnchorPreferred</link>();
00156 &#32;&#32;&#32;&#32;&#32;&#32;}
00157 &#32;&#32;&#32;&#32;}
00158 
<anchor xml:id="__anchor_8cs_source_1l00159"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af120f6521d455d9aa99f6e4bef45b692">00159</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af120f6521d455d9aa99f6e4bef45b692">NotifyEndAnchorPreference</link>(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour">AnchorableBehaviour</link>&#32;anchObj)&#32;{
00160 &#32;&#32;&#32;&#32;&#32;&#32;_preferringAnchorables.Remove(anchObj);
00161 
00162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_preferringAnchorables.Count&#32;==&#32;0)&#32;{
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a6ab1aee0208ab327529f22fc6d54aecc">OnAnchorNotPreferred</link>();
00164 &#32;&#32;&#32;&#32;&#32;&#32;}
00165 &#32;&#32;&#32;&#32;}
00166 
00167 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00168 
00169 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Gizmos</emphasis>
00170 
<anchor xml:id="__anchor_8cs_source_1l00171"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a642b2c2841df3da969f01f30d6b4e528">00171</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a642b2c2841df3da969f01f30d6b4e528">AnchorGizmoColor</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(0.6F,&#32;0.2F,&#32;0.8F);
00172 
00173 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDrawGizmosSelected()&#32;{
00174 &#32;&#32;&#32;&#32;&#32;&#32;Matrix4x4&#32;origMatrix&#32;=&#32;Gizmos.matrix;
00175 &#32;&#32;&#32;&#32;&#32;&#32;Gizmos.matrix&#32;=&#32;this.transform.localToWorldMatrix;
00176 &#32;&#32;&#32;&#32;&#32;&#32;Gizmos.color&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a642b2c2841df3da969f01f30d6b4e528">AnchorGizmoColor</link>;
00177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius&#32;=&#32;0.015F;
00178 
00179 &#32;&#32;&#32;&#32;&#32;&#32;drawWireSphereGizmo(Vector3.zero,&#32;radius);
00180 
00181 &#32;&#32;&#32;&#32;&#32;&#32;drawSphereCirclesGizmo(5,&#32;Vector3.zero,&#32;radius,&#32;Vector3.forward);
00182 
00183 &#32;&#32;&#32;&#32;&#32;&#32;Gizmos.matrix&#32;=&#32;origMatrix;
00184 &#32;&#32;&#32;&#32;}
00185 
00186 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Vector3[]&#32;worldDirs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[]&#32;{&#32;Vector3.right,&#32;Vector3.up,&#32;Vector3.forward&#32;};
00187 
00188 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawWireSphereGizmo(Vector3&#32;pos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius)&#32;{
00189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;dir&#32;<emphasis role="keywordflow">in</emphasis>&#32;worldDirs)&#32;{
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dir&#32;==&#32;Vector3.forward)&#32;<emphasis role="keywordflow">continue</emphasis>;
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Utils.DrawCircle(pos,&#32;dir,&#32;radius,&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a642b2c2841df3da969f01f30d6b4e528">AnchorGizmoColor</link>,&#32;quality:&#32;24,&#32;depthTest:&#32;<emphasis role="keyword">true</emphasis>);
00192 &#32;&#32;&#32;&#32;&#32;&#32;}
00193 &#32;&#32;&#32;&#32;}
00194 
00195 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawSphereCirclesGizmo(<emphasis role="keywordtype">int</emphasis>&#32;numCircles,&#32;Vector3&#32;pos,&#32;<emphasis role="keywordtype">float</emphasis>&#32;radius,&#32;Vector3&#32;poleDir)&#32;{
00196 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;dTheta&#32;=&#32;180F&#32;/&#32;numCircles;
00197 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;halfTheta&#32;=&#32;dTheta&#32;/&#32;2F;
00198 
00199 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;numCircles;&#32;i++)&#32;{
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;curTheta&#32;=&#32;(dTheta&#32;*&#32;i)&#32;+&#32;halfTheta;
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Utils.DrawCircle(pos&#32;+&#32;poleDir&#32;*&#32;Mathf.Cos(curTheta&#32;*&#32;Mathf.Deg2Rad)&#32;*&#32;radius,&#32;poleDir,&#32;Mathf.Sin(curTheta&#32;*&#32;Mathf.Deg2Rad)&#32;*&#32;radius,&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a642b2c2841df3da969f01f30d6b4e528">AnchorGizmoColor</link>,&#32;quality:&#32;16,&#32;depthTest:&#32;<emphasis role="keyword">true</emphasis>);
00202 &#32;&#32;&#32;&#32;&#32;&#32;}
00203 &#32;&#32;&#32;&#32;}
00204 
00205 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00206 
00207 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Unity&#32;Events&#32;(Internal)</emphasis>
00208 
00209 &#32;&#32;&#32;&#32;[SerializeField]
00210 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;EnumEventTable&#32;_eventTable;
00211 
<anchor xml:id="__anchor_8cs_source_1l00212"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">00212</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">EventType</link>&#32;{
00213 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1aa38b7abb27aec5bc6b81b417f735d572">OnAnchorPreferred</link>&#32;=&#32;100,
00214 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a6ab1aee0208ab327529f22fc6d54aecc">OnAnchorNotPreferred</link>&#32;=&#32;110,
00215 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a98e0e252c0ef198399129d56f2586061">WhileAnchorPreferred</link>&#32;=&#32;120,
00216 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a967d19ba4ff0dfb898679a7903845d26">OnAnchorablesAttached</link>&#32;=&#32;130,
00217 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a5c735581eb8e1e360c0d46accfa5c38e">OnNoAnchorablesAttached</link>&#32;=&#32;140,
00218 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af4206b9e6f47ad010b61035b4bc5fe5f">WhileAnchorablesAttached</link>&#32;=&#32;150,
00219 &#32;&#32;&#32;&#32;}
00220 
00221 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;initUnityEvents()&#32;{
00222 &#32;&#32;&#32;&#32;&#32;&#32;setupCallback(ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1aa38b7abb27aec5bc6b81b417f735d572">OnAnchorPreferred</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">EventType</link>.OnAnchorPreferred);
00223 &#32;&#32;&#32;&#32;&#32;&#32;setupCallback(ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a6ab1aee0208ab327529f22fc6d54aecc">OnAnchorNotPreferred</link>,&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">EventType</link>.OnAnchorNotPreferred);
00224 &#32;&#32;&#32;&#32;&#32;&#32;setupCallback(ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a98e0e252c0ef198399129d56f2586061">WhileAnchorPreferred</link>,&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">EventType</link>.WhileAnchorPreferred);
00225 &#32;&#32;&#32;&#32;&#32;&#32;setupCallback(ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a967d19ba4ff0dfb898679a7903845d26">OnAnchorablesAttached</link>,&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">EventType</link>.OnAnchorablesAttached);
00226 &#32;&#32;&#32;&#32;&#32;&#32;setupCallback(ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1a5c735581eb8e1e360c0d46accfa5c38e">OnNoAnchorablesAttached</link>,&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">EventType</link>.OnNoAnchorablesAttached);
00227 &#32;&#32;&#32;&#32;&#32;&#32;setupCallback(ref&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1af4206b9e6f47ad010b61035b4bc5fe5f">WhileAnchorablesAttached</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">EventType</link>.WhileAnchorablesAttached);
00228 &#32;&#32;&#32;&#32;}
00229 
00230 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;setupCallback(ref&#32;Action&#32;action,&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_1ac467f8e75926408d0fc27e8e0e132204">EventType</link>&#32;type)&#32;{
00231 &#32;&#32;&#32;&#32;&#32;&#32;action&#32;+=&#32;()&#32;=&gt;&#32;_eventTable.Invoke((<emphasis role="keywordtype">int</emphasis>)type);
00232 &#32;&#32;&#32;&#32;}
00233 
00234 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00235 
00236 &#32;&#32;}
00237 
00238 }
</programlisting></section>
