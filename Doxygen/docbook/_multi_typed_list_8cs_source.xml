<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__multi_typed_list_8cs_source">
<title>MultiTypedList.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/MultiTypedList.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00014 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00016 <emphasis role="preprocessor">#endif</emphasis>
00017 
00018 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00019 
<anchor xml:id="__multi_typed_list_8cs_source_1l00020"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00020</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&#32;{
00021 &#32;&#32;&#32;&#32;[Serializable]
<anchor xml:id="__multi_typed_list_8cs_source_1l00022"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;{
<anchor xml:id="__multi_typed_list_8cs_source_1l00023"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key_1a740484bda1c191822ff68ac0eb936b6d">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key_1a740484bda1c191822ff68ac0eb936b6d">id</link>;
<anchor xml:id="__multi_typed_list_8cs_source_1l00024"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key_1af01495250bad0b8c6c03ecc25ae6303d">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key_1af01495250bad0b8c6c03ecc25ae6303d">index</link>;
00025 &#32;&#32;&#32;&#32;}
00026 &#32;&#32;}
00027 
<anchor xml:id="__multi_typed_list_8cs_source_1l00037"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00037</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>,&#32;IList&lt;BaseType&gt;&#32;{
<anchor xml:id="__multi_typed_list_8cs_source_1l00038"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5bbd6438c57937904a076fc460c1f2d8">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5bbd6438c57937904a076fc460c1f2d8">Count</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00039 
<anchor xml:id="__multi_typed_list_8cs_source_1l00040"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab1ce880af9e55bf49d8d9b286ee47fb2">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab1ce880af9e55bf49d8d9b286ee47fb2">IsReadOnly</link>&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00043 &#32;&#32;&#32;&#32;&#32;&#32;}
00044 &#32;&#32;&#32;&#32;}
00045 
<anchor xml:id="__multi_typed_list_8cs_source_1l00046"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a72506faac251c1cb49b80934918f5304">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;BaseType&#32;<emphasis role="keyword">this</emphasis>[<emphasis role="keywordtype">int</emphasis>&#32;index]&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
00047 
00048 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Add(BaseType&#32;obj);
00049 
00050 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Clear();
00051 
<anchor xml:id="__multi_typed_list_8cs_source_1l00052"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1aad156e938054bf961ddb6418c01f7cc9">00052</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1aad156e938054bf961ddb6418c01f7cc9">Contains</link>(BaseType&#32;item)&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5bbd6438c57937904a076fc460c1f2d8">Count</link>;&#32;i++)&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>[i].Equals(item))&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00057 &#32;&#32;&#32;&#32;&#32;&#32;}
00058 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00059 &#32;&#32;&#32;&#32;}
00060 
<anchor xml:id="__multi_typed_list_8cs_source_1l00061"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1abc5c8d7d39ab7917b4999955d1f694e7">00061</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1abc5c8d7d39ab7917b4999955d1f694e7">CopyTo</link>(BaseType[]&#32;array,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arrayIndex)&#32;{
00062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5bbd6438c57937904a076fc460c1f2d8">Count</link>;&#32;i++)&#32;{
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[i&#32;+&#32;arrayIndex]&#32;=&#32;<emphasis role="keyword">this</emphasis>[i];
00064 &#32;&#32;&#32;&#32;&#32;&#32;}
00065 &#32;&#32;&#32;&#32;}
00066 
<anchor xml:id="__multi_typed_list_8cs_source_1l00067"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a805e7a926ec876f34e0215a999e23a75">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Enumerator&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a805e7a926ec876f34e0215a999e23a75">GetEnumerator</link>()&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Enumerator(<emphasis role="keyword">this</emphasis>);
00069 &#32;&#32;&#32;&#32;}
00070 
<anchor xml:id="__multi_typed_list_8cs_source_1l00071"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a214214561fb43192926eae5d12b955d5">00071</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a214214561fb43192926eae5d12b955d5">IndexOf</link>(BaseType&#32;item)&#32;{
00072 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5bbd6438c57937904a076fc460c1f2d8">Count</link>;&#32;i++)&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>[i].Equals(item))&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00076 &#32;&#32;&#32;&#32;&#32;&#32;}
00077 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
00078 &#32;&#32;&#32;&#32;}
00079 
00080 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Insert(<emphasis role="keywordtype">int</emphasis>&#32;index,&#32;BaseType&#32;item);
00081 
<anchor xml:id="__multi_typed_list_8cs_source_1l00082"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a13d904263ad9cea91613f4bcd6e6d088">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a13d904263ad9cea91613f4bcd6e6d088">Remove</link>(BaseType&#32;item)&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a214214561fb43192926eae5d12b955d5">IndexOf</link>(item);
00084 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&gt;=&#32;0)&#32;{
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab4116fe8273e5d8dc0258ee30cdbaac5">RemoveAt</link>(index);
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00087 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00089 &#32;&#32;&#32;&#32;&#32;&#32;}
00090 &#32;&#32;&#32;&#32;}
00091 
00092 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;RemoveAt(<emphasis role="keywordtype">int</emphasis>&#32;index);
00093 
<anchor xml:id="__multi_typed_list_8cs_source_1l00094"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator">00094</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator">Enumerator</link>&#32;:&#32;IEnumerator&lt;BaseType&gt;&#32;{
00095 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList&lt;BaseType&gt;</link>&#32;_list;
00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_index;
00097 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;BaseType&#32;_current;
00098 
<anchor xml:id="__multi_typed_list_8cs_source_1l00099"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a2c98594423e90f78534dfc51051a999b">00099</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a2c98594423e90f78534dfc51051a999b">Enumerator</link>(<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList&lt;BaseType&gt;</link>&#32;list)&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_list&#32;=&#32;list;
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_current&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(BaseType);
00103 &#32;&#32;&#32;&#32;&#32;&#32;}
00104 
<anchor xml:id="__multi_typed_list_8cs_source_1l00105"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a08bb0f1e973bfe2bc94bca49e19a2a96">00105</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;BaseType&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a08bb0f1e973bfe2bc94bca49e19a2a96">Current</link>&#32;{
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_current;
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00109 &#32;&#32;&#32;&#32;&#32;&#32;}
00110 
<anchor xml:id="__multi_typed_list_8cs_source_1l00111"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a2b8a3ffbc1d16adece4498a49d6ac0a0">00111</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;IEnumerator.Current&#32;{
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;NotImplementedException();
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00115 &#32;&#32;&#32;&#32;&#32;&#32;}
00116 
<anchor xml:id="__multi_typed_list_8cs_source_1l00117"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a494c5e59966337961aacddab12c1ed19">00117</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a494c5e59966337961aacddab12c1ed19">Dispose</link>()&#32;{
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_list&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_current&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(BaseType);
00120 &#32;&#32;&#32;&#32;&#32;&#32;}
00121 
<anchor xml:id="__multi_typed_list_8cs_source_1l00122"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1aff58333622b9d66973d49cf36c9be871">00122</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1aff58333622b9d66973d49cf36c9be871">MoveNext</link>()&#32;{
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_index&#32;&gt;=&#32;_list.Count)&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_current&#32;=&#32;_list[_index++];
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00129 &#32;&#32;&#32;&#32;&#32;&#32;}
00130 
<anchor xml:id="__multi_typed_list_8cs_source_1l00131"/><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a1c40af91ab93c888f8657ef4aabbed29">00131</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator_1a1c40af91ab93c888f8657ef4aabbed29">Reset</link>()&#32;{
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_current&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(BaseType);
00134 &#32;&#32;&#32;&#32;&#32;&#32;}
00135 &#32;&#32;&#32;&#32;}
00136 
00137 &#32;&#32;&#32;&#32;IEnumerator&#32;IEnumerable.GetEnumerator()&#32;{
00138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Enumerator(<emphasis role="keyword">this</emphasis>);
00139 &#32;&#32;&#32;&#32;}
00140 
00141 &#32;&#32;&#32;&#32;IEnumerator&lt;BaseType&gt;&#32;IEnumerable&lt;BaseType&gt;.GetEnumerator()&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Enumerator(<emphasis role="keyword">this</emphasis>);
00143 &#32;&#32;&#32;&#32;}
00144 &#32;&#32;}
00145 
<anchor xml:id="__multi_typed_list_8cs_source_1l00146"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_util">00146</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_util">MultiTypedListUtil</link>&#32;{
00147 
00148 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00149 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ID_NAME_TABLE&#32;=&#32;<emphasis role="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz&quot;</emphasis>;
00150 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;int,&#32;string&gt;&#32;_nameCache&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;int,&#32;string&gt;();
00151 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;getName(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;name;
00153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_nameCache.TryGetValue(<emphasis role="keywordtype">id</emphasis>,&#32;out&#32;name))&#32;{
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;<emphasis role="stringliteral">&quot;_&quot;</emphasis>&#32;+&#32;ID_NAME_TABLE[id];
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_nameCache[id]&#32;=&#32;name;
00156 &#32;&#32;&#32;&#32;&#32;&#32;}
00157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;name;
00158 &#32;&#32;&#32;&#32;}
00159 
00160 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;SerializedProperty&#32;GetTableProperty(SerializedProperty&#32;list)&#32;{
00161 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;list.FindPropertyRelative(<emphasis role="stringliteral">&quot;_table&quot;</emphasis>);
00162 &#32;&#32;&#32;&#32;}
00163 
00164 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;SerializedProperty&#32;GetArrayElementAtIndex(SerializedProperty&#32;list,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)&#32;{
00165 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;tableProp&#32;=&#32;GetTableProperty(list);
00166 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;idIndexProp&#32;=&#32;tableProp.GetArrayElementAtIndex(index);
00167 
00168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GetReferenceProperty(list,&#32;idIndexProp);
00169 &#32;&#32;&#32;&#32;}
00170 
00171 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;SerializedProperty&#32;GetReferenceProperty(SerializedProperty&#32;list,&#32;SerializedProperty&#32;idIndexProp)&#32;{
00172 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;idProp&#32;=&#32;idIndexProp.FindPropertyRelative(<emphasis role="stringliteral">&quot;id&quot;</emphasis>);
00173 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;indexProp&#32;=&#32;idIndexProp.FindPropertyRelative(<emphasis role="stringliteral">&quot;index&quot;</emphasis>);
00174 
00175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;listPropName&#32;=&#32;getName(idProp.intValue);
00176 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;listProp&#32;=&#32;list.FindPropertyRelative(listPropName);
00177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;listProp.GetArrayElementAtIndex(indexProp.intValue);
00178 &#32;&#32;&#32;&#32;}
00179 <emphasis role="preprocessor">#endif</emphasis>
00180 &#32;&#32;}
00181 
00182 &#32;&#32;[Serializable]
<anchor xml:id="__multi_typed_list_8cs_source_1l00183"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00183</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType&gt;
00184 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00185 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType&#32;{
00186 
00187 &#32;&#32;&#32;&#32;[SerializeField]
00188 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;Key&gt;&#32;_table&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;Key&gt;();
00189 
00190 &#32;&#32;&#32;&#32;[SerializeField]
00191 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;A&gt;&#32;_a&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;A&gt;();
00192 
00193 &#32;&#32;&#32;&#32;[SerializeField]
00194 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;B&gt;&#32;_b&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;B&gt;();
00195 
<anchor xml:id="__multi_typed_list_8cs_source_1l00196"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1aea45511d1c40d3d686988c61b3c471c5">00196</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5bbd6438c57937904a076fc460c1f2d8">Count</link>&#32;{
00197 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_table.Count;
00199 &#32;&#32;&#32;&#32;&#32;&#32;}
00200 &#32;&#32;&#32;&#32;}
00201 
<anchor xml:id="__multi_typed_list_8cs_source_1l00202"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a7f2f5b68b5f81fb25db715b91ef3d1bd">00202</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a7f2f5b68b5f81fb25db715b91ef3d1bd">Add</link>(BaseType&#32;obj)&#32;{
00203 &#32;&#32;&#32;&#32;&#32;&#32;_table.Add(<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1abe1b6097ff12df2b418faa9fa16b77ad">addInternal</link>(obj));
00204 &#32;&#32;&#32;&#32;}
00205 
<anchor xml:id="__multi_typed_list_8cs_source_1l00206"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">00206</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">Clear</link>()&#32;{
00207 &#32;&#32;&#32;&#32;&#32;&#32;_table.Clear();
00208 &#32;&#32;&#32;&#32;&#32;&#32;_a.Clear();
00209 &#32;&#32;&#32;&#32;&#32;&#32;_b.Clear();
00210 &#32;&#32;&#32;&#32;}
00211 
<anchor xml:id="__multi_typed_list_8cs_source_1l00212"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a16330b5126583ef1ae83841a1d0eb975">00212</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a16330b5126583ef1ae83841a1d0eb975">Insert</link>(<emphasis role="keywordtype">int</emphasis>&#32;index,&#32;BaseType&#32;obj)&#32;{
00213 &#32;&#32;&#32;&#32;&#32;&#32;_table.Insert(index,&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1abe1b6097ff12df2b418faa9fa16b77ad">addInternal</link>(obj));
00214 
00215 &#32;&#32;&#32;&#32;}
00216 
<anchor xml:id="__multi_typed_list_8cs_source_1l00217"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ae92981b7e599d61ebfaa596a900b3569">00217</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ae92981b7e599d61ebfaa596a900b3569">RemoveAt</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)&#32;{
00218 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;removedKey&#32;=&#32;_table[index];
00219 &#32;&#32;&#32;&#32;&#32;&#32;_table.RemoveAt(index);
00220 
00221 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a4c3f43ec678e4b8b0c1855f1975da7a1">getList</link>(removedKey.id).RemoveAt(removedKey.index);
00222 
00223 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_table.Count;&#32;i++)&#32;{
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;key&#32;=&#32;_table[i];
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(key.id&#32;==&#32;removedKey.id&#32;&amp;&amp;&#32;key.index&#32;&gt;&#32;removedKey.index)&#32;{
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;key.index--;
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_table[i]&#32;=&#32;key;
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00229 &#32;&#32;&#32;&#32;&#32;&#32;}
00230 &#32;&#32;&#32;&#32;}
00231 
<anchor xml:id="__multi_typed_list_8cs_source_1l00232"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a670a90bccc728c83927528d01a481dc4">00232</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;BaseType&#32;<emphasis role="keyword">this</emphasis>[<emphasis role="keywordtype">int</emphasis>&#32;index]&#32;{
00233 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;key&#32;=&#32;_table[index];
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(BaseType)<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a4c3f43ec678e4b8b0c1855f1975da7a1">getList</link>(key.<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key_1a740484bda1c191822ff68ac0eb936b6d">id</link>)[key.<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key_1af01495250bad0b8c6c03ecc25ae6303d">index</link>];
00236 &#32;&#32;&#32;&#32;&#32;&#32;}
00237 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;oldKey&#32;=&#32;_table[index];
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a4c3f43ec678e4b8b0c1855f1975da7a1">getList</link>(oldKey.<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key_1a740484bda1c191822ff68ac0eb936b6d">id</link>).RemoveAt(oldKey.<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key_1af01495250bad0b8c6c03ecc25ae6303d">index</link>);
00240 
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;newKey&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1abe1b6097ff12df2b418faa9fa16b77ad">addInternal</link>(value);
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_table[index]&#32;=&#32;newKey;
00243 &#32;&#32;&#32;&#32;&#32;&#32;}
00244 &#32;&#32;&#32;&#32;}
00245 
<anchor xml:id="__multi_typed_list_8cs_source_1l00246"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">00246</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(IList&#32;list,&#32;BaseType&#32;instance,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00247 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;key&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>()&#32;{
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;id,
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;=&#32;list.Count
00250 &#32;&#32;&#32;&#32;&#32;&#32;};
00251 &#32;&#32;&#32;&#32;&#32;&#32;list.Add(instance);
00252 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;key;
00253 &#32;&#32;&#32;&#32;}
00254 
<anchor xml:id="__multi_typed_list_8cs_source_1l00255"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1abe1b6097ff12df2b418faa9fa16b77ad">00255</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1abe1b6097ff12df2b418faa9fa16b77ad">addInternal</link>(BaseType&#32;obj)&#32;{
00256 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;is&#32;A)&#32;{
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(_a,&#32;obj,&#32;0);
00258 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;is&#32;B)&#32;{
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(_b,&#32;obj,&#32;1);
00260 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentException(<emphasis role="stringliteral">&quot;This&#32;multi&#32;typed&#32;list&#32;does&#32;not&#32;support&#32;type&#32;&quot;</emphasis>&#32;+&#32;obj.GetType().Name);
00262 &#32;&#32;&#32;&#32;&#32;&#32;}
00263 &#32;&#32;&#32;&#32;}
00264 
<anchor xml:id="__multi_typed_list_8cs_source_1l00265"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a4c3f43ec678e4b8b0c1855f1975da7a1">00265</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;IList&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a4c3f43ec678e4b8b0c1855f1975da7a1">getList</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00266 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>&#32;==&#32;0)&#32;{
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_a;
00268 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>&#32;==&#32;1)&#32;{
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_b;
00270 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception(<emphasis role="stringliteral">&quot;This&#32;multi&#32;typed&#32;list&#32;does&#32;not&#32;have&#32;a&#32;list&#32;with&#32;id&#32;&quot;</emphasis>&#32;+&#32;<emphasis role="keywordtype">id</emphasis>);
00272 &#32;&#32;&#32;&#32;&#32;&#32;}
00273 &#32;&#32;&#32;&#32;}
00274 &#32;&#32;}
00275 
<anchor xml:id="__multi_typed_list_8cs_source_1l00276"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00276</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B&gt;
00277 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00278 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType
00279 &#32;&#32;&#32;&#32;where&#32;C&#32;:&#32;BaseType&#32;{
00280 
00281 &#32;&#32;&#32;&#32;[SerializeField]
00282 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;C&gt;&#32;_c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;C&gt;();
00283 
<anchor xml:id="__multi_typed_list_8cs_source_1l00284"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">00284</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">addInternal</link>(BaseType&#32;obj)&#32;{
00285 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj&#32;is&#32;C&#32;?&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(_c,&#32;obj,&#32;2)&#32;:&#32;base.addInternal(obj);
00286 &#32;&#32;&#32;&#32;}
00287 
<anchor xml:id="__multi_typed_list_8cs_source_1l00288"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">00288</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IList&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">getList</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00289 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;2&#32;?&#32;_c&#32;:&#32;base.getList(<emphasis role="keywordtype">id</emphasis>);
00290 &#32;&#32;&#32;&#32;}
00291 
<anchor xml:id="__multi_typed_list_8cs_source_1l00292"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">00292</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">Clear</link>()&#32;{
00293 &#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
00294 &#32;&#32;&#32;&#32;&#32;&#32;_c.Clear();
00295 &#32;&#32;&#32;&#32;}
00296 &#32;&#32;}
00297 
<anchor xml:id="__multi_typed_list_8cs_source_1l00298"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00298</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C&gt;
00299 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00300 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType
00301 &#32;&#32;&#32;&#32;where&#32;C&#32;:&#32;BaseType
00302 &#32;&#32;&#32;&#32;where&#32;D&#32;:&#32;BaseType&#32;{
00303 
00304 &#32;&#32;&#32;&#32;[SerializeField]
00305 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;D&gt;&#32;_d&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;D&gt;();
00306 
<anchor xml:id="__multi_typed_list_8cs_source_1l00307"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">00307</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">addInternal</link>(BaseType&#32;obj)&#32;{
00308 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj&#32;is&#32;D&#32;?&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(_d,&#32;obj,&#32;3)&#32;:&#32;base.addInternal(obj);
00309 &#32;&#32;&#32;&#32;}
00310 
<anchor xml:id="__multi_typed_list_8cs_source_1l00311"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">00311</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IList&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">getList</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;3&#32;?&#32;_d&#32;:&#32;base.getList(<emphasis role="keywordtype">id</emphasis>);
00313 &#32;&#32;&#32;&#32;}
00314 
<anchor xml:id="__multi_typed_list_8cs_source_1l00315"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">00315</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">Clear</link>()&#32;{
00316 &#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
00317 &#32;&#32;&#32;&#32;&#32;&#32;_d.Clear();
00318 &#32;&#32;&#32;&#32;}
00319 &#32;&#32;}
00320 
<anchor xml:id="__multi_typed_list_8cs_source_1l00321"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00321</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D,&#32;E&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D&gt;
00322 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00323 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType
00324 &#32;&#32;&#32;&#32;where&#32;C&#32;:&#32;BaseType
00325 &#32;&#32;&#32;&#32;where&#32;D&#32;:&#32;BaseType
00326 &#32;&#32;&#32;&#32;where&#32;E&#32;:&#32;BaseType&#32;{
00327 
00328 &#32;&#32;&#32;&#32;[SerializeField]
00329 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;E&gt;&#32;_e&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;E&gt;();
00330 
<anchor xml:id="__multi_typed_list_8cs_source_1l00331"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">00331</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">addInternal</link>(BaseType&#32;obj)&#32;{
00332 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj&#32;is&#32;E&#32;?&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(_e,&#32;obj,&#32;4)&#32;:&#32;base.addInternal(obj);
00333 &#32;&#32;&#32;&#32;}
00334 
<anchor xml:id="__multi_typed_list_8cs_source_1l00335"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">00335</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IList&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">getList</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;4&#32;?&#32;_e&#32;:&#32;base.getList(<emphasis role="keywordtype">id</emphasis>);
00337 &#32;&#32;&#32;&#32;}
00338 
<anchor xml:id="__multi_typed_list_8cs_source_1l00339"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">00339</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">Clear</link>()&#32;{
00340 &#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
00341 &#32;&#32;&#32;&#32;&#32;&#32;_e.Clear();
00342 &#32;&#32;&#32;&#32;}
00343 &#32;&#32;}
00344 
<anchor xml:id="__multi_typed_list_8cs_source_1l00345"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00345</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D,&#32;E,&#32;F&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D,&#32;E&gt;
00346 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00347 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType
00348 &#32;&#32;&#32;&#32;where&#32;C&#32;:&#32;BaseType
00349 &#32;&#32;&#32;&#32;where&#32;D&#32;:&#32;BaseType
00350 &#32;&#32;&#32;&#32;where&#32;E&#32;:&#32;BaseType
00351 &#32;&#32;&#32;&#32;where&#32;F&#32;:&#32;BaseType&#32;{
00352 
00353 &#32;&#32;&#32;&#32;[SerializeField]
00354 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;F&gt;&#32;_f&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;F&gt;();
00355 
<anchor xml:id="__multi_typed_list_8cs_source_1l00356"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">00356</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">addInternal</link>(BaseType&#32;obj)&#32;{
00357 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj&#32;is&#32;F&#32;?&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(_f,&#32;obj,&#32;5)&#32;:&#32;base.addInternal(obj);
00358 &#32;&#32;&#32;&#32;}
00359 
<anchor xml:id="__multi_typed_list_8cs_source_1l00360"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">00360</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IList&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">getList</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00361 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;5&#32;?&#32;_f&#32;:&#32;base.getList(<emphasis role="keywordtype">id</emphasis>);
00362 &#32;&#32;&#32;&#32;}
00363 
<anchor xml:id="__multi_typed_list_8cs_source_1l00364"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">00364</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">Clear</link>()&#32;{
00365 &#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
00366 &#32;&#32;&#32;&#32;&#32;&#32;_f.Clear();
00367 &#32;&#32;&#32;&#32;}
00368 &#32;&#32;}
00369 
<anchor xml:id="__multi_typed_list_8cs_source_1l00370"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00370</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D,&#32;E,&#32;F,&#32;G&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D,&#32;E,&#32;F&gt;
00371 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00372 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType
00373 &#32;&#32;&#32;&#32;where&#32;C&#32;:&#32;BaseType
00374 &#32;&#32;&#32;&#32;where&#32;D&#32;:&#32;BaseType
00375 &#32;&#32;&#32;&#32;where&#32;E&#32;:&#32;BaseType
00376 &#32;&#32;&#32;&#32;where&#32;F&#32;:&#32;BaseType
00377 &#32;&#32;&#32;&#32;where&#32;G&#32;:&#32;BaseType&#32;{
00378 
00379 &#32;&#32;&#32;&#32;[SerializeField]
00380 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;G&gt;&#32;_g&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;G&gt;();
00381 
<anchor xml:id="__multi_typed_list_8cs_source_1l00382"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">00382</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">addInternal</link>(BaseType&#32;obj)&#32;{
00383 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj&#32;is&#32;G&#32;?&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(_g,&#32;obj,&#32;6)&#32;:&#32;base.addInternal(obj);
00384 &#32;&#32;&#32;&#32;}
00385 
<anchor xml:id="__multi_typed_list_8cs_source_1l00386"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">00386</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IList&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">getList</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00387 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;6&#32;?&#32;_g&#32;:&#32;base.getList(<emphasis role="keywordtype">id</emphasis>);
00388 &#32;&#32;&#32;&#32;}
00389 
<anchor xml:id="__multi_typed_list_8cs_source_1l00390"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">00390</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">Clear</link>()&#32;{
00391 &#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
00392 &#32;&#32;&#32;&#32;&#32;&#32;_g.Clear();
00393 &#32;&#32;&#32;&#32;}
00394 &#32;&#32;}
00395 
<anchor xml:id="__multi_typed_list_8cs_source_1l00396"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">00396</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D,&#32;E,&#32;F,&#32;G,&#32;H&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">MultiTypedList</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D,&#32;E,&#32;F,&#32;G&gt;
00397 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00398 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType
00399 &#32;&#32;&#32;&#32;where&#32;C&#32;:&#32;BaseType
00400 &#32;&#32;&#32;&#32;where&#32;D&#32;:&#32;BaseType
00401 &#32;&#32;&#32;&#32;where&#32;E&#32;:&#32;BaseType
00402 &#32;&#32;&#32;&#32;where&#32;F&#32;:&#32;BaseType
00403 &#32;&#32;&#32;&#32;where&#32;G&#32;:&#32;BaseType
00404 &#32;&#32;&#32;&#32;where&#32;H&#32;:&#32;BaseType&#32;{
00405 
00406 &#32;&#32;&#32;&#32;[SerializeField]
00407 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;H&gt;&#32;_h&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;H&gt;();
00408 
<anchor xml:id="__multi_typed_list_8cs_source_1l00409"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">00409</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Key</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1ab3bb22f283fd2c48e6c7532e3f65edf9">addInternal</link>(BaseType&#32;obj)&#32;{
00410 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;obj&#32;is&#32;H&#32;?&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a5a270f05fdd75c1e93668695a6f0de7e">addHelper</link>(_h,&#32;obj,&#32;7)&#32;:&#32;base.addInternal(obj);
00411 &#32;&#32;&#32;&#32;}
00412 
<anchor xml:id="__multi_typed_list_8cs_source_1l00413"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">00413</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IList&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a79ac97de57efa0b33d0c12064307892f">getList</link>(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
00414 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;==&#32;7&#32;?&#32;_h&#32;:&#32;base.getList(<emphasis role="keywordtype">id</emphasis>);
00415 &#32;&#32;&#32;&#32;}
00416 
<anchor xml:id="__multi_typed_list_8cs_source_1l00417"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">00417</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_1a1f7b55121c627c45585b9f5043d4e701">Clear</link>()&#32;{
00418 &#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
00419 &#32;&#32;&#32;&#32;&#32;&#32;_h.Clear();
00420 &#32;&#32;&#32;&#32;}
00421 &#32;&#32;}
00422 }
</programlisting></section>
