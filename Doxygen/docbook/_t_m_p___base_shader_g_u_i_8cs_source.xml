<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__t_m_p___base_shader_g_u_i_8cs_source">
<title>TMP_BaseShaderGUI.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.textmeshpro@1.3.0/Scripts/Editor/TMP_BaseShaderGUI.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00002 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00003 
00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_t_m_pro_1_1_editor_utilities">TMPro.EditorUtilities</link>
00005 {
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00007"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i">00007</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i">TMP_BaseShaderGUI</link>&#32;:&#32;ShaderGUI
00008 &#32;&#32;&#32;&#32;{
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00011"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature">00011</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature">ShaderFeature</link>
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00013"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a470a351a75533f49366cae612b2d64eb">00013</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a470a351a75533f49366cae612b2d64eb">undoLabel</link>;
00014 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00015"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2f1b03dae7728b6db40d10b338fe7385">00015</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GUIContent&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2f1b03dae7728b6db40d10b338fe7385">label</link>;
00016 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00018"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a299154d3061dfbd825b081811e294ec8">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GUIContent[]&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a299154d3061dfbd825b081811e294ec8">keywordLabels</link>;
00019 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00021"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2b631a750e65c693953dc1d68799e074">00021</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2b631a750e65c693953dc1d68799e074">keywords</link>;
00022 
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m_State;
00024 
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a04247ec2161bb6a953fe1cda8054f44c">Active</link>
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00026"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a04247ec2161bb6a953fe1cda8054f44c">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_State&#32;&gt;=&#32;0;&#32;}
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00029 
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a65e226786c61edeb3d07814d02042632">State</link>
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00031"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a65e226786c61edeb3d07814d02042632">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_State;&#32;}
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00034 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00035"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a0dca9d0fb4ddc129cd29ee4d4079c788">00035</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a0dca9d0fb4ddc129cd29ee4d4079c788">ReadState</link>(Material&#32;material)
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2b631a750e65c693953dc1d68799e074">keywords</link>.Length;&#32;i++)
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(material.IsKeywordEnabled(<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2b631a750e65c693953dc1d68799e074">keywords</link>[i]))
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_State&#32;=&#32;i;
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00045 
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_State&#32;=&#32;-1;
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00048 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00049"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a27cd0346e0b4ec6aa5c0ffa566f94627">00049</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a27cd0346e0b4ec6aa5c0ffa566f94627">SetActive</link>(<emphasis role="keywordtype">bool</emphasis>&#32;active,&#32;Material&#32;material)
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_State&#32;=&#32;active&#32;?&#32;0&#32;:&#32;-1;
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetStateKeywords(material);
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00054 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00055"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a939172ac44e3efda12576a9572e001eb">00055</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a939172ac44e3efda12576a9572e001eb">DoPopup</link>(MaterialEditor&#32;editor,&#32;Material&#32;material)
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;selection&#32;=&#32;EditorGUILayout.Popup(<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2f1b03dae7728b6db40d10b338fe7385">label</link>,&#32;m_State&#32;+&#32;1,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a299154d3061dfbd825b081811e294ec8">keywordLabels</link>);
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_State&#32;=&#32;selection&#32;-&#32;1;
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;editor.RegisterPropertyChangeUndo(<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a470a351a75533f49366cae612b2d64eb">undoLabel</link>);
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetStateKeywords(material);
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00066 
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetStateKeywords(Material&#32;material)
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2b631a750e65c693953dc1d68799e074">keywords</link>.Length;&#32;i++)
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;m_State)
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.EnableKeyword(<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2b631a750e65c693953dc1d68799e074">keywords</link>[i]);
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material.DisableKeyword(<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a2b631a750e65c693953dc1d68799e074">keywords</link>[i]);
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00082 
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent&#32;s_TempLabel&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent();
00084 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00085"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a22d7e05eae9963523b827e20e4d02d66">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a22d7e05eae9963523b827e20e4d02d66">s_DebugExtended</link>;
00086 
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;s_UndoRedoCount,&#32;s_LastSeenUndoRedoCount;
00088 
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[][]&#32;s_TempFloats&#32;=
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>,&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[1],&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[2],&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[3],&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>[4]
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
00093 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00094"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a66f48583d3d9e461112efa8fc0e78695">00094</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent[]&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a66f48583d3d9e461112efa8fc0e78695">s_XywhVectorLabels</link>&#32;=
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;X&quot;</emphasis>),
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;Y&quot;</emphasis>),
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;W&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Width&quot;</emphasis>),
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;H&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Height&quot;</emphasis>)
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
00101 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00102"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a903a4fee71cd5e892772505489c02f70">00102</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GUIContent[]&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a903a4fee71cd5e892772505489c02f70">s_LbrtVectorLabels</link>&#32;=
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;L&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Left&quot;</emphasis>),
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;B&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Bottom&quot;</emphasis>),
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;R&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Right&quot;</emphasis>),
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(<emphasis role="stringliteral">&quot;T&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Top&quot;</emphasis>)
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
00109 
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i">TMP_BaseShaderGUI</link>()
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Keep&#32;track&#32;of&#32;how&#32;many&#32;undo/redo&#32;events&#32;happened.</emphasis>
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.undoRedoPerformed&#32;+=&#32;()&#32;=&gt;&#32;s_UndoRedoCount&#32;+=&#32;1;
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00115 
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_IsNewGUI&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00117 
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;m_DragAndDropMinY;
00119 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00120"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1ae42b49b4a8ac0302df2a897428d8c021">00120</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;MaterialEditor&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1ae42b49b4a8ac0302df2a897428d8c021">m_Editor</link>;
00121 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00122"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">00122</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;Material&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>;
00123 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00124"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1af34d65ed45b8cc1e90a2d1e61f4af8f7">00124</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;MaterialProperty[]&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1af34d65ed45b8cc1e90a2d1e61f4af8f7">m_Properties</link>;
00125 
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;PrepareGUI()
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_IsNewGUI&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShaderUtilities.GetShaderPropertyIDs();
00130 
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;New&#32;GUI&#32;just&#32;got&#32;constructed.&#32;This&#32;happens&#32;in&#32;response&#32;to&#32;a&#32;selection,</emphasis>
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;but&#32;also&#32;after&#32;undo/redo&#32;events.</emphasis>
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s_LastSeenUndoRedoCount&#32;!=&#32;s_UndoRedoCount)
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;There&apos;s&#32;been&#32;at&#32;least&#32;one&#32;undo/redo&#32;since&#32;the&#32;last&#32;time&#32;this&#32;GUI&#32;got&#32;constructed.</emphasis>
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Maybe&#32;the&#32;undo/redo&#32;was&#32;for&#32;this&#32;material?&#32;Assume&#32;that&#32;is&#32;was.</emphasis>
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.ON_MATERIAL_PROPERTY_CHANGED(<emphasis role="keyword">true</emphasis>,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>&#32;as&#32;Material);
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00139 
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_LastSeenUndoRedoCount&#32;=&#32;s_UndoRedoCount;
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00142 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00143"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a54fd1ffc1f5f8d62f4475a94b9d1942c">00143</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a54fd1ffc1f5f8d62f4475a94b9d1942c">OnGUI</link>(MaterialEditor&#32;materialEditor,&#32;MaterialProperty[]&#32;properties)
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1ae42b49b4a8ac0302df2a897428d8c021">m_Editor</link>&#32;=&#32;materialEditor;
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>&#32;=&#32;materialEditor.target&#32;as&#32;Material;
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this.m_Properties&#32;=&#32;properties;
00148 
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_IsNewGUI)
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PrepareGUI();
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00153 
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DoDragAndDropBegin();
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a04c57cff2c8f6cf93b5bf50209ef9f5f">DoGUI</link>();
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.ON_MATERIAL_PROPERTY_CHANGED(<emphasis role="keyword">true</emphasis>,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>);
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00161 
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DoDragAndDropEnd();
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00164 
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a04c57cff2c8f6cf93b5bf50209ef9f5f">DoGUI</link>();
00167 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00168"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a025663da6334820f0831da1f2b93acb4">00168</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a025663da6334820f0831da1f2b93acb4">BeginPanel</link>(<emphasis role="keywordtype">string</emphasis>&#32;panel,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;expanded)
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginVertical(EditorStyles.helpBox);
00171 
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;EditorGUI.IndentedRect(GUILayoutUtility.GetRect(20,&#32;18));
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.x&#32;+=&#32;20;
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.width&#32;+=&#32;6;
00175 
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;enabled&#32;=&#32;GUI.enabled;
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expanded&#32;=&#32;TMP_EditorUtility.EditorToggle(r,&#32;expanded,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(panel),&#32;TMP_UIStyleManager.panelTitle);
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.enabled&#32;=&#32;enabled;
00180 
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;+=&#32;1;
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(<emphasis role="keyword">false</emphasis>);
00183 
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;expanded;
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00186 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00187"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1afe82d9e4c02166aa2223f7b4bb64e479">00187</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1afe82d9e4c02166aa2223f7b4bb64e479">BeginPanel</link>(<emphasis role="keywordtype">string</emphasis>&#32;panel,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature">ShaderFeature</link>&#32;feature,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;expanded,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;readState&#32;=&#32;<emphasis role="keyword">true</emphasis>)
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(readState)
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feature.<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a0dca9d0fb4ddc129cd29ee4d4079c788">ReadState</link>(<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>);
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00193 
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
00195 
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.BeginVertical(EditorStyles.helpBox);
00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.BeginHorizontal();
00198 
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;r&#32;=&#32;EditorGUI.IndentedRect(GUILayoutUtility.GetRect(20,&#32;20,&#32;GUILayout.Width(20f)));
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;active&#32;=&#32;EditorGUI.Toggle(r,&#32;feature.<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a04247ec2161bb6a953fe1cda8054f44c">Active</link>);
00201 
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EditorGUI.EndChangeCheck())
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1ae42b49b4a8ac0302df2a897428d8c021">m_Editor</link>.RegisterPropertyChangeUndo(feature.<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a470a351a75533f49366cae612b2d64eb">undoLabel</link>);
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;feature.<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature_1a27cd0346e0b4ec6aa5c0ffa566f94627">SetActive</link>(active,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>);
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00207 
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;EditorGUI.IndentedRect(GUILayoutUtility.GetRect(20,&#32;18));
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.width&#32;+=&#32;6;
00210 
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;enabled&#32;=&#32;GUI.enabled;
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.enabled&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expanded&#32;=&#32;TMP_EditorUtility.EditorToggle(r,&#32;expanded,&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(panel),&#32;TMP_UIStyleManager.panelTitle);
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUI.enabled&#32;=&#32;enabled;
00215 
00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GUILayout.EndHorizontal();
00217 
00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;+=&#32;1;
00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(!active);
00220 
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;expanded;
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00223 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00224"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1ae4663303cae2be2a85d7e82475743902">00224</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1ae4663303cae2be2a85d7e82475743902">EndPanel</link>()
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;-=&#32;1;
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.EndVertical();
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00230 
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;BeginProperty(<emphasis role="keywordtype">string</emphasis>&#32;name)
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;FindProperty(name,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1af34d65ed45b8cc1e90a2d1e61f4af8f7">m_Properties</link>);
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;<emphasis role="keyword">property</emphasis>.hasMixedValue;
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1ae42b49b4a8ac0302df2a897428d8c021">m_Editor</link>.BeginAnimatedCheck(Rect.zero,&#32;property);
00237 
00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;property;
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00240 
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;EndProperty()
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1ae42b49b4a8ac0302df2a897428d8c021">m_Editor</link>.EndAnimatedCheck();
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EditorGUI.EndChangeCheck();
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00247 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00248"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a89a098396bd3d15f1657932e598cd989">00248</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a89a098396bd3d15f1657932e598cd989">DoPopup</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label,&#32;GUIContent[]&#32;options)
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;EditorGUILayout.Popup(s_TempLabel,&#32;(<emphasis role="keywordtype">int</emphasis>)property.floatValue,&#32;options);
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.floatValue&#32;=&#32;index;
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00258 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00259"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a4a49537dbf39132cc76f9f7aa54b3ccb">00259</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a4a49537dbf39132cc76f9f7aa54b3ccb">DoCubeMap</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label)
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DoTexture(name,&#32;label,&#32;typeof(Cubemap));
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00263 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00264"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1abdebef0320477a84a0a1fa5ed036866b">00264</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1abdebef0320477a84a0a1fa5ed036866b">DoTexture2D</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;withTilingOffset&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;speedNames&#32;=&#32;<emphasis role="keyword">null</emphasis>)
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DoTexture(name,&#32;label,&#32;typeof(Texture2D),&#32;withTilingOffset,&#32;speedNames);
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00268 
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DoTexture(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label,&#32;System.Type&#32;type,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;withTilingOffset&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;speedNames&#32;=&#32;<emphasis role="keyword">null</emphasis>)
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;rect&#32;=&#32;EditorGUILayout.GetControlRect(<emphasis role="keyword">true</emphasis>,&#32;60f);
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;totalWidth&#32;=&#32;rect.width;
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.width&#32;=&#32;EditorGUIUtility.labelWidth&#32;+&#32;60f;
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>&#32;tex&#32;=&#32;EditorGUI.ObjectField(rect,&#32;s_TempLabel,&#32;property.textureValue,&#32;type,&#32;<emphasis role="keyword">false</emphasis>);
00277 
00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.textureValue&#32;=&#32;tex&#32;as&#32;Texture;
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00282 
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.x&#32;+=&#32;rect.width&#32;+&#32;4f;
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.width&#32;=&#32;totalWidth&#32;-&#32;rect.width&#32;-&#32;4f;
00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.height&#32;=&#32;EditorGUIUtility.singleLineHeight;
00286 
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(withTilingOffset)
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DoTilingOffset(rect,&#32;property);
00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.y&#32;+=&#32;(rect.height&#32;+&#32;2f)&#32;*&#32;2f;
00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00292 
00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(speedNames&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1aae11df19c3e706f686799da96eab4ea8">DoUVSpeed</link>(rect,&#32;speedNames);
00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00298 
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DoTilingOffset(Rect&#32;rect,&#32;MaterialProperty&#32;property)
00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;labelWidth&#32;=&#32;EditorGUIUtility.labelWidth;
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;indentLevel&#32;=&#32;EditorGUI.indentLevel;
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUIUtility.labelWidth&#32;=&#32;Mathf.Min(40f,&#32;rect.width&#32;*&#32;0.20f);
00305 
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector4&#32;vector&#32;=&#32;<emphasis role="keyword">property</emphasis>.textureScaleAndOffset;
00307 
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;changed&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;values&#32;=&#32;s_TempFloats[2];
00310 
00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;<emphasis role="stringliteral">&quot;Tiling&quot;</emphasis>;
00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;vectorRect&#32;=&#32;EditorGUI.PrefixLabel(rect,&#32;s_TempLabel);
00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values[0]&#32;=&#32;vector.x;
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values[1]&#32;=&#32;vector.y;
00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.MultiFloatField(vectorRect,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a66f48583d3d9e461112efa8fc0e78695">s_XywhVectorLabels</link>,&#32;values);
00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector.x&#32;=&#32;values[0];
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector.y&#32;=&#32;values[1];
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changed&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00323 
00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.y&#32;+=&#32;rect.height&#32;+&#32;2f;
00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;<emphasis role="stringliteral">&quot;Offset&quot;</emphasis>;
00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vectorRect&#32;=&#32;EditorGUI.PrefixLabel(rect,&#32;s_TempLabel);
00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values[0]&#32;=&#32;vector.z;
00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values[1]&#32;=&#32;vector.w;
00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginChangeCheck();
00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.MultiFloatField(vectorRect,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a66f48583d3d9e461112efa8fc0e78695">s_XywhVectorLabels</link>,&#32;values);
00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector.z&#32;=&#32;values[0];
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector.w&#32;=&#32;values[1];
00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;changed&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00337 
00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(changed)
00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.textureScaleAndOffset&#32;=&#32;vector;
00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00342 
00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUIUtility.labelWidth&#32;=&#32;labelWidth;
00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;indentLevel;
00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00346 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00347"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1aae11df19c3e706f686799da96eab4ea8">00347</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1aae11df19c3e706f686799da96eab4ea8">DoUVSpeed</link>(Rect&#32;rect,&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;names)
00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;labelWidth&#32;=&#32;EditorGUIUtility.labelWidth;
00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;indentLevel&#32;=&#32;EditorGUI.indentLevel;
00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;0;
00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUIUtility.labelWidth&#32;=&#32;Mathf.Min(40f,&#32;rect.width&#32;*&#32;0.20f);
00353 
00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;<emphasis role="stringliteral">&quot;Speed&quot;</emphasis>;
00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect&#32;=&#32;EditorGUI.PrefixLabel(rect,&#32;s_TempLabel);
00356 
00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUIUtility.labelWidth&#32;=&#32;13f;
00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.width&#32;=&#32;rect.width&#32;*&#32;0.5f&#32;-&#32;1f;
00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a1d899f08dbbdbea230663af27915bd00">DoFloat</link>(rect,&#32;names[0],&#32;<emphasis role="stringliteral">&quot;X&quot;</emphasis>);
00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.x&#32;+=&#32;rect.width&#32;+&#32;2f;
00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a1d899f08dbbdbea230663af27915bd00">DoFloat</link>(rect,&#32;names[1],&#32;<emphasis role="stringliteral">&quot;Y&quot;</emphasis>);
00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUIUtility.labelWidth&#32;=&#32;labelWidth;
00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.indentLevel&#32;=&#32;indentLevel;
00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00365 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00366"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a3197f15b4a17cdac8e7c1330c4fb4630">00366</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a3197f15b4a17cdac8e7c1330c4fb4630">DoToggle</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label)
00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value&#32;=&#32;EditorGUILayout.Toggle(s_TempLabel,&#32;property.floatValue&#32;==&#32;1f);
00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.floatValue&#32;=&#32;value&#32;?&#32;1f&#32;:&#32;0f;
00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00376 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00377"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a1d899f08dbbdbea230663af27915bd00">00377</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a1d899f08dbbdbea230663af27915bd00">DoFloat</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label)
00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;rect&#32;=&#32;EditorGUILayout.GetControlRect();
00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.width&#32;=&#32;EditorGUIUtility.labelWidth&#32;+&#32;55f;
00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;value&#32;=&#32;EditorGUI.FloatField(rect,&#32;s_TempLabel,&#32;property.floatValue);
00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.floatValue&#32;=&#32;value;
00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00389 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00390"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a7f787e8efc629d8f87d64cf39b3b90ea">00390</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a7f787e8efc629d8f87d64cf39b3b90ea">DoColor</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label)
00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;value&#32;=&#32;EditorGUI.ColorField(EditorGUILayout.GetControlRect(),&#32;s_TempLabel,&#32;<emphasis role="keyword">property</emphasis>.colorValue);
00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.colorValue&#32;=&#32;value;
00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00400 
00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a1d899f08dbbdbea230663af27915bd00">DoFloat</link>(Rect&#32;rect,&#32;<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label)
00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;value&#32;=&#32;EditorGUI.FloatField(rect,&#32;s_TempLabel,&#32;property.floatValue);
00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.floatValue&#32;=&#32;value;
00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00411 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00412"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a9278fc8116e980740730349bb7eefae1">00412</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a9278fc8116e980740730349bb7eefae1">DoSlider</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label)
00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector2&#32;range&#32;=&#32;<emphasis role="keyword">property</emphasis>.rangeLimits;
00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;value&#32;=&#32;EditorGUI.Slider(
00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.GetControlRect(),&#32;s_TempLabel,&#32;<emphasis role="keyword">property</emphasis>.floatValue,&#32;range.x,&#32;range.y
00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.floatValue&#32;=&#32;value;
00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00425 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00426"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1aab81e299b6bf1facf1516791363f506a">00426</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1aab81e299b6bf1facf1516791363f506a">DoVector3</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label)
00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector4&#32;value&#32;=&#32;EditorGUILayout.Vector3Field(s_TempLabel,&#32;property.vectorValue);
00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.vectorValue&#32;=&#32;value;
00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00436 
<anchor xml:id="__t_m_p___base_shader_g_u_i_8cs_source_1l00437"/><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a6eea04ec09167d1fb27859fa72ceccdb">00437</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a6eea04ec09167d1fb27859fa72ceccdb">DoVector</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">string</emphasis>&#32;label,&#32;GUIContent[]&#32;subLabels)
00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MaterialProperty&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;BeginProperty(name);
00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;rect&#32;=&#32;EditorGUILayout.GetControlRect();
00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s_TempLabel.text&#32;=&#32;label;
00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect&#32;=&#32;EditorGUI.PrefixLabel(rect,&#32;s_TempLabel);
00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector4&#32;vector&#32;=&#32;<emphasis role="keyword">property</emphasis>.vectorValue;
00444 
00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>[]&#32;values&#32;=&#32;s_TempFloats[subLabels.Length];
00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;subLabels.Length;&#32;i++)
00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values[i]&#32;=&#32;vector[i];
00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00450 
00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.MultiFloatField(rect,&#32;subLabels,&#32;values);
00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EndProperty())
00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;subLabels.Length;&#32;i++)
00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector[i]&#32;=&#32;values[i];
00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00458 
00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.vectorValue&#32;=&#32;vector;
00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00462 
00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DoDragAndDropBegin()
00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_DragAndDropMinY&#32;=&#32;GUILayoutUtility.GetRect(0f,&#32;0f,&#32;GUILayout.ExpandWidth(<emphasis role="keyword">true</emphasis>)).y;
00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00467 
00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DoDragAndDropEnd()
00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;rect&#32;=&#32;GUILayoutUtility.GetRect(0f,&#32;0f,&#32;GUILayout.ExpandWidth(<emphasis role="keyword">true</emphasis>));
00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Event&#32;evt&#32;=&#32;Event.current;
00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(evt.type&#32;==&#32;EventType.DragUpdated)
00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DragAndDrop.visualMode&#32;=&#32;DragAndDropVisualMode.Generic;
00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evt.Use();
00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(
00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evt.type&#32;==&#32;EventType.DragPerform&#32;&amp;&amp;
00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rect.MinMaxRect(rect.xMin,&#32;m_DragAndDropMinY,&#32;rect.xMax,&#32;rect.yMax).Contains(evt.mousePosition)
00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DragAndDrop.AcceptDrag();
00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;evt.Use();
00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Material&#32;droppedMaterial&#32;=&#32;DragAndDrop.objectReferences[0]&#32;as&#32;Material;
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(droppedMaterial&#32;&amp;&amp;&#32;droppedMaterial&#32;!=&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>)
00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PerformDrop(droppedMaterial);
00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00491 
00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;PerformDrop(Material&#32;droppedMaterial)
00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Texture&#32;droppedTex&#32;=&#32;droppedMaterial.GetTexture(ShaderUtilities.ID_MainTex);
00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!droppedTex)
00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00499 
00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Texture&#32;currentTex&#32;=&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>.GetTexture(ShaderUtilities.ID_MainTex);
00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_FontAsset&#32;requiredFontAsset&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(droppedTex&#32;!=&#32;currentTex)
00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;requiredFontAsset&#32;=&#32;TMP_EditorUtility.FindMatchingFontAsset(droppedMaterial);
00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!requiredFontAsset)
00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00510 
00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(GameObject&#32;o&#32;<emphasis role="keywordflow">in</emphasis>&#32;Selection.gameObjects)
00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(requiredFontAsset)
00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_Text&#32;textComponent&#32;=&#32;o.GetComponent&lt;TMP_Text&gt;();
00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(textComponent)
00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Undo.RecordObject(textComponent,&#32;<emphasis role="stringliteral">&quot;Font&#32;Asset&#32;Change&quot;</emphasis>);
00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textComponent.font&#32;=&#32;requiredFontAsset;
00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00522 
00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMPro_EventManager.ON_DRAG_AND_DROP_MATERIAL_CHANGED(o,&#32;<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1a2cad2ee0e2fb562872b5dded13294a1c">m_Material</link>,&#32;droppedMaterial);
00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.SetDirty(o);
00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00527 &#32;&#32;&#32;&#32;}
00528 }
</programlisting></section>
