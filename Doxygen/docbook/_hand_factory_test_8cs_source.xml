<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hand_factory_test_8cs_source">
<title>HandFactoryTest.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/Tests/HandFactoryTest.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;NUnit.Framework;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_tests">Leap.Unity.Tests</link>&#32;{
00014 
00015 &#32;&#32;[TestFixture(Category&#32;=&#32;<emphasis role="stringliteral">&quot;TestHandFactory&quot;</emphasis>)]
<anchor xml:id="__hand_factory_test_8cs_source_1l00016"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands">00016</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands">HandFactoryTwoHands</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_frame_validator">FrameValidator</link>&#32;{
<anchor xml:id="__hand_factory_test_8cs_source_1l00017"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1ab929744527e15f0ad07ff17d0e867355">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1ab929744527e15f0ad07ff17d0e867355">createFrame</link>()&#32;{
00018 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;TestHandFactory.MakeTestFrame(0,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
00019 &#32;&#32;&#32;&#32;}
00020 
00021 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__hand_factory_test_8cs_source_1l00022"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1acf5d61eadd85814d90e0dd53b014fd6f">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands_1acf5d61eadd85814d90e0dd53b014fd6f">CorrectHandCount</link>()&#32;{
00023 &#32;&#32;&#32;&#32;&#32;&#32;Assert.That(<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab0fd118aae62aad4db938a4e919f237b">_frame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Count,&#32;Is.EqualTo(2));
00024 &#32;&#32;&#32;&#32;}
00025 &#32;&#32;}
00026 
00027 &#32;&#32;[TestFixture(Category&#32;=&#32;<emphasis role="stringliteral">&quot;TestHandFactory&quot;</emphasis>)]
<anchor xml:id="__hand_factory_test_8cs_source_1l00028"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left">00028</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left">HandFactoryLeft</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_frame_validator">FrameValidator</link>&#32;{
<anchor xml:id="__hand_factory_test_8cs_source_1l00029"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1aee2926151ba99102d58cbefb2a029b06">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1aee2926151ba99102d58cbefb2a029b06">createFrame</link>()&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;TestHandFactory.MakeTestFrame(0,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
00031 &#32;&#32;&#32;&#32;}
00032 
00033 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__hand_factory_test_8cs_source_1l00034"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1a6783dd99b0fda3636aa43e7512ecf4dc">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left_1a6783dd99b0fda3636aa43e7512ecf4dc">CorrectHandCount</link>()&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;Assert.That(<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab0fd118aae62aad4db938a4e919f237b">_frame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Count,&#32;Is.EqualTo(1));
00036 &#32;&#32;&#32;&#32;}
00037 &#32;&#32;}
00038 
00039 &#32;&#32;[TestFixture(Category&#32;=&#32;<emphasis role="stringliteral">&quot;TestHandFactory&quot;</emphasis>)]
<anchor xml:id="__hand_factory_test_8cs_source_1l00040"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right">00040</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right">HandFactoryRight</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_frame_validator">FrameValidator</link>&#32;{
<anchor xml:id="__hand_factory_test_8cs_source_1l00041"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a78c8a9a73c6c7e18c0eb8890e39d64b5">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a78c8a9a73c6c7e18c0eb8890e39d64b5">createFrame</link>()&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;TestHandFactory.MakeTestFrame(0,&#32;<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">true</emphasis>);
00043 &#32;&#32;&#32;&#32;}
00044 
00045 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__hand_factory_test_8cs_source_1l00046"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a96faa3acb560751fb8c44712666b111a">00046</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right_1a96faa3acb560751fb8c44712666b111a">CorrectHandCount</link>()&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;Assert.That(<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_frame_validator_1ab0fd118aae62aad4db938a4e919f237b">_frame</link>.<link linkend="_class_leap_1_1_frame_1af0281471fb3831307b40a1124565d069">Hands</link>.Count,&#32;Is.EqualTo(1));
00048 &#32;&#32;&#32;&#32;}
00049 &#32;&#32;}
00050 }
</programlisting></section>
