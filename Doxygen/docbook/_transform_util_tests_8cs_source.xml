<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__transform_util_tests_8cs_source">
<title>TransformUtilTests.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Editor/TransformUtilTests.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;NUnit.Framework;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_tests">Leap.Unity.Tests</link>&#32;{
00014 
<anchor xml:id="__transform_util_tests_8cs_source_1l00015"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests">00015</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests">TransformUtilTests</link>&#32;{
00016 
00017 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_gameObject;
00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_child;
00019 
00020 &#32;&#32;&#32;&#32;[SetUp]
<anchor xml:id="__transform_util_tests_8cs_source_1l00021"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests_1abf48c82570a14d1f7afda726811af176">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests_1abf48c82570a14d1f7afda726811af176">Setup</link>()&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;_gameObject&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(<emphasis role="stringliteral">&quot;__TEST&#32;OBJECT__&quot;</emphasis>);
00023 &#32;&#32;&#32;&#32;&#32;&#32;_child&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(<emphasis role="stringliteral">&quot;__CHILD&#32;OBJECT__&quot;</emphasis>);
00024 &#32;&#32;&#32;&#32;&#32;&#32;_child.transform.SetParent(_gameObject.transform);
00025 &#32;&#32;&#32;&#32;&#32;&#32;_gameObject.transform.rotation&#32;=&#32;Quaternion.Euler(45,&#32;123,&#32;888);
00026 &#32;&#32;&#32;&#32;&#32;&#32;_child.transform.rotation&#32;=&#32;Quaternion.Euler(2,&#32;44,&#32;99);
00027 &#32;&#32;&#32;&#32;}
00028 
00029 &#32;&#32;&#32;&#32;[TearDown]
<anchor xml:id="__transform_util_tests_8cs_source_1l00030"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests_1adb2d1af83326a798e02e511671c97622">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests_1adb2d1af83326a798e02e511671c97622">Teardown</link>()&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>.DestroyImmediate(_child);
00032 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>.DestroyImmediate(_gameObject);
00033 &#32;&#32;&#32;&#32;&#32;&#32;_child&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00034 &#32;&#32;&#32;&#32;&#32;&#32;_gameObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00035 &#32;&#32;&#32;&#32;}
00036 
00037 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__transform_util_tests_8cs_source_1l00038"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests_1af0a56cc42f436b16a73730c2e848c11a">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests_1af0a56cc42f436b16a73730c2e848c11a">TransformRotationTest</link>()&#32;{
00039 &#32;&#32;&#32;&#32;&#32;&#32;AssertAlmostEqual(_gameObject.transform.TransformRotation(_child.transform.localRotation),
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_child.transform.rotation);
00041 &#32;&#32;&#32;&#32;}
00042 
00043 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__transform_util_tests_8cs_source_1l00044"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests_1ac85a9fc1586adc8f7a48085272473e51">00044</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests_1ac85a9fc1586adc8f7a48085272473e51">InverseTransformRotationTest</link>()&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;AssertAlmostEqual(_gameObject.transform.InverseTransformRotation(_child.transform.rotation),
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_child.transform.localRotation);
00047 &#32;&#32;&#32;&#32;}
00048 
00049 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;AssertAlmostEqual(Quaternion&#32;a,&#32;Quaternion&#32;b)&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;4;&#32;i++)&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.That(a[i],&#32;Is.EqualTo(b[i]).Within(10).Ulps);
00052 &#32;&#32;&#32;&#32;&#32;&#32;}
00053 &#32;&#32;&#32;&#32;}
00054 &#32;&#32;}
00055 }
</programlisting></section>
