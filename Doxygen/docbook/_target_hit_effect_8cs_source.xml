<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__target_hit_effect_8cs_source">
<title>TargetHitEffect.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Samples/Scripts/TargetHitEffect.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//=======&#32;Copyright&#32;(c)&#32;Valve&#32;Corporation,&#32;All&#32;rights&#32;reserved.&#32;===============</emphasis>
00002 
00003 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00004 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00005 
00006 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system_1_1_sample">Valve.VR.InteractionSystem.Sample</link>
00007 {
<anchor xml:id="__target_hit_effect_8cs_source_1l00008"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect">TargetHitEffect</link>&#32;:&#32;MonoBehaviour
00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__target_hit_effect_8cs_source_1l00010"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1aafe4a35a98ead9da4f8803254c6424db">00010</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Collider&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1aafe4a35a98ead9da4f8803254c6424db">targetCollider</link>;
00011 
<anchor xml:id="__target_hit_effect_8cs_source_1l00012"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a244704587b7af61f4f4db6a468d3ba15">00012</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a244704587b7af61f4f4db6a468d3ba15">spawnObjectOnCollision</link>;
00013 
<anchor xml:id="__target_hit_effect_8cs_source_1l00014"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a5c11a940cab930d25512640b536fab62">00014</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a5c11a940cab930d25512640b536fab62">colorSpawnedObject</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00015 
<anchor xml:id="__target_hit_effect_8cs_source_1l00016"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a3d2c45d41716edeeefdc0ea10c7a0db9">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a3d2c45d41716edeeefdc0ea10c7a0db9">destroyOnTargetCollision</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00017 
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCollisionEnter(Collision&#32;collision)
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision.collider&#32;==&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1aafe4a35a98ead9da4f8803254c6424db">targetCollider</link>)
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContactPoint&#32;contact&#32;=&#32;collision.contacts[0];
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RaycastHit&#32;hit;
00024 
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;backTrackLength&#32;=&#32;1f;
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ray&#32;ray&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Ray(contact.point&#32;-&#32;(-contact.normal&#32;*&#32;backTrackLength),&#32;-contact.normal);
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision.collider.Raycast(ray,&#32;out&#32;hit,&#32;2))
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a5c11a940cab930d25512640b536fab62">colorSpawnedObject</link>)
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Renderer&#32;renderer&#32;=&#32;collision.gameObject.GetComponent&lt;Renderer&gt;();
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Texture2D&#32;tex&#32;=&#32;(Texture2D)renderer.material.mainTexture;
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;color&#32;=&#32;tex.GetPixelBilinear(hit.textureCoord.x,&#32;hit.textureCoord.y);
00034 
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(color.r&#32;&gt;&#32;0.7f&#32;&amp;&amp;&#32;color.g&#32;&gt;&#32;0.7f&#32;&amp;&amp;&#32;color.b&#32;&lt;&#32;0.7f)
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;Color.yellow;
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Mathf.Max(color.r,&#32;color.g,&#32;color.b)&#32;==&#32;color.r)
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;Color.red;
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;if&#32;(Mathf.Max(color.r,&#32;color.g,&#32;color.b)&#32;==&#32;color.g)
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;Color.green;
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;=&#32;Color.yellow;
00043 
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color&#32;*=&#32;15f;
00045 
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;spawned&#32;=&#32;GameObject.Instantiate(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a244704587b7af61f4f4db6a468d3ba15">spawnObjectOnCollision</link>);
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spawned.transform.position&#32;=&#32;contact.point;
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spawned.transform.forward&#32;=&#32;ray.direction;
00049 
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Renderer[]&#32;spawnedRenderers&#32;=&#32;spawned.GetComponentsInChildren&lt;Renderer&gt;();
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;rendererIndex&#32;=&#32;0;&#32;rendererIndex&#32;&lt;&#32;spawnedRenderers.Length;&#32;rendererIndex++)
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Renderer&#32;spawnedRenderer&#32;=&#32;spawnedRenderers[rendererIndex];
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spawnedRenderer.material.color&#32;=&#32;color;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(spawnedRenderer.material.HasProperty(<emphasis role="stringliteral">&quot;_EmissionColor&quot;</emphasis>))
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spawnedRenderer.material.SetColor(<emphasis role="stringliteral">&quot;_EmissionColor&quot;</emphasis>,&#32;color);
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.DrawRay(ray.origin,&#32;ray.direction,&#32;Color.cyan,&#32;5,&#32;<emphasis role="keyword">true</emphasis>);
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect_1a3d2c45d41716edeeefdc0ea10c7a0db9">destroyOnTargetCollision</link>)
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(this.gameObject);
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00068 &#32;&#32;&#32;&#32;}
00069 }
</programlisting></section>
