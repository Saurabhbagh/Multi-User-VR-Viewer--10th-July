<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__t_m_p___post_build_process_handler_8cs_source">
<title>TMP_PostBuildProcessHandler.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.textmeshpro@1.3.0/Scripts/Editor/TMP_PostBuildProcessHandler.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00002 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00003 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>.Callbacks;
00004 <emphasis role="keyword">using</emphasis>&#32;System.IO;
00005 
00006 
00007 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_t_m_pro">TMPro</link>
00008 {
<anchor xml:id="__t_m_p___post_build_process_handler_8cs_source_1l00009"/><link linkend="_class_t_m_pro_1_1_t_m_p___post_build_process_handler">00009</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_t_m_pro_1_1_t_m_p___post_build_process_handler">TMP_PostBuildProcessHandler</link>
00010 &#32;&#32;&#32;&#32;{
00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[PostProcessBuildAttribute(10000)]
<anchor xml:id="__t_m_p___post_build_process_handler_8cs_source_1l00012"/><link linkend="_class_t_m_pro_1_1_t_m_p___post_build_process_handler_1a9bde99d05c661af7fece9c790de8905a">00012</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___post_build_process_handler_1a9bde99d05c661af7fece9c790de8905a">OnPostprocessBuild</link>(BuildTarget&#32;target,&#32;<emphasis role="keywordtype">string</emphasis>&#32;pathToBuiltProject)
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;TMP&#32;Essential&#32;Resource&#32;are&#32;present&#32;in&#32;user&#32;project.</emphasis>
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(target&#32;==&#32;BuildTarget.iOS&#32;&amp;&amp;&#32;File.Exists(GetEssentialProjectResourcesPath()&#32;+&#32;<emphasis role="stringliteral">&quot;/Resources/TMP&#32;Settings.asset&quot;</emphasis>)&#32;&amp;&amp;&#32;<link linkend="_class_t_m_pro_1_1_t_m_p___settings">TMP_Settings</link>.<link linkend="_class_t_m_pro_1_1_t_m_p___settings_1a6648f385cc57147ebb46f8cd159e78c9">enableEmojiSupport</link>)
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;file&#32;=&#32;Path.Combine(pathToBuiltProject,&#32;<emphasis role="stringliteral">&quot;Classes/UI/Keyboard.mm&quot;</emphasis>);
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;content&#32;=&#32;File.ReadAllText(file);
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;content.Replace(<emphasis role="stringliteral">&quot;FILTER_EMOJIS_IOS_KEYBOARD&#32;1&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;FILTER_EMOJIS_IOS_KEYBOARD&#32;0&quot;</emphasis>);
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File.WriteAllText(file,&#32;content);
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00023 
00024 
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;GetEssentialProjectResourcesPath()
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;the&#32;potential&#32;location&#32;of&#32;the&#32;TextMesh&#32;Pro&#32;folder&#32;in&#32;the&#32;user&#32;project.</emphasis>
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;projectPath&#32;=&#32;Path.GetFullPath(<emphasis role="stringliteral">&quot;Assets/..&quot;</emphasis>);
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Directory.Exists(projectPath))
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Search&#32;for&#32;default&#32;location&#32;of&#32;TMP&#32;Essential&#32;Resources</emphasis>
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Directory.Exists(projectPath&#32;+&#32;<emphasis role="stringliteral">&quot;/Assets/TextMesh&#32;Pro/Resources&quot;</emphasis>))
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;Assets/TextMesh&#32;Pro&quot;</emphasis>;
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00036 
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Search&#32;for&#32;potential&#32;alternative&#32;locations&#32;in&#32;the&#32;user&#32;project</emphasis>
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>[]&#32;matchingPaths&#32;=&#32;Directory.GetDirectories(projectPath,&#32;<emphasis role="stringliteral">&quot;TextMesh&#32;Pro&quot;</emphasis>,&#32;SearchOption.AllDirectories);
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;projectPath&#32;=&#32;ValidateLocation(matchingPaths,&#32;projectPath);
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(projectPath&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;projectPath;
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00042 
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00045 
00046 
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ValidateLocation(<emphasis role="keywordtype">string</emphasis>[]&#32;paths,&#32;<emphasis role="keywordtype">string</emphasis>&#32;projectPath)
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;paths.Length;&#32;i++)
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;any&#32;of&#32;the&#32;matching&#32;directories&#32;contain&#32;a&#32;GUISkins&#32;directory.</emphasis>
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Directory.Exists(paths[i]&#32;+&#32;<emphasis role="stringliteral">&quot;/Resources&quot;</emphasis>))
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;folderPath&#32;=&#32;paths[i].Replace(projectPath,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;folderPath&#32;=&#32;folderPath.TrimStart(<emphasis role="charliteral">&apos;\\&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;/&apos;</emphasis>);
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;folderPath;
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00059 
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00062 &#32;&#32;&#32;&#32;}
00063 }
</programlisting></section>
