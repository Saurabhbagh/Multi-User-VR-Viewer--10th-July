<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__simple_interaction_glow_8cs_source">
<title>SimpleInteractionGlow.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Examples/Common Example Assets/Scripts/SimpleInteractionGlow.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link>;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00015 
00021 [AddComponentMenu(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
00022 [RequireComponent(typeof(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link>))]
<anchor xml:id="__simple_interaction_glow_8cs_source_1l00023"/><link linkend="_class_simple_interaction_glow">00023</link> <emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_simple_interaction_glow">SimpleInteractionGlow</link>&#32;:&#32;MonoBehaviour&#32;{
00024 
00025 &#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;If&#32;enabled,&#32;the&#32;object&#32;will&#32;lerp&#32;to&#32;its&#32;hoverColor&#32;when&#32;a&#32;hand&#32;is&#32;nearby.&quot;</emphasis>)]
<anchor xml:id="__simple_interaction_glow_8cs_source_1l00026"/><link linkend="_class_simple_interaction_glow_1a346b18ca3d0426fbfc5079e02c515e71">00026</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_simple_interaction_glow_1a346b18ca3d0426fbfc5079e02c515e71">useHover</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00027 
00028 &#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;If&#32;enabled,&#32;the&#32;object&#32;will&#32;use&#32;its&#32;primaryHoverColor&#32;when&#32;the&#32;primary&#32;hover&#32;of&#32;an&#32;InteractionHand.&quot;</emphasis>)]
<anchor xml:id="__simple_interaction_glow_8cs_source_1l00029"/><link linkend="_class_simple_interaction_glow_1a5c714fc869447c5e0d485b0122188055">00029</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_simple_interaction_glow_1a5c714fc869447c5e0d485b0122188055">usePrimaryHover</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00030 
00031 &#32;&#32;[Header(<emphasis role="stringliteral">&quot;InteractionBehaviour&#32;Colors&quot;</emphasis>)]
<anchor xml:id="__simple_interaction_glow_8cs_source_1l00032"/><link linkend="_class_simple_interaction_glow_1a00cd6d0367cc6ad0f3fc84d5de82bdc0">00032</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;<link linkend="_class_simple_interaction_glow_1a00cd6d0367cc6ad0f3fc84d5de82bdc0">defaultColor</link>&#32;=&#32;Color.Lerp(Color.black,&#32;Color.white,&#32;0.1F);
<anchor xml:id="__simple_interaction_glow_8cs_source_1l00033"/><link linkend="_class_simple_interaction_glow_1a2c27dd04abd3d432865df53f2abe562c">00033</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;<link linkend="_class_simple_interaction_glow_1a2c27dd04abd3d432865df53f2abe562c">suspendedColor</link>&#32;=&#32;Color.red;
<anchor xml:id="__simple_interaction_glow_8cs_source_1l00034"/><link linkend="_class_simple_interaction_glow_1aa12a1f2aa05a0b0a0c421b2c93c17674">00034</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;<link linkend="_class_simple_interaction_glow_1aa12a1f2aa05a0b0a0c421b2c93c17674">hoverColor</link>&#32;=&#32;Color.Lerp(Color.black,&#32;Color.white,&#32;0.7F);
<anchor xml:id="__simple_interaction_glow_8cs_source_1l00035"/><link linkend="_class_simple_interaction_glow_1a758d68c986bc34965a5a6aebf8f6e1f2">00035</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;<link linkend="_class_simple_interaction_glow_1a758d68c986bc34965a5a6aebf8f6e1f2">primaryHoverColor</link>&#32;=&#32;Color.Lerp(Color.black,&#32;Color.white,&#32;0.8F);
00036 
00037 &#32;&#32;[Header(<emphasis role="stringliteral">&quot;InteractionButton&#32;Colors&quot;</emphasis>)]
00038 &#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;This&#32;color&#32;only&#32;applies&#32;if&#32;the&#32;object&#32;is&#32;an&#32;InteractionButton&#32;or&#32;InteractionSlider.&quot;</emphasis>)]
<anchor xml:id="__simple_interaction_glow_8cs_source_1l00039"/><link linkend="_class_simple_interaction_glow_1a09bef1794224eada8c49258bb4ab0b04">00039</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Color&#32;<link linkend="_class_simple_interaction_glow_1a09bef1794224eada8c49258bb4ab0b04">pressedColor</link>&#32;=&#32;Color.white;
00040 
00041 &#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Material&#32;_material;
00042 
00043 &#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link>&#32;_intObj;
00044 
00045 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()&#32;{
00046 &#32;&#32;&#32;&#32;_intObj&#32;=&#32;GetComponent&lt;InteractionBehaviour&gt;();
00047 
00048 &#32;&#32;&#32;&#32;Renderer&#32;renderer&#32;=&#32;GetComponent&lt;Renderer&gt;();
00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(renderer&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;renderer&#32;=&#32;GetComponentInChildren&lt;Renderer&gt;();
00051 &#32;&#32;&#32;&#32;}
00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(renderer&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;_material&#32;=&#32;renderer.material;
00054 &#32;&#32;&#32;&#32;}
00055 &#32;&#32;}
00056 
00057 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()&#32;{
00058 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_material&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00059 
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;target&#32;color&#32;for&#32;the&#32;Interaction&#32;object&#32;will&#32;be&#32;determined&#32;by&#32;various&#32;simple&#32;state&#32;checks.</emphasis>
00061 &#32;&#32;&#32;&#32;&#32;&#32;Color&#32;targetColor&#32;=&#32;<link linkend="_class_simple_interaction_glow_1a00cd6d0367cc6ad0f3fc84d5de82bdc0">defaultColor</link>;
00062 
00063 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&quot;Primary&#32;hover&quot;&#32;is&#32;a&#32;special&#32;kind&#32;of&#32;hover&#32;state&#32;that&#32;an&#32;InteractionBehaviour&#32;can</emphasis>
00064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;only&#32;have&#32;if&#32;an&#32;InteractionHand&apos;s&#32;thumb,&#32;index,&#32;or&#32;middle&#32;finger&#32;is&#32;closer&#32;to&#32;it</emphasis>
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;than&#32;any&#32;other&#32;interaction&#32;object.</emphasis>
00066 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_intObj.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1a6648c4fe010dec0193cc5ce80a8907fb">isPrimaryHovered</link>&#32;&amp;&amp;&#32;<link linkend="_class_simple_interaction_glow_1a5c714fc869447c5e0d485b0122188055">usePrimaryHover</link>)&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetColor&#32;=&#32;<link linkend="_class_simple_interaction_glow_1a758d68c986bc34965a5a6aebf8f6e1f2">primaryHoverColor</link>;
00068 &#32;&#32;&#32;&#32;&#32;&#32;}
00069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Of&#32;course,&#32;any&#32;number&#32;of&#32;objects&#32;can&#32;be&#32;hovered&#32;by&#32;any&#32;number&#32;of&#32;InteractionHands.</emphasis>
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;InteractionBehaviour&#32;provides&#32;an&#32;API&#32;for&#32;accessing&#32;various&#32;interaction-related</emphasis>
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;state&#32;information&#32;such&#32;as&#32;the&#32;closest&#32;hand&#32;that&#32;is&#32;hovering&#32;nearby,&#32;if&#32;the&#32;object</emphasis>
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;is&#32;hovered&#32;at&#32;all.</emphasis>
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_intObj.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1ae8875ff423f6183c256101320ff28fa7">isHovered</link>&#32;&amp;&amp;&#32;<link linkend="_class_simple_interaction_glow_1a346b18ca3d0426fbfc5079e02c515e71">useHover</link>)&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;glow&#32;=&#32;_intObj.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1aefe390893dcb760876ebf2ad2da4ccb2">closestHoveringControllerDistance</link>.Map(0F,&#32;0.2F,&#32;1F,&#32;0.0F);
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetColor&#32;=&#32;Color.Lerp(<link linkend="_class_simple_interaction_glow_1a00cd6d0367cc6ad0f3fc84d5de82bdc0">defaultColor</link>,&#32;<link linkend="_class_simple_interaction_glow_1aa12a1f2aa05a0b0a0c421b2c93c17674">hoverColor</link>,&#32;glow);
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00078 &#32;&#32;&#32;&#32;&#32;&#32;}
00079 
00080 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_intObj.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_1abd55576df7341d169cbe23eebacc35c5">isSuspended</link>)&#32;{
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;object&#32;is&#32;held&#32;by&#32;only&#32;one&#32;hand&#32;and&#32;that&#32;holding&#32;hand&#32;stops&#32;tracking,&#32;the</emphasis>
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;object&#32;is&#32;&quot;suspended.&quot;&#32;InteractionBehaviour&#32;provides&#32;suspension&#32;callbacks&#32;if&#32;you&apos;d</emphasis>
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;like&#32;the&#32;object&#32;to,&#32;for&#32;example,&#32;disappear,&#32;when&#32;the&#32;object&#32;is&#32;suspended.</emphasis>
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Alternatively&#32;you&#32;can&#32;check&#32;&quot;isSuspended&quot;&#32;at&#32;any&#32;time.</emphasis>
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetColor&#32;=&#32;<link linkend="_class_simple_interaction_glow_1a2c27dd04abd3d432865df53f2abe562c">suspendedColor</link>;
00086 &#32;&#32;&#32;&#32;&#32;&#32;}
00087 
00088 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;can&#32;also&#32;check&#32;the&#32;depressed-or-not-depressed&#32;state&#32;of&#32;InteractionButton&#32;objects</emphasis>
00089 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;assign&#32;them&#32;a&#32;unique&#32;color&#32;in&#32;that&#32;case.</emphasis>
00090 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_intObj&#32;is&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_button">InteractionButton</link>&#32;&amp;&amp;&#32;(_intObj&#32;as&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_button">InteractionButton</link>).isPressed)&#32;{
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targetColor&#32;=&#32;<link linkend="_class_simple_interaction_glow_1a09bef1794224eada8c49258bb4ab0b04">pressedColor</link>;
00092 &#32;&#32;&#32;&#32;&#32;&#32;}
00093 
00094 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Lerp&#32;actual&#32;material&#32;color&#32;to&#32;the&#32;target&#32;color.</emphasis>
00095 &#32;&#32;&#32;&#32;&#32;&#32;_material.color&#32;=&#32;Color.Lerp(_material.color,&#32;targetColor,&#32;30F&#32;*&#32;Time.deltaTime);
00096 &#32;&#32;&#32;&#32;}
00097 &#32;&#32;}
00098 
00099 }
</programlisting></section>
