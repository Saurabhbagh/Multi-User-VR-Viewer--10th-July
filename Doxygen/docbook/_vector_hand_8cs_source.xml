<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__vector_hand_8cs_source">
<title>VectorHand.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Encoding/VectorHand.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00012 
<anchor xml:id="__vector_hand_8cs_source_1l00013"/><link linkend="_namespace_leap_1_1_unity_1_1_encoding">00013</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_encoding">Leap.Unity.Encoding</link>&#32;{
00014 
00025 &#32;&#32;[Serializable]
<anchor xml:id="__vector_hand_8cs_source_1l00026"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand">00026</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand">VectorHand</link>&#32;{
00027 
00028 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Data</emphasis>
00029 
<anchor xml:id="__vector_hand_8cs_source_1l00030"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1afb1b5d7cec5a6234155fce74756b45bc">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1afb1b5d7cec5a6234155fce74756b45bc">NUM_JOINT_POSITIONS</link>&#32;=&#32;25;
00031 
<anchor xml:id="__vector_hand_8cs_source_1l00032"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>;
<anchor xml:id="__vector_hand_8cs_source_1l00033"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>;
<anchor xml:id="__vector_hand_8cs_source_1l00034"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>;
00035 &#32;&#32;&#32;&#32;
00036 &#32;&#32;&#32;&#32;[SerializeField]
00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3[]&#32;&#32;_backingJointPositions;
<anchor xml:id="__vector_hand_8cs_source_1l00038"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3[]&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc">jointPositions</link>&#32;{
00039 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_backingJointPositions&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_backingJointPositions&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector3[<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1afb1b5d7cec5a6234155fce74756b45bc">NUM_JOINT_POSITIONS</link>];
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_backingJointPositions;
00044 &#32;&#32;&#32;&#32;&#32;&#32;}
00045 &#32;&#32;&#32;&#32;}
00046 
00047 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00048 
<anchor xml:id="__vector_hand_8cs_source_1l00049"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aca6ce4326fca4d753305b08cdf7f4e68">00049</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aca6ce4326fca4d753305b08cdf7f4e68">VectorHand</link>()&#32;{&#32;}
00050 
<anchor xml:id="__vector_hand_8cs_source_1l00057"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ad68f6c62830b01f9dc778b2bfb6e778a">00057</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ad68f6c62830b01f9dc778b2bfb6e778a">VectorHand</link>(<link linkend="_class_leap_1_1_hand">Hand</link>&#32;hand)&#32;:&#32;this()&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aa949217613221d04f753a3df29c5dd75">Encode</link>(hand);
00059 &#32;&#32;&#32;&#32;}
00060 
00061 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Hand&#32;Encoding</emphasis>
00062 
<anchor xml:id="__vector_hand_8cs_source_1l00063"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aa949217613221d04f753a3df29c5dd75">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aa949217613221d04f753a3df29c5dd75">Encode</link>(<link linkend="_class_leap_1_1_hand">Hand</link>&#32;fromHand)&#32;{
00064 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>&#32;=&#32;fromHand.<link linkend="_class_leap_1_1_hand_1a783d6adaec7c3f3422e70bba4480b39d">IsLeft</link>;
00065 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>&#32;=&#32;fromHand.<link linkend="_class_leap_1_1_hand_1aaf0940b9108e92c22e33b9c6cd32921a">PalmPosition</link>.ToVector3();
00066 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>&#32;=&#32;fromHand.<link linkend="_class_leap_1_1_hand_1ad1f22c3baf75294e2aa4d834d87fec20">Rotation</link>.ToQuaternion();
00067 
00068 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;boneIdx&#32;=&#32;0;
00069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;5;&#32;i++)&#32;{
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;baseMetacarpal&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a722895d0b8abc8e2226a4591c3708c7a">ToLocal</link>(fromHand.<link linkend="_class_leap_1_1_hand_1ac9f68349507bfa13e3ac24738382bea6">Fingers</link>[i].bones[0].PrevJoint.ToVector3(),
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>);
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc">jointPositions</link>[boneIdx++]&#32;=&#32;baseMetacarpal;
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;4;&#32;j++)&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;joint&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a722895d0b8abc8e2226a4591c3708c7a">ToLocal</link>(fromHand.<link linkend="_class_leap_1_1_hand_1ac9f68349507bfa13e3ac24738382bea6">Fingers</link>[i].bones[j].NextJoint.ToVector3(),
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>);
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc">jointPositions</link>[boneIdx++]&#32;=&#32;joint;
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00078 &#32;&#32;&#32;&#32;&#32;&#32;}
00079 &#32;&#32;&#32;&#32;}
00080 
<anchor xml:id="__vector_hand_8cs_source_1l00081"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae9ced40bf71da643264a1b750bd52e35">00081</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae9ced40bf71da643264a1b750bd52e35">Decode</link>(<link linkend="_class_leap_1_1_hand">Hand</link>&#32;intoHand)&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;boneIdx&#32;=&#32;0;
00083 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;prevJoint&#32;=&#32;Vector3.zero;
00084 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;nextJoint&#32;=&#32;Vector3.zero;
00085 &#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;boneRot&#32;=&#32;Quaternion.identity;
00086 
00087 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fill&#32;fingers.</emphasis>
00088 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;fingerIdx&#32;=&#32;0;&#32;fingerIdx&#32;&lt;&#32;5;&#32;fingerIdx++)&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;jointIdx&#32;=&#32;0;&#32;jointIdx&#32;&lt;&#32;4;&#32;jointIdx++)&#32;{
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boneIdx&#32;&#32;&#32;=&#32;fingerIdx&#32;*&#32;4&#32;+&#32;jointIdx;
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevJoint&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc">jointPositions</link>[fingerIdx&#32;*&#32;5&#32;+&#32;jointIdx];
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextJoint&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc">jointPositions</link>[fingerIdx&#32;*&#32;5&#32;+&#32;jointIdx&#32;+&#32;1];
00093 
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((nextJoint&#32;-&#32;prevJoint).normalized&#32;==&#32;Vector3.zero)&#32;{
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Thumb&#32;&quot;metacarpal&quot;&#32;slot&#32;is&#32;an&#32;identity&#32;bone.</emphasis>
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boneRot&#32;=&#32;Quaternion.identity;
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boneRot&#32;=&#32;Quaternion.LookRotation(
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(nextJoint&#32;-&#32;prevJoint).normalized,
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.Cross((nextJoint&#32;-&#32;prevJoint).normalized,
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(fingerIdx&#32;==&#32;0&#32;?
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>&#32;?&#32;-Vector3.up&#32;:&#32;Vector3.up)&#32;
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;Vector3.right)));
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convert&#32;to&#32;world&#32;space&#32;from&#32;palm&#32;space.</emphasis>
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextJoint&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f">ToWorld</link>(nextJoint,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>);
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevJoint&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f">ToWorld</link>(prevJoint,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>);
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;boneRot&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>&#32;*&#32;boneRot;
00111 
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intoHand.GetBone(boneIdx).Fill(
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevJoint:&#32;prevJoint.ToVector(),
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextJoint:&#32;nextJoint.ToVector(),
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;center:&#32;((nextJoint&#32;+&#32;prevJoint)&#32;/&#32;2f).ToVector(),
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;direction:&#32;(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>&#32;*&#32;Vector3.forward).ToVector(),
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length:&#32;(prevJoint&#32;-&#32;nextJoint).magnitude,
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;width:&#32;0.01f,
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type:&#32;(<link linkend="_class_leap_1_1_bone">Bone</link>.<link linkend="_class_leap_1_1_bone_1a21054e31cefa7b75f25a026006fdbb1b">BoneType</link>)jointIdx,
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation:&#32;boneRot.ToLeapQuaternion());
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;intoHand.<link linkend="_class_leap_1_1_hand_1ac9f68349507bfa13e3ac24738382bea6">Fingers</link>[fingerIdx].Fill(
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameId:&#32;-1,
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handId:&#32;(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>&#32;?&#32;0&#32;:&#32;1),
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fingerId:&#32;fingerIdx,
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timeVisible:&#32;Time.time,
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tipPosition:&#32;nextJoint.ToVector(),
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;direction:&#32;(boneRot&#32;*&#32;Vector3.forward).ToVector(),
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;width:&#32;1f,
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;length:&#32;1f,
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isExtended:&#32;<emphasis role="keyword">true</emphasis>,
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type:&#32;(<link linkend="_class_leap_1_1_finger">Finger</link>.<link linkend="_class_leap_1_1_finger_1ae75e8d46a01aff0bd5c6d6fb99e2f2ba">FingerType</link>)fingerIdx);
00133 &#32;&#32;&#32;&#32;&#32;&#32;}
00134 
00135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fill&#32;arm&#32;data.</emphasis>
00136 &#32;&#32;&#32;&#32;&#32;&#32;intoHand.<link linkend="_class_leap_1_1_hand_1a929a9aae640b9e8de5b544d7faacd04a">Arm</link>.Fill(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f">ToWorld</link>(<emphasis role="keyword">new</emphasis>&#32;Vector3(0f,&#32;0f,&#32;-0.3f),&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>).ToVector(),
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f">ToWorld</link>(<emphasis role="keyword">new</emphasis>&#32;Vector3(0f,&#32;0f,&#32;-0.055f),&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>).ToVector(),
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f">ToWorld</link>(<emphasis role="keyword">new</emphasis>&#32;Vector3(0f,&#32;0f,&#32;-0.125f),&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>).ToVector(),
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_vector">Vector</link>.<link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">Zero</link>,
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.3f,
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.05f,
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>).ToLeapQuaternion());
00143 
00144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Finally,&#32;fill&#32;hand&#32;data.</emphasis>
00145 &#32;&#32;&#32;&#32;&#32;&#32;intoHand.Fill(frameID:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-1,
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>&#32;?&#32;0&#32;:&#32;1),
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;confidence:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1f,
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grabStrength:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.5f,
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grabAngle:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;100f,
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pinchStrength:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.5f,
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pinchDistance:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;50f,
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palmWidth:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.085f,
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>,
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timeVisible:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1f,
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fingers:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">null</emphasis>&#32;<emphasis role="comment">/*&#32;already&#32;uploaded&#32;finger&#32;data&#32;*/</emphasis>,
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palmPosition:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>.ToVector(),
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stabilizedPalmPosition:&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>.ToVector(),
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palmVelocity:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.zero.ToVector(),
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;palmNormal:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>&#32;*&#32;Vector3.down).ToVector(),
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>.ToLeapQuaternion()),
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;direction:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>&#32;*&#32;Vector3.forward).ToVector(),
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wristPosition:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f">ToWorld</link>(<emphasis role="keyword">new</emphasis>&#32;Vector3(0f,&#32;0f,&#32;-0.055f),
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>,
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>).ToVector());
00165 &#32;&#32;&#32;&#32;}
00166 
00167 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00168 
00169 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Byte&#32;Encoding&#32;&amp;&#32;Decoding</emphasis>
00170 
<anchor xml:id="__vector_hand_8cs_source_1l00179"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a43a43bf6a938dda526d2114392447bba">00179</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a43a43bf6a938dda526d2114392447bba">numBytesRequired</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;86;&#32;}&#32;}
00180 
<anchor xml:id="__vector_hand_8cs_source_1l00185"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a06142cb2d22e73457ebfdfdbbe8329d6">00185</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a06142cb2d22e73457ebfdfdbbe8329d6">ReadBytes</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset)&#32;{
00186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytes.Length&#32;-&#32;offset&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a43a43bf6a938dda526d2114392447bba">numBytesRequired</link>)&#32;{
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;System.IndexOutOfRangeException(
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Not&#32;enough&#32;room&#32;to&#32;read&#32;bytes&#32;for&#32;VectorHand&#32;encoding&#32;starting&#32;at&#32;offset&#32;&quot;</emphasis>
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;offset&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;for&#32;array&#32;of&#32;size&#32;&quot;</emphasis>&#32;+&#32;bytes&#32;+&#32;<emphasis role="stringliteral">&quot;;&#32;need&#32;at&#32;least&#32;&quot;</emphasis>
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a43a43bf6a938dda526d2114392447bba">numBytesRequired</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;bytes&#32;from&#32;the&#32;offset&#32;position.&quot;</emphasis>);
00191 &#32;&#32;&#32;&#32;&#32;&#32;}
00192 
00193 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Chirality.</emphasis>
00194 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>&#32;=&#32;bytes[offset++]&#32;==&#32;0x00;
00195 
00196 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Palm&#32;position&#32;and&#32;rotation.</emphasis>
00197 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)&#32;{
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>[i]&#32;=&#32;Convert.ToSingle(
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BitConverterNonAlloc.ToInt16(bytes,&#32;ref&#32;offset))
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/&#32;4096f;
00201 &#32;&#32;&#32;&#32;&#32;&#32;}
00202 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>&#32;=&#32;Utils.DecompressBytesToQuat(bytes,&#32;ref&#32;offset);
00203 
00204 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Palm-local&#32;bone&#32;joint&#32;positions.</emphasis>
00205 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1afb1b5d7cec5a6234155fce74756b45bc">NUM_JOINT_POSITIONS</link>;&#32;i++)&#32;{
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;3;&#32;j++)&#32;{
00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc">jointPositions</link>[i][j]&#32;=&#32;VectorHandExtensions.ByteToFloat(bytes[offset++]);
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00209 &#32;&#32;&#32;&#32;&#32;&#32;}
00210 &#32;&#32;&#32;&#32;}
00211 
<anchor xml:id="__vector_hand_8cs_source_1l00219"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a05ef96613b46f48f93ac66fe23294b23">00219</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a05ef96613b46f48f93ac66fe23294b23">FillBytes</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytesToFill,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset)&#32;{
00220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_backingJointPositions&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;System.InvalidOperationException(
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Joint&#32;positions&#32;array&#32;is&#32;null.&#32;You&#32;must&#32;fill&#32;a&#32;VectorHand&#32;with&#32;data&#32;before&#32;&quot;</emphasis>
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;you&#32;can&#32;use&#32;it&#32;to&#32;fill&#32;byte&#32;representations.&quot;</emphasis>);
00224 &#32;&#32;&#32;&#32;&#32;&#32;}
00225 
00226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(bytesToFill.Length&#32;-&#32;offset&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a43a43bf6a938dda526d2114392447bba">numBytesRequired</link>)&#32;{
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;System.IndexOutOfRangeException(
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;Not&#32;enough&#32;room&#32;to&#32;fill&#32;bytes&#32;for&#32;VectorHand&#32;encoding&#32;starting&#32;at&#32;offset&#32;&quot;</emphasis>
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;offset&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;for&#32;array&#32;of&#32;size&#32;&quot;</emphasis>&#32;+&#32;bytesToFill.Length&#32;+&#32;<emphasis role="stringliteral">&quot;;&#32;need&#32;at&#32;least&#32;&quot;</emphasis>
00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a43a43bf6a938dda526d2114392447bba">numBytesRequired</link>&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;bytes&#32;from&#32;the&#32;offset&#32;position.&quot;</emphasis>);
00231 &#32;&#32;&#32;&#32;&#32;&#32;}
00232 
00233 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Chirality.</emphasis>
00234 &#32;&#32;&#32;&#32;&#32;&#32;bytesToFill[offset++]&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a9f9b64bc63a9f3cc55333dd6086d9343">isLeft</link>&#32;?&#32;(byte)0x00&#32;:&#32;(<emphasis role="keywordtype">byte</emphasis>)0x01;
00235 &#32;&#32;&#32;&#32;&#32;&#32;
00236 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Palm&#32;position,&#32;each&#32;component&#32;compressed&#32;</emphasis>
00237 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)&#32;{
00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BitConverterNonAlloc.GetBytes(Convert.ToInt16(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a46a445433c74cf097dcf6b6c3a0699f3">palmPos</link>[i]&#32;*&#32;4096f),
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesToFill,
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ref&#32;offset);
00241 &#32;&#32;&#32;&#32;&#32;&#32;}
00242 
00243 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Palm&#32;rotation.</emphasis>
00244 &#32;&#32;&#32;&#32;&#32;&#32;Utils.CompressQuatToBytes(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae3c7158f0677bba0daf35a2b1648a046">palmRot</link>,&#32;bytesToFill,&#32;ref&#32;offset);
00245 
00246 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Joint&#32;positions.</emphasis>
00247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1afb1b5d7cec5a6234155fce74756b45bc">NUM_JOINT_POSITIONS</link>;&#32;j++)&#32;{
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)&#32;{
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesToFill[offset++]&#32;=
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VectorHandExtensions.FloatToByte(<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a2a4a898bdae166029301d43f161609fc">jointPositions</link>[j][i]);
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00252 &#32;&#32;&#32;&#32;&#32;&#32;}
00253 &#32;&#32;&#32;&#32;}
00254 
<anchor xml:id="__vector_hand_8cs_source_1l00261"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1af5ad73d71bf71937153af3c6049ead52">00261</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1af5ad73d71bf71937153af3c6049ead52">FillBytes</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytesToFill)&#32;{
00262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;unusedOffset&#32;=&#32;0;
00263 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a05ef96613b46f48f93ac66fe23294b23">FillBytes</link>(bytesToFill,&#32;ref&#32;unusedOffset);
00264 &#32;&#32;&#32;&#32;}
00265 
00266 
<anchor xml:id="__vector_hand_8cs_source_1l00271"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a933acd17a4ff101050a616f294e2c46c">00271</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a933acd17a4ff101050a616f294e2c46c">ReadBytes</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset,&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;intoHand)&#32;{
00272 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a06142cb2d22e73457ebfdfdbbe8329d6">ReadBytes</link>(bytes,&#32;ref&#32;offset);
00273 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1ae9ced40bf71da643264a1b750bd52e35">Decode</link>(intoHand);
00274 &#32;&#32;&#32;&#32;}
00275 
<anchor xml:id="__vector_hand_8cs_source_1l00280"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a3283b0824ff4862ef5a19f188432c4d2">00280</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a3283b0824ff4862ef5a19f188432c4d2">FillBytes</link>(<emphasis role="keywordtype">byte</emphasis>[]&#32;bytes,&#32;ref&#32;<emphasis role="keywordtype">int</emphasis>&#32;offset,&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;fromHand)&#32;{
00281 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aa949217613221d04f753a3df29c5dd75">Encode</link>(fromHand);
00282 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a05ef96613b46f48f93ac66fe23294b23">FillBytes</link>(bytes,&#32;ref&#32;offset);
00283 &#32;&#32;&#32;&#32;}
00284 
00285 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00286 
00287 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Utility</emphasis>
00288 
<anchor xml:id="__vector_hand_8cs_source_1l00293"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f">00293</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1aead2e66fb2e278e48b313c30d31c3f6f">ToWorld</link>(Vector3&#32;localPoint,
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localOrigin,&#32;Quaternion&#32;localRot)&#32;{
00295 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(localRot&#32;*&#32;localPoint)&#32;+&#32;localOrigin;
00296 &#32;&#32;&#32;&#32;}
00297 
<anchor xml:id="__vector_hand_8cs_source_1l00302"/><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a722895d0b8abc8e2226a4591c3708c7a">00302</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand_1a722895d0b8abc8e2226a4591c3708c7a">ToLocal</link>(Vector3&#32;worldPoint,
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localOrigin,&#32;Quaternion&#32;localRot)&#32;{
00304 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Inverse(localRot)&#32;*&#32;(worldPoint&#32;-&#32;localOrigin);
00305 &#32;&#32;&#32;&#32;}
00306 
00307 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00308 
00309 &#32;&#32;}
00310 
00311 <emphasis role="preprocessor">&#32;&#32;#region&#32;Utility&#32;Extension&#32;Methods</emphasis>
00312 
00313 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>VectorHandExtensions&#32;{
00314 
00315 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;VectorHand&#32;Instance&#32;API</emphasis>
00316 
00317 &#32;&#32;&#32;&#32;<emphasis role="comment">//public&#32;static&#32;void&#32;FillBytes(this&#32;VectorHand&#32;vectorHand,&#32;)</emphasis>
00318 
00319 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00320 
00321 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Utilities</emphasis>
00322 
00328 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_class_leap_1_1_bone">Bone</link>&#32;GetBone(<emphasis role="keyword">this</emphasis>&#32;<link linkend="_class_leap_1_1_hand">Hand</link>&#32;hand,&#32;<emphasis role="keywordtype">int</emphasis>&#32;boneIdx)&#32;{
00329 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hand.<link linkend="_class_leap_1_1_hand_1ac9f68349507bfa13e3ac24738382bea6">Fingers</link>[boneIdx&#32;/&#32;4].bones[boneIdx&#32;%&#32;4];
00330 &#32;&#32;&#32;&#32;}
00331 
00335 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">byte</emphasis>&#32;FloatToByte(<emphasis role="keywordtype">float</emphasis>&#32;inFloat,&#32;<emphasis role="keywordtype">float</emphasis>&#32;movementRange&#32;=&#32;0.3f)&#32;{
00336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;clamped&#32;=&#32;Mathf.Clamp(inFloat,&#32;-movementRange&#32;/&#32;2f,&#32;movementRange&#32;/&#32;2f);
00337 &#32;&#32;&#32;&#32;&#32;&#32;clamped&#32;+=&#32;movementRange&#32;/&#32;2f;
00338 &#32;&#32;&#32;&#32;&#32;&#32;clamped&#32;/=&#32;movementRange;
00339 &#32;&#32;&#32;&#32;&#32;&#32;clamped&#32;*=&#32;255f;
00340 &#32;&#32;&#32;&#32;&#32;&#32;clamped&#32;=&#32;Mathf.Floor(clamped);
00341 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>)clamped;
00342 &#32;&#32;&#32;&#32;}
00343 
00347 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;ByteToFloat(<emphasis role="keywordtype">byte</emphasis>&#32;inByte,&#32;<emphasis role="keywordtype">float</emphasis>&#32;movementRange&#32;=&#32;0.3f)&#32;{
00348 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;clamped&#32;=&#32;(float)inByte;
00349 &#32;&#32;&#32;&#32;&#32;&#32;clamped&#32;/=&#32;255f;
00350 &#32;&#32;&#32;&#32;&#32;&#32;clamped&#32;*=&#32;movementRange;
00351 &#32;&#32;&#32;&#32;&#32;&#32;clamped&#32;-=&#32;movementRange&#32;/&#32;2f;
00352 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;clamped;
00353 &#32;&#32;&#32;&#32;}
00354 
00355 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00356 
00357 &#32;&#32;}
00358 
00359 <emphasis role="preprocessor">&#32;&#32;#endregion</emphasis>
00360 
00361 }
</programlisting></section>
