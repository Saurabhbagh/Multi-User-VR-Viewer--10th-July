<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__contact_bone_8cs_source">
<title>ContactBone.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Scripts/Internal/ContactBone.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_interaction">Leap.Unity.Interaction</link>&#32;{
00014 
00024 &#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
<anchor xml:id="__contact_bone_8cs_source_1l00025"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">00025</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link>&#32;:&#32;MonoBehaviour&#32;{
00026 
<anchor xml:id="__contact_bone_8cs_source_1l00031"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>;
00032 
00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>
00038 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00039 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>
00040 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__contact_bone_8cs_source_1l00041"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1af615ba6957558427e50254b0d412858d">00041</link> &#32;&#32;&#32;&#32;Rigidbody&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1af615ba6957558427e50254b0d412858d">rigidbody</link>;
00042 
00047 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00048 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>
00049 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__contact_bone_8cs_source_1l00050"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">00050</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Collider&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>;
00051 
<anchor xml:id="__contact_bone_8cs_source_1l00055"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a4c9d9346098152d645a62eb3b0bb0b4c">00055</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a4c9d9346098152d645a62eb3b0bb0b4c">width</link>&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;scale&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>.transform.lossyScale;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>&#32;is&#32;SphereCollider)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SphereCollider&#32;sphere&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>&#32;as&#32;SphereCollider;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Min(sphere.radius&#32;*&#32;scale.x,
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mathf.Min(sphere.radius&#32;*&#32;scale.y,
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sphere.radius&#32;*&#32;scale.z))&#32;*&#32;2F;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>&#32;is&#32;CapsuleCollider)&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CapsuleCollider&#32;capsule&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>&#32;as&#32;CapsuleCollider;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Min(capsule.radius&#32;*&#32;scale.x,
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mathf.Min(capsule.radius&#32;*&#32;scale.y,
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capsule.radius&#32;*&#32;scale.z))&#32;*&#32;1F;
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>&#32;is&#32;BoxCollider)&#32;{
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BoxCollider&#32;box&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>&#32;as&#32;BoxCollider;
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Min(box.size.x&#32;*&#32;scale.x,
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mathf.Min(box.size.y&#32;*&#32;scale.y,
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;box.size.z&#32;*&#32;scale.z));
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Mathf.Min(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>.bounds.size.x&#32;*&#32;scale.x,
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mathf.Min(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>.bounds.size.y&#32;*&#32;scale.y,
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>.bounds.size.z&#32;*&#32;scale.z));
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00081 &#32;&#32;&#32;&#32;&#32;&#32;}
00082 &#32;&#32;&#32;&#32;}
00083 
<anchor xml:id="__contact_bone_8cs_source_1l00088"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a87f0ed05ef3a68fa7b4b2a616d396692">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a87f0ed05ef3a68fa7b4b2a616d396692">interactionHand</link>;
00089 
<anchor xml:id="__contact_bone_8cs_source_1l00094"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a0e26687a959891f032733c206c91dd57">00094</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FixedJoint&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a0e26687a959891f032733c206c91dd57">joint</link>;
00095 
<anchor xml:id="__contact_bone_8cs_source_1l00100"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a609880a3d01dd5e23b6b03b546cc2ba4">00100</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;FixedJoint&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a609880a3d01dd5e23b6b03b546cc2ba4">metacarpalJoint</link>;
00101 
<anchor xml:id="__contact_bone_8cs_source_1l00106"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a89bc51c6c1204371ec97fdb6d2d3d8e8">00106</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a89bc51c6c1204371ec97fdb6d2d3d8e8">lastTargetPosition</link>;
00107 
<anchor xml:id="__contact_bone_8cs_source_1l00108"/><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a703d40dc7b6b968a768515b9f0c07b69">00108</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a703d40dc7b6b968a768515b9f0c07b69">_lastObjectTouchedAdjustedMass</link>;
00109 
00110 &#32;&#32;&#32;&#32;Dictionary&lt;IInteractionBehaviour,&#32;float&gt;&#32;contactingInteractionBehaviours&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;IInteractionBehaviour,&#32;float&gt;();
00111 
00112 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a025e8a1a9e433fd86245a0e836deba86">contactBoneBodies</link>[<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1af615ba6957558427e50254b0d412858d">rigidbody</link>]&#32;=&#32;<emphasis role="keyword">this</emphasis>;
00114 &#32;&#32;&#32;&#32;}
00115 
00116 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDestroy()&#32;{
00117 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a025e8a1a9e433fd86245a0e836deba86">contactBoneBodies</link>.Remove(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1af615ba6957558427e50254b0d412858d">rigidbody</link>);
00118 &#32;&#32;&#32;&#32;}
00119 
00120 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCollisionEnter(Collision&#32;collision)&#32;{
00121 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hitNonInteractionObject&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00124 
00125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision.rigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hitNonInteractionObject&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00128 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00129 &#32;&#32;&#32;&#32;&#32;&#32;}
00130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;interactionObj;
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(collision.rigidbody,&#32;out&#32;interactionObj))&#32;{
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a703d40dc7b6b968a768515b9f0c07b69">_lastObjectTouchedAdjustedMass</link>&#32;=&#32;collision.rigidbody.mass;
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(interactionObj&#32;is&#32;InteractionBehaviour)&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;((interactionObj&#32;as&#32;InteractionBehaviour).contactForceMode)&#32;{
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a7a6c3499f7b7d02b0d389e8ac72a315f">ContactForceMode</link>.UI:
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a703d40dc7b6b968a768515b9f0c07b69">_lastObjectTouchedAdjustedMass</link>&#32;*=&#32;2F;
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a7a6c3499f7b7d02b0d389e8ac72a315f">ContactForceMode</link>.Object:
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a87f0ed05ef3a68fa7b4b2a616d396692">interactionHand</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a703d40dc7b6b968a768515b9f0c07b69">_lastObjectTouchedAdjustedMass</link>&#32;*=&#32;0.2F;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a703d40dc7b6b968a768515b9f0c07b69">_lastObjectTouchedAdjustedMass</link>&#32;*=&#32;3F;
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00150 
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision.impulse.magnitude&#32;&gt;&#32;0f)&#32;{
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!contactingInteractionBehaviours.ContainsKey(interactionObj))&#32;{
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a879fe5f12fdb87f95b08b50dc492fb5f">NotifyContactBoneCollisionEnter</link>(<emphasis role="keyword">this</emphasis>,&#32;interactionObj);
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactingInteractionBehaviours.Add(interactionObj,&#32;Time.fixedTime);
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00159 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hitNonInteractionObject&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00161 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00163 &#32;&#32;&#32;&#32;&#32;&#32;}
00164 
00165 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00166 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hitNonInteractionObject)&#32;{
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;we&#32;hit&#32;something&#32;that&#32;isn&apos;t&#32;an&#32;Interaction&#32;Behaviour,&#32;there&apos;s&#32;probably&#32;an&#32;issue.</emphasis>
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Contact&#32;bone&#32;collided&#32;with&#32;something&#32;that&apos;s&#32;not&#32;an&#32;Interaction&quot;</emphasis>
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;Behaviour!&#32;This&#32;is&#32;liable&#32;to&#32;cause&#32;contact&#32;bones&#32;to&#32;build&#32;unstable&#32;&quot;</emphasis>
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;velocities&#32;and&#32;produce&#32;bad&#32;behavior.&#32;Please&#32;check&#32;your&#32;layer&#32;&quot;</emphasis>
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;settings&#32;in&#32;the&#32;Interaction&#32;Manager,&#32;and&#32;avoid&#32;placing&#32;any&#32;non-&quot;</emphasis>
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;Interaction&#32;objects&#32;in&#32;layers&#32;that&#32;contain&#32;Interaction&#32;objects.&quot;</emphasis>,
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>);
00174 &#32;&#32;&#32;&#32;&#32;&#32;}
00175 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
00176 &#32;&#32;&#32;&#32;}
00177 
00178 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCollisionStay(Collision&#32;collision)&#32;{
00179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision.rigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
00180 
00181 &#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;interactionObj;
00182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;timeEntered&#32;=&#32;0;
00183 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(collision.rigidbody,&#32;out&#32;interactionObj))&#32;{
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision.impulse.magnitude&#32;&gt;&#32;0f&#32;&amp;&amp;&#32;!contactingInteractionBehaviours.ContainsKey(interactionObj))&#32;{
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a879fe5f12fdb87f95b08b50dc492fb5f">NotifyContactBoneCollisionEnter</link>(<emphasis role="keyword">this</emphasis>,&#32;interactionObj);
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactingInteractionBehaviours.Add(interactionObj,&#32;Time.fixedTime);
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(contactingInteractionBehaviours.TryGetValue(interactionObj,&#32;out&#32;timeEntered)&#32;&amp;&amp;&#32;Time.fixedTime&#32;-&#32;timeEntered&#32;&gt;&#32;Time.fixedDeltaTime&#32;*&#32;10f)&#32;{
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9bae79d10f8020e2f1179042f93e1f3c">NotifyContactBoneCollisionExit</link>(<emphasis role="keyword">this</emphasis>,&#32;interactionObj);
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactingInteractionBehaviours.Remove(interactionObj);
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00191 &#32;&#32;&#32;&#32;&#32;&#32;}
00192 &#32;&#32;&#32;&#32;}
00193 
00194 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCollisionExit(Collision&#32;collision)&#32;{
00195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision.rigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
00196 
00197 &#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;interactionObj;
00198 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(collision.rigidbody,&#32;out&#32;interactionObj))&#32;{
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(contactingInteractionBehaviours.ContainsKey(interactionObj))&#32;{
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9bae79d10f8020e2f1179042f93e1f3c">NotifyContactBoneCollisionExit</link>(<emphasis role="keyword">this</emphasis>,&#32;interactionObj);
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contactingInteractionBehaviours.Remove(interactionObj);
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00203 &#32;&#32;&#32;&#32;&#32;&#32;}
00204 &#32;&#32;&#32;&#32;}
00205 
00206 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnTriggerEnter(Collider&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>)&#32;{
00207 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>.attachedRigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
00208 
00209 &#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;interactionObj;
00210 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>.attachedRigidbody,&#32;out&#32;interactionObj))&#32;{
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a879fe5f12fdb87f95b08b50dc492fb5f">NotifyContactBoneCollisionEnter</link>(<emphasis role="keyword">this</emphasis>,&#32;interactionObj);
00212 
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a85e7d1ae481b963c1b002b3ad447679a">NotifySoftContactCollisionEnter</link>(<emphasis role="keyword">this</emphasis>,&#32;interactionObj,&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>);
00214 &#32;&#32;&#32;&#32;&#32;&#32;}
00215 &#32;&#32;&#32;&#32;}
00216 
00217 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnTriggerExit(Collider&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>)&#32;{
00218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>.attachedRigidbody&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>;&#32;}
00219 
00220 &#32;&#32;&#32;&#32;&#32;&#32;IInteractionBehaviour&#32;interactionObj;
00221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9e906a87460175737227bd0f42bebdce">manager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1a8db6ce75ed2fbf2fc032499f1e25d34c">interactionObjectBodies</link>.TryGetValue(<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>.attachedRigidbody,&#32;out&#32;interactionObj))&#32;{
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a9bae79d10f8020e2f1179042f93e1f3c">NotifyContactBoneCollisionExit</link>(<emphasis role="keyword">this</emphasis>,&#32;interactionObj);
00223 
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1aa2aca8ef28781d61cf239aa51049c667">interactionController</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a3cbc9651adc83ff8012cad6fa299beaf">NotifySoftContactCollisionExit</link>(<emphasis role="keyword">this</emphasis>,&#32;interactionObj,&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_1a10be22c6d9f833777f0308a596fa5bed">collider</link>);
00225 &#32;&#32;&#32;&#32;&#32;&#32;}
00226 &#32;&#32;&#32;&#32;}
00227 
00228 &#32;&#32;}
00229 
00230 }
</programlisting></section>
