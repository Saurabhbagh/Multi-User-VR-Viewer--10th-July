<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__transform_interpolators_8cs_source">
<title>TransformInterpolators.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/TransformInterpolators.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_animation">Leap.Unity.Animation</link>&#32;{
00014 &#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="__extensions_8cs_1a9c5bf76bfa43f056e154ec8661c9f586">Internal</link>;
00015 
00016 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;partial&#32;<emphasis role="keyword">struct&#32;</emphasis>Tween&#32;{
<anchor xml:id="__transform_interpolators_8cs_source_1l00017"/><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aa7b22a26af26ea28523475885b119dda">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;TransformSelector&#32;<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aa7b22a26af26ea28523475885b119dda">Target</link>(Transform&#32;transform)&#32;{
00018 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;TransformSelector(transform,&#32;<emphasis role="keyword">this</emphasis>);
00019 &#32;&#32;&#32;&#32;}
00020 &#32;&#32;}
00021 }
00022 
00023 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_animation_1_1_internal">Leap.Unity.Animation.Internal</link>&#32;{
00024 
<anchor xml:id="__transform_interpolators_8cs_source_1l00025"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector">00025</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector">TransformSelector</link>&#32;{
00026 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Transform&#32;_target;
00027 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Tween&#32;_tween;
00028 
<anchor xml:id="__transform_interpolators_8cs_source_1l00029"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1af004cc1165616369a41a8af27b0bb71e">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1af004cc1165616369a41a8af27b0bb71e">TransformSelector</link>(Transform&#32;target,&#32;Tween&#32;tween)&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;target;
00031 &#32;&#32;&#32;&#32;&#32;&#32;_tween&#32;=&#32;tween;
00032 &#32;&#32;&#32;&#32;}
00033 
00034 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;POSITION</emphasis>
<anchor xml:id="__transform_interpolators_8cs_source_1l00035"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a423b5b8d0bd97e2e3524914cf33b7711">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a423b5b8d0bd97e2e3524914cf33b7711">Position</link>(Vector3&#32;a,&#32;Vector3&#32;b)&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformPositionValueInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00037 &#32;&#32;&#32;&#32;}
00038 
<anchor xml:id="__transform_interpolators_8cs_source_1l00039"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1ae25c532c31f47365c2e11845cb3949be">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1ae25c532c31f47365c2e11845cb3949be">ToPosition</link>(Vector3&#32;b)&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformPositionValueInterpolator&gt;.Spawn().Init(_target.position,&#32;b,&#32;_target));
00041 &#32;&#32;&#32;&#32;}
00042 
<anchor xml:id="__transform_interpolators_8cs_source_1l00043"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1aa2264ae25a234a675fb2acdf0cf2bd13">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1aa2264ae25a234a675fb2acdf0cf2bd13">ByPosition</link>(Vector3&#32;delta)&#32;{
00044 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformPositionValueInterpolator&gt;.Spawn().Init(_target.position,&#32;_target.position&#32;+&#32;delta,&#32;_target));
00045 &#32;&#32;&#32;&#32;}
00046 
<anchor xml:id="__transform_interpolators_8cs_source_1l00047"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a0d20e79b487476608bd81202d6294653">00047</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a0d20e79b487476608bd81202d6294653">Position</link>(Transform&#32;a,&#32;Transform&#32;b)&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformPositionReferenceInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00049 &#32;&#32;&#32;&#32;}
00050 
<anchor xml:id="__transform_interpolators_8cs_source_1l00051"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1abb435c49672d4d1b934a6be8f7783acf">00051</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1abb435c49672d4d1b934a6be8f7783acf">LocalPosition</link>(Vector3&#32;a,&#32;Vector3&#32;b)&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalPositionValueInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00053 &#32;&#32;&#32;&#32;}
00054 
<anchor xml:id="__transform_interpolators_8cs_source_1l00055"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a7f9074f159aadb0fbe01a4f91d77a8d5">00055</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a7f9074f159aadb0fbe01a4f91d77a8d5">ToLocalPosition</link>(Vector3&#32;b)&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalPositionValueInterpolator&gt;.Spawn().Init(_target.localPosition,&#32;b,&#32;_target));
00057 &#32;&#32;&#32;&#32;}
00058 
<anchor xml:id="__transform_interpolators_8cs_source_1l00059"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1aba4dcaa0cd568959b08ff944b9020ab0">00059</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1aba4dcaa0cd568959b08ff944b9020ab0">ByLocalPosition</link>(Vector3&#32;delta)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalPositionValueInterpolator&gt;.Spawn().Init(_target.localPosition,&#32;_target.localPosition&#32;+&#32;delta,&#32;_target));
00061 &#32;&#32;&#32;&#32;}
00062 
<anchor xml:id="__transform_interpolators_8cs_source_1l00063"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a13cc151a11045d8a16bff858ff9e9569">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a13cc151a11045d8a16bff858ff9e9569">LocalPosition</link>(Transform&#32;a,&#32;Transform&#32;b)&#32;{
00064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalPositionReferenceInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00065 &#32;&#32;&#32;&#32;}
00066 
00067 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformPositionValueInterpolator&#32;:&#32;Vector3InterpolatorBase&lt;Transform&gt;&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.position&#32;=&#32;_a&#32;+&#32;_b&#32;*&#32;percent;
00070 &#32;&#32;&#32;&#32;&#32;&#32;}
00071 
00072 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformPositionValueInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00075 &#32;&#32;&#32;&#32;&#32;&#32;}
00076 
00077 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00078 &#32;&#32;&#32;&#32;}
00079 
00080 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformPositionReferenceInterpolator&#32;:&#32;InterpolatorBase&lt;Transform,&#32;Transform&gt;&#32;{
00081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;length&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Vector3.Distance(_a.position,&#32;_b.position);
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00085 &#32;&#32;&#32;&#32;&#32;&#32;}
00086 
00087 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.position&#32;=&#32;Vector3.Lerp(_a.position,&#32;_b.position,&#32;percent);
00089 &#32;&#32;&#32;&#32;&#32;&#32;}
00090 
00091 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformPositionReferenceInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00094 &#32;&#32;&#32;&#32;&#32;&#32;}
00095 
00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00097 &#32;&#32;&#32;&#32;}
00098 
00099 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformLocalPositionValueInterpolator&#32;:&#32;Vector3InterpolatorBase&lt;Transform&gt;&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.localPosition&#32;=&#32;_a&#32;+&#32;_b&#32;*&#32;percent;
00102 &#32;&#32;&#32;&#32;&#32;&#32;}
00103 
00104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformLocalPositionValueInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00107 &#32;&#32;&#32;&#32;&#32;&#32;}
00108 
00109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00110 &#32;&#32;&#32;&#32;}
00111 
00112 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformLocalPositionReferenceInterpolator&#32;:&#32;InterpolatorBase&lt;Transform,&#32;Transform&gt;&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;length&#32;{
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Vector3.Distance(_a.localPosition,&#32;_b.localPosition);
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00117 &#32;&#32;&#32;&#32;&#32;&#32;}
00118 
00119 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.localPosition&#32;=&#32;Vector3.Lerp(_a.localPosition,&#32;_b.localPosition,&#32;percent);
00121 &#32;&#32;&#32;&#32;&#32;&#32;}
00122 
00123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformLocalPositionReferenceInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00126 &#32;&#32;&#32;&#32;&#32;&#32;}
00127 
00128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00129 &#32;&#32;&#32;&#32;}
00130 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00131 
00132 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;ROTATION</emphasis>
<anchor xml:id="__transform_interpolators_8cs_source_1l00133"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1abecf3284e5a297d6bf198390a854a6b9">00133</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1abecf3284e5a297d6bf198390a854a6b9">Rotation</link>(Quaternion&#32;a,&#32;Quaternion&#32;b)&#32;{
00134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformRotationValueInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00135 &#32;&#32;&#32;&#32;}
00136 
<anchor xml:id="__transform_interpolators_8cs_source_1l00137"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a080ea31385ee3af81c273b2263fb3e84">00137</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a080ea31385ee3af81c273b2263fb3e84">ToRotation</link>(Quaternion&#32;b)&#32;{
00138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformRotationValueInterpolator&gt;.Spawn().Init(_target.rotation,&#32;b,&#32;_target));
00139 &#32;&#32;&#32;&#32;}
00140 
<anchor xml:id="__transform_interpolators_8cs_source_1l00141"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a15c9866e2852b34fe479d8d8f6f1cd44">00141</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a15c9866e2852b34fe479d8d8f6f1cd44">ByRotation</link>(Quaternion&#32;delta)&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformRotationValueInterpolator&gt;.Spawn().Init(_target.rotation,&#32;_target.rotation&#32;*&#32;delta,&#32;_target));
00143 &#32;&#32;&#32;&#32;}
00144 
<anchor xml:id="__transform_interpolators_8cs_source_1l00145"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a61d676d656136f211a5f89f537310595">00145</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a61d676d656136f211a5f89f537310595">Rotation</link>(Transform&#32;a,&#32;Transform&#32;b)&#32;{
00146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformRotationReferenceInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00147 &#32;&#32;&#32;&#32;}
00148 
<anchor xml:id="__transform_interpolators_8cs_source_1l00149"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a9f30f4eb3bd0c6c8e259b68547801f4b">00149</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a9f30f4eb3bd0c6c8e259b68547801f4b">LocalRotation</link>(Quaternion&#32;a,&#32;Quaternion&#32;b)&#32;{
00150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalRotationValueInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00151 &#32;&#32;&#32;&#32;}
00152 
<anchor xml:id="__transform_interpolators_8cs_source_1l00153"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a5e663ad6b4a88952de77b6d7f24b66fb">00153</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a5e663ad6b4a88952de77b6d7f24b66fb">ToLocalRotation</link>(Quaternion&#32;b)&#32;{
00154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalRotationValueInterpolator&gt;.Spawn().Init(_target.localRotation,&#32;b,&#32;_target));
00155 &#32;&#32;&#32;&#32;}
00156 
<anchor xml:id="__transform_interpolators_8cs_source_1l00157"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a6c57db249ac4b4ff5c925b9dcd7d9e2c">00157</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a6c57db249ac4b4ff5c925b9dcd7d9e2c">ByLocalRotation</link>(Quaternion&#32;delta)&#32;{
00158 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalRotationValueInterpolator&gt;.Spawn().Init(_target.localRotation,&#32;_target.localRotation&#32;*&#32;delta,&#32;_target));
00159 &#32;&#32;&#32;&#32;}
00160 
<anchor xml:id="__transform_interpolators_8cs_source_1l00161"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a8c3e8953af09204d9249f58d682dc645">00161</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a8c3e8953af09204d9249f58d682dc645">LocalRotation</link>(Transform&#32;a,&#32;Transform&#32;b)&#32;{
00162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalRotationReferenceInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00163 &#32;&#32;&#32;&#32;}
00164 
00165 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformRotationValueInterpolator&#32;:&#32;QuaternionInterpolatorBase&lt;Transform&gt;&#32;{
00166 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.rotation&#32;=&#32;Quaternion.Slerp(_a,&#32;_b,&#32;percent);
00168 &#32;&#32;&#32;&#32;&#32;&#32;}
00169 
00170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformRotationValueInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00173 &#32;&#32;&#32;&#32;&#32;&#32;}
00174 
00175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00176 &#32;&#32;&#32;&#32;}
00177 
00178 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformRotationReferenceInterpolator&#32;:&#32;InterpolatorBase&lt;Transform,&#32;Transform&gt;&#32;{
00179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;length&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Angle(_a.rotation,&#32;_b.rotation);
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00183 &#32;&#32;&#32;&#32;&#32;&#32;}
00184 
00185 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.rotation&#32;=&#32;Quaternion.Slerp(_a.rotation,&#32;_b.rotation,&#32;percent);
00187 &#32;&#32;&#32;&#32;&#32;&#32;}
00188 
00189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformRotationReferenceInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00192 &#32;&#32;&#32;&#32;&#32;&#32;}
00193 
00194 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00195 &#32;&#32;&#32;&#32;}
00196 
00197 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformLocalRotationValueInterpolator&#32;:&#32;QuaternionInterpolatorBase&lt;Transform&gt;&#32;{
00198 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.localRotation&#32;=&#32;Quaternion.Slerp(_a,&#32;_b,&#32;percent);
00200 &#32;&#32;&#32;&#32;&#32;&#32;}
00201 
00202 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformLocalRotationValueInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00205 &#32;&#32;&#32;&#32;&#32;&#32;}
00206 
00207 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00208 &#32;&#32;&#32;&#32;}
00209 
00210 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformLocalRotationReferenceInterpolator&#32;:&#32;InterpolatorBase&lt;Transform,&#32;Transform&gt;&#32;{
00211 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;length&#32;{
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Angle(_a.localRotation,&#32;_b.localRotation);
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00215 &#32;&#32;&#32;&#32;&#32;&#32;}
00216 
00217 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.localRotation&#32;=&#32;Quaternion.Slerp(_a.localRotation,&#32;_b.localRotation,&#32;percent);
00219 &#32;&#32;&#32;&#32;&#32;&#32;}
00220 
00221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformLocalRotationReferenceInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00224 &#32;&#32;&#32;&#32;&#32;&#32;}
00225 
00226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00227 &#32;&#32;&#32;&#32;}
00228 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00229 
00230 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;SCALE</emphasis>
<anchor xml:id="__transform_interpolators_8cs_source_1l00231"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1af0d3dc5c78138515eb3473b5b7295280">00231</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1af0d3dc5c78138515eb3473b5b7295280">LocalScale</link>(Vector3&#32;a,&#32;Vector3&#32;b)&#32;{
00232 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00233 &#32;&#32;&#32;&#32;}
00234 
<anchor xml:id="__transform_interpolators_8cs_source_1l00235"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a9b9b005150669eceafa5964610546e71">00235</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a9b9b005150669eceafa5964610546e71">LocalScale</link>(<emphasis role="keywordtype">float</emphasis>&#32;a,&#32;<emphasis role="keywordtype">float</emphasis>&#32;b)&#32;{
00236 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(Vector3.one&#32;*&#32;a,&#32;Vector3.one&#32;*&#32;b,&#32;_target));
00237 &#32;&#32;&#32;&#32;}
00238 
<anchor xml:id="__transform_interpolators_8cs_source_1l00239"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a33d8a7f76cad0ea2e7a54eb5513fda2d">00239</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a33d8a7f76cad0ea2e7a54eb5513fda2d">ToLocalScale</link>(Vector3&#32;b)&#32;{
00240 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(_target.localScale,&#32;b,&#32;_target));
00241 &#32;&#32;&#32;&#32;}
00242 
<anchor xml:id="__transform_interpolators_8cs_source_1l00243"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a1b6822af20f1f90ace3eebe6095711da">00243</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a1b6822af20f1f90ace3eebe6095711da">ToLocalScale</link>(<emphasis role="keywordtype">float</emphasis>&#32;b)&#32;{
00244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(_target.localScale,&#32;Vector3.one&#32;*&#32;b,&#32;_target));
00245 &#32;&#32;&#32;&#32;}
00246 
<anchor xml:id="__transform_interpolators_8cs_source_1l00247"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a7f45e638712855dc07b33691f3547a2b">00247</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a7f45e638712855dc07b33691f3547a2b">ByLocalScale</link>(<emphasis role="keywordtype">float</emphasis>&#32;b)&#32;{
00248 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalScaleValueInterpolator&gt;.Spawn().Init(_target.localScale,&#32;_target.localScale&#32;*&#32;b,&#32;_target));
00249 &#32;&#32;&#32;&#32;}
00250 
<anchor xml:id="__transform_interpolators_8cs_source_1l00251"/><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a4827065abda49368d84a3d5432cfe8aa">00251</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Tween&#32;<link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector_1a4827065abda49368d84a3d5432cfe8aa">LocalScale</link>(Transform&#32;a,&#32;Transform&#32;b)&#32;{
00252 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_tween.AddInterpolator(Pool&lt;TransformLocalScaleReferenceInterpolator&gt;.Spawn().Init(a,&#32;b,&#32;_target));
00253 &#32;&#32;&#32;&#32;}
00254 
00255 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformLocalScaleValueInterpolator&#32;:&#32;Vector3InterpolatorBase&lt;Transform&gt;&#32;{
00256 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.localScale&#32;=&#32;_a&#32;+&#32;_b&#32;*&#32;percent;
00258 &#32;&#32;&#32;&#32;&#32;&#32;}
00259 
00260 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformLocalScaleValueInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00263 &#32;&#32;&#32;&#32;&#32;&#32;}
00264 
00265 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00266 &#32;&#32;&#32;&#32;}
00267 
00268 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TransformLocalScaleReferenceInterpolator&#32;:&#32;InterpolatorBase&lt;Transform,&#32;Transform&gt;&#32;{
00269 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;length&#32;{
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Angle(_a.localRotation,&#32;_b.localRotation);
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00273 &#32;&#32;&#32;&#32;&#32;&#32;}
00274 
00275 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Interpolate(<emphasis role="keywordtype">float</emphasis>&#32;percent)&#32;{
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target.localScale&#32;=&#32;Vector3.Lerp(_a.localScale,&#32;_b.localScale,&#32;percent);
00277 &#32;&#32;&#32;&#32;&#32;&#32;}
00278 
00279 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Dispose()&#32;{
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_target&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;TransformLocalScaleReferenceInterpolator&gt;.Recycle(<emphasis role="keyword">this</emphasis>);
00282 &#32;&#32;&#32;&#32;&#32;&#32;}
00283 
00284 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isValid&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_target&#32;!=&#32;<emphasis role="keyword">null</emphasis>;&#32;}&#32;}
00285 &#32;&#32;&#32;&#32;}
00286 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00287 &#32;&#32;}
00288 }
</programlisting></section>
