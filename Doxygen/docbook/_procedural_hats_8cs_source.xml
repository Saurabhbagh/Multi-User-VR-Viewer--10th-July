<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__procedural_hats_8cs_source">
<title>ProceduralHats.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Samples/JoeJeff/ProceduralHats.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00002 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00003 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.SceneManagement;
00004 
00005 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system_1_1_sample">Valve.VR.InteractionSystem.Sample</link>
00006 {
<anchor xml:id="__procedural_hats_8cs_source_1l00007"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats">00007</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats">ProceduralHats</link>&#32;:&#32;MonoBehaviour
00008 &#32;&#32;&#32;&#32;{
<anchor xml:id="__procedural_hats_8cs_source_1l00009"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats_1addd95ed6c1c6d8203fad5d38fae4a6e2">00009</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject[]&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats_1addd95ed6c1c6d8203fad5d38fae4a6e2">hats</link>;
00010 
<anchor xml:id="__procedural_hats_8cs_source_1l00011"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats_1abdce8dde269ca2193a7e9a95cfaddd02">00011</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats_1abdce8dde269ca2193a7e9a95cfaddd02">hatSwitchTime</link>;
00012 
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SwitchToHat(0);
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00017 
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(HatSwitcher());
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00022 
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;HatSwitcher()
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats_1abdce8dde269ca2193a7e9a95cfaddd02">hatSwitchTime</link>);
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//delay&#32;before&#32;trying&#32;to&#32;switch</emphasis>
00029 
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;cam&#32;=&#32;<link linkend="_namespace_valve_1_1_v_r_1a82e5bf501cc3aa155444ee3f0662853fa967d35e40f3f95b1f538bd248640bf3b">Camera</link>.main.transform;
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(Vector3.Angle(cam.forward,&#32;transform.position&#32;-&#32;cam.position)&#32;&lt;&#32;90)
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//wait&#32;for&#32;player&#32;to&#32;look&#32;away</emphasis>
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(0.1f);
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00036 
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ChooseHat();
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ChooseHat()
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SwitchToHat(Random.Range(0,&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats_1addd95ed6c1c6d8203fad5d38fae4a6e2">hats</link>.Length));
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00045 
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SwitchToHat(<emphasis role="keywordtype">int</emphasis>&#32;hat)
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;hatIndex&#32;=&#32;0;&#32;hatIndex&#32;&lt;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats_1addd95ed6c1c6d8203fad5d38fae4a6e2">hats</link>.Length;&#32;hatIndex++)
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats_1addd95ed6c1c6d8203fad5d38fae4a6e2">hats</link>[hatIndex].SetActive(hat&#32;==&#32;hatIndex);
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00053 &#32;&#32;&#32;&#32;}
00054 }
</programlisting></section>
