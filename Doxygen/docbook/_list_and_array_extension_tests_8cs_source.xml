<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__list_and_array_extension_tests_8cs_source">
<title>ListAndArrayExtensionTests.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Editor/ListAndArrayExtensionTests.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;NUnit.Framework;
00013 
00014 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_tests">Leap.Unity.Tests</link>&#32;{
00015 
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00016"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests">00016</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests">ListAndArrayExtensionTests</link>&#32;{
00017 
00018 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00019"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1ac0182d00b85b4201d4d3d4529b97a41f">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1ac0182d00b85b4201d4d3d4529b97a41f">RemoveAtMany_Random</link>()&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;toRemove&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;().FillEach(100,&#32;i&#32;=&gt;&#32;i);
00021 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(toRemove.Count&#32;!=&#32;20)&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;toRemove.RemoveAt(Random.Range(0,&#32;toRemove.Count));
00023 &#32;&#32;&#32;&#32;&#32;&#32;}
00024 
00025 &#32;&#32;&#32;&#32;&#32;&#32;doRemoveAtManyTest(toRemove);
00026 &#32;&#32;&#32;&#32;}
00027 
00028 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00029"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1ad4ccdc36696add0acf31b30bd4c5f1cd">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1ad4ccdc36696add0acf31b30bd4c5f1cd">RemoveAtMany_First</link>()&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;toRemove&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00031 &#32;&#32;&#32;&#32;&#32;&#32;toRemove.Add(0);
00032 &#32;&#32;&#32;&#32;&#32;&#32;toRemove.Add(50);
00033 
00034 &#32;&#32;&#32;&#32;&#32;&#32;doRemoveAtManyTest(toRemove);
00035 &#32;&#32;&#32;&#32;}
00036 
00037 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00038"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1a778b1a1071d9ed1abd2a85589647dce6">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1a778b1a1071d9ed1abd2a85589647dce6">RemoveAtMany_Last</link>()&#32;{
00039 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;toRemove&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00040 &#32;&#32;&#32;&#32;&#32;&#32;toRemove.Add(50);
00041 &#32;&#32;&#32;&#32;&#32;&#32;toRemove.Add(99);
00042 
00043 &#32;&#32;&#32;&#32;&#32;&#32;doRemoveAtManyTest(toRemove);
00044 &#32;&#32;&#32;&#32;}
00045 
00046 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00047"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1a7fa8e4a81d70bc03a3647009de60832b">00047</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1a7fa8e4a81d70bc03a3647009de60832b">RemoveAtMany_Sequential</link>()&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;toRemove&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00049 &#32;&#32;&#32;&#32;&#32;&#32;toRemove.Add(50);
00050 &#32;&#32;&#32;&#32;&#32;&#32;toRemove.Add(51);
00051 &#32;&#32;&#32;&#32;&#32;&#32;toRemove.Add(52);
00052 &#32;&#32;&#32;&#32;&#32;&#32;toRemove.Add(53);
00053 
00054 &#32;&#32;&#32;&#32;&#32;&#32;doRemoveAtManyTest(toRemove);
00055 &#32;&#32;&#32;&#32;}
00056 
00057 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00058"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1a37d320a37fb6833f177bda0bc782c86c">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1a37d320a37fb6833f177bda0bc782c86c">InsertMany_Random</link>()&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;toInsert&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;().FillEach(20,&#32;i&#32;=&gt;&#32;i&#32;*&#32;1000&#32;+&#32;99);
00060 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;indexes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;().FillEach(100,&#32;i&#32;=&gt;&#32;i);
00061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(indexes.Count&#32;!=&#32;toInsert.Count)&#32;{
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indexes.RemoveAt(Random.Range(0,&#32;indexes.Count));
00063 &#32;&#32;&#32;&#32;&#32;&#32;}
00064 
00065 &#32;&#32;&#32;&#32;&#32;&#32;doInsertManyTest(toInsert,&#32;indexes);
00066 &#32;&#32;&#32;&#32;}
00067 
00068 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00069"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1ab5a83852fcd4c754ffe8031b12084d1b">00069</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1ab5a83852fcd4c754ffe8031b12084d1b">InsertMany_First</link>()&#32;{
00070 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;toInsert&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00071 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;indexes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00072 &#32;&#32;&#32;&#32;&#32;&#32;toInsert.Add(999);
00073 &#32;&#32;&#32;&#32;&#32;&#32;toInsert.Add(888);
00074 &#32;&#32;&#32;&#32;&#32;&#32;indexes.Add(0);
00075 &#32;&#32;&#32;&#32;&#32;&#32;indexes.Add(50);
00076 &#32;&#32;&#32;&#32;&#32;&#32;doInsertManyTest(toInsert,&#32;indexes);
00077 &#32;&#32;&#32;&#32;}
00078 
00079 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00080"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1aec14187ae8f38d24243c9a0d99ff09bd">00080</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1aec14187ae8f38d24243c9a0d99ff09bd">InsertMany_Last</link>()&#32;{
00081 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;toInsert&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00082 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;indexes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00083 &#32;&#32;&#32;&#32;&#32;&#32;toInsert.Add(999);
00084 &#32;&#32;&#32;&#32;&#32;&#32;toInsert.Add(888);
00085 &#32;&#32;&#32;&#32;&#32;&#32;indexes.Add(50);
00086 &#32;&#32;&#32;&#32;&#32;&#32;indexes.Add(99);
00087 &#32;&#32;&#32;&#32;&#32;&#32;doInsertManyTest(toInsert,&#32;indexes);
00088 &#32;&#32;&#32;&#32;}
00089 
00090 &#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__list_and_array_extension_tests_8cs_source_1l00091"/><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1aa4b052a3570106c72f7fc935b1faa214">00091</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests_1aa4b052a3570106c72f7fc935b1faa214">InsertMany_Sequential</link>()&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;toInsert&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00093 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;indexes&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;();
00094 &#32;&#32;&#32;&#32;&#32;&#32;toInsert.Add(999);
00095 &#32;&#32;&#32;&#32;&#32;&#32;toInsert.Add(888);
00096 &#32;&#32;&#32;&#32;&#32;&#32;toInsert.Add(777);
00097 &#32;&#32;&#32;&#32;&#32;&#32;toInsert.Add(666);
00098 &#32;&#32;&#32;&#32;&#32;&#32;indexes.Add(50);
00099 &#32;&#32;&#32;&#32;&#32;&#32;indexes.Add(51);
00100 &#32;&#32;&#32;&#32;&#32;&#32;indexes.Add(52);
00101 &#32;&#32;&#32;&#32;&#32;&#32;indexes.Add(53);
00102 &#32;&#32;&#32;&#32;&#32;&#32;doInsertManyTest(toInsert,&#32;indexes);
00103 &#32;&#32;&#32;&#32;}
00104 
00105 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;doRemoveAtManyTest(List&lt;int&gt;&#32;toRemove)&#32;{
00106 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;listA&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;().FillEach(100,&#32;i&#32;=&gt;&#32;i);
00107 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;listB&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;(listA);
00108 
00109 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;toRemove.Count;&#32;i--&#32;!=&#32;0;)&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listA.RemoveAt(toRemove[i]);
00111 &#32;&#32;&#32;&#32;&#32;&#32;}
00112 
00113 &#32;&#32;&#32;&#32;&#32;&#32;listB.RemoveAtMany(toRemove);
00114 
00115 &#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(listA,&#32;listB);
00116 &#32;&#32;&#32;&#32;}
00117 
00118 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;doInsertManyTest(List&lt;int&gt;&#32;toInsert,&#32;List&lt;int&gt;&#32;indexes)&#32;{
00119 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;listA&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;().FillEach(100,&#32;i&#32;=&gt;&#32;i);
00120 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;int&gt;&#32;listB&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;int&gt;(listA);
00121 
00122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;toInsert.Count;&#32;i++)&#32;{
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listA.Insert(indexes[i],&#32;toInsert[i]);
00124 &#32;&#32;&#32;&#32;&#32;&#32;}
00125 
00126 &#32;&#32;&#32;&#32;&#32;&#32;listB.InsertMany(indexes,&#32;toInsert);
00127 
00128 &#32;&#32;&#32;&#32;&#32;&#32;Assert.AreEqual(listA,&#32;listB);
00129 &#32;&#32;&#32;&#32;}
00130 &#32;&#32;}
00131 }
</programlisting></section>
