<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__arrow_8cs_source">
<title>Arrow.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Longbow/Scripts/Arrow.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//=======&#32;Copyright&#32;(c)&#32;Valve&#32;Corporation,&#32;All&#32;rights&#32;reserved.&#32;===============</emphasis>
00002 <emphasis role="comment">//</emphasis>
00003 <emphasis role="comment">//&#32;Purpose:&#32;The&#32;arrow&#32;for&#32;the&#32;longbow</emphasis>
00004 <emphasis role="comment">//</emphasis>
00005 <emphasis role="comment">//=============================================================================</emphasis>
00006 
00007 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00008 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00009 
00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system">Valve.VR.InteractionSystem</link>
00011 {
00012 &#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------------------------------</emphasis>
<anchor xml:id="__arrow_8cs_source_1l00013"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow">Arrow</link>&#32;:&#32;MonoBehaviour
00014 &#32;&#32;&#32;&#32;{
<anchor xml:id="__arrow_8cs_source_1l00015"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a0ab62133f97ec701f82409db5976e17b">00015</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;ParticleSystem&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a0ab62133f97ec701f82409db5976e17b">glintParticle</link>;
<anchor xml:id="__arrow_8cs_source_1l00016"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Rigidbody&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>;
<anchor xml:id="__arrow_8cs_source_1l00017"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">00017</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Rigidbody&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>;
00018 
<anchor xml:id="__arrow_8cs_source_1l00019"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1ae6a1bda880707184acbb465614e7131a">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;PhysicMaterial&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1ae6a1bda880707184acbb465614e7131a">targetPhysMaterial</link>;
00020 
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;prevPosition;
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Quaternion&#32;prevRotation;
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;prevVelocity;
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;prevHeadPosition;
00025 
<anchor xml:id="__arrow_8cs_source_1l00026"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1ae43108164ba6139ae2df09968c76f69f">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_play_oneshot">SoundPlayOneshot</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1ae43108164ba6139ae2df09968c76f69f">fireReleaseSound</link>;
<anchor xml:id="__arrow_8cs_source_1l00027"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a29537a218aa3ee7f6b9ca4a3af383300">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_play_oneshot">SoundPlayOneshot</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a29537a218aa3ee7f6b9ca4a3af383300">airReleaseSound</link>;
<anchor xml:id="__arrow_8cs_source_1l00028"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a767632ea6897d5bef27d8c1043a54869">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_play_oneshot">SoundPlayOneshot</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a767632ea6897d5bef27d8c1043a54869">hitTargetSound</link>;
00029 
<anchor xml:id="__arrow_8cs_source_1l00030"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1aa696d5407b1ed7aad65494328b73c36e">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_play_sound">PlaySound</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1aa696d5407b1ed7aad65494328b73c36e">hitGroundSound</link>;
00031 
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;inFlight;
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;released;
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hasSpreadFire&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00035 
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;travelledFrames&#32;=&#32;0;
00037 
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;scaleParentObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00039 
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Physics.IgnoreCollision(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>.GetComponent&lt;Collider&gt;(),&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player">Player</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player_1ad6c38e0b00917563e4b19d206d20466e">instance</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player_1a6988bfc619a4d79e509811f7eae16576">headCollider</link>&#32;);
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00046 
00047 
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FixedUpdate()
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;released&#32;&amp;&amp;&#32;inFlight&#32;)
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevPosition&#32;=&#32;transform.position;
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevRotation&#32;=&#32;transform.rotation;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevVelocity&#32;=&#32;GetComponent&lt;Rigidbody&gt;().velocity;
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevHeadPosition&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.transform.position;
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;travelledFrames++;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00060 
00061 
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
<anchor xml:id="__arrow_8cs_source_1l00063"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a936f74ee01dcd577819cbdd19c9b5825">00063</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a936f74ee01dcd577819cbdd19c9b5825">ArrowReleased</link>(&#32;<emphasis role="keywordtype">float</emphasis>&#32;inputVelocity&#32;)
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inFlight&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;released&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00067 
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a29537a218aa3ee7f6b9ca4a3af383300">airReleaseSound</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_play_oneshot_1add1324a91d31e0d4e252a3e109425363">Play</link>();
00069 
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a0ab62133f97ec701f82409db5976e17b">glintParticle</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a0ab62133f97ec701f82409db5976e17b">glintParticle</link>.Play();
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00074 
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;gameObject.GetComponentInChildren&lt;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_fire_source">FireSource</link>&gt;().<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_fire_source_1a533abd233b96d3f75164bc913e4e30b8">isBurning</link>&#32;)
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1ae43108164ba6139ae2df09968c76f69f">fireReleaseSound</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_play_oneshot_1add1324a91d31e0d4e252a3e109425363">Play</link>();
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00079 
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;arrow&#32;is&#32;shot&#32;inside&#32;or&#32;too&#32;close&#32;to&#32;an&#32;object</emphasis>
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RaycastHit[]&#32;hits&#32;=&#32;Physics.SphereCastAll(&#32;transform.position,&#32;0.01f,&#32;transform.forward,&#32;0.80f,&#32;Physics.DefaultRaycastLayers,&#32;QueryTriggerInteraction.Ignore&#32;);
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(&#32;RaycastHit&#32;hit&#32;<emphasis role="keywordflow">in</emphasis>&#32;hits&#32;)
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hit.collider.gameObject&#32;!=&#32;gameObject&#32;&amp;&amp;&#32;hit.collider.gameObject&#32;!=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.gameObject&#32;&amp;&amp;&#32;hit.collider&#32;!=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player">Player</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player_1ad6c38e0b00917563e4b19d206d20466e">instance</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player_1a6988bfc619a4d79e509811f7eae16576">headCollider</link>&#32;)
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(&#32;gameObject&#32;);
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00090 
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;travelledFrames&#32;=&#32;0;
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevPosition&#32;=&#32;transform.position;
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevRotation&#32;=&#32;transform.rotation;
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevHeadPosition&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.transform.position;
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevVelocity&#32;=&#32;GetComponent&lt;Rigidbody&gt;().velocity;
00096 
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a202aba7427eea1165521de831008922f">SetCollisionMode</link>(CollisionDetectionMode.ContinuousDynamic);
00098 
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(&#32;gameObject,&#32;30&#32;);
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00101 
<anchor xml:id="__arrow_8cs_source_1l00102"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a202aba7427eea1165521de831008922f">00102</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a202aba7427eea1165521de831008922f">SetCollisionMode</link>(CollisionDetectionMode&#32;newMode,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;force&#32;=&#32;<emphasis role="keyword">false</emphasis>)
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody[]&#32;rigidBodies&#32;=&#32;this.GetComponentsInChildren&lt;Rigidbody&gt;();
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;rigidBodyIndex&#32;=&#32;0;&#32;rigidBodyIndex&#32;&lt;&#32;rigidBodies.Length;&#32;rigidBodyIndex++)
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rigidBodies[rigidBodyIndex].isKinematic&#32;==&#32;<emphasis role="keyword">false</emphasis>&#32;||&#32;force)
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidBodies[rigidBodyIndex].collisionDetectionMode&#32;=&#32;newMode;
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00111 
00112 
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCollisionEnter(&#32;Collision&#32;collision&#32;)
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;inFlight&#32;)
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;rb&#32;=&#32;GetComponent&lt;Rigidbody&gt;();
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;rbSpeed&#32;=&#32;rb.velocity.sqrMagnitude;
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;canStick&#32;=&#32;(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1ae6a1bda880707184acbb465614e7131a">targetPhysMaterial</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;collision.collider.sharedMaterial&#32;==&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1ae6a1bda880707184acbb465614e7131a">targetPhysMaterial</link>&#32;&amp;&amp;&#32;rbSpeed&#32;&gt;&#32;0.2f&#32;);
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;hitBalloon&#32;=&#32;collision.collider.gameObject.GetComponent&lt;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_balloon">Balloon</link>&gt;()&#32;!=&#32;<emphasis role="keyword">null</emphasis>;
00122 
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;travelledFrames&#32;&lt;&#32;2&#32;&amp;&amp;&#32;!canStick&#32;)
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reset&#32;transform&#32;but&#32;halve&#32;your&#32;velocity</emphasis>
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.position&#32;=&#32;prevPosition&#32;-&#32;prevVelocity&#32;*&#32;Time.deltaTime;
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.rotation&#32;=&#32;prevRotation;
00128 
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;reflfectDir&#32;=&#32;Vector3.Reflect(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.velocity,&#32;collision.contacts[0].normal&#32;);
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.velocity&#32;=&#32;reflfectDir&#32;*&#32;0.25f;
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>.velocity&#32;=&#32;reflfectDir&#32;*&#32;0.25f;
00132 
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;travelledFrames&#32;=&#32;0;
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00136 
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a0ab62133f97ec701f82409db5976e17b">glintParticle</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a0ab62133f97ec701f82409db5976e17b">glintParticle</link>.Stop(&#32;<emphasis role="keyword">true</emphasis>&#32;);
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00141 
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;play&#32;hit&#32;sounds&#32;if&#32;we&apos;re&#32;moving&#32;quickly</emphasis>
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;rbSpeed&#32;&gt;&#32;0.1f&#32;)
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1aa696d5407b1ed7aad65494328b73c36e">hitGroundSound</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_play_sound_1a90203c161ab7b4151ee3cc5bb3d4dde4">Play</link>();
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00147 
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FireSource&#32;arrowFire&#32;=&#32;gameObject.GetComponentInChildren&lt;FireSource&gt;();
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FireSource&#32;fireSourceOnTarget&#32;=&#32;collision.collider.GetComponentInParent&lt;FireSource&gt;();
00150 
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;arrowFire&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;arrowFire.isBurning&#32;&amp;&amp;&#32;(&#32;fireSourceOnTarget&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)&#32;)
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!hasSpreadFire&#32;)
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;collision.collider.gameObject.SendMessageUpwards(&#32;<emphasis role="stringliteral">&quot;FireExposure&quot;</emphasis>,&#32;gameObject,&#32;SendMessageOptions.DontRequireReceiver&#32;);
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hasSpreadFire&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;count&#32;collisions&#32;with&#32;good&#32;speed&#32;so&#32;that&#32;arrows&#32;on&#32;the&#32;ground&#32;can&apos;t&#32;deal&#32;damage</emphasis>
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;always&#32;pop&#32;balloons</emphasis>
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;rbSpeed&#32;&gt;&#32;0.1f&#32;||&#32;hitBalloon&#32;)
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;collision.collider.gameObject.SendMessageUpwards(&#32;<emphasis role="stringliteral">&quot;ApplyDamage&quot;</emphasis>,&#32;SendMessageOptions.DontRequireReceiver&#32;);
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gameObject.SendMessage(&#32;<emphasis role="stringliteral">&quot;HasAppliedDamage&quot;</emphasis>,&#32;SendMessageOptions.DontRequireReceiver&#32;);
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00169 
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hitBalloon&#32;)
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Revert&#32;my&#32;physics&#32;properties&#32;cause&#32;I&#32;don&apos;t&#32;want&#32;balloons&#32;to&#32;influence&#32;my&#32;travel</emphasis>
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.position&#32;=&#32;prevPosition;
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.rotation&#32;=&#32;prevRotation;
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.velocity&#32;=&#32;prevVelocity;
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0a50ae99e9c35446c2580e4b540b0fd104">Physics</link>.IgnoreCollision(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.GetComponent&lt;Collider&gt;(),&#32;collision.collider&#32;);
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0a50ae99e9c35446c2580e4b540b0fd104">Physics</link>.IgnoreCollision(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>.GetComponent&lt;Collider&gt;(),&#32;collision.collider&#32;);
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00179 
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;canStick&#32;)
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StickInTarget(&#32;collision,&#32;travelledFrames&#32;&lt;&#32;2&#32;);
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00184 
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Player&#32;Collision&#32;Check&#32;(self&#32;hit)</emphasis>
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;Player.instance&#32;&amp;&amp;&#32;collision.collider&#32;==&#32;Player.instance.headCollider&#32;)
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Player.instance.PlayerShotSelf();
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00192 
00193 
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;StickInTarget(&#32;Collision&#32;collision,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;bSkipRayCast&#32;)
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;prevForward&#32;=&#32;prevRotation&#32;*&#32;Vector3.forward;
00198 
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;stick&#32;in&#32;target&#32;if&#32;the&#32;collider&#32;is&#32;front&#32;of&#32;the&#32;arrow&#32;head</emphasis>
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!bSkipRayCast&#32;)
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RaycastHit[]&#32;hitInfo;
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hitInfo&#32;=&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0a50ae99e9c35446c2580e4b540b0fd104">Physics</link>.RaycastAll(&#32;prevHeadPosition&#32;-&#32;prevVelocity&#32;*&#32;Time.deltaTime,&#32;prevForward,&#32;prevVelocity.magnitude&#32;*&#32;Time.deltaTime&#32;*&#32;2.0f&#32;);
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;properHit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;hitInfo.Length;&#32;++i&#32;)
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RaycastHit&#32;hit&#32;=&#32;hitInfo[i];
00208 
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;hit.collider&#32;==&#32;collision.collider&#32;)
00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;properHit&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00215 
00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!properHit&#32;)
00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00221 
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a0ab62133f97ec701f82409db5976e17b">glintParticle</link>&#32;);
00223 
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inFlight&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00225 
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a202aba7427eea1165521de831008922f">SetCollisionMode</link>(CollisionDetectionMode.Discrete,&#32;<emphasis role="keyword">true</emphasis>);
00227 
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>.velocity&#32;=&#32;Vector3.zero;
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>.angularVelocity&#32;=&#32;Vector3.zero;
00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>.isKinematic&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>.useGravity&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6c27c4428a3bc6485bd112f591218708">shaftRB</link>.transform.GetComponent&lt;BoxCollider&gt;().enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00233 
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.velocity&#32;=&#32;Vector3.zero;
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.angularVelocity&#32;=&#32;Vector3.zero;
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.isKinematic&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.useGravity&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a6adc836d57ae24b6d1b196cdb1f9dba1">arrowHeadRB</link>.transform.GetComponent&lt;BoxCollider&gt;().enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00239 
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_1a767632ea6897d5bef27d8c1043a54869">hitTargetSound</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_play_oneshot_1add1324a91d31e0d4e252a3e109425363">Play</link>();
00241 
00242 
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;hit&#32;item&#32;has&#32;a&#32;parent,&#32;dock&#32;an&#32;empty&#32;object&#32;to&#32;that</emphasis>
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;this&#32;fixes&#32;an&#32;issue&#32;with&#32;scaling&#32;hierarchy.&#32;I&#32;suspect&#32;this&#32;is&#32;not&#32;sustainable&#32;for&#32;a&#32;large&#32;object&#32;/&#32;scaling&#32;hierarchy.</emphasis>
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scaleParentObject&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(&#32;<emphasis role="stringliteral">&quot;Arrow&#32;Scale&#32;Parent&quot;</emphasis>&#32;);
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;parentTransform&#32;=&#32;collision.collider.transform;
00247 
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Don&apos;t&#32;do&#32;this&#32;for&#32;weebles&#32;because&#32;of&#32;how&#32;it&#32;has&#32;a&#32;fixed&#32;joint</emphasis>
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ExplosionWobble&#32;wobble&#32;=&#32;collision.collider.gameObject.GetComponent&lt;ExplosionWobble&gt;();
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!wobble&#32;)
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;parentTransform.parent&#32;)
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parentTransform&#32;=&#32;parentTransform.parent;
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00257 
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scaleParentObject.transform.parent&#32;=&#32;parentTransform;
00259 
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Move&#32;the&#32;arrow&#32;to&#32;the&#32;place&#32;on&#32;the&#32;target&#32;collider&#32;we&#32;were&#32;expecting&#32;to&#32;hit&#32;prior&#32;to&#32;the&#32;impact&#32;itself&#32;knocking&#32;it&#32;around</emphasis>
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.parent&#32;=&#32;scaleParentObject.transform;
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.rotation&#32;=&#32;prevRotation;
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.position&#32;=&#32;prevPosition;
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.position&#32;=&#32;collision.contacts[0].point&#32;-&#32;transform.forward&#32;*&#32;(&#32;0.75f&#32;-&#32;(&#32;Util.RemapNumberClamped(&#32;prevVelocity.magnitude,&#32;0f,&#32;10f,&#32;0.0f,&#32;0.1f&#32;)&#32;+&#32;Random.Range(&#32;0.0f,&#32;0.05f&#32;)&#32;)&#32;);
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00266 
00267 
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-------------------------------------------------</emphasis>
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDestroy()
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;scaleParentObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;)
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(&#32;scaleParentObject&#32;);
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00276 &#32;&#32;&#32;&#32;}
00277 }
</programlisting></section>
