<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system">
<title>Valve.VR.CVRSystem Class Reference</title>
<indexterm><primary>Valve.VR.CVRSystem</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a51783a0590f7d858c6b7a073c961e910">GetRecommendedRenderTargetSize</link> (ref uint pnWidth, ref uint pnHeight)</para>
</listitem>
            <listitem><para><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix44__t">HmdMatrix44_t</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a8e06a8dc62a3d7d82a8672a024d4a3d3">GetProjectionMatrix</link> (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye, float fNearZ, float fFarZ)</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a6154e9257dca79f7c208c3e737160d4f">GetProjectionRaw</link> (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a9df1c714a1b2d358f98a4028122ccedb">ComputeDistortion</link> (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye, float fU, float fV, ref <link linkend="_struct_valve_1_1_v_r_1_1_distortion_coordinates__t">DistortionCoordinates_t</link> pDistortionCoordinates)</para>
</listitem>
            <listitem><para><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a71db4b263545bd87e2972eef7a27dca3">GetEyeToHeadTransform</link> (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1afd1fefe2c93366053820330d68303ad7">GetTimeSinceLastVsync</link> (ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)</para>
</listitem>
            <listitem><para>int <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a7afe0eda4e65687842208f8ce905a64e">GetD3D9AdapterIndex</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a04a43b098747d72d59534db48ce7c293">GetDXGIOutputInfo</link> (ref int pnAdapterIndex)</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a385592a6afe1b4695151161044f49e99">GetOutputDevice</link> (ref ulong pnDevice, <link linkend="_namespace_valve_1_1_v_r_1a9481de640e411eef49c2f3fdca82eaa3">ETextureType</link> textureType, IntPtr pInstance)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a9c4ab5e7989d6c1938159b7a1ec42b14">IsDisplayOnDesktop</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a4ade672a06d9ebb00320f2cc04314b52">SetDisplayVisibility</link> (bool bIsVisibleOnDesktop)</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1abb17d53b9f9ac2fbb29cde9e0805826e">GetDeviceToAbsoluteTrackingPose</link> (<link linkend="_namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f">ETrackingUniverseOrigin</link> eOrigin, float fPredictedSecondsToPhotonsFromNow, <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> [] pTrackedDevicePoseArray)</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1af904b763d37e3fd62655183a9d2756ee">ResetSeatedZeroPose</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a117026af270ea0f9c11538c5e442b102">GetSeatedZeroPoseToStandingAbsoluteTrackingPose</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a018442755324a3f6a307f387678c2f72">GetRawZeroPoseToStandingAbsoluteTrackingPose</link> ()</para>
</listitem>
            <listitem><para>uint <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a52663d4f2298d80ebbb9e7a81df46dff">GetSortedTrackedDeviceIndicesOfClass</link> (<link linkend="_namespace_valve_1_1_v_r_1aa1a3c2765fe53acb85372a57652c47a1">ETrackedDeviceClass</link> eTrackedDeviceClass, uint [] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)</para>
</listitem>
            <listitem><para><link linkend="_namespace_valve_1_1_v_r_1a44a7a02e482d63dc5e0c0851a2ad775e">EDeviceActivityLevel</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a0daef57d1ec6478a14450cb05febca59">GetTrackedDeviceActivityLevel</link> (uint unDeviceId)</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1ae8763c74f425d9eec719a555ea3995fd">ApplyTransform</link> (ref <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> pOutputPose, ref <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> pTrackedDevicePose, ref <link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> pTransform)</para>
</listitem>
            <listitem><para>uint <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a44fda444e868474cbc41dd2fc1fe8d81">GetTrackedDeviceIndexForControllerRole</link> (<link linkend="_namespace_valve_1_1_v_r_1a7814f024ae1755837d784b5263e05792">ETrackedControllerRole</link> unDeviceType)</para>
</listitem>
            <listitem><para><link linkend="_namespace_valve_1_1_v_r_1a7814f024ae1755837d784b5263e05792">ETrackedControllerRole</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1ae337e057f5d2beb2993405773207d78a">GetControllerRoleForTrackedDeviceIndex</link> (uint unDeviceIndex)</para>
</listitem>
            <listitem><para><link linkend="_namespace_valve_1_1_v_r_1aa1a3c2765fe53acb85372a57652c47a1">ETrackedDeviceClass</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1ac397038d675df987d6da168edb72068d">GetTrackedDeviceClass</link> (uint unDeviceIndex)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1aeba3d5d5d782b1a343ae1555b30c4c3f">IsTrackedDeviceConnected</link> (uint unDeviceIndex)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1af4e5f993f956f6a825bafb95f8c1f680">GetBoolTrackedDeviceProperty</link> (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</para>
</listitem>
            <listitem><para>float <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a6695017d8f8b2e6492fc003f7910a49e">GetFloatTrackedDeviceProperty</link> (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</para>
</listitem>
            <listitem><para>int <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1abe82e7c658121c24812c9cfc444a750c">GetInt32TrackedDeviceProperty</link> (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</para>
</listitem>
            <listitem><para>ulong <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a2cde74d7011dc5d9f2727c29f3a9e8c1">GetUint64TrackedDeviceProperty</link> (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</para>
</listitem>
            <listitem><para><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1af01c2051f20b88132e757879a4869e80">GetMatrix34TrackedDeviceProperty</link> (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</para>
</listitem>
            <listitem><para>uint <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1abf54d8807c8b17fd968b0d46b405c56d">GetArrayTrackedDeviceProperty</link> (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</para>
</listitem>
            <listitem><para>uint <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a7832bc9cd34345dacb66731bc39d8f2a">GetStringTrackedDeviceProperty</link> (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, System.Text.StringBuilder pchValue, uint unBufferSize, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</para>
</listitem>
            <listitem><para>string <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a416e8b65c6d1c54c84196346a17c9e90">GetPropErrorNameFromEnum</link> (<link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> error)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a1680564a6dab625afe34b14d4920a263">PollNextEvent</link> (ref <link linkend="_struct_valve_1_1_v_r_1_1_v_r_event__t">VREvent_t</link> pEvent, uint uncbVREvent)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a95d7cf29714d23acf0e6a6748370e788">PollNextEventWithPose</link> (<link linkend="_namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f">ETrackingUniverseOrigin</link> eOrigin, ref <link linkend="_struct_valve_1_1_v_r_1_1_v_r_event__t">VREvent_t</link> pEvent, uint uncbVREvent, ref <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> pTrackedDevicePose)</para>
</listitem>
            <listitem><para>string <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1af1e8543cb021f7215c6252db5c0b5e3d">GetEventTypeNameFromEnum</link> (<link linkend="_namespace_valve_1_1_v_r_1afe3398b9e5cb1ea06335142d1b9289f3">EVREventType</link> eType)</para>
</listitem>
            <listitem><para><link linkend="_struct_valve_1_1_v_r_1_1_hidden_area_mesh__t">HiddenAreaMesh_t</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a8fe7073e6d0c927bc986388a935a48ca">GetHiddenAreaMesh</link> (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye, <link linkend="_namespace_valve_1_1_v_r_1a2ed1af4858f23bc73d7358e8fcde5c64">EHiddenAreaMeshType</link> type)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1ae999de6c51a207b9fe9e32e06ca34335">GetControllerState</link> (uint unControllerDeviceIndex, ref <link linkend="_struct_valve_1_1_v_r_1_1_v_r_controller_state__t">VRControllerState_t</link> pControllerState, uint unControllerStateSize)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1af7c299caf58916815c437b40c6ce6e12">GetControllerStateWithPose</link> (<link linkend="_namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f">ETrackingUniverseOrigin</link> eOrigin, uint unControllerDeviceIndex, ref <link linkend="_struct_valve_1_1_v_r_1_1_v_r_controller_state__t">VRControllerState_t</link> pControllerState, uint unControllerStateSize, ref <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> pTrackedDevicePose)</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a4fab070ac7de10c813b4d042a1d51fca">TriggerHapticPulse</link> (uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)</para>
</listitem>
            <listitem><para>string <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1acf572436320e18e574af8435fdb34c7a">GetButtonIdNameFromEnum</link> (<link linkend="_namespace_valve_1_1_v_r_1a43fd11be1f2f7596cbb480b4a5dc2e87">EVRButtonId</link> eButtonId)</para>
</listitem>
            <listitem><para>string <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a67582b56e89890437a482f7259920ba8">GetControllerAxisTypeNameFromEnum</link> (<link linkend="_namespace_valve_1_1_v_r_1aaccda1681e581ff46f9d883a8b574a66">EVRControllerAxisType</link> eAxisType)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a911d8daa1d9b5d2d8cc9b7e36399187e">IsInputAvailable</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a7f9a259b909f4dc21263352a3d122806">IsSteamVRDrawingControllers</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a5bdcaf6bcb7f5f0e2564033e5df476d9">ShouldApplicationPause</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a726687af31f242f9df5ea5a073150b8e">ShouldApplicationReduceRenderingWork</link> ()</para>
</listitem>
            <listitem><para>uint <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1acf1684d0053050eb05eb90e912900142">DriverDebugRequest</link> (uint unDeviceIndex, string pchRequest, System.Text.StringBuilder pchResponseBuffer, uint unResponseBufferSize)</para>
</listitem>
            <listitem><para><link linkend="_namespace_valve_1_1_v_r_1a07c3927041d6bb490e61ca27612c41ff">EVRFirmwareError</link> <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1a807bef2cd4ed9817b4f1bfe06fafe6f9">PerformFirmwareUpdate</link> (uint unDeviceIndex)</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1ae9ec4861e040d13c4e5559e787e1a404">AcknowledgeQuit_Exiting</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system_1af777d49b28018b5f715a383136738d9b">AcknowledgeQuit_UserPrompt</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01726">1726</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1ae9ec4861e040d13c4e5559e787e1a404"/>    <section>
    <title>AcknowledgeQuit_Exiting()</title>
<indexterm><primary>AcknowledgeQuit_Exiting</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>AcknowledgeQuit_Exiting</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.AcknowledgeQuit_Exiting ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02038">2038</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1af777d49b28018b5f715a383136738d9b"/>    <section>
    <title>AcknowledgeQuit_UserPrompt()</title>
<indexterm><primary>AcknowledgeQuit_UserPrompt</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>AcknowledgeQuit_UserPrompt</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.AcknowledgeQuit_UserPrompt ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02042">2042</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1ae8763c74f425d9eec719a555ea3995fd"/>    <section>
    <title>ApplyTransform()</title>
<indexterm><primary>ApplyTransform</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>ApplyTransform</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.ApplyTransform (ref <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> pOutputPose, ref <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> pTrackedDevicePose, ref <link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> pTransform)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01822">1822</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a9df1c714a1b2d358f98a4028122ccedb"/>    <section>
    <title>ComputeDistortion()</title>
<indexterm><primary>ComputeDistortion</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>ComputeDistortion</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.ComputeDistortion (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye, float fU, float fV, ref <link linkend="_struct_valve_1_1_v_r_1_1_distortion_coordinates__t">DistortionCoordinates_t</link> pDistortionCoordinates)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01752">1752</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1acf1684d0053050eb05eb90e912900142"/>    <section>
    <title>DriverDebugRequest()</title>
<indexterm><primary>DriverDebugRequest</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>DriverDebugRequest</secondary></indexterm>
<para><computeroutput>uint Valve.VR.CVRSystem.DriverDebugRequest (uint unDeviceIndex, string pchRequest, System.Text.StringBuilder pchResponseBuffer, uint unResponseBufferSize)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02028">2028</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1abf54d8807c8b17fd968b0d46b405c56d"/>    <section>
    <title>GetArrayTrackedDeviceProperty()</title>
<indexterm><primary>GetArrayTrackedDeviceProperty</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetArrayTrackedDeviceProperty</secondary></indexterm>
<para><computeroutput>uint Valve.VR.CVRSystem.GetArrayTrackedDeviceProperty (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01871">1871</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1af4e5f993f956f6a825bafb95f8c1f680"/>    <section>
    <title>GetBoolTrackedDeviceProperty()</title>
<indexterm><primary>GetBoolTrackedDeviceProperty</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetBoolTrackedDeviceProperty</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.GetBoolTrackedDeviceProperty (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01846">1846</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1acf572436320e18e574af8435fdb34c7a"/>    <section>
    <title>GetButtonIdNameFromEnum()</title>
<indexterm><primary>GetButtonIdNameFromEnum</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetButtonIdNameFromEnum</secondary></indexterm>
<para><computeroutput>string Valve.VR.CVRSystem.GetButtonIdNameFromEnum (<link linkend="_namespace_valve_1_1_v_r_1a43fd11be1f2f7596cbb480b4a5dc2e87">EVRButtonId</link> eButtonId)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01998">1998</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a67582b56e89890437a482f7259920ba8"/>    <section>
    <title>GetControllerAxisTypeNameFromEnum()</title>
<indexterm><primary>GetControllerAxisTypeNameFromEnum</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetControllerAxisTypeNameFromEnum</secondary></indexterm>
<para><computeroutput>string Valve.VR.CVRSystem.GetControllerAxisTypeNameFromEnum (<link linkend="_namespace_valve_1_1_v_r_1aaccda1681e581ff46f9d883a8b574a66">EVRControllerAxisType</link> eAxisType)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02003">2003</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1ae337e057f5d2beb2993405773207d78a"/>    <section>
    <title>GetControllerRoleForTrackedDeviceIndex()</title>
<indexterm><primary>GetControllerRoleForTrackedDeviceIndex</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetControllerRoleForTrackedDeviceIndex</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_valve_1_1_v_r_1a7814f024ae1755837d784b5263e05792">ETrackedControllerRole</link> Valve.VR.CVRSystem.GetControllerRoleForTrackedDeviceIndex (uint unDeviceIndex)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01831">1831</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1ae999de6c51a207b9fe9e32e06ca34335"/>    <section>
    <title>GetControllerState()</title>
<indexterm><primary>GetControllerState</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetControllerState</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.GetControllerState (uint unControllerDeviceIndex, ref <link linkend="_struct_valve_1_1_v_r_1_1_v_r_controller_state__t">VRControllerState_t</link> pControllerState, uint unControllerStateSize)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01944">1944</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1af7c299caf58916815c437b40c6ce6e12"/>    <section>
    <title>GetControllerStateWithPose()</title>
<indexterm><primary>GetControllerStateWithPose</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetControllerStateWithPose</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.GetControllerStateWithPose (<link linkend="_namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f">ETrackingUniverseOrigin</link> eOrigin, uint unControllerDeviceIndex, ref <link linkend="_struct_valve_1_1_v_r_1_1_v_r_controller_state__t">VRControllerState_t</link> pControllerState, uint unControllerStateSize, ref <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> pTrackedDevicePose)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01975">1975</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a7afe0eda4e65687842208f8ce905a64e"/>    <section>
    <title>GetD3D9AdapterIndex()</title>
<indexterm><primary>GetD3D9AdapterIndex</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetD3D9AdapterIndex</secondary></indexterm>
<para><computeroutput>int Valve.VR.CVRSystem.GetD3D9AdapterIndex ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01769">1769</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1abb17d53b9f9ac2fbb29cde9e0805826e"/>    <section>
    <title>GetDeviceToAbsoluteTrackingPose()</title>
<indexterm><primary>GetDeviceToAbsoluteTrackingPose</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetDeviceToAbsoluteTrackingPose</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.GetDeviceToAbsoluteTrackingPose (<link linkend="_namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f">ETrackingUniverseOrigin</link> eOrigin, float fPredictedSecondsToPhotonsFromNow, <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> [] pTrackedDevicePoseArray)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01794">1794</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a04a43b098747d72d59534db48ce7c293"/>    <section>
    <title>GetDXGIOutputInfo()</title>
<indexterm><primary>GetDXGIOutputInfo</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetDXGIOutputInfo</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.GetDXGIOutputInfo (ref int pnAdapterIndex)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01774">1774</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1af1e8543cb021f7215c6252db5c0b5e3d"/>    <section>
    <title>GetEventTypeNameFromEnum()</title>
<indexterm><primary>GetEventTypeNameFromEnum</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetEventTypeNameFromEnum</secondary></indexterm>
<para><computeroutput>string Valve.VR.CVRSystem.GetEventTypeNameFromEnum (<link linkend="_namespace_valve_1_1_v_r_1afe3398b9e5cb1ea06335142d1b9289f3">EVREventType</link> eType)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01922">1922</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a71db4b263545bd87e2972eef7a27dca3"/>    <section>
    <title>GetEyeToHeadTransform()</title>
<indexterm><primary>GetEyeToHeadTransform</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetEyeToHeadTransform</secondary></indexterm>
<para><computeroutput><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> Valve.VR.CVRSystem.GetEyeToHeadTransform (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01757">1757</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a6695017d8f8b2e6492fc003f7910a49e"/>    <section>
    <title>GetFloatTrackedDeviceProperty()</title>
<indexterm><primary>GetFloatTrackedDeviceProperty</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetFloatTrackedDeviceProperty</secondary></indexterm>
<para><computeroutput>float Valve.VR.CVRSystem.GetFloatTrackedDeviceProperty (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01851">1851</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a8fe7073e6d0c927bc986388a935a48ca"/>    <section>
    <title>GetHiddenAreaMesh()</title>
<indexterm><primary>GetHiddenAreaMesh</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetHiddenAreaMesh</secondary></indexterm>
<para><computeroutput><link linkend="_struct_valve_1_1_v_r_1_1_hidden_area_mesh__t">HiddenAreaMesh_t</link> Valve.VR.CVRSystem.GetHiddenAreaMesh (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye, <link linkend="_namespace_valve_1_1_v_r_1a2ed1af4858f23bc73d7358e8fcde5c64">EHiddenAreaMeshType</link> type)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01927">1927</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1abe82e7c658121c24812c9cfc444a750c"/>    <section>
    <title>GetInt32TrackedDeviceProperty()</title>
<indexterm><primary>GetInt32TrackedDeviceProperty</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetInt32TrackedDeviceProperty</secondary></indexterm>
<para><computeroutput>int Valve.VR.CVRSystem.GetInt32TrackedDeviceProperty (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01856">1856</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1af01c2051f20b88132e757879a4869e80"/>    <section>
    <title>GetMatrix34TrackedDeviceProperty()</title>
<indexterm><primary>GetMatrix34TrackedDeviceProperty</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetMatrix34TrackedDeviceProperty</secondary></indexterm>
<para><computeroutput><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> Valve.VR.CVRSystem.GetMatrix34TrackedDeviceProperty (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01866">1866</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a385592a6afe1b4695151161044f49e99"/>    <section>
    <title>GetOutputDevice()</title>
<indexterm><primary>GetOutputDevice</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetOutputDevice</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.GetOutputDevice (ref ulong pnDevice, <link linkend="_namespace_valve_1_1_v_r_1a9481de640e411eef49c2f3fdca82eaa3">ETextureType</link> textureType, IntPtr pInstance)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01779">1779</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a8e06a8dc62a3d7d82a8672a024d4a3d3"/>    <section>
    <title>GetProjectionMatrix()</title>
<indexterm><primary>GetProjectionMatrix</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetProjectionMatrix</secondary></indexterm>
<para><computeroutput><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix44__t">HmdMatrix44_t</link> Valve.VR.CVRSystem.GetProjectionMatrix (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye, float fNearZ, float fFarZ)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01739">1739</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a6154e9257dca79f7c208c3e737160d4f"/>    <section>
    <title>GetProjectionRaw()</title>
<indexterm><primary>GetProjectionRaw</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetProjectionRaw</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.GetProjectionRaw (<link linkend="_namespace_valve_1_1_v_r_1a8153d4a3e627e1cede046327087c1880">EVREye</link> eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01744">1744</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a416e8b65c6d1c54c84196346a17c9e90"/>    <section>
    <title>GetPropErrorNameFromEnum()</title>
<indexterm><primary>GetPropErrorNameFromEnum</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetPropErrorNameFromEnum</secondary></indexterm>
<para><computeroutput>string Valve.VR.CVRSystem.GetPropErrorNameFromEnum (<link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> error)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01881">1881</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a018442755324a3f6a307f387678c2f72"/>    <section>
    <title>GetRawZeroPoseToStandingAbsoluteTrackingPose()</title>
<indexterm><primary>GetRawZeroPoseToStandingAbsoluteTrackingPose</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetRawZeroPoseToStandingAbsoluteTrackingPose</secondary></indexterm>
<para><computeroutput><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> Valve.VR.CVRSystem.GetRawZeroPoseToStandingAbsoluteTrackingPose ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01807">1807</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a51783a0590f7d858c6b7a073c961e910"/>    <section>
    <title>GetRecommendedRenderTargetSize()</title>
<indexterm><primary>GetRecommendedRenderTargetSize</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetRecommendedRenderTargetSize</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.GetRecommendedRenderTargetSize (ref uint pnWidth, ref uint pnHeight)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01733">1733</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a117026af270ea0f9c11538c5e442b102"/>    <section>
    <title>GetSeatedZeroPoseToStandingAbsoluteTrackingPose()</title>
<indexterm><primary>GetSeatedZeroPoseToStandingAbsoluteTrackingPose</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetSeatedZeroPoseToStandingAbsoluteTrackingPose</secondary></indexterm>
<para><computeroutput><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">HmdMatrix34_t</link> Valve.VR.CVRSystem.GetSeatedZeroPoseToStandingAbsoluteTrackingPose ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01802">1802</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a52663d4f2298d80ebbb9e7a81df46dff"/>    <section>
    <title>GetSortedTrackedDeviceIndicesOfClass()</title>
<indexterm><primary>GetSortedTrackedDeviceIndicesOfClass</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetSortedTrackedDeviceIndicesOfClass</secondary></indexterm>
<para><computeroutput>uint Valve.VR.CVRSystem.GetSortedTrackedDeviceIndicesOfClass (<link linkend="_namespace_valve_1_1_v_r_1aa1a3c2765fe53acb85372a57652c47a1">ETrackedDeviceClass</link> eTrackedDeviceClass, uint [] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01812">1812</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a7832bc9cd34345dacb66731bc39d8f2a"/>    <section>
    <title>GetStringTrackedDeviceProperty()</title>
<indexterm><primary>GetStringTrackedDeviceProperty</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetStringTrackedDeviceProperty</secondary></indexterm>
<para><computeroutput>uint Valve.VR.CVRSystem.GetStringTrackedDeviceProperty (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, System.Text.StringBuilder pchValue, uint unBufferSize, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01876">1876</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1afd1fefe2c93366053820330d68303ad7"/>    <section>
    <title>GetTimeSinceLastVsync()</title>
<indexterm><primary>GetTimeSinceLastVsync</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetTimeSinceLastVsync</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.GetTimeSinceLastVsync (ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01762">1762</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a0daef57d1ec6478a14450cb05febca59"/>    <section>
    <title>GetTrackedDeviceActivityLevel()</title>
<indexterm><primary>GetTrackedDeviceActivityLevel</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetTrackedDeviceActivityLevel</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_valve_1_1_v_r_1a44a7a02e482d63dc5e0c0851a2ad775e">EDeviceActivityLevel</link> Valve.VR.CVRSystem.GetTrackedDeviceActivityLevel (uint unDeviceId)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01817">1817</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1ac397038d675df987d6da168edb72068d"/>    <section>
    <title>GetTrackedDeviceClass()</title>
<indexterm><primary>GetTrackedDeviceClass</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetTrackedDeviceClass</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_valve_1_1_v_r_1aa1a3c2765fe53acb85372a57652c47a1">ETrackedDeviceClass</link> Valve.VR.CVRSystem.GetTrackedDeviceClass (uint unDeviceIndex)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01836">1836</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a44fda444e868474cbc41dd2fc1fe8d81"/>    <section>
    <title>GetTrackedDeviceIndexForControllerRole()</title>
<indexterm><primary>GetTrackedDeviceIndexForControllerRole</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetTrackedDeviceIndexForControllerRole</secondary></indexterm>
<para><computeroutput>uint Valve.VR.CVRSystem.GetTrackedDeviceIndexForControllerRole (<link linkend="_namespace_valve_1_1_v_r_1a7814f024ae1755837d784b5263e05792">ETrackedControllerRole</link> unDeviceType)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01826">1826</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a2cde74d7011dc5d9f2727c29f3a9e8c1"/>    <section>
    <title>GetUint64TrackedDeviceProperty()</title>
<indexterm><primary>GetUint64TrackedDeviceProperty</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>GetUint64TrackedDeviceProperty</secondary></indexterm>
<para><computeroutput>ulong Valve.VR.CVRSystem.GetUint64TrackedDeviceProperty (uint unDeviceIndex, <link linkend="_namespace_valve_1_1_v_r_1ab060521ead7273986988fc4897e52482">ETrackedDeviceProperty</link> prop, ref <link linkend="_namespace_valve_1_1_v_r_1aab6684f03930a2d2cf22ed66b437e47b">ETrackedPropertyError</link> pError)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01861">1861</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a9c4ab5e7989d6c1938159b7a1ec42b14"/>    <section>
    <title>IsDisplayOnDesktop()</title>
<indexterm><primary>IsDisplayOnDesktop</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>IsDisplayOnDesktop</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.IsDisplayOnDesktop ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01784">1784</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a911d8daa1d9b5d2d8cc9b7e36399187e"/>    <section>
    <title>IsInputAvailable()</title>
<indexterm><primary>IsInputAvailable</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>IsInputAvailable</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.IsInputAvailable ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02008">2008</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a7f9a259b909f4dc21263352a3d122806"/>    <section>
    <title>IsSteamVRDrawingControllers()</title>
<indexterm><primary>IsSteamVRDrawingControllers</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>IsSteamVRDrawingControllers</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.IsSteamVRDrawingControllers ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02013">2013</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1aeba3d5d5d782b1a343ae1555b30c4c3f"/>    <section>
    <title>IsTrackedDeviceConnected()</title>
<indexterm><primary>IsTrackedDeviceConnected</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>IsTrackedDeviceConnected</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.IsTrackedDeviceConnected (uint unDeviceIndex)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01841">1841</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a807bef2cd4ed9817b4f1bfe06fafe6f9"/>    <section>
    <title>PerformFirmwareUpdate()</title>
<indexterm><primary>PerformFirmwareUpdate</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>PerformFirmwareUpdate</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_valve_1_1_v_r_1a07c3927041d6bb490e61ca27612c41ff">EVRFirmwareError</link> Valve.VR.CVRSystem.PerformFirmwareUpdate (uint unDeviceIndex)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02033">2033</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a1680564a6dab625afe34b14d4920a263"/>    <section>
    <title>PollNextEvent()</title>
<indexterm><primary>PollNextEvent</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>PollNextEvent</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.PollNextEvent (ref <link linkend="_struct_valve_1_1_v_r_1_1_v_r_event__t">VREvent_t</link> pEvent, uint uncbVREvent)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01898">1898</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a95d7cf29714d23acf0e6a6748370e788"/>    <section>
    <title>PollNextEventWithPose()</title>
<indexterm><primary>PollNextEventWithPose</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>PollNextEventWithPose</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.PollNextEventWithPose (<link linkend="_namespace_valve_1_1_v_r_1a29be99a3c2f780157bd490db06a7f12f">ETrackingUniverseOrigin</link> eOrigin, ref <link linkend="_struct_valve_1_1_v_r_1_1_v_r_event__t">VREvent_t</link> pEvent, uint uncbVREvent, ref <link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">TrackedDevicePose_t</link> pTrackedDevicePose)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01917">1917</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1af904b763d37e3fd62655183a9d2756ee"/>    <section>
    <title>ResetSeatedZeroPose()</title>
<indexterm><primary>ResetSeatedZeroPose</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>ResetSeatedZeroPose</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.ResetSeatedZeroPose ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01798">1798</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a4ade672a06d9ebb00320f2cc04314b52"/>    <section>
    <title>SetDisplayVisibility()</title>
<indexterm><primary>SetDisplayVisibility</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>SetDisplayVisibility</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.SetDisplayVisibility (bool bIsVisibleOnDesktop)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01789">1789</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a5bdcaf6bcb7f5f0e2564033e5df476d9"/>    <section>
    <title>ShouldApplicationPause()</title>
<indexterm><primary>ShouldApplicationPause</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>ShouldApplicationPause</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.ShouldApplicationPause ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02018">2018</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a726687af31f242f9df5ea5a073150b8e"/>    <section>
    <title>ShouldApplicationReduceRenderingWork()</title>
<indexterm><primary>ShouldApplicationReduceRenderingWork</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>ShouldApplicationReduceRenderingWork</secondary></indexterm>
<para><computeroutput>bool Valve.VR.CVRSystem.ShouldApplicationReduceRenderingWork ( )</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l02023">2023</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
    </section><anchor xml:id="_class_valve_1_1_v_r_1_1_c_v_r_system_1a4fab070ac7de10c813b4d042a1d51fca"/>    <section>
    <title>TriggerHapticPulse()</title>
<indexterm><primary>TriggerHapticPulse</primary><secondary>Valve.VR.CVRSystem</secondary></indexterm>
<indexterm><primary>Valve.VR.CVRSystem</primary><secondary>TriggerHapticPulse</secondary></indexterm>
<para><computeroutput>void Valve.VR.CVRSystem.TriggerHapticPulse (uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)</computeroutput></para><para>
Definition at line <link linkend="_openvr__api_8cs_source_1l01994">1994</link> of file <link linkend="_openvr__api_8cs_source">openvr_api.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/SteamVR/Plugins/<link linkend="_openvr__api_8cs">openvr_api.cs</link></section>
</section>
