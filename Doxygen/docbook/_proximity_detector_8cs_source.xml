<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__proximity_detector_8cs_source">
<title>ProximityDetector.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DetectionUtilities/ProximityDetector.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Events;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_attributes">Attributes</link>;
00015 
00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>{
00017 
<anchor xml:id="__proximity_detector_8cs_source_1l00023"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector">00023</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_proximity_detector">ProximityDetector</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_detector">Detector</link>&#32;{
00029 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Dispatched&#32;when&#32;close&#32;enough&#32;to&#32;a&#32;target.&quot;</emphasis>)]
<anchor xml:id="__proximity_detector_8cs_source_1l00030"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a6cabbb40727dcb3b5d8577982a6516cc">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_event">ProximityEvent</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a6cabbb40727dcb3b5d8577982a6516cc">OnProximity</link>;
00035 &#32;&#32;&#32;&#32;[Units(<emphasis role="stringliteral">&quot;seconds&quot;</emphasis>)]
00036 &#32;&#32;&#32;&#32;[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_min_value">MinValue</link>(0)]
00037 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;interval&#32;in&#32;seconds&#32;at&#32;which&#32;to&#32;check&#32;this&#32;detector&apos;s&#32;conditions.&quot;</emphasis>)]
<anchor xml:id="__proximity_detector_8cs_source_1l00038"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a630cf8c292fbdf90459f2e41ca43c890">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a630cf8c292fbdf90459f2e41ca43c890">Period</link>&#32;=&#32;.1f;&#32;<emphasis role="comment">//seconds</emphasis>
00039 
00044 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Detector&#32;Targets&quot;</emphasis>)]
00045 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;list&#32;of&#32;target&#32;objects.&quot;</emphasis>)]
00046 &#32;&#32;&#32;&#32;[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if">DisableIf</link>(<emphasis role="stringliteral">&quot;UseLayersNotList&quot;</emphasis>,&#32;<emphasis role="keyword">true</emphasis>)]
<anchor xml:id="__proximity_detector_8cs_source_1l00047"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a5a588af860f86f0116c919fa8fada465">00047</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject[]&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a5a588af860f86f0116c919fa8fada465">TargetObjects</link>;
00048 
00055 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Objects&#32;with&#32;this&#32;tag&#32;are&#32;added&#32;to&#32;the&#32;list&#32;of&#32;targets.&quot;</emphasis>)]
00056 &#32;&#32;&#32;&#32;[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if">DisableIf</link>(<emphasis role="stringliteral">&quot;UseLayersNotList&quot;</emphasis>,&#32;<emphasis role="keyword">true</emphasis>)]
<anchor xml:id="__proximity_detector_8cs_source_1l00057"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a4142f9e67a2936e6c1c56521c566f710">00057</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a4142f9e67a2936e6c1c56521c566f710">TagName</link>&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
00058 
00059 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Use&#32;a&#32;Layer&#32;instead&#32;of&#32;the&#32;target&#32;list.&quot;</emphasis>)]
<anchor xml:id="__proximity_detector_8cs_source_1l00060"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1ace1a6d3060bc3f78861eccb6bd1bd612">00060</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1ace1a6d3060bc3f78861eccb6bd1bd612">UseLayersNotList</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00061 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;Layer&#32;containing&#32;the&#32;objects&#32;to&#32;check.&quot;</emphasis>)]
00062 &#32;&#32;&#32;&#32;[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if">DisableIf</link>(<emphasis role="stringliteral">&quot;UseLayersNotList&quot;</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)]
<anchor xml:id="__proximity_detector_8cs_source_1l00063"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a03df6304fe6e81340a4e5d53a904d6ee">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;LayerMask&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a03df6304fe6e81340a4e5d53a904d6ee">Layer</link>;
00064 
00070 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Distance&#32;Settings&quot;</emphasis>)]
00071 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;target&#32;distance&#32;in&#32;meters&#32;to&#32;activate&#32;the&#32;detector.&quot;</emphasis>)]
00072 &#32;&#32;&#32;&#32;[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_min_value">MinValue</link>(0)]
<anchor xml:id="__proximity_detector_8cs_source_1l00073"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1aae0de1f759535b5f204722c243241746">00073</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1aae0de1f759535b5f204722c243241746">OnDistance</link>&#32;=&#32;.01f;&#32;<emphasis role="comment">//meters</emphasis>
00074 
00080 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;distance&#32;in&#32;meters&#32;at&#32;which&#32;to&#32;deactivate&#32;the&#32;detector.&quot;</emphasis>)]
<anchor xml:id="__proximity_detector_8cs_source_1l00081"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a25c70c8a58a321da905fb43f825d6377">00081</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a25c70c8a58a321da905fb43f825d6377">OffDistance</link>&#32;=&#32;.015f;&#32;<emphasis role="comment">//meters</emphasis>
00082 
<anchor xml:id="__proximity_detector_8cs_source_1l00091"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1acc3c0aa94505f393b7a458c4dc0e482e">00091</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1acc3c0aa94505f393b7a458c4dc0e482e">CurrentObject</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_currentObj;&#32;}&#32;}
00095 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
00096 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;Draw&#32;this&#32;detector&apos;s&#32;Gizmos,&#32;if&#32;any.&#32;(Gizmos&#32;must&#32;be&#32;on&#32;in&#32;Unity&#32;edtor,&#32;too.)&quot;</emphasis>)]
<anchor xml:id="__proximity_detector_8cs_source_1l00097"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a168a600ee9c5b723b2ab546958429cb8">00097</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a168a600ee9c5b723b2ab546958429cb8">ShowGizmos</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00098 
00099 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;proximityWatcherCoroutine;
00100 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GameObject&#32;_currentObj&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00101 
<anchor xml:id="__proximity_detector_8cs_source_1l00102"/><link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a2d5038a3e7f0d617da17b09eae16c8cb">00102</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a2d5038a3e7f0d617da17b09eae16c8cb">OnValidate</link>()&#32;{
00103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Activate&#32;value&#32;cannot&#32;be&#32;less&#32;than&#32;deactivate&#32;value</emphasis>
00104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a25c70c8a58a321da905fb43f825d6377">OffDistance</link>&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1aae0de1f759535b5f204722c243241746">OnDistance</link>)&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a25c70c8a58a321da905fb43f825d6377">OffDistance</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1aae0de1f759535b5f204722c243241746">OnDistance</link>;
00106 &#32;&#32;&#32;&#32;&#32;&#32;}
00107 &#32;&#32;&#32;&#32;}
00108 
00109 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;proximityWatcherCoroutine&#32;=&#32;proximityWatcher();
00111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a4142f9e67a2936e6c1c56521c566f710">TagName</link>&#32;!=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)&#32;{
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject[]&#32;taggedObjects&#32;=&#32;GameObject.FindGameObjectsWithTag(<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a4142f9e67a2936e6c1c56521c566f710">TagName</link>);
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;List&lt;GameObject&gt;&#32;targets&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;GameObject&gt;(taggedObjects.Length&#32;+&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a5a588af860f86f0116c919fa8fada465">TargetObjects</link>.Length);
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;t&#32;=&#32;0;&#32;t&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a5a588af860f86f0116c919fa8fada465">TargetObjects</link>.Length;&#32;t++)&#32;{
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targets.Add(<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a5a588af860f86f0116c919fa8fada465">TargetObjects</link>[t]);
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;t&#32;=&#32;0;&#32;t&#32;&lt;&#32;taggedObjects.Length;&#32;t++)&#32;{
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;targets.Add(taggedObjects[t]);
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a5a588af860f86f0116c919fa8fada465">TargetObjects</link>&#32;=&#32;targets.ToArray();
00121 &#32;&#32;&#32;&#32;&#32;&#32;}
00122 &#32;&#32;&#32;&#32;}
00123 
00124 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable&#32;()&#32;{
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StopCoroutine(proximityWatcherCoroutine);
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(proximityWatcherCoroutine);
00127 &#32;&#32;&#32;&#32;}
00128 &#32;&#32;
00129 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable&#32;()&#32;{
00130 &#32;&#32;&#32;&#32;&#32;&#32;StopCoroutine(proximityWatcherCoroutine);
00131 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59">Deactivate</link>();
00132 &#32;&#32;&#32;&#32;}
00133 
00134 &#32;&#32;&#32;&#32;IEnumerator&#32;proximityWatcher(){
00135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;proximityState&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00136 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;onSquared,&#32;offSquared;&#32;<emphasis role="comment">//Use&#32;squared&#32;distances&#32;to&#32;avoid&#32;taking&#32;square&#32;roots</emphasis>
00137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>){
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;onSquared&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1aae0de1f759535b5f204722c243241746">OnDistance</link>&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1aae0de1f759535b5f204722c243241746">OnDistance</link>;
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offSquared&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a25c70c8a58a321da905fb43f825d6377">OffDistance</link>&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a25c70c8a58a321da905fb43f825d6377">OffDistance</link>;
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_currentObj&#32;!=&#32;<emphasis role="keyword">null</emphasis>){
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(distanceSquared(_currentObj)&#32;&gt;&#32;offSquared){
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_currentObj&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;proximityState&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1ace1a6d3060bc3f78861eccb6bd1bd612">UseLayersNotList</link>)&#32;{
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Collider[]&#32;nearby&#32;=&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0a50ae99e9c35446c2580e4b540b0fd104">Physics</link>.OverlapSphere(transform.position,&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1aae0de1f759535b5f204722c243241746">OnDistance</link>,&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a03df6304fe6e81340a4e5d53a904d6ee">Layer</link>);
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(nearby.Length&#32;&gt;&#32;0)&#32;{
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_currentObj&#32;=&#32;nearby[0].gameObject;
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;proximityState&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a6cabbb40727dcb3b5d8577982a6516cc">OnProximity</link>.Invoke(_currentObj);
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;obj&#32;=&#32;0;&#32;obj&#32;&lt;&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a5a588af860f86f0116c919fa8fada465">TargetObjects</link>.Length;&#32;obj++)&#32;{
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;target&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a5a588af860f86f0116c919fa8fada465">TargetObjects</link>[obj];
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(distanceSquared(target)&#32;&lt;&#32;onSquared)&#32;{
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_currentObj&#32;=&#32;target;
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;proximityState&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a6cabbb40727dcb3b5d8577982a6516cc">OnProximity</link>.Invoke(_currentObj);
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;<emphasis role="comment">//&#32;pick&#32;first&#32;match</emphasis>
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(proximityState){
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1aed8730358778949381639d53df61aac8">Activate</link>();
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_detector_1a6493874fd22793d7b59dc56098559d59">Deactivate</link>();
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;WaitForSeconds(<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a630cf8c292fbdf90459f2e41ca43c890">Period</link>);
00171 &#32;&#32;&#32;&#32;&#32;&#32;}
00172 &#32;&#32;&#32;&#32;}
00173 
00174 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;distanceSquared(GameObject&#32;target){
00175 &#32;&#32;&#32;&#32;&#32;&#32;Collider&#32;targetCollider&#32;=&#32;target.GetComponent&lt;Collider&gt;();
00176 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;closestPoint;
00177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(targetCollider&#32;!=&#32;<emphasis role="keyword">null</emphasis>){
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;closestPoint&#32;=&#32;targetCollider.ClosestPointOnBounds(transform.position);
00179 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;closestPoint&#32;=&#32;target.transform.position;
00181 &#32;&#32;&#32;&#32;&#32;&#32;}
00182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(closestPoint&#32;-&#32;transform.position).sqrMagnitude;
00183 &#32;&#32;&#32;&#32;}
00184 
00185 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00186 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDrawGizmos()&#32;{
00187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a168a600ee9c5b723b2ab546958429cb8">ShowGizmos</link>)&#32;{
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_detector_1a89e15d17ea95587d9edf49c42473264d">IsActive</link>)&#32;{
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.color&#32;=&#32;Color.green;
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.color&#32;=&#32;Color.red;
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.DrawWireSphere(transform.position,&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1aae0de1f759535b5f204722c243241746">OnDistance</link>);
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.color&#32;=&#32;Color.blue;
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Gizmos.DrawWireSphere(transform.position,&#32;<link linkend="_class_leap_1_1_unity_1_1_proximity_detector_1a25c70c8a58a321da905fb43f825d6377">OffDistance</link>);
00196 &#32;&#32;&#32;&#32;&#32;&#32;}
00197 &#32;&#32;&#32;&#32;}
00198 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
00199 &#32;&#32;}
00200 
00207 &#32;&#32;[System.Serializable]
<anchor xml:id="__proximity_detector_8cs_source_1l00208"/><link linkend="_class_leap_1_1_unity_1_1_proximity_event">00208</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_proximity_event">ProximityEvent</link>&#32;:&#32;UnityEvent&#32;&lt;GameObject&gt;&#32;{}
00209 }
</programlisting></section>
