<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__logger_8cs_source">
<title>Logger.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/Logger.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Reflection;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_internal">LeapInternal</link>&#32;{
00014 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>Logger&#32;{
00015 
00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Log(<emphasis role="keywordtype">object</emphasis>&#32;message)&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Debug.Log(message);
00021 &#32;&#32;&#32;&#32;}
00022 
00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;LogStruct(<emphasis role="keywordtype">object</emphasis>&#32;thisObject,&#32;<emphasis role="keywordtype">string</emphasis>&#32;title&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>)&#32;{
00024 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!thisObject.GetType().IsValueType)&#32;{
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Log(title&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;----&#32;Trying&#32;to&#32;log&#32;non-struct&#32;with&#32;struct&#32;logger&quot;</emphasis>);
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Log(title&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;----&#32;&quot;</emphasis>&#32;+&#32;thisObject.GetType().ToString());
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FieldInfo[]&#32;fieldInfos;
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fieldInfos&#32;=&#32;thisObject.GetType().GetFields(
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BindingFlags.Public&#32;|&#32;BindingFlags.NonPublic&#32;<emphasis role="comment">//&#32;Get&#32;public&#32;and&#32;non-public</emphasis>
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|&#32;BindingFlags.Static&#32;|&#32;BindingFlags.Instance&#32;&#32;<emphasis role="comment">//&#32;Get&#32;instance&#32;+&#32;static</emphasis>
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|&#32;BindingFlags.FlattenHierarchy);&#32;<emphasis role="comment">//&#32;Search&#32;up&#32;the&#32;hierarchy</emphasis>
00035 
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;write&#32;member&#32;names</emphasis>
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(FieldInfo&#32;fieldInfo&#32;<emphasis role="keywordflow">in</emphasis>&#32;fieldInfos)&#32;{
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;obj&#32;=&#32;fieldInfo.GetValue(thisObject);
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;value&#32;=&#32;obj&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;<emphasis role="stringliteral">&quot;null&quot;</emphasis>&#32;:&#32;obj.ToString();
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Log(<emphasis role="stringliteral">&quot;&#32;--------&#32;Name:&#32;&quot;</emphasis>&#32;+&#32;fieldInfo.Name&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;Value&#32;=&#32;&quot;</emphasis>&#32;+&#32;value);
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00042 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">catch</emphasis>&#32;(Exception&#32;exception)&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Log(exception.Message);
00044 &#32;&#32;&#32;&#32;&#32;&#32;}
00045 &#32;&#32;&#32;&#32;}
00046 &#32;&#32;}
00047 }
</programlisting></section>
