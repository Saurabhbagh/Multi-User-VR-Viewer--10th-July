<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_leap_1_1_unity_1_1_slice">
<title>Leap.Unity.Slice&lt; T &gt; Struct Template Reference</title>
<indexterm><primary>Leap.Unity.Slice&lt; T &gt;</primary></indexterm>
<para>Inheritance diagram for Leap.Unity.Slice&lt; T &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_leap_1_1_unity_1_1_slice.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_slice_1a269ca2618c7a7d3bb7f92e6109442fbd">Slice</link> (IList&lt; T &gt; list, int beginIdx=0, int endIdx=-1)</para>

<para>Creates a slice into the List with an inclusive beginIdx and an <emphasis>exclusive</emphasis> endIdx. A slice with identical begin and end indices would be an empty slice. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_indexable_struct_enumerator">IndexableStructEnumerator</link>&lt; T, <link linkend="_struct_leap_1_1_unity_1_1_slice">Slice</link>&lt; T &gt; &gt; <link linkend="_struct_leap_1_1_unity_1_1_slice_1a19537a9776f32b8ea888b96bfaa7f8e7">GetEnumerator</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt; T &gt; <link linkend="_struct_leap_1_1_unity_1_1_slice_1af8014899e4741b106ae87871d0018ba1">Query</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>T <link linkend="_struct_leap_1_1_unity_1_1_slice_1af8670392523e20ba513a6dcd8455cf1b">this[int index]</link><computeroutput> [get, set]</computeroutput>
</para>
</listitem>
            <listitem><para>int <link linkend="_struct_leap_1_1_unity_1_1_slice_1a781fdd1cd77c558054e6bfd1ef60444d">Count</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__slice_8cs_source_1l00052">52</link> of file <link linkend="__slice_8cs_source">Slice.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_slice_1a269ca2618c7a7d3bb7f92e6109442fbd"/>    <section>
    <title>Slice()</title>
<indexterm><primary>Slice</primary><secondary>Leap.Unity.Slice&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Slice&lt; T &gt;</primary><secondary>Slice</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_slice">Leap.Unity.Slice</link>&lt; T &gt;.<link linkend="_struct_leap_1_1_unity_1_1_slice">Slice</link> (IList&lt; T &gt; list, int beginIdx = <computeroutput>0</computeroutput>
, int endIdx = <computeroutput>-1</computeroutput>
)</computeroutput></para><para>

<para>Creates a slice into the List with an inclusive beginIdx and an <emphasis>exclusive</emphasis> endIdx. A slice with identical begin and end indices would be an empty slice. </para>
</para>

<para>A slice whose endIdx is smaller than its beginIdx will index backwards along the underlying List. </para>
<para>
Definition at line <link linkend="__slice_8cs_source_1l00068">68</link> of file <link linkend="__slice_8cs_source">Slice.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_slice_1a19537a9776f32b8ea888b96bfaa7f8e7"/>    <section>
    <title>GetEnumerator()</title>
<indexterm><primary>GetEnumerator</primary><secondary>Leap.Unity.Slice&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Slice&lt; T &gt;</primary><secondary>GetEnumerator</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_indexable_struct_enumerator">IndexableStructEnumerator</link>&lt;T, <link linkend="_struct_leap_1_1_unity_1_1_slice">Slice</link>&lt;T&gt; &gt; <link linkend="_struct_leap_1_1_unity_1_1_slice">Leap.Unity.Slice</link>&lt; T &gt;.GetEnumerator ( )</computeroutput></para><para>
Definition at line <link linkend="__slice_8cs_source_1l00095">95</link> of file <link linkend="__slice_8cs_source">Slice.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_slice_1af8014899e4741b106ae87871d0018ba1"/>    <section>
    <title>Query()</title>
<indexterm><primary>Query</primary><secondary>Leap.Unity.Slice&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Slice&lt; T &gt;</primary><secondary>Query</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt;T&gt; <link linkend="_struct_leap_1_1_unity_1_1_slice">Leap.Unity.Slice</link>&lt; T &gt;.<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> ( )</computeroutput></para><para>
Definition at line <link linkend="__slice_8cs_source_1l00099">99</link> of file <link linkend="__slice_8cs_source">Slice.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_slice_1a781fdd1cd77c558054e6bfd1ef60444d"/>    <section>
    <title>Count</title>
<indexterm><primary>Count</primary><secondary>Leap.Unity.Slice&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Slice&lt; T &gt;</primary><secondary>Count</secondary></indexterm>
<para><computeroutput>int <link linkend="_struct_leap_1_1_unity_1_1_slice">Leap.Unity.Slice</link>&lt; T &gt;.Count<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__slice_8cs_source_1l00087">87</link> of file <link linkend="__slice_8cs_source">Slice.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_slice_1af8670392523e20ba513a6dcd8455cf1b"/>    <section>
    <title>this[int index]</title>
<indexterm><primary>this[int index]</primary><secondary>Leap.Unity.Slice&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Leap.Unity.Slice&lt; T &gt;</primary><secondary>this[int index]</secondary></indexterm>
<para><computeroutput>T <link linkend="_struct_leap_1_1_unity_1_1_slice">Leap.Unity.Slice</link>&lt; T &gt;.this[int index]<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__slice_8cs_source_1l00076">76</link> of file <link linkend="__slice_8cs_source">Slice.cs</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/<link linkend="__slice_8cs">Slice.cs</link></section>
</section>
