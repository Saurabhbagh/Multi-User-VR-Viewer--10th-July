<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__t_m_p___default_controls_8cs_source">
<title>TMP_DefaultControls.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.textmeshpro@1.3.0/Scripts/Runtime/TMP_DefaultControls.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00002 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00003 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.UI;
00004 
00005 
00006 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_t_m_pro">TMPro</link>
00007 {
00008 
00009 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>TMP_DefaultControls
00010 &#32;&#32;&#32;&#32;{
<anchor xml:id="__t_m_p___default_controls_8cs_source_1l00011"/><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources">00011</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources">Resources</link>
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__t_m_p___default_controls_8cs_source_1l00013"/><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1aef20379f590b4d805b658c5d0a47e88d">00013</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_t_m_pro_1ab5662f47179bf1b81c575ecf80b24065a51f2b7b14433aa22c67d1f4fc18943cd">Sprite</link>&#32;<link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1aef20379f590b4d805b658c5d0a47e88d">standard</link>;
<anchor xml:id="__t_m_p___default_controls_8cs_source_1l00014"/><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1a05bed50721aec60ad69599a39779aca5">00014</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_t_m_pro_1ab5662f47179bf1b81c575ecf80b24065a51f2b7b14433aa22c67d1f4fc18943cd">Sprite</link>&#32;<link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1a05bed50721aec60ad69599a39779aca5">background</link>;
<anchor xml:id="__t_m_p___default_controls_8cs_source_1l00015"/><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1a2161db724e3fd4dc488e91fb4f44f099">00015</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_t_m_pro_1ab5662f47179bf1b81c575ecf80b24065a51f2b7b14433aa22c67d1f4fc18943cd">Sprite</link>&#32;<link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1a2161db724e3fd4dc488e91fb4f44f099">inputField</link>;
<anchor xml:id="__t_m_p___default_controls_8cs_source_1l00016"/><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1a6d7b17af4613548afb3d238b49a0982b">00016</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_t_m_pro_1ab5662f47179bf1b81c575ecf80b24065a51f2b7b14433aa22c67d1f4fc18943cd">Sprite</link>&#32;<link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1a6d7b17af4613548afb3d238b49a0982b">knob</link>;
<anchor xml:id="__t_m_p___default_controls_8cs_source_1l00017"/><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1aded76c75ca1e7cbc0c2d990c52b1b3a2">00017</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_t_m_pro_1ab5662f47179bf1b81c575ecf80b24065a51f2b7b14433aa22c67d1f4fc18943cd">Sprite</link>&#32;<link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1aded76c75ca1e7cbc0c2d990c52b1b3a2">checkmark</link>;
<anchor xml:id="__t_m_p___default_controls_8cs_source_1l00018"/><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1a2c06e5a4153fe97251db9adc96aedf14">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_t_m_pro_1ab5662f47179bf1b81c575ecf80b24065a51f2b7b14433aa22c67d1f4fc18943cd">Sprite</link>&#32;<link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1a2c06e5a4153fe97251db9adc96aedf14">dropdown</link>;
<anchor xml:id="__t_m_p___default_controls_8cs_source_1l00019"/><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1ab169512950fe9ffcca5df349be390f06">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_t_m_pro_1ab5662f47179bf1b81c575ecf80b24065a51f2b7b14433aa22c67d1f4fc18943cd">Sprite</link>&#32;<link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources_1ab169512950fe9ffcca5df349be390f06">mask</link>;
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00021 
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;kWidth&#32;=&#32;160f;
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;kThickHeight&#32;=&#32;30f;
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;kThinHeight&#32;=&#32;20f;
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Vector2&#32;s_ThickElementSize&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(kWidth,&#32;kThickHeight);
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Vector2&#32;s_ThinElementSize&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(kWidth,&#32;kThinHeight);
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;static&#32;Vector2&#32;s_ImageElementSize&#32;=&#32;new&#32;Vector2(100f,&#32;100f);</emphasis>
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;s_DefaultSelectableColor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(1f,&#32;1f,&#32;1f,&#32;1f);
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//private&#32;static&#32;Color&#32;s_PanelColor&#32;=&#32;new&#32;Color(1f,&#32;1f,&#32;1f,&#32;0.392f);</emphasis>
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Color&#32;s_TextColor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(50f&#32;/&#32;255f,&#32;50f&#32;/&#32;255f,&#32;50f&#32;/&#32;255f,&#32;1f);
00031 
00032 
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;CreateUIElementRoot(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;Vector2&#32;size)
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;child&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(name);
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;rectTransform&#32;=&#32;child.AddComponent&lt;RectTransform&gt;();
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rectTransform.sizeDelta&#32;=&#32;size;
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;child;
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;CreateUIObject(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;GameObject&#32;parent)
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;go&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GameObject(name);
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;go.AddComponent&lt;RectTransform&gt;();
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetParentAndAlign(go,&#32;parent);
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;go;
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00048 
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetDefaultTextValues(TMP_Text&#32;lbl)
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;text&#32;values&#32;we&#32;want&#32;across&#32;UI&#32;elements&#32;in&#32;default&#32;controls.</emphasis>
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Don&apos;t&#32;set&#32;values&#32;which&#32;are&#32;the&#32;same&#32;as&#32;the&#32;default&#32;values&#32;for&#32;the&#32;Text&#32;component,</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;since&#32;there&apos;s&#32;no&#32;point&#32;in&#32;that,&#32;and&#32;it&apos;s&#32;good&#32;to&#32;keep&#32;them&#32;as&#32;consistent&#32;as&#32;possible.</emphasis>
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lbl.color&#32;=&#32;s_TextColor;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lbl.fontSize&#32;=&#32;14;
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00057 
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetDefaultColorTransitionValues(Selectable&#32;slider)
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ColorBlock&#32;colors&#32;=&#32;slider.colors;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colors.highlightedColor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(0.882f,&#32;0.882f,&#32;0.882f);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colors.pressedColor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(0.698f,&#32;0.698f,&#32;0.698f);
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colors.disabledColor&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color(0.521f,&#32;0.521f,&#32;0.521f);
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00065 
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetParentAndAlign(GameObject&#32;child,&#32;GameObject&#32;parent)
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parent&#32;==&#32;<emphasis role="keyword">null</emphasis>)
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00070 
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;child.transform.SetParent(parent.transform,&#32;<emphasis role="keyword">false</emphasis>);
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetLayerRecursively(child,&#32;parent.layer);
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00074 
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetLayerRecursively(GameObject&#32;go,&#32;<emphasis role="keywordtype">int</emphasis>&#32;layer)
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;go.layer&#32;=&#32;layer;
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;t&#32;=&#32;go.transform;
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;t.childCount;&#32;i++)
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetLayerRecursively(t.GetChild(i).gameObject,&#32;layer);
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00082 
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Actual&#32;controls</emphasis>
00084 
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;CreateScrollbar(Resources&#32;resources)
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;GOs&#32;Hierarchy</emphasis>
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;scrollbarRoot&#32;=&#32;CreateUIElementRoot(<emphasis role="stringliteral">&quot;Scrollbar&quot;</emphasis>,&#32;s_ThinElementSize);
00089 
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;sliderArea&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Sliding&#32;Area&quot;</emphasis>,&#32;scrollbarRoot);
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;handle&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Handle&quot;</emphasis>,&#32;sliderArea);
00092 
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;bgImage&#32;=&#32;scrollbarRoot.AddComponent&lt;Image&gt;();
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bgImage.sprite&#32;=&#32;resources.background;
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bgImage.type&#32;=&#32;Image.Type.Sliced;
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bgImage.color&#32;=&#32;s_DefaultSelectableColor;
00097 
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;handleImage&#32;=&#32;handle.AddComponent&lt;Image&gt;();
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleImage.sprite&#32;=&#32;resources.standard;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleImage.type&#32;=&#32;Image.Type.Sliced;
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleImage.color&#32;=&#32;s_DefaultSelectableColor;
00102 
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;sliderAreaRect&#32;=&#32;sliderArea.GetComponent&lt;RectTransform&gt;();
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sliderAreaRect.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(-20,&#32;-20);
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sliderAreaRect.anchorMin&#32;=&#32;Vector2.zero;
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sliderAreaRect.anchorMax&#32;=&#32;Vector2.one;
00107 
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;handleRect&#32;=&#32;handle.GetComponent&lt;RectTransform&gt;();
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handleRect.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(20,&#32;20);
00110 
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scrollbar&#32;scrollbar&#32;=&#32;scrollbarRoot.AddComponent&lt;Scrollbar&gt;();
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scrollbar.handleRect&#32;=&#32;handleRect;
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scrollbar.targetGraphic&#32;=&#32;handleImage;
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetDefaultColorTransitionValues(scrollbar);
00115 
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;scrollbarRoot;
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00118 
00119 
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;CreateInputField(Resources&#32;resources)
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;<link linkend="_namespace_valve_1_1_v_r_1a99f7cc968994699a7485078bafddac17a63a9f0ea7bb98050796b649e85481845">root</link>&#32;=&#32;CreateUIElementRoot(<emphasis role="stringliteral">&quot;TextMeshPro&#32;-&#32;InputField&quot;</emphasis>,&#32;s_ThickElementSize);
00123 
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;textArea&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Text&#32;Area&quot;</emphasis>,&#32;root);
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;childPlaceholder&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Placeholder&quot;</emphasis>,&#32;textArea);
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;childText&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Text&quot;</emphasis>,&#32;textArea);
00127 
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;image&#32;=&#32;<link linkend="_namespace_valve_1_1_v_r_1a99f7cc968994699a7485078bafddac17a63a9f0ea7bb98050796b649e85481845">root</link>.AddComponent&lt;Image&gt;();
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.sprite&#32;=&#32;resources.inputField;
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.type&#32;=&#32;Image.Type.Sliced;
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;image.color&#32;=&#32;s_DefaultSelectableColor;
00132 
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_InputField&#32;inputField&#32;=&#32;<link linkend="_namespace_valve_1_1_v_r_1a99f7cc968994699a7485078bafddac17a63a9f0ea7bb98050796b649e85481845">root</link>.AddComponent&lt;TMP_InputField&gt;();
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetDefaultColorTransitionValues(inputField);
00135 
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;UI.Mask&#32;for&#32;Unity&#32;5.0&#32;-&#32;5.1&#32;and&#32;2D&#32;RectMask&#32;for&#32;Unity&#32;5.2&#32;and&#32;up</emphasis>
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textArea.AddComponent&lt;RectMask2D&gt;();
00138 
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;textAreaRectTransform&#32;=&#32;textArea.GetComponent&lt;RectTransform&gt;();
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textAreaRectTransform.anchorMin&#32;=&#32;Vector2.zero;
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textAreaRectTransform.anchorMax&#32;=&#32;Vector2.one;
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textAreaRectTransform.sizeDelta&#32;=&#32;Vector2.zero;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textAreaRectTransform.offsetMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(10,&#32;6);
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textAreaRectTransform.offsetMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(-10,&#32;-7);
00145 
00146 
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TextMeshProUGUI&#32;text&#32;=&#32;childText.AddComponent&lt;TextMeshProUGUI&gt;();
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text.text&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text.enableWordWrapping&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text.extraPadding&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;text.richText&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetDefaultTextValues(text);
00153 
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TextMeshProUGUI&#32;placeholder&#32;=&#32;childPlaceholder.AddComponent&lt;TextMeshProUGUI&gt;();
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholder.text&#32;=&#32;<emphasis role="stringliteral">&quot;Enter&#32;text...&quot;</emphasis>;
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholder.fontSize&#32;=&#32;14;
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholder.fontStyle&#32;=&#32;<link linkend="_namespace_t_m_pro_1aedf79b6e7e2ce2b9c9ac84e790596e7c">FontStyles</link>.Italic;
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholder.enableWordWrapping&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholder.extraPadding&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00160 
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;placeholder&#32;color&#32;half&#32;as&#32;opaque&#32;as&#32;normal&#32;text&#32;color.</emphasis>
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Color&#32;placeholderColor&#32;=&#32;text.color;
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholderColor.a&#32;*=&#32;0.5f;
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholder.color&#32;=&#32;placeholderColor;
00165 
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;textRectTransform&#32;=&#32;childText.GetComponent&lt;RectTransform&gt;();
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textRectTransform.anchorMin&#32;=&#32;Vector2.zero;
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textRectTransform.anchorMax&#32;=&#32;Vector2.one;
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textRectTransform.sizeDelta&#32;=&#32;Vector2.zero;
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textRectTransform.offsetMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0);
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;textRectTransform.offsetMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0);
00172 
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;placeholderRectTransform&#32;=&#32;childPlaceholder.GetComponent&lt;RectTransform&gt;();
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholderRectTransform.anchorMin&#32;=&#32;Vector2.zero;
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholderRectTransform.anchorMax&#32;=&#32;Vector2.one;
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholderRectTransform.sizeDelta&#32;=&#32;Vector2.zero;
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholderRectTransform.offsetMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0);
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;placeholderRectTransform.offsetMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0);
00179 
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputField.textViewport&#32;=&#32;textAreaRectTransform;
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputField.textComponent&#32;=&#32;text;
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputField.placeholder&#32;=&#32;placeholder;
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputField.fontAsset&#32;=&#32;text.font;
00184 
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_valve_1_1_v_r_1a99f7cc968994699a7485078bafddac17a63a9f0ea7bb98050796b649e85481845">root</link>;
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00187 
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;GameObject&#32;CreateDropdown(Resources&#32;resources)
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;<link linkend="_namespace_valve_1_1_v_r_1a99f7cc968994699a7485078bafddac17a63a9f0ea7bb98050796b649e85481845">root</link>&#32;=&#32;CreateUIElementRoot(<emphasis role="stringliteral">&quot;Dropdown&quot;</emphasis>,&#32;s_ThickElementSize);
00191 
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;label&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Label&quot;</emphasis>,&#32;root);
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;arrow&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Arrow&quot;</emphasis>,&#32;root);
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;<emphasis role="keyword">template</emphasis>&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Template&quot;</emphasis>,&#32;root);
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;viewport&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Viewport&quot;</emphasis>,&#32;<emphasis role="keyword">template</emphasis>);
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;content&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Content&quot;</emphasis>,&#32;viewport);
00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;item&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Item&quot;</emphasis>,&#32;content);
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;itemBackground&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Item&#32;Background&quot;</emphasis>,&#32;item);
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;itemCheckmark&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Item&#32;Checkmark&quot;</emphasis>,&#32;item);
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;itemLabel&#32;=&#32;CreateUIObject(<emphasis role="stringliteral">&quot;Item&#32;Label&quot;</emphasis>,&#32;item);
00201 
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sub&#32;controls.</emphasis>
00203 
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;scrollbar&#32;=&#32;CreateScrollbar(resources);
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scrollbar.name&#32;=&#32;<emphasis role="stringliteral">&quot;Scrollbar&quot;</emphasis>;
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetParentAndAlign(scrollbar,&#32;<emphasis role="keyword">template</emphasis>);
00207 
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Scrollbar&#32;scrollbarScrollbar&#32;=&#32;scrollbar.GetComponent&lt;Scrollbar&gt;();
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scrollbarScrollbar.SetDirection(Scrollbar.Direction.BottomToTop,&#32;<emphasis role="keyword">true</emphasis>);
00210 
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;vScrollbarRT&#32;=&#32;scrollbar.GetComponent&lt;RectTransform&gt;();
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vScrollbarRT.anchorMin&#32;=&#32;Vector2.right;
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vScrollbarRT.anchorMax&#32;=&#32;Vector2.one;
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vScrollbarRT.pivot&#32;=&#32;Vector2.one;
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vScrollbarRT.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(vScrollbarRT.sizeDelta.x,&#32;0);
00216 
00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Setup&#32;item&#32;UI&#32;components.</emphasis>
00218 
00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TextMeshProUGUI&#32;itemLabelText&#32;=&#32;itemLabel.AddComponent&lt;TextMeshProUGUI&gt;();
00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetDefaultTextValues(itemLabelText);
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemLabelText.alignment&#32;=&#32;<link linkend="_namespace_t_m_pro_1a1dd743b58b1fd4057c00e4b98ab86301">TextAlignmentOptions</link>.Left;
00222 
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;itemBackgroundImage&#32;=&#32;itemBackground.AddComponent&lt;Image&gt;();
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemBackgroundImage.color&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Color32(245,&#32;245,&#32;245,&#32;255);
00225 
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;itemCheckmarkImage&#32;=&#32;itemCheckmark.AddComponent&lt;Image&gt;();
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemCheckmarkImage.sprite&#32;=&#32;resources.checkmark;
00228 
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Toggle&#32;itemToggle&#32;=&#32;item.AddComponent&lt;Toggle&gt;();
00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemToggle.targetGraphic&#32;=&#32;itemBackgroundImage;
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemToggle.graphic&#32;=&#32;itemCheckmarkImage;
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemToggle.isOn&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00233 
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Setup&#32;template&#32;UI&#32;components.</emphasis>
00235 
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;templateImage&#32;=&#32;<emphasis role="keyword">template</emphasis>.AddComponent&lt;Image&gt;();
00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateImage.sprite&#32;=&#32;resources.standard;
00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateImage.type&#32;=&#32;Image.Type.Sliced;
00239 
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_t_m_pro_1a7234b7b8868aa9f0174e7db46e272a17adfa6849604e0a596c2ab9acaa096b239">ScrollRect</link>&#32;templateScrollRect&#32;=&#32;<emphasis role="keyword">template</emphasis>.AddComponent&lt;<link linkend="_namespace_t_m_pro_1a7234b7b8868aa9f0174e7db46e272a17adfa6849604e0a596c2ab9acaa096b239">ScrollRect</link>&gt;();
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateScrollRect.content&#32;=&#32;(RectTransform)content.transform;
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateScrollRect.viewport&#32;=&#32;(RectTransform)viewport.transform;
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateScrollRect.horizontal&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateScrollRect.movementType&#32;=&#32;<link linkend="_namespace_t_m_pro_1a7234b7b8868aa9f0174e7db46e272a17adfa6849604e0a596c2ab9acaa096b239">ScrollRect</link>.MovementType.Clamped;
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateScrollRect.verticalScrollbar&#32;=&#32;scrollbarScrollbar;
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateScrollRect.verticalScrollbarVisibility&#32;=&#32;<link linkend="_namespace_t_m_pro_1a7234b7b8868aa9f0174e7db46e272a17adfa6849604e0a596c2ab9acaa096b239">ScrollRect</link>.ScrollbarVisibility.AutoHideAndExpandViewport;
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateScrollRect.verticalScrollbarSpacing&#32;=&#32;-3;
00248 
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mask&#32;scrollRectMask&#32;=&#32;viewport.AddComponent&lt;Mask&gt;();
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scrollRectMask.showMaskGraphic&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00251 
00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;viewportImage&#32;=&#32;viewport.AddComponent&lt;Image&gt;();
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewportImage.sprite&#32;=&#32;resources.mask;
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewportImage.type&#32;=&#32;Image.Type.Sliced;
00255 
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Setup&#32;dropdown&#32;UI&#32;components.</emphasis>
00257 
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TextMeshProUGUI&#32;labelText&#32;=&#32;label.AddComponent&lt;TextMeshProUGUI&gt;();
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetDefaultTextValues(labelText);
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;labelText.alignment&#32;=&#32;<link linkend="_namespace_t_m_pro_1a1dd743b58b1fd4057c00e4b98ab86301">TextAlignmentOptions</link>.Left;
00261 
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;arrowImage&#32;=&#32;arrow.AddComponent&lt;Image&gt;();
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrowImage.sprite&#32;=&#32;resources.dropdown;
00264 
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image&#32;backgroundImage&#32;=&#32;<link linkend="_namespace_valve_1_1_v_r_1a99f7cc968994699a7485078bafddac17a63a9f0ea7bb98050796b649e85481845">root</link>.AddComponent&lt;Image&gt;();
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundImage.sprite&#32;=&#32;resources.standard;
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundImage.color&#32;=&#32;s_DefaultSelectableColor;
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backgroundImage.type&#32;=&#32;Image.Type.Sliced;
00269 
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMP_Dropdown&#32;dropdown&#32;=&#32;<link linkend="_namespace_valve_1_1_v_r_1a99f7cc968994699a7485078bafddac17a63a9f0ea7bb98050796b649e85481845">root</link>.AddComponent&lt;TMP_Dropdown&gt;();
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dropdown.targetGraphic&#32;=&#32;backgroundImage;
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SetDefaultColorTransitionValues(dropdown);
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dropdown.template&#32;=&#32;<emphasis role="keyword">template</emphasis>.GetComponent&lt;RectTransform&gt;();
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dropdown.captionText&#32;=&#32;labelText;
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dropdown.itemText&#32;=&#32;itemLabelText;
00276 
00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Setting&#32;default&#32;Item&#32;list.</emphasis>
00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemLabelText.text&#32;=&#32;<emphasis role="stringliteral">&quot;Option&#32;A&quot;</emphasis>;
00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dropdown.options.Add(<emphasis role="keyword">new</emphasis>&#32;TMP_Dropdown.OptionData&#32;{text&#32;=&#32;<emphasis role="stringliteral">&quot;Option&#32;A&quot;</emphasis>&#32;});
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dropdown.options.Add(<emphasis role="keyword">new</emphasis>&#32;TMP_Dropdown.OptionData&#32;{text&#32;=&#32;<emphasis role="stringliteral">&quot;Option&#32;B&quot;</emphasis>&#32;});
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dropdown.options.Add(<emphasis role="keyword">new</emphasis>&#32;TMP_Dropdown.OptionData&#32;{text&#32;=&#32;<emphasis role="stringliteral">&quot;Option&#32;C&quot;</emphasis>&#32;});
00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dropdown.RefreshShownValue();
00283 
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;up&#32;RectTransforms.</emphasis>
00285 
00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;labelRT&#32;=&#32;label.GetComponent&lt;RectTransform&gt;();
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;labelRT.anchorMin&#32;=&#32;Vector2.zero;
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;labelRT.anchorMax&#32;=&#32;Vector2.one;
00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;labelRT.offsetMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(10,&#32;6);
00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;labelRT.offsetMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(-25,&#32;-7);
00291 
00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;arrowRT&#32;=&#32;arrow.GetComponent&lt;RectTransform&gt;();
00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrowRT.anchorMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(1,&#32;0.5f);
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrowRT.anchorMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(1,&#32;0.5f);
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrowRT.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(20,&#32;20);
00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arrowRT.anchoredPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(-15,&#32;0);
00297 
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;templateRT&#32;=&#32;<emphasis role="keyword">template</emphasis>.GetComponent&lt;RectTransform&gt;();
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateRT.anchorMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0);
00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateRT.anchorMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(1,&#32;0);
00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateRT.pivot&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0.5f,&#32;1);
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateRT.anchoredPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;2);
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templateRT.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;150);
00304 
00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;viewportRT&#32;=&#32;viewport.GetComponent&lt;RectTransform&gt;();
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewportRT.anchorMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0);
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewportRT.anchorMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(1,&#32;1);
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewportRT.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(-18,&#32;0);
00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;viewportRT.pivot&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;1);
00310 
00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;contentRT&#32;=&#32;content.GetComponent&lt;RectTransform&gt;();
00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRT.anchorMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0f,&#32;1);
00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRT.anchorMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(1f,&#32;1);
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRT.pivot&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0.5f,&#32;1);
00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRT.anchoredPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0);
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;contentRT.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;28);
00317 
00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;itemRT&#32;=&#32;item.GetComponent&lt;RectTransform&gt;();
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemRT.anchorMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0.5f);
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemRT.anchorMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(1,&#32;0.5f);
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemRT.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;20);
00322 
00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;itemBackgroundRT&#32;=&#32;itemBackground.GetComponent&lt;RectTransform&gt;();
00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemBackgroundRT.anchorMin&#32;=&#32;Vector2.zero;
00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemBackgroundRT.anchorMax&#32;=&#32;Vector2.one;
00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemBackgroundRT.sizeDelta&#32;=&#32;Vector2.zero;
00327 
00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;itemCheckmarkRT&#32;=&#32;itemCheckmark.GetComponent&lt;RectTransform&gt;();
00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemCheckmarkRT.anchorMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0.5f);
00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemCheckmarkRT.anchorMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(0,&#32;0.5f);
00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemCheckmarkRT.sizeDelta&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(20,&#32;20);
00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemCheckmarkRT.anchoredPosition&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(10,&#32;0);
00333 
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RectTransform&#32;itemLabelRT&#32;=&#32;itemLabel.GetComponent&lt;RectTransform&gt;();
00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemLabelRT.anchorMin&#32;=&#32;Vector2.zero;
00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemLabelRT.anchorMax&#32;=&#32;Vector2.one;
00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemLabelRT.offsetMin&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(20,&#32;1);
00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itemLabelRT.offsetMax&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(-10,&#32;-2);
00339 
00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>.SetActive(<emphasis role="keyword">false</emphasis>);
00341 
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_valve_1_1_v_r_1a99f7cc968994699a7485078bafddac17a63a9f0ea7bb98050796b649e85481845">root</link>;
00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00344 &#32;&#32;&#32;&#32;}
00345 }
</programlisting></section>
