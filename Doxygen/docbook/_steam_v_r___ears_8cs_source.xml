<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__steam_v_r___ears_8cs_source">
<title>SteamVR_Ears.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/Scripts/SteamVR_Ears.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//=======&#32;Copyright&#32;(c)&#32;Valve&#32;Corporation,&#32;All&#32;rights&#32;reserved.&#32;===============</emphasis>
00002 <emphasis role="comment">//</emphasis>
00003 <emphasis role="comment">//&#32;Purpose:&#32;Handles&#32;aligning&#32;audio&#32;listener&#32;when&#32;using&#32;speakers.</emphasis>
00004 <emphasis role="comment">//</emphasis>
00005 <emphasis role="comment">//=============================================================================</emphasis>
00006 
00007 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00008 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_valve">Valve</link>.<link linkend="_namespace_valve_1_1_v_r">VR</link>;
00009 
00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r">Valve.VR</link>
00011 {
00012 &#32;&#32;&#32;&#32;[RequireComponent(typeof(AudioListener))]
<anchor xml:id="__steam_v_r___ears_8cs_source_1l00013"/><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___ears">00013</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___ears">SteamVR_Ears</link>&#32;:&#32;MonoBehaviour
00014 &#32;&#32;&#32;&#32;{
<anchor xml:id="__steam_v_r___ears_8cs_source_1l00015"/><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___ears_1a6afe27ca31f0cdf1c25055ccc6c5e26f">00015</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___camera">SteamVR_Camera</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___ears_1a6afe27ca31f0cdf1c25055ccc6c5e26f">vrcam</link>;
00016 
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;usingSpeakers;
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;offset;
00019 
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnNewPosesApplied()
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;origin&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___ears_1a6afe27ca31f0cdf1c25055ccc6c5e26f">vrcam</link>.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___camera_1a12fe684a54d4cade55c1ba7d693e38bd">origin</link>;
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;baseRotation&#32;=&#32;origin&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;?&#32;origin.rotation&#32;:&#32;Quaternion.identity;
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.rotation&#32;=&#32;baseRotation&#32;*&#32;offset;
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00026 
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;usingSpeakers&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00030 
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;settings&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_open_v_r">OpenVR</link>.<link linkend="_class_valve_1_1_v_r_1_1_open_v_r_1a4cd1c49540d981e0fba446dc8600e183">Settings</link>;
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;error&#32;=&#32;<link linkend="_namespace_valve_1_1_v_r_1aeab7722b211afc3885ed77faa931291f">EVRSettingsError</link>.None;
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(settings.GetBool(<link linkend="_class_valve_1_1_v_r_1_1_open_v_r">OpenVR</link>.<link linkend="_class_valve_1_1_v_r_1_1_open_v_r_1a44d63338521bf74f67033ae966730652">k_pch_SteamVR_Section</link>,&#32;<link linkend="_class_valve_1_1_v_r_1_1_open_v_r">OpenVR</link>.<link linkend="_class_valve_1_1_v_r_1_1_open_v_r_1a4ba6fd795d7cf6a985a4c12411d915d9">k_pch_SteamVR_UsingSpeakers_Bool</link>,&#32;ref&#32;error))
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;usingSpeakers&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00038 
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;yawOffset&#32;=&#32;settings.<link linkend="_class_valve_1_1_v_r_1_1_c_v_r_settings_1a8537b41839f28189017706e73163a2cc">GetFloat</link>(<link linkend="_class_valve_1_1_v_r_1_1_open_v_r">OpenVR</link>.<link linkend="_class_valve_1_1_v_r_1_1_open_v_r_1a44d63338521bf74f67033ae966730652">k_pch_SteamVR_Section</link>,&#32;<link linkend="_class_valve_1_1_v_r_1_1_open_v_r">OpenVR</link>.<link linkend="_class_valve_1_1_v_r_1_1_open_v_r_1aa91111868860a8d766e7c22a1b8d3c1e">k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float</link>,&#32;ref&#32;error);
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;offset&#32;=&#32;Quaternion.Euler(0.0f,&#32;yawOffset,&#32;0.0f);
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00043 
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(usingSpeakers)
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SteamVR_Events.NewPosesApplied.Listen(OnNewPosesApplied);
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00047 
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDisable()
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(usingSpeakers)
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SteamVR_Events.NewPosesApplied.Remove(OnNewPosesApplied);
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00053 &#32;&#32;&#32;&#32;}
00054 }
</programlisting></section>
