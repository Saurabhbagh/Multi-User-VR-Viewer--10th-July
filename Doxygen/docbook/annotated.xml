<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_a">Leap.Unity.Tests.MultiTypedListTests.A</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_reference_tests_1_1_a">Leap.Unity.Tests.MultiTypedReferenceTests.A</link><link linkend="_class_leap_1_1_unity_1_1_abstract_hold_detector">Leap.Unity.AbstractHoldDetector</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action">Valve.VR.SteamVR_Events.Action</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action">Valve.VR.SteamVR_Events.Action&lt; T &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action">Valve.VR.SteamVR_Events.Action&lt; T0, T1 &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action">Valve.VR.SteamVR_Events.Action&lt; T0, T1, T2 &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_action_no_args">Valve.VR.SteamVR_Events.ActionNoArgs</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_activity_manager">Leap.Unity.Interaction.ActivityManager&lt; T &gt;</link>
<para><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_activity_manager">ActivityManager</link> is a wrapper around PhysX sphere queries for arbitrary <link linkend="_namespace_leap_1_1_unity">Unity</link> objects. &quot;Active&quot; objects are objects found in the latest query. It&apos;s also possible to get the sets of objects that just began or stopped being active since the last query; this requires enabling the trackStateChanges setting </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_after_timer___component">Valve.VR.InteractionSystem.AfterTimer_Component</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_alert">UnityEditor.PackageManager.UI.Alert</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_alert_factory">UnityEditor.PackageManager.UI.AlertFactory</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_allow_teleport_while_attached_to_hand">Valve.VR.InteractionSystem.AllowTeleportWhileAttachedToHand</link><link linkend="_class_ambient_sound">AmbientSound</link><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests">UnityEngine.Analytics.Tests.AnalyticsEventTests</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor">Leap.Unity.Interaction.Anchor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour">Leap.Unity.Interaction.AnchorableBehaviour</link>
<para>AnchorableBehaviours mix well with InteractionBehaviours you&apos;d like to be able to pick up and place in specific locations, specified by other GameObjects with an <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor">Anchor</link> component </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchorable_behaviour_editor">Leap.Unity.Interaction.AnchorableBehaviourEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_editor">Leap.Unity.Interaction.AnchorEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_group">Leap.Unity.Interaction.AnchorGroup</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_score_test">Leap.Unity.Interaction.AnchorScoreTest</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_anchor_set">Leap.Unity.Interaction.AnchorSet</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_angular_speed_text_behaviour">Leap.Unity.Examples.AngularSpeedTextBehaviour</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_application_util">UnityEditor.PackageManager.UI.ApplicationUtil</link><link linkend="_struct_valve_1_1_v_r_1_1_app_override_keys__t">Valve.VR.AppOverrideKeys_t</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_archery_target">Valve.VR.InteractionSystem.ArcheryTarget</link><link linkend="_class_leap_1_1_arm">Leap.Arm</link>
<para>The <link linkend="_class_leap_1_1_arm">Arm</link> class represents the forearm </para>
<link linkend="_class_arm_movement_left">ArmMovementLeft</link>
<para>It captures the left controller and the left leap hand coordinates and places them on the left IK End effector. Then the IK works fine </para>
<link linkend="_class_arm_movement_right">ArmMovementRight</link>
<para>It captures the right controller and the right leap hand coordinates and places them on the right IK End effector. Then the IK works fine </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow">Valve.VR.InteractionSystem.Arrow</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrow_hand">Valve.VR.InteractionSystem.ArrowHand</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_arrowhead_rotation">Valve.VR.InteractionSystem.ArrowheadRotation</link><link linkend="_class_t_m_pro_1_1_asset_conversion_data">TMPro.AssetConversionData</link>
<para>Data structure containing a list of target and replacement fileID and GUID requiring remapping from previous versions of TextMesh Pro to the new TextMesh Pro UPM package. This data structure is populated with the data contained in the PackageConversionData.json file included in the package </para>
<link linkend="_struct_t_m_pro_1_1_asset_conversion_record">TMPro.AssetConversionRecord</link>
<para>Data structure containing the target and replacement fileIDs and GUIDs which will require remapping from previous version of TextMesh Pro to the new TextMesh Pro UPM package </para>
<link linkend="_class_leap_1_1_unity_1_1_asset_folder">Leap.Unity.AssetFolder</link>
<para>A convenient serializable representation of an asset folder. Only useful for editor scripts since asset folder structure is not preserved for builds. The asset folder struct itself is still available at runtime for serialization ease, but the Path property will not be available </para>
<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer">Leap.Unity.AssetFolderPropertyDrawer</link><link linkend="_struct_valve_1_1_v_r_1_1_interaction_system_1_1_hand_1_1_attached_object">Valve.VR.InteractionSystem.Hand.AttachedObject</link><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand">Leap.Unity.Attachments.AttachmentHand</link>
<para>This MonoBehaviour is managed by an <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hands">AttachmentHands</link> component on a parent MonoBehaviour. Instead of adding <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand">AttachmentHand</link> directly to a GameObject, add an <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hands">AttachmentHands</link> component to a parent GameObject to manage the construction and updating of <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand">AttachmentHand</link> objects </para>
<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand_enable_disable">Leap.Unity.Attachments.AttachmentHandEnableDisable</link><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hands">Leap.Unity.Attachments.AttachmentHands</link>
<para>Add an GameObject with this script to your scene if you would like to have a Transform hierarchy that will follow various important points on a hand, whether for visuals or for logic. The <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hands">AttachmentHands</link> object will maintain two child objects, one for each of the player&apos;s hands. Use the Inspector to customize which points you&apos;d like to see in the hierarchy beneath the individual <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand">AttachmentHand</link> objects </para>
<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hands_editor">Leap.Unity.Attachments.AttachmentHandsEditor</link><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour">Leap.Unity.Attachments.AttachmentPointBehaviour</link>
<para>Simple container class for storing a reference to the attachment point this transform corresponds to within an <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand">AttachmentHand</link>. Also contains mappings from a single AttachmentPointFlags flag constant to the relevant bone on a <link linkend="_class_leap_1_1_hand">Leap.Hand</link>; these mappings can be accessed statically via <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a80f3e3a2fa250a6b955a50f471b4a498">GetLeapHandPointData()</link> </para>
<link linkend="_struct_leap_1_1_unity_1_1_attachments_1_1_attachment_hand_1_1_attachment_points_enumerator">Leap.Unity.Attachments.AttachmentHand.AttachmentPointsEnumerator</link>
<para>An enumerator that traverses all of the existing AttachmentPointBehaviours beneath an <link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand">AttachmentHand</link> </para>
<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_auto_find_attribute">Leap.Unity.Attributes.AutoFindAttribute</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_autopilot_system">Leap.Unity.Examples.AutopilotSystem</link><link linkend="_class_leap_1_1_unity_1_1_auto_value_proxy">Leap.Unity.AutoValueProxy</link>
<para>A helpful implementation of <link linkend="_interface_leap_1_1_unity_1_1_i_value_proxy">IValueProxy</link>. The class is a monobehaviour and so can be attached to game objects. Auto-pushing can also be turned on and off. When Auto-pushing is enabled, the behaviour will push the value on every LateUpdate </para>
<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_b">Leap.Unity.Tests.MultiTypedListTests.B</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_reference_tests_1_1_b">Leap.Unity.Tests.MultiTypedReferenceTests.B</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_balloon">Valve.VR.InteractionSystem.Balloon</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_balloon_colliders">Valve.VR.InteractionSystem.BalloonColliders</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_balloon_haptic_bump">Valve.VR.InteractionSystem.BalloonHapticBump</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_balloon_spawner">Valve.VR.InteractionSystem.BalloonSpawner</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_base_class">Leap.Unity.Tests.MultiTypedListTests.BaseClass</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_reference_tests_1_1_base_class">Leap.Unity.Tests.MultiTypedReferenceTests.BaseClass</link><link linkend="_struct_leap_1_1_begin_profiling_block_args">Leap.BeginProfilingBlockArgs</link><link linkend="_struct_leap_1_1_begin_profiling_for_thread_args">Leap.BeginProfilingForThreadArgs</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_bit_converter_tests">Leap.Unity.Tests.BitConverterTests</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_body_collider">Valve.VR.InteractionSystem.BodyCollider</link><link linkend="_class_leap_1_1_bone">Leap.Bone</link>
<para>The <link linkend="_class_leap_1_1_bone">Bone</link> class represents a tracked bone </para>
<link linkend="_class_collab_proxy_1_1_u_i_1_1_bootstrap">CollabProxy.UI.Bootstrap</link><link linkend="_class_leap_1_1_unity_1_1_boxed_indexable_struct">Leap.Unity.BoxedIndexableStruct&lt; Element, IndexableStruct &gt;</link>
<para>Explicit boxing class for IIndexableStructs that implements <link linkend="_interface_leap_1_1_unity_1_1_i_indexable">IIndexable</link> </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_buggy_buddy">Valve.VR.InteractionSystem.Sample.BuggyBuddy</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_buggy_controller">Valve.VR.InteractionSystem.Sample.BuggyController</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_build_status_button">UnityEditor.Collaboration.BuildStatusButton</link><link linkend="_classbulletcollider">bulletcollider</link>
<para>This class checks the collision of the bullet with the shootable layer and then sends the amount to <link linkend="_health_8cs">health.cs</link> file </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_effect">Valve.VR.InteractionSystem.Sample.ButtonEffect</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example">Valve.VR.InteractionSystem.Sample.ButtonExample</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_c">Leap.Unity.Tests.MultiTypedListTests.C</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_reference_tests_1_1_c">Leap.Unity.Tests.MultiTypedReferenceTests.C</link><link linkend="_class_camera_controller">CameraController</link>
<para>This class was never used </para>
<link linkend="_struct_valve_1_1_v_r_1_1_camera_video_stream_frame_header__t">Valve.VR.CameraVideoStreamFrameHeader_t</link><link linkend="_class_leap_1_1_unity_1_1_capsule_hand">Leap.Unity.CapsuleHand</link><link linkend="_struct_t_m_pro_1_1_caret_info">TMPro.CaretInfo</link>
<para>Structure which contains the character index and position of caret relative to the character </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_chaperone_info">Valve.VR.InteractionSystem.ChaperoneInfo</link><link linkend="_classchidcamera">chidcamera</link>
<para>This class was never used </para>
<link linkend="_struct_leap_1_1_unity_1_1_utils_1_1_children_enumerator">Leap.Unity.Utils.ChildrenEnumerator</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_circular_drive">Valve.VR.InteractionSystem.CircularDrive</link><link linkend="_class_leap_internal_1_1_circular_object_buffer">LeapInternal.CircularObjectBuffer&lt; T &gt;</link><link linkend="_class_leap_1_1_leap_c_sharp_1_1_tests_1_1_circular_object_buffer_tests">Leap.LeapCSharp.Tests.CircularObjectBufferTests</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_collab_history_drop_down">UnityEditor.Collaboration.CollabHistoryDropDown</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_collab_history_drop_down_item">UnityEditor.Collaboration.CollabHistoryDropDownItem</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_collab_history_item">UnityEditor.Collaboration.CollabHistoryItem</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_collab_history_item_factory">UnityEditor.Collaboration.CollabHistoryItemFactory</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_collab_history_presenter">UnityEditor.Collaboration.CollabHistoryPresenter</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_collab_history_revision_line">UnityEditor.Collaboration.CollabHistoryRevisionLine</link><link linkend="_class_unity_editor_1_1_collab_history_window">UnityEditor.CollabHistoryWindow</link><link linkend="_class_unity_editor_1_1_collab_toolbar_button">UnityEditor.CollabToolbarButton</link><link linkend="_class_unity_editor_1_1_collab_toolbar_window">UnityEditor.CollabToolbarWindow</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_color_interpolator_base">Leap.Unity.Animation.Internal.ColorInterpolatorBase&lt; ObjType &gt;</link><link linkend="_struct_t_m_pro_1_1_color_tween">TMPro.ColorTween</link><link linkend="_class_t_m_pro_1_1_color_tween_1_1_color_tween_callback">TMPro.ColorTween.ColorTweenCallback</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_combinable_property_attribute">Leap.Unity.Attributes.CombinablePropertyAttribute</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_combinable_property_drawer">Leap.Unity.Attributes.CombinablePropertyDrawer</link><link linkend="_class_leap_1_1_unity_1_1_comment">Leap.Unity.Comment</link><link linkend="_class_leap_1_1_unity_1_1_comment_editor">Leap.Unity.CommentEditor</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_complex_throwable">Valve.VR.InteractionSystem.ComplexThrowable</link><link linkend="_struct_valve_1_1_v_r_1_1_compositor___cumulative_stats">Valve.VR.Compositor_CumulativeStats</link><link linkend="_struct_valve_1_1_v_r_1_1_compositor___frame_timing">Valve.VR.Compositor_FrameTiming</link><link linkend="_struct_valve_1_1_v_r_1_1_compositor___overlay_settings">Valve.VR.Compositor_OverlaySettings</link><link linkend="_class_t_m_pro_1_1_compute___d_t___event_args">TMPro.Compute_DT_EventArgs</link><link linkend="_struct_valve_1_1_v_r_1_1_steam_v_r___external_camera_1_1_config">Valve.VR.SteamVR_ExternalCamera.Config</link><link linkend="_class_leap_1_1_config">Leap.Config</link>
<para>The <link linkend="_class_leap_1_1_config">Config</link> class provides access to <link linkend="_namespace_leap">Leap</link> Motion system configuration information </para>
<link linkend="_class_leap_1_1_config_change_event_args">Leap.ConfigChangeEventArgs</link>
<para>Dispatched when a configuration change is completed </para>
<link linkend="_class_leap_internal_1_1_connection">LeapInternal.Connection</link><link linkend="_class_leap_1_1_connection_event_args">Leap.ConnectionEventArgs</link>
<para>Dispatched when the connection is established </para>
<link linkend="_class_leap_1_1_connection_lost_event_args">Leap.ConnectionLostEventArgs</link>
<para>Dispatched when the connection is lost </para>
<link linkend="_class_leap_1_1_unity_1_1_connection_monitor">Leap.Unity.ConnectionMonitor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">Leap.Unity.Interaction.ContactBone</link>
<para>Contact Bones store data for the colliders and rigidbodies in each bone of the contact-related representation of an <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link>. They also notify the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> of collisions for further processing </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_parent">Leap.Unity.Interaction.ContactBoneParent</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone_parent_editor">Leap.Unity.Interaction.ContactBoneParentEditor</link><link linkend="_class_leap_1_1_controller">Leap.Controller</link>
<para>The <link linkend="_class_leap_1_1_controller">Controller</link> class is your main interface to the <link linkend="_namespace_leap">Leap</link> Motion <link linkend="_class_leap_1_1_controller">Controller</link> </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_button_hints">Valve.VR.InteractionSystem.ControllerButtonHints</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_controller_hints_example">Valve.VR.InteractionSystem.Sample.ControllerHintsExample</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_controller_hover_highlight">Valve.VR.InteractionSystem.ControllerHoverHighlight</link><link linkend="_struct_valve_1_1_v_r_1_1_c_open_v_r_context">Valve.VR.COpenVRContext</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_curve_bounds_attribute">Leap.Unity.Attributes.CurveBoundsAttribute</link>
<para>You can use this attribute to mark that an AnimationCurve can only have values that fall within specific bounds. The user will be prevented from entering a curve that lies outside of these bounds </para>
<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base">Leap.Unity.CustomEditorBase&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base">Leap.Unity.CustomPropertyDrawerBase</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_custom_skeleton_helper">Valve.VR.InteractionSystem.Sample.CustomSkeletonHelper</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_applications">Valve.VR.CVRApplications</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_chaperone">Valve.VR.CVRChaperone</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_chaperone_setup">Valve.VR.CVRChaperoneSetup</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_compositor">Valve.VR.CVRCompositor</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_driver_manager">Valve.VR.CVRDriverManager</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_extended_display">Valve.VR.CVRExtendedDisplay</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_input">Valve.VR.CVRInput</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_i_o_buffer">Valve.VR.CVRIOBuffer</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_notifications">Valve.VR.CVRNotifications</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_overlay">Valve.VR.CVROverlay</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_render_models">Valve.VR.CVRRenderModels</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_resources">Valve.VR.CVRResources</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_screenshots">Valve.VR.CVRScreenshots</link><link linkend="_struct_valve_1_1_v_r_1_1_c_v_r_setting_helper">Valve.VR.CVRSettingHelper</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_settings">Valve.VR.CVRSettings</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_spatial_anchors">Valve.VR.CVRSpatialAnchors</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_system">Valve.VR.CVRSystem</link><link linkend="_class_valve_1_1_v_r_1_1_c_v_r_tracked_camera">Valve.VR.CVRTrackedCamera</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_d">Leap.Unity.Tests.MultiTypedListTests.D</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_reference_tests_1_1_d">Leap.Unity.Tests.MultiTypedReferenceTests.D</link><link linkend="_struct_valve_1_1_v_r_1_1_d3_d12_texture_data__t">Valve.VR.D3D12TextureData_t</link><link linkend="_class_leap_1_1_unity_1_1_debug_hand">Leap.Unity.DebugHand</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_debug_u_i">Valve.VR.InteractionSystem.DebugUI</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_default_x_r_node_tracking_provider">Leap.Unity.Interaction.DefaultXRNodeTrackingProvider</link>
<para>Implements IVRControllerTrackingProvider using Unity.XR.InputTracking for XRNodes. This tracking should support all native XR controller integrations in <link linkend="_namespace_leap_1_1_unity">Unity</link>, including Oculus Touch and HTC Vive </para>
<link linkend="_class_leap_1_1_unity_1_1_delay_buffer">Leap.Unity.DelayBuffer&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_delta_buffer">Leap.Unity.DeltaBuffer&lt; SampleType, DerivativeType &gt;</link>
<para>Allows you to add to a capped-size ring buffer of Ts and, when full, compute the buffer&apos;s average change over time. <link linkend="_class_leap_1_1_unity_1_1_delta_buffer">DeltaBuffer</link> without type parameters supports Vector3s; <link linkend="_class_leap_1_1_unity_1_1_delta_float_buffer">DeltaFloatBuffer</link> supports floats, and <link linkend="_class_leap_1_1_unity_1_1_delta_quaternion_buffer">DeltaQuaternionBuffer</link> supports Quaternion rotations </para>
<link linkend="_class_leap_1_1_unity_1_1_delta_float_buffer">Leap.Unity.DeltaFloatBuffer</link>
<para>A ring buffer of floats with a <link linkend="_class_leap_1_1_unity_1_1_delta_float_buffer_1afc1e79b97babd5397852a33e3aa425a7">Delta()</link> function that computes the buffer&apos;s average change over time. <link linkend="_class_leap_1_1_unity_1_1_delta_float_buffer_1afc1e79b97babd5397852a33e3aa425a7">Delta()</link> will return zero if the buffer contains one or fewer samples </para>
<link linkend="_class_leap_1_1_unity_1_1_delta_quaternion_buffer">Leap.Unity.DeltaQuaternionBuffer</link>
<para>A ring buffer of Quaternions with a <link linkend="_class_leap_1_1_unity_1_1_delta_quaternion_buffer_1a4e3c9ef1beee10efb295719e81cdf766">Delta()</link> function that computes the buffer&apos;s average change over time as an angle-axis vector. Returns Vector3.zero if the buffer contains one or fewer samples </para>
<link linkend="_class_leap_1_1_unity_1_1_deque">Leap.Unity.Deque&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_deque_tests">Leap.Unity.Tests.DequeTests</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_destroy_on_detached_from_hand">Valve.VR.InteractionSystem.DestroyOnDetachedFromHand</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_destroy_on_particle_system_death">Valve.VR.InteractionSystem.DestroyOnParticleSystemDeath</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_destroy_on_trigger_enter">Valve.VR.InteractionSystem.DestroyOnTriggerEnter</link><link linkend="_class_leap_1_1_unity_1_1_detector">Leap.Unity.Detector</link><link linkend="_class_leap_1_1_unity_1_1_detector_logic_gate">Leap.Unity.DetectorLogicGate</link><link linkend="_class_leap_1_1_device">Leap.Device</link>
<para>The <link linkend="_class_leap_1_1_device">Device</link> class represents a physically connected device </para>
<link linkend="_class_leap_1_1_device_event_args">Leap.DeviceEventArgs</link>
<para>Dispatched when a device is plugged in </para>
<link linkend="_class_leap_1_1_device_failure_event_args">Leap.DeviceFailureEventArgs</link>
<para>Dispatched when a device is plugged in, but fails to initialize or when a working device fails in use </para>
<link linkend="_class_leap_1_1_device_list">Leap.DeviceList</link>
<para>The <link linkend="_class_leap_1_1_device_list">DeviceList</link> class represents a list of <link linkend="_class_leap_1_1_device">Device</link> objects </para>
<link linkend="_class_leap_1_1_leap_c_sharp_1_1_tests_1_1_device_tests">Leap.LeapCSharp.Tests.DeviceTests</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_attribute">Leap.Unity.Attributes.DisableAttribute</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if">Leap.Unity.Attributes.DisableIf</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_all">Leap.Unity.Attributes.DisableIfAll</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_any">Leap.Unity.Attributes.DisableIfAny</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base">Leap.Unity.Attributes.DisableIfBase</link>
<para>Conditionally disables a property based on the value of another property. The only condition types that are currently supported are bool types, and enum types. The property has two arguments names &apos;equalTo&apos; and &apos;notEqualTo&apos;. Exactly one of them must be specified, like so: </para>
<link linkend="_class_leap_1_1_unity_1_1_disconnection_notice">Leap.Unity.DisconnectionNotice</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_distance_haptics">Valve.VR.InteractionSystem.DistanceHaptics</link><link linkend="_struct_valve_1_1_v_r_1_1_distortion_coordinates__t">Valve.VR.DistortionCoordinates_t</link><link linkend="_class_leap_1_1_distortion_data">Leap.DistortionData</link>
<para>The <link linkend="_class_leap_1_1_distortion_data">DistortionData</link> class contains the distortion map for correcting the lens distortion of an image </para>
<link linkend="_class_leap_1_1_distortion_event_args">Leap.DistortionEventArgs</link>
<para>Dispatched when the image distortion map changes </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_dont_destroy_on_load">Valve.VR.InteractionSystem.DontDestroyOnLoad</link><link linkend="_struct_valve_1_1_v_r_1_1_driver_direct_mode___frame_timing">Valve.VR.DriverDirectMode_FrameTiming</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_dropdown_editor">TMPro.EditorUtilities.DropdownEditor</link><link linkend="_class_t_m_pro_1_1_t_m_p___dropdown_1_1_dropdown_event">TMPro.TMP_Dropdown.DropdownEvent</link><link linkend="_class_t_m_pro_1_1_t_m_p___dropdown_1_1_dropdown_item">TMPro.TMP_Dropdown.DropdownItem</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_dropdown_option_list_drawer">TMPro.EditorUtilities.DropdownOptionListDrawer</link><link linkend="_class_leap_1_1_dropped_frame_event_args">Leap.DroppedFrameEventArgs</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_e">Leap.Unity.Tests.MultiTypedListTests.E</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_editor_coroutine">TMPro.EditorUtilities.EditorCoroutine</link>
<para>Simple implementation of coroutine working in the Unity Editor </para>
<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_edit_time_only">Leap.Unity.Attributes.EditTimeOnly</link><link linkend="_struct_leap_1_1_unity_1_1_either">Leap.Unity.Either&lt; A, B &gt;</link>
<para>A data structure that represents either a value of type A or a value of type B. The value can never be both A and B. Neither A nor B can ever be null </para>
<link linkend="_class_leap_1_1_unity_1_1_enable_depth_buffer">Leap.Unity.EnableDepthBuffer</link><link linkend="_struct_leap_1_1_end_profiling_block_args">Leap.EndProfilingBlockArgs</link><link linkend="_struct_leap_1_1_end_profiling_for_thread_args">Leap.EndProfilingForThreadArgs</link><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_enumerator">Leap.Unity.MultiTypedList&lt; BaseType &gt;.Enumerator</link><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator">Leap.Unity.Query.Query&lt; T &gt;.Enumerator</link><link linkend="_class_leap_1_1_unity_1_1_enum_event_table">Leap.Unity.EnumEventTable</link><link linkend="_class_leap_1_1_unity_1_1_enum_event_table_editor">Leap.Unity.EnumEventTableEditor</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_enum_flags">Valve.VR.InteractionSystem.EnumFlags</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_enum_flags">Leap.Unity.Attributes.EnumFlags</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_equippable">Valve.VR.InteractionSystem.Equippable</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event">Valve.VR.SteamVR_Events.Event</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event">Valve.VR.SteamVR_Events.Event&lt; T &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event">Valve.VR.SteamVR_Events.Event&lt; T0, T1 &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___events_1_1_event">Valve.VR.SteamVR_Events.Event&lt; T0, T1, T2 &gt;</link><link linkend="_class_leap_1_1_unity_1_1_execute_after_attribute">Leap.Unity.ExecuteAfterAttribute</link><link linkend="_class_leap_1_1_unity_1_1_execute_after_default">Leap.Unity.ExecuteAfterDefault</link><link linkend="_class_leap_1_1_unity_1_1_execute_before_attribute">Leap.Unity.ExecuteBeforeAttribute</link><link linkend="_class_leap_1_1_unity_1_1_execute_before_default">Leap.Unity.ExecuteBeforeDefault</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_explosion_wobble">Valve.VR.InteractionSystem.ExplosionWobble</link><link linkend="_class_leap_1_1_unity_1_1_extended_finger_detector">Leap.Unity.ExtendedFingerDetector</link><link linkend="_struct_t_m_pro_1_1_extents">TMPro.Extents</link><link linkend="_class_leap_1_1_unity_1_1_leap_image_retriever_1_1_eye_texture_data">Leap.Unity.LeapImageRetriever.EyeTextureData</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_f">Leap.Unity.Tests.MultiTypedListTests.F</link><link linkend="_class_t_m_pro_1_1_face_info">TMPro.FaceInfo</link>
<para>Class that contains the basic information about the font </para>
<link linkend="_class_leap_1_1_failed_device">Leap.FailedDevice</link>
<para>The <link linkend="_class_leap_1_1_failed_device">FailedDevice</link> class provides information about <link linkend="_namespace_leap">Leap</link> Motion hardware that has been physically connected to the client computer, but is not operating correctly </para>
<link linkend="_class_leap_1_1_failed_device_list">Leap.FailedDeviceList</link>
<para>The list of <link linkend="_class_leap_1_1_failed_device">FailedDevice</link> objects contains an entry for every failed <link linkend="_namespace_leap">Leap</link> Motion hardware device connected to the client computer. <link linkend="_class_leap_1_1_failed_device">FailedDevice</link> objects report the device pnpID string and reason for failure </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_fallback_camera_controller">Valve.VR.InteractionSystem.FallbackCameraController</link><link linkend="_class_t_m_pro_1_1_fast_action">TMPro.FastAction</link><link linkend="_class_t_m_pro_1_1_fast_action">TMPro.FastAction&lt; A &gt;</link><link linkend="_class_t_m_pro_1_1_fast_action">TMPro.FastAction&lt; A, B &gt;</link><link linkend="_class_t_m_pro_1_1_fast_action">TMPro.FastAction&lt; A, B, C &gt;</link><link linkend="_class_ditzel_games_1_1_fast_i_k_1_1_fast_i_k">DitzelGames.FastIK.FastIK</link>
<para>Fabrik IK Solver </para>
<link linkend="_class_ditzel_games_1_1_fast_i_k_1_1_fast_i_k_fabric">DitzelGames.FastIK.FastIKFabric</link>
<para>Fabrik IK Solver </para>
<link linkend="_class_ditzel_games_1_1_fast_i_k_1_1_fast_i_k_look">DitzelGames.FastIK.FastIKLook</link><link linkend="_class_leap_1_1_finger">Leap.Finger</link>
<para>The <link linkend="_class_leap_1_1_finger">Finger</link> class represents a tracked finger </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_custom_skeleton_helper_1_1_finger">Valve.VR.InteractionSystem.Sample.CustomSkeletonHelper.Finger</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_floppy_hand_1_1_finger">Valve.VR.InteractionSystem.Sample.FloppyHand.Finger</link><link linkend="_class_leap_1_1_unity_1_1_finger_direction_detector">Leap.Unity.FingerDirectionDetector</link><link linkend="_class_leap_1_1_unity_1_1_finger_model">Leap.Unity.FingerModel</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_fire_source">Valve.VR.InteractionSystem.FireSource</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_slider_1_1_float_event">Leap.Unity.Interaction.InteractionSlider.FloatEvent</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_transform_tween_behaviour_1_1_float_event">Leap.Unity.Animation.TransformTweenBehaviour.FloatEvent</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_float_interpolator_base">Leap.Unity.Animation.Internal.FloatInterpolatorBase&lt; ObjType &gt;</link><link linkend="_struct_t_m_pro_1_1_float_tween">TMPro.FloatTween</link><link linkend="_class_t_m_pro_1_1_float_tween_1_1_float_tween_callback">TMPro.FloatTween.FloatTweenCallback</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_floppy_hand">Valve.VR.InteractionSystem.Sample.FloppyHand</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_flower_planted">Valve.VR.InteractionSystem.Sample.FlowerPlanted</link><link linkend="_struct_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_editor_panel_1_1_foldout">TMPro.EditorUtilities.TMP_BaseEditorPanel.Foldout</link><link linkend="_struct_t_m_pro_1_1_font_asset_creation_settings">TMPro.FontAssetCreationSettings</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_font_weight_drawer">TMPro.EditorUtilities.FontWeightDrawer</link><link linkend="_class_leap_1_1_unity_1_1_fps_label">Leap.Unity.FpsLabel</link><link linkend="_class_leap_1_1_frame">Leap.Frame</link>
<para>The <link linkend="_class_leap_1_1_frame">Frame</link> class represents a set of hand and finger tracking data detected in a single frame </para>
<link linkend="_class_leap_1_1_frame_event_args">Leap.FrameEventArgs</link>
<para>Dispatched when a tracking frame is ready </para>
<link linkend="_class_leap_1_1_unity_1_1_frame_rate_controls">Leap.Unity.FrameRateControls</link>
<para>Provides control of target frame rate </para>
<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_frame_validator">Leap.Unity.Tests.FrameValidator</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_from_then_tests">Leap.Unity.Tests.FromThenTests</link>
<para><link linkend="_namespace_leap_1_1_unity_1_1_tests">Tests</link> for From(), To(), and Then() extension methods </para>
<link linkend="_struct_t_m_pro_1_1_editor_utilities_1_1_f_t___face_info">TMPro.EditorUtilities.FT_FaceInfo</link><link linkend="_struct_t_m_pro_1_1_editor_utilities_1_1_f_t___glyph_info">TMPro.EditorUtilities.FT_GlyphInfo</link><link linkend="_struct_t_m_pro_1_1_editor_utilities_1_1_f_t___kerning_pair">TMPro.EditorUtilities.FT_KerningPair</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_g">Leap.Unity.Tests.MultiTypedListTests.G</link><link linkend="_struct_valve_1_1_v_r_1_1_extras_1_1_gaze_event_args">Valve.VR.Extras.GazeEventArgs</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_glyph_info_drawer">TMPro.EditorUtilities.GlyphInfoDrawer</link><link linkend="_struct_t_m_pro_1_1_glyph_value_record">TMPro.GlyphValueRecord</link>
<para>Positional adjustments of a glyph </para>
<link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_gradient_interpolator_base">Leap.Unity.Animation.Internal.GradientInterpolatorBase</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade">Valve.VR.InteractionSystem.Sample.Grenade</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_h">Leap.Unity.Tests.MultiTypedListTests.H</link><link linkend="_class_leap_1_1_hand">Leap.Hand</link>
<para>The <link linkend="_class_leap_1_1_hand">Hand</link> class reports the physical characteristics of a detected hand </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Valve.VR.InteractionSystem.Hand</link><link linkend="_class_leap_1_1_unity_1_1_hand_drop">Leap.Unity.HandDrop</link><link linkend="_class_leap_1_1_unity_1_1_hand_enable_disable">Leap.Unity.HandEnableDisable</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand_event">Valve.VR.InteractionSystem.HandEvent</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_left">Leap.Unity.Tests.HandFactoryLeft</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_right">Leap.Unity.Tests.HandFactoryRight</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_hand_factory_two_hands">Leap.Unity.Tests.HandFactoryTwoHands</link><link linkend="_class_leap_1_1_unity_1_1_hand_model">Leap.Unity.HandModel</link><link linkend="_class_leap_1_1_unity_1_1_hand_model_base">Leap.Unity.HandModelBase</link><link linkend="_class_leap_1_1_unity_1_1_hand_model_manager">Leap.Unity.HandModelManager</link>
<para>The <link linkend="_class_leap_1_1_unity_1_1_hand_model_manager">HandModelManager</link> manages a pool of HandModelBases and makes HandRepresentations when a it detects a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> <link linkend="_class_leap_1_1_hand">Hand</link> from its configured <link linkend="_class_leap_1_1_unity_1_1_leap_provider">LeapProvider</link> </para>
<link linkend="_class_hand_motion_local_leap">HandMotionLocalLeap</link>
<para>This functionality works on the local player only. It hides the Right IK arms when right leap bone structure is visible </para>
<link linkend="_class_hand_motion_local_leap_left">HandMotionLocalLeapLeft</link>
<para>This functionality works on the local player only. It hides the Left IK arms when left leap bone structure is visible </para>
<link linkend="_class_leap_1_1_unity_1_1_hand_representation">Leap.Unity.HandRepresentation</link><link linkend="_class_leap_1_1_unity_1_1_hand_transition_behavior">Leap.Unity.HandTransitionBehavior</link>
<para>A component to be attached to a <link linkend="_class_leap_1_1_unity_1_1_hand_model_base">HandModelBase</link> to handle starting and ending of tracking </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_haptic_rack">Valve.VR.InteractionSystem.HapticRack</link><link linkend="_struct_leap_1_1_unity_1_1_hash">Leap.Unity.Hash</link><link linkend="_class_leap_1_1_head_pose_event_args">Leap.HeadPoseEventArgs</link><link linkend="_classhealth">health</link>
<para>This health class is resposible for making sure that the health is reduced , when the hits are registered in the <link linkend="_bulletcollider_8cs">bulletcollider.cs</link> Also this script takes care of the exit function </para>
<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_hermite_spline">Leap.Unity.Animation.HermiteSpline</link>
<para>Represents a spline that travels from one point in space to another over a specified time frame. The two endpoints are specified, as well as the instantaneous velocity at these two endpoints </para>
<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_hermite_spline2">Leap.Unity.Animation.HermiteSpline2</link>
<para>Represents a spline that travels from one point in space to another over a specified time frame. The two endpoints are specified, as well as the instantaneous velocity at these two endpoints </para>
<link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_hermite_spline3">Leap.Unity.Animation.HermiteSpline3</link>
<para>Represents a spline that travels from one point in space to another over a specified time frame. The two endpoints are specified, as well as the instantaneous velocity at these two endpoints </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_internal_1_1_heuristic_grab_classifier">Leap.Unity.Interaction.Internal.HeuristicGrabClassifier</link><link linkend="_struct_valve_1_1_v_r_1_1_hidden_area_mesh__t">Valve.VR.HiddenAreaMesh_t</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_examples_1_1_hide_interaction_hand_when_controller_moving">Leap.Unity.Interaction.Examples.HideInteractionHandWhenControllerMoving</link>
<para>This simple example script disables the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link> script and has event outputs to drive hiding <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand renderers when it detects that an <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller">InteractionXRController</link> is tracked and moving (e.g. it has been picked up) </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hide_on_hand_focus_lost">Valve.VR.InteractionSystem.HideOnHandFocusLost</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_history_progress_spinner">UnityEditor.Collaboration.HistoryProgressSpinner</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_tests_1_1_history_tests">UnityEditor.Collaboration.Tests.HistoryTests</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_color__t">Valve.VR.HmdColor_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix33__t">Valve.VR.HmdMatrix33_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix34__t">Valve.VR.HmdMatrix34_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_matrix44__t">Valve.VR.HmdMatrix44_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_quad__t">Valve.VR.HmdQuad_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_quaternion__t">Valve.VR.HmdQuaternion_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_quaternionf__t">Valve.VR.HmdQuaternionf_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_rect2__t">Valve.VR.HmdRect2_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_vector2__t">Valve.VR.HmdVector2_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_vector3__t">Valve.VR.HmdVector3_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_vector3d__t">Valve.VR.HmdVector3d_t</link><link linkend="_struct_valve_1_1_v_r_1_1_hmd_vector4__t">Valve.VR.HmdVector4_t</link><link linkend="_struct_leap_1_1_unity_1_1_utils_1_1_horizontal_line_rect_enumerator">Leap.Unity.Utils.HorizontalLineRectEnumerator</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hover_button">Valve.VR.InteractionSystem.HoverButton</link><link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_additive_drawer">Leap.Unity.Attributes.IAdditiveDrawer</link><link linkend="_interface_unity_editor_1_1_package_manager_1_1_u_i_1_1_i_add_operation">UnityEditor.PackageManager.UI.IAddOperation</link><link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_after_field_additive_drawer">Leap.Unity.Attributes.IAfterFieldAdditiveDrawer</link><link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_after_label_additive_drawer">Leap.Unity.Attributes.IAfterLabelAdditiveDrawer</link><link linkend="_interface_unity_editor_1_1_package_manager_1_1_u_i_1_1_i_base_operation">UnityEditor.PackageManager.UI.IBaseOperation</link><link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_before_field_additive_drawer">Leap.Unity.Attributes.IBeforeFieldAdditiveDrawer</link><link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_before_label_additive_drawer">Leap.Unity.Attributes.IBeforeLabelAdditiveDrawer</link><link linkend="_interface_leap_1_1_unity_1_1_i_can_report_duplicate_information">Leap.Unity.ICanReportDuplicateInformation</link><link linkend="_interface_unity_editor_1_1_collaboration_1_1_i_collab_history_item_factory">UnityEditor.Collaboration.ICollabHistoryItemFactory</link><link linkend="_interface_leap_1_1_i_controller">Leap.IController</link><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer">Leap.Unity.Space.IdentityTransformer</link><link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_full_property_drawer">Leap.Unity.Attributes.IFullPropertyDrawer</link><link linkend="_class_ignore_collider_for_interaction">IgnoreColliderForInteraction</link>
<para>Causes any Colliders located on the same GameObject to be ignored by the Interaction Engine. Does not affect parents or children. It is recommended that you use this component only with trigger colliders </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_ignore_collider_for_interaction_editor">Leap.Unity.Interaction.IgnoreColliderForInteractionEditor</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_ignore_collisions_in_children">Leap.Unity.Examples.IgnoreCollisionsInChildren</link>
<para>This utility script scans through its Transform&apos;s children and tells PhysX to ignore collisions between all pairs of Colliders it finds. This is particlarly useful, for example, for interfaces, where buttons shouldn&apos;t collide with other buttons </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_ignore_hovering">Valve.VR.InteractionSystem.IgnoreHovering</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_ignore_teleport_trace">Valve.VR.InteractionSystem.IgnoreTeleportTrace</link><link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_movement_handler">Leap.Unity.Interaction.IGraspedMovementHandler</link>
<para>An <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_movement_handler">IGraspedMovementHandler</link> takes in a target position and rotation (a &quot;pose&quot;, usually provided by an <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler">IGraspedPoseHandler</link>) and is responsible for attempting to move an interaction object to that target pose </para>
<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler">Leap.Unity.Interaction.IGraspedPoseHandler</link>
<para>An <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler">IGraspedPoseHandler</link> specifies where an object grasped by a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand or controller (or multiple hands/controllers) should move as the grasping controllers(s) move. The default implementation provided by the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Engine is the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose">KabschGraspedPose</link>, which produces a physically-intuitive following motion for the object no matter how a grasping hand moves </para>
<link linkend="_interface_leap_1_1_unity_1_1_i_indexable">Leap.Unity.IIndexable&lt; T &gt;</link>
<para>This easy-to-implement interface represents the ability to index into a collection of elements of type T. IIndexables inherit Query() via an extension method </para>
<link linkend="_interface_leap_1_1_unity_1_1_i_indexable_struct">Leap.Unity.IIndexableStruct&lt; T, ThisIndexableType &gt;</link>
<para>This is a definition-friendly interface that new &quot;indexable&quot; struct definitions can implement to make it a little easier to implement foreach and Query() operations for their struct. (You can use the <link linkend="_struct_leap_1_1_unity_1_1_indexable_struct_enumerator">IndexableStructEnumerator</link> for this purpose, you just have to pass it type arguments that correspond to your struct type.) </para>
<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">Leap.Unity.Interaction.IInteractionBehaviour</link>
<para><link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> is the interface that defines all <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> objects, specifying the minimum set of functionality required to make objects interactable </para>
<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_internal_interaction_controller">Leap.Unity.Interaction.IInternalInteractionController</link><link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_internal_interaction_manager">Leap.Unity.Interaction.IInternalInteractionManager</link><link linkend="_interface_leap_1_1_unity_1_1_animation_1_1_i_interpolator">Leap.Unity.Animation.IInterpolator</link>
<para>Implement this interface to add your own interpolators to Tween! </para>
<link linkend="_interface_unity_editor_1_1_package_manager_1_1_u_i_1_1_i_list_operation">UnityEditor.PackageManager.UI.IListOperation</link><link linkend="_class_leap_1_1_image">Leap.Image</link>
<para>The <link linkend="_class_leap_1_1_image">Image</link> class represents a stereo image pair from the <link linkend="_namespace_leap">Leap</link> Motion device </para>
<link linkend="_class_leap_internal_1_1_image_data">LeapInternal.ImageData</link><link linkend="_class_leap_1_1_image_event_args">Leap.ImageEventArgs</link>
<para>Dispatched when an unrequested <link linkend="_class_leap_1_1_image">Image</link> is ready </para>
<link linkend="_class_leap_1_1_unity_1_1_old_rig_hierarchy_1_1_image_rig_data">Leap.Unity.OldRigHierarchy.ImageRigData</link><link linkend="_interface_leap_1_1_unity_1_1_i_min_heap_node">Leap.Unity.IMinHeapNode</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_implements_interface_attribute">Leap.Unity.Attributes.ImplementsInterfaceAttribute</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_implements_type_name_dropdown_attribute">Leap.Unity.Attributes.ImplementsTypeNameDropdownAttribute</link>
<para>Place this attribute on a serialized string field to have it render as a dropdown menu that is automatically populated with implementing types of the type provided to the attribute. The string field will contain the type name selected by the user. This can be converted into a Type reference via reflection and used to construct objects by their type, for example, or to construct ScriptableObjects by their type </para>
<link linkend="_struct_valve_1_1_v_r_1_1_imu_sample__t">Valve.VR.ImuSample_t</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_incrementable">Leap.Unity.Attributes.Incrementable</link><link linkend="_struct_leap_1_1_unity_1_1_indexable_enumerator">Leap.Unity.IndexableEnumerator&lt; Element &gt;</link><link linkend="_struct_leap_1_1_unity_1_1_indexable_struct_enumerator">Leap.Unity.IndexableStructEnumerator&lt; Element, IndexableStruct &gt;</link>
<para>A two-generic-argument variant of an enumerator that allows an <link linkend="_interface_leap_1_1_unity_1_1_i_indexable_struct">IIndexableStruct</link> to quickly define an Enumerator that avoids allocation </para>
<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_operator_extensions_1_1_indexed_value">Leap.Unity.Query.QueryOperatorExtensions.IndexedValue&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_inertia_post_process_provider">Leap.Unity.Examples.InertiaPostProcessProvider</link><link linkend="_struct_valve_1_1_v_r_1_1_input_analog_action_data__t">Valve.VR.InputAnalogActionData_t</link><link linkend="_struct_valve_1_1_v_r_1_1_input_digital_action_data__t">Valve.VR.InputDigitalActionData_t</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_input_module">Valve.VR.InteractionSystem.InputModule</link><link linkend="_struct_valve_1_1_v_r_1_1_input_origin_info__t">Valve.VR.InputOriginInfo_t</link><link linkend="_struct_valve_1_1_v_r_1_1_input_pose_action_data__t">Valve.VR.InputPoseActionData_t</link><link linkend="_struct_valve_1_1_v_r_1_1_input_skeletal_action_data__t">Valve.VR.InputSkeletalActionData_t</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_inspector_name_attribute">Leap.Unity.Attributes.InspectorNameAttribute</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_interactable">Valve.VR.InteractionSystem.Interactable</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_interactable_debug">Valve.VR.InteractionSystem.InteractableDebug</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_interactable_example">Valve.VR.InteractionSystem.Sample.InteractableExample</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_interactable_hover_events">Valve.VR.InteractionSystem.InteractableHoverEvents</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">Leap.Unity.Interaction.InteractionBehaviour</link>
<para>InteractionBehaviours are components that enable GameObjects to interact with interaction controllers (InteractionControllerBase) in a physically intuitive way </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour_editor">Leap.Unity.Interaction.InteractionBehaviourEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_button">Leap.Unity.Interaction.InteractionButton</link>
<para>A physics-enabled button. Activated by physically pressing the button, with events for press and unpress. /summary&gt; </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_button_editor">Leap.Unity.Interaction.InteractionButtonEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">Leap.Unity.Interaction.InteractionController</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_editor">Leap.Unity.Interaction.InteractionControllerEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_set">Leap.Unity.Interaction.InteractionControllerSet</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">Leap.Unity.Interaction.InteractionHand</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand_editor">Leap.Unity.Interaction.InteractionHandEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager">Leap.Unity.Interaction.InteractionManager</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_editor">Leap.Unity.Interaction.InteractionManagerEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_slider">Leap.Unity.Interaction.InteractionSlider</link>
<para>A physics-enabled slider. Sliding is triggered by physically pushing the slider to its compressed position. Increasing the horizontal and vertical slide limits allows it to act as either a 1D or 2D slider. /summary&gt; </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_slider_editor">Leap.Unity.Interaction.InteractionSliderEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_toggle">Leap.Unity.Interaction.InteractionToggle</link>
<para>A physics-enabled toggle. Toggling is triggered by physically pushing the toggle to its compressed position </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_v_r_controller_editor">Leap.Unity.Interaction.InteractionVRControllerEditor</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller">Leap.Unity.Interaction.InteractionXRController</link><link linkend="_class_leap_1_1_internal_frame_event_args">Leap.InternalFrameEventArgs</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_interpolator_base">Leap.Unity.Animation.Internal.InterpolatorBase&lt; ValueType, ObjType &gt;</link><link linkend="_struct_valve_1_1_v_r_1_1_intersection_mask_circle__t">Valve.VR.IntersectionMaskCircle_t</link><link linkend="_struct_valve_1_1_v_r_1_1_intersection_mask_rectangle__t">Valve.VR.IntersectionMaskRectangle_t</link><link linkend="_struct_valve_1_1_v_r_1_1_steam_v_r___overlay_1_1_intersection_results">Valve.VR.SteamVR_Overlay.IntersectionResults</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_reference_tests_1_1_invalid_class">Leap.Unity.Tests.MultiTypedReferenceTests.InvalidClass</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests_1_1_invalid_class">Leap.Unity.Tests.MultiTypedListTests.InvalidClass</link><link linkend="_interface_unity_editor_1_1_package_manager_1_1_u_i_1_1_i_operation_factory">UnityEditor.PackageManager.UI.IOperationFactory</link>
<para>This is the Interface we will use to create the facade we need for testing. In the case of the Fake factory, we can create fake operations with doctored data we use for our tests </para>
<link linkend="_interface_unity_editor_1_1_package_manager_1_1_u_i_1_1_i_package_manager_extension">UnityEditor.PackageManager.UI.IPackageManagerExtension</link>
<para>Interface for <link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package">Package</link> Manager <link linkend="_namespace_unity_editor_1_1_package_manager_1_1_u_i">UI</link> Extension </para>
<link linkend="_interface_unity_editor_1_1_collaboration_1_1_i_pager_data">UnityEditor.Collaboration.IPagerData</link><link linkend="_interface_leap_1_1_unity_1_1_i_poolable">Leap.Unity.IPoolable</link>
<para>Implement this interface to recieve a callback whenever your object is spawned from a pool </para>
<link linkend="_interface_leap_1_1_unity_1_1_i_progress_view">Leap.Unity.IProgressView</link>
<para>This interface describes a generic way to update the progress of an action </para>
<link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_property_constrainer">Leap.Unity.Attributes.IPropertyConstrainer</link><link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_property_disabler">Leap.Unity.Attributes.IPropertyDisabler</link><link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_radial_transformer">Leap.Unity.Space.IRadialTransformer</link><link linkend="_interface_unity_editor_1_1_package_manager_1_1_u_i_1_1_i_remove_operation">UnityEditor.PackageManager.UI.IRemoveOperation</link><link linkend="_interface_leap_1_1_unity_1_1_runtime_gizmos_1_1_i_runtime_gizmo_component">Leap.Unity.RuntimeGizmos.IRuntimeGizmoComponent</link>
<para>Have your MonoBehaviour implement this interface to be able to draw runtime gizmos. You must also have a <link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_manager">RuntimeGizmoManager</link> component in the scene to recieve callbacks </para>
<link linkend="_interface_unity_editor_1_1_package_manager_1_1_u_i_1_1_i_search_operation">UnityEditor.PackageManager.UI.ISearchOperation</link><link linkend="_interface_leap_1_1_unity_1_1_i_serializable_dictionary">Leap.Unity.ISerializableDictionary</link><link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component">Leap.Unity.Space.ISpaceComponent</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action">Valve.VR.ISteamVR_Action</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___boolean">Valve.VR.ISteamVR_Action_Boolean</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in">Valve.VR.ISteamVR_Action_In</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___in___source">Valve.VR.ISteamVR_Action_In_Source</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out">Valve.VR.ISteamVR_Action_Out</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___out___source">Valve.VR.ISteamVR_Action_Out_Source</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___pose">Valve.VR.ISteamVR_Action_Pose</link>
<para>Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge </para>
<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___single">Valve.VR.ISteamVR_Action_Single</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___skeleton___source">Valve.VR.ISteamVR_Action_Skeleton_Source</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___source">Valve.VR.ISteamVR_Action_Source</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector2">Valve.VR.ISteamVR_Action_Vector2</link><link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vector3">Valve.VR.ISteamVR_Action_Vector3</link>
<para>Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge </para>
<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action___vibration">Valve.VR.ISteamVR_Action_Vibration</link>
<para>Vibration actions are used to trigger haptic feedback in vr controllers </para>
<link linkend="_interface_valve_1_1_v_r_1_1_i_steam_v_r___action_set">Valve.VR.ISteamVR_ActionSet</link>
<para>Action sets are logical groupings of actions. Multiple sets can be active at one time </para>
<link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_support_drag_and_drop">Leap.Unity.Attributes.ISupportDragAndDrop</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_item_package">Valve.VR.InteractionSystem.ItemPackage</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_item_package_reference">Valve.VR.InteractionSystem.ItemPackageReference</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_item_package_spawner">Valve.VR.InteractionSystem.ItemPackageSpawner</link><link linkend="_interface_t_m_pro_1_1_i_text_element">TMPro.ITextElement</link><link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_throw_handler">Leap.Unity.Interaction.IThrowHandler</link>
<para><link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> objects feed their throw handlers callbacks when they are held (for data collection) and then fire OnThrow when they are released from all grasping hands or controllers so that the throw handler can manipulate the interaction object&apos;s trajectory to better match the user&apos;s intention </para>
<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">Leap.Unity.Space.ITransformer</link><link linkend="_interface_t_m_pro_1_1_i_tween_value">TMPro.ITweenValue</link><link linkend="_interface_leap_1_1_unity_1_1_i_value_proxy">Leap.Unity.IValueProxy</link>
<para>A simple interface that allows an object to act as a &apos;proxy&apos; interface to another object. The proxy can store a serialized representation of a value on another object. The value of the proxy can either be updated from the object (pull), or be pushed out to the object (push) </para>
<link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_applications">Valve.VR.IVRApplications</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_chaperone">Valve.VR.IVRChaperone</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_chaperone_setup">Valve.VR.IVRChaperoneSetup</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_compositor">Valve.VR.IVRCompositor</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_driver_manager">Valve.VR.IVRDriverManager</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_extended_display">Valve.VR.IVRExtendedDisplay</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_input">Valve.VR.IVRInput</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_i_o_buffer">Valve.VR.IVRIOBuffer</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_notifications">Valve.VR.IVRNotifications</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_overlay">Valve.VR.IVROverlay</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_render_models">Valve.VR.IVRRenderModels</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_resources">Valve.VR.IVRResources</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_screenshots">Valve.VR.IVRScreenshots</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_settings">Valve.VR.IVRSettings</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_spatial_anchors">Valve.VR.IVRSpatialAnchors</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_system">Valve.VR.IVRSystem</link><link linkend="_struct_valve_1_1_v_r_1_1_i_v_r_tracked_camera">Valve.VR.IVRTrackedCamera</link><link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_x_r_controller_tracking_provider">Leap.Unity.Interaction.IXRControllerTrackingProvider</link>
<para>The interface for providing tracking data to an InteractionVRController </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_joe_jeff">Valve.VR.InteractionSystem.Sample.JoeJeff</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_joe_jeff_controller">Valve.VR.InteractionSystem.Sample.JoeJeffController</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_joe_jeff_gestures">Valve.VR.InteractionSystem.Sample.JoeJeffGestures</link><link linkend="_class_json_serialization">JsonSerialization</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose">Leap.Unity.Interaction.KabschGraspedPose</link>
<para>This pose handler is the default implementation of <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_pose_handler">IGraspedPoseHandler</link> provided by the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Engine and is most likely the only implementation you will need. It uses a Kabsch solve from frame to frame based on the points at which any grasping controller are grasping the interaction object to determine where the object should move and rotate in the grasp. Note that IGraspedPoseHandlers only determine the target position and rotation of a held object; actually moving the object is the domain of an <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_movement_handler">IGraspedMovementHandler</link> </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_solver">Leap.Unity.Interaction.KabschSolver</link><link linkend="_class_t_m_pro_1_1_kerning_pair">TMPro.KerningPair</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_kerning_pair_drawer">TMPro.EditorUtilities.KerningPairDrawer</link><link linkend="_struct_t_m_pro_1_1_kerning_pair_key">TMPro.KerningPairKey</link><link linkend="_class_t_m_pro_1_1_kerning_table">TMPro.KerningTable</link><link linkend="_struct_leap_1_1_unity_1_1_multi_typed_list_1_1_key">Leap.Unity.MultiTypedList.Key</link><link linkend="_class_leap_1_1_unity_1_1_key_enable_behaviors">Leap.Unity.KeyEnableBehaviors</link><link linkend="_class_leap_1_1_unity_1_1_key_enable_game_objects">Leap.Unity.KeyEnableGameObjects</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kinematic_grasped_movement">Leap.Unity.Interaction.KinematicGraspedMovement</link>
<para>This implementation of <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_movement_handler">IGraspedMovementHandler</link> moves its interaction object to a target position and rotation by setting its rigidbody position and rotation directly to that target position and rotation. This is required when working with kinematic rigidbodies, which do not move based on their velocity and angular velocity </para>
<link linkend="_struct_leap_internal_1_1_l_e_a_p___a_l_l_o_c_a_t_o_r">LeapInternal.LEAP_ALLOCATOR</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___b_o_n_e">LeapInternal.LEAP_BONE</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___c_h_a_n_g_e___e_v_e_n_t">LeapInternal.LEAP_CONFIG_CHANGE_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t">LeapInternal.LEAP_CONFIG_RESPONSE_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___c_o_n_f_i_g___r_e_s_p_o_n_s_e___e_v_e_n_t___w_i_t_h___r_e_f___t_y_p_e">LeapInternal.LEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___c_o_n_f_i_g">LeapInternal.LEAP_CONNECTION_CONFIG</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___e_v_e_n_t">LeapInternal.LEAP_CONNECTION_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___i_n_f_o">LeapInternal.LEAP_CONNECTION_INFO</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___l_o_s_t___e_v_e_n_t">LeapInternal.LEAP_CONNECTION_LOST_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___c_o_n_n_e_c_t_i_o_n___m_e_s_s_a_g_e">LeapInternal.LEAP_CONNECTION_MESSAGE</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___e_v_e_n_t">LeapInternal.LEAP_DEVICE_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___f_a_i_l_u_r_e___e_v_e_n_t">LeapInternal.LEAP_DEVICE_FAILURE_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___i_n_f_o">LeapInternal.LEAP_DEVICE_INFO</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___d_e_v_i_c_e___r_e_f">LeapInternal.LEAP_DEVICE_REF</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___d_i_g_i_t">LeapInternal.LEAP_DIGIT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___d_i_s_c_o_n_n_e_c_t_i_o_n___e_v_e_n_t">LeapInternal.LEAP_DISCONNECTION_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___d_r_o_p_p_e_d___f_r_a_m_e___e_v_e_n_t">LeapInternal.LEAP_DROPPED_FRAME_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___f_r_a_m_e___h_e_a_d_e_r">LeapInternal.LEAP_FRAME_HEADER</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___h_a_n_d">LeapInternal.LEAP_HAND</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___h_e_a_d___p_o_s_e___e_v_e_n_t">LeapInternal.LEAP_HEAD_POSE_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___i_m_a_g_e">LeapInternal.LEAP_IMAGE</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___i_m_a_g_e___e_v_e_n_t">LeapInternal.LEAP_IMAGE_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___i_m_a_g_e___p_r_o_p_e_r_t_i_e_s">LeapInternal.LEAP_IMAGE_PROPERTIES</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___l_o_g___e_v_e_n_t">LeapInternal.LEAP_LOG_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___m_a_t_r_i_x__3x3">LeapInternal.LEAP_MATRIX_3x3</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___p_a_l_m">LeapInternal.LEAP_PALM</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___p_o_i_n_t___m_a_p_p_i_n_g">LeapInternal.LEAP_POINT_MAPPING</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___p_o_i_n_t___m_a_p_p_i_n_g___c_h_a_n_g_e___e_v_e_n_t">LeapInternal.LEAP_POINT_MAPPING_CHANGE_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___p_o_l_i_c_y___e_v_e_n_t">LeapInternal.LEAP_POLICY_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___q_u_a_t_e_r_n_i_o_n">LeapInternal.LEAP_QUATERNION</link><link linkend="_struct_leap_internal_1_1_leap_c_1_1_l_e_a_p___r_e_c_o_r_d_i_n_g___p_a_r_a_m_e_t_e_r_s">LeapInternal.LeapC.LEAP_RECORDING_PARAMETERS</link><link linkend="_struct_leap_internal_1_1_leap_c_1_1_l_e_a_p___r_e_c_o_r_d_i_n_g___s_t_a_t_u_s">LeapInternal.LeapC.LEAP_RECORDING_STATUS</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___t_e_l_e_m_e_t_r_y___d_a_t_a">LeapInternal.LEAP_TELEMETRY_DATA</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___t_i_p">LeapInternal.LEAP_TIP</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___t_r_a_c_k_i_n_g___e_v_e_n_t">LeapInternal.LEAP_TRACKING_EVENT</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___v_a_r_i_a_n_t___r_e_f___t_y_p_e">LeapInternal.LEAP_VARIANT_REF_TYPE</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___v_a_r_i_a_n_t___v_a_l_u_e___t_y_p_e">LeapInternal.LEAP_VARIANT_VALUE_TYPE</link><link linkend="_struct_leap_internal_1_1_l_e_a_p___v_e_c_t_o_r">LeapInternal.LEAP_VECTOR</link><link linkend="_class_leap_internal_1_1_leap_c">LeapInternal.LeapC</link><link linkend="_class_leap_camera_script">LeapCameraScript</link>
<para>This class was never used </para>
<link linkend="_class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_stress_tests">Leap.LeapCSharp.Tests.LeapCStressTests</link><link linkend="_class_leap_1_1_leap_c_sharp_1_1_tests_1_1_leap_c_tests">Leap.LeapCSharp.Tests.LeapCTests</link><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space">Leap.Unity.Space.LeapCylindricalSpace</link><link linkend="_class_leap_1_1_unity_1_1_leap_image_retriever_1_1_leap_distortion_data">Leap.Unity.LeapImageRetriever.LeapDistortionData</link><link linkend="_class_leap_1_1_leap_event_args">Leap.LeapEventArgs</link>
<para>A generic object with no arguments beyond the event type </para>
<link linkend="_class_leap_1_1_unity_1_1_leap_eye_dislocator">Leap.Unity.LeapEyeDislocator</link>
<para>Moves the camera to each eye position on pre-render. Only necessary for image pass-through (IR viewer) scenarios </para>
<link linkend="_class_leap_1_1_unity_1_1_leap_eye_dislocator_editor">Leap.Unity.LeapEyeDislocatorEditor</link><link linkend="_class_leap_1_1_unity_1_1_leap_image_retriever">Leap.Unity.LeapImageRetriever</link>
<para>Acquires images from a <link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link> and uploads image data as shader global data for use by any shaders that render those images </para>
<link linkend="_class_leap_1_1_unity_1_1_leap_image_retriever_editor">Leap.Unity.LeapImageRetrieverEditor</link><link linkend="_class_leap_1_1_unity_1_1_leap_preferences">Leap.Unity.LeapPreferences</link>
<para>This attribute is used to add items to the <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Motion preferences window. This allows each module to define their own preferences and still have them all show up under the same window </para>
<link linkend="_class_leap_1_1_unity_1_1_leap_project_check_attribute">Leap.Unity.LeapProjectCheckAttribute</link>
<para>Add this attribute to a settings check. This method will be called often while the <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Motion <link linkend="_namespace_leap_1_1_unity">Unity</link> Window is open, so it should be as light-weight as possible! If you need to do a heavy check that involves scanning the current scene for example, you should gate the check behind a button </para>
<link linkend="_class_leap_1_1_unity_1_1_leap_provider">Leap.Unity.LeapProvider</link>
<para>Provides <link linkend="_class_leap_1_1_frame">Frame</link> object data to the <link linkend="_namespace_leap_1_1_unity">Unity</link> application by firing events as soon as <link linkend="_class_leap_1_1_frame">Frame</link> data is available. Frames contain all currently tracked Hands in view of the <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Motion <link linkend="_class_leap_1_1_controller">Controller</link> </para>
<link linkend="_struct_leap_1_1_leap_quaternion">Leap.LeapQuaternion</link>
<para>The <link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> struct represents a rotation in three-dimensional space </para>
<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space">Leap.Unity.Space.LeapRadialSpace</link><link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">Leap.Unity.LeapServiceProvider</link>
<para>The <link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link> provides tracked <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> <link linkend="_class_leap_1_1_hand">Hand</link> data and images from the device via the <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> service running on the client machine </para>
<link linkend="_class_leap_1_1_unity_1_1_leap_service_provider_editor">Leap.Unity.LeapServiceProviderEditor</link><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space">Leap.Unity.Space.LeapSpace</link><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor">Leap.Unity.Space.LeapSpaceAnchor</link><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space">Leap.Unity.Space.LeapSphericalSpace</link><link linkend="_class_leap_1_1_unity_1_1_leap_test_provider">Leap.Unity.LeapTestProvider</link><link linkend="_class_leap_1_1_unity_1_1_leap_image_retriever_1_1_leap_texture_data">Leap.Unity.LeapImageRetriever.LeapTextureData</link><link linkend="_struct_leap_1_1_leap_transform">Leap.LeapTransform</link>
<para>The <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> class represents a transform in three dimensional space </para>
<link linkend="_class_leap_1_1_unity_1_1_leap_unity_window">Leap.Unity.LeapUnityWindow</link><link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider">Leap.Unity.LeapXRServiceProvider</link>
<para>The <link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider">LeapXRServiceProvider</link> expands on the standard <link linkend="_class_leap_1_1_unity_1_1_leap_service_provider">LeapServiceProvider</link> to account for the offset of the <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> device with respect to the attached HMD and warp tracked hand positions based on the motion of the headset to account for the differing latencies of the two tracking systems </para>
<link linkend="_class_leap_1_1_unity_1_1_leap_x_r_service_provider_editor">Leap.Unity.LeapXRServiceProviderEditor</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_animation">Valve.VR.InteractionSystem.LinearAnimation</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_animator">Valve.VR.InteractionSystem.LinearAnimator</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_audio_pitch">Valve.VR.InteractionSystem.LinearAudioPitch</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_blendshape">Valve.VR.InteractionSystem.LinearBlendshape</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_displacement">Valve.VR.InteractionSystem.LinearDisplacement</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_drive">Valve.VR.InteractionSystem.LinearDrive</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_linear_mapping">Valve.VR.InteractionSystem.LinearMapping</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_linear_reference_spawner">Leap.Unity.Examples.LinearReferenceSpawner</link>
<para>This script keeps a GameObject in front of the ship, off to the side a bit. The skybox cannot provide a frame of reference for the linear motion of the ship, so the spawned object provides one instead </para>
<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_linear_speed_text_behaviour">Leap.Unity.Examples.LinearSpeedTextBehaviour</link><link linkend="_class_t_m_pro_1_1_t_m_p___settings_1_1_line_breaking_table">TMPro.TMP_Settings.LineBreakingTable</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_list_and_array_extension_tests">Leap.Unity.Tests.ListAndArrayExtensionTests</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_loading_spinner">UnityEditor.PackageManager.UI.LoadingSpinner</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_loading_spinner_factory">UnityEditor.PackageManager.UI.LoadingSpinnerFactory</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_lock_to_point">Valve.VR.InteractionSystem.Sample.LockToPoint</link><link linkend="_class_leap_1_1_log_event_args">Leap.LogEventArgs</link>
<para>Dispatched when loggable events are generated by the service and the service connection code </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_longbow">Valve.VR.InteractionSystem.Longbow</link><link linkend="_struct_t_m_pro_1_1_material_reference">TMPro.MaterialReference</link><link linkend="_class_t_m_pro_1_1_material_reference_manager">TMPro.MaterialReferenceManager</link><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_material_selector">Leap.Unity.Leap.Unity.Animation.Internal.MaterialSelector</link><link linkend="_struct_leap_1_1_matrix">Leap.Matrix</link>
<para>The <link linkend="_struct_leap_1_1_matrix">Matrix</link> struct represents a transformation matrix </para>
<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_max_value">Leap.Unity.Attributes.MaxValue</link><link linkend="_struct_leap_1_1_unity_1_1_maybe">Leap.Unity.Maybe&lt; T &gt;</link>
<para>A struct that represents a value that could or could not exist. Unlike the built-int nullable types, you are unable to access the value unless it does exist, and will never recieve a null value </para>
<link linkend="_struct_t_m_pro_1_1_mesh___extents">TMPro.Mesh_Extents</link><link linkend="_class_leap_1_1_unity_1_1_min_heap">Leap.Unity.MinHeap&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_min_heap_test">Leap.Unity.Tests.MinHeapTest</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_min_max">Leap.Unity.Attributes.MinMax</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_min_value">Leap.Unity.Attributes.MinValue</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_mock_add_operation">UnityEditor.PackageManager.UI.Tests.MockAddOperation</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_mock_list_operation">UnityEditor.PackageManager.UI.Tests.MockListOperation</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_mock_operation">UnityEditor.PackageManager.UI.Tests.MockOperation</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_mock_operation_factory">UnityEditor.PackageManager.UI.Tests.MockOperationFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_mock_remove_operation">UnityEditor.PackageManager.UI.Tests.MockRemoveOperation</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_mock_search_operation">UnityEditor.PackageManager.UI.Tests.MockSearchOperation</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_modal_throwable">Valve.VR.InteractionSystem.ModalThrowable</link><link linkend="_class_leap_1_1_unity_1_1_hand_model_manager_1_1_model_group">Leap.Unity.HandModelManager.ModelGroup</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_examples_1_1_move_pose_example">Leap.Unity.Interaction.Examples.MovePoseExample</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList&lt; BaseType, A, B, C, D, E, F, G, H &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList&lt; BaseType, A, B &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList&lt; BaseType, A, B, C &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList&lt; BaseType, A, B, C, D &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList&lt; BaseType, A, B, C, D, E &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList&lt; BaseType, A, B, C, D, E, F &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList&lt; BaseType, A, B, C, D, E, F, G &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list">Leap.Unity.MultiTypedList&lt; BaseType &gt;</link>
<para>Represents an ordered collection of objects of type BaseType </para>
<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_list_tests">Leap.Unity.Tests.MultiTypedListTests</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_list_util">Leap.Unity.MultiTypedListUtil</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">Leap.Unity.MultiTypedReference&lt; BaseType &gt;</link>
<para>Represents a single reference to a value of type BaseType </para>
<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">Leap.Unity.MultiTypedReference&lt; BaseType, A, B &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">Leap.Unity.MultiTypedReference&lt; BaseType, A, B, C, D &gt;</link><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">Leap.Unity.MultiTypedReference&lt; BaseType, A, B, C &gt;</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_multi_typed_reference_tests">Leap.Unity.Tests.MultiTypedReferenceTests</link><link linkend="_struct_leap_1_1_unity_1_1_maybe_1_1_none_type">Leap.Unity.Maybe.NoneType</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_non_kinematic_grasped_movement">Leap.Unity.Interaction.NonKinematicGraspedMovement</link>
<para>This implementation of <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_grasped_movement_handler">IGraspedMovementHandler</link> moves an interaction object to its target position and rotation by setting its rigidbody&apos;s velocity and angular velocity such that it will reach the target position and rotation on the next physics update </para>
<link linkend="_struct_valve_1_1_v_r_1_1_notification_bitmap__t">Valve.VR.NotificationBitmap_t</link><link linkend="_class_leap_1_1_leap_c_sharp_1_1_tests_1_1_object_equality">Leap.LeapCSharp.Tests.ObjectEquality</link><link linkend="_class_leap_1_1_unity_1_1_old_rig_hierarchy_1_1_old_camera_data">Leap.Unity.OldRigHierarchy.OldCameraData</link>
<para>Old camera objects that weren&apos;t modified at all would have had a <link linkend="_class_leap_1_1_unity_1_1_leap_eye_dislocator">LeapEyeDislocator</link> (formerly LeapVRCameraControl), a Camera component, and an <link linkend="_class_leap_1_1_unity_1_1_enable_depth_buffer">EnableDepthBuffer</link> component </para>
<link linkend="_class_leap_1_1_unity_1_1_old_rig_hierarchy_1_1_old_leap_hand_controller_data">Leap.Unity.OldRigHierarchy.OldLeapHandControllerData</link><link linkend="_class_leap_1_1_unity_1_1_old_rig_hierarchy_1_1_old_leap_space_data">Leap.Unity.OldRigHierarchy.OldLeapSpaceData</link><link linkend="_class_leap_1_1_unity_1_1_old_rig_hierarchy">Leap.Unity.OldRigHierarchy</link>
<para>Description of an old <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> VR rig from before Core version 4.4 </para>
<link linkend="_class_t_m_pro_1_1_t_m_p___input_field_1_1_on_change_event">TMPro.TMP_InputField.OnChangeEvent</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_on_editor_change_attribute">Leap.Unity.Attributes.OnEditorChangeAttribute</link>
<para>Use the OnChange attribute to recieve a callback whenever a field is changed. The callback can be in the form of: </para>
<link linkend="_class_valve_1_1_v_r_1_1_open_v_r">Valve.VR.OpenVR</link><link linkend="_class_valve_1_1_v_r_1_1_open_v_r_interop">Valve.VR.OpenVRInterop</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_operation_signal">UnityEditor.PackageManager.UI.OperationSignal&lt; T &gt;</link><link linkend="_class_t_m_pro_1_1_t_m_p___dropdown_1_1_option_data">TMPro.TMP_Dropdown.OptionData</link><link linkend="_class_t_m_pro_1_1_t_m_p___dropdown_1_1_option_data_list">TMPro.TMP_Dropdown.OptionDataList</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package">UnityEditor.PackageManager.UI.Package</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_add_from_url_field">UnityEditor.PackageManager.UI.PackageAddFromUrlField</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_add_from_url_field_factory">UnityEditor.PackageManager.UI.PackageAddFromUrlFieldFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_asset_postprocessor">UnityEditor.PackageManager.UI.PackageAssetPostprocessor</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_base_tests">UnityEditor.PackageManager.UI.Tests.PackageBaseTests</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_collection">UnityEditor.PackageManager.UI.PackageCollection</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_collection_tests">UnityEditor.PackageManager.UI.Tests.PackageCollectionTests</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_details">UnityEditor.PackageManager.UI.PackageDetails</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_details_factory">UnityEditor.PackageManager.UI.PackageDetailsFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_details_tests">UnityEditor.PackageManager.UI.Tests.PackageDetailsTests</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_error">UnityEditor.PackageManager.UI.PackageError</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_group">UnityEditor.PackageManager.UI.PackageGroup</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_group_factory">UnityEditor.PackageManager.UI.PackageGroupFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_info">UnityEditor.PackageManager.UI.PackageInfo</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_info_tests">UnityEditor.PackageManager.UI.Tests.PackageInfoTests</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_item">UnityEditor.PackageManager.UI.PackageItem</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_item_factory">UnityEditor.PackageManager.UI.PackageItemFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_json_helper">UnityEditor.PackageManager.UI.PackageJsonHelper</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_list">UnityEditor.PackageManager.UI.PackageList</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_list_factory">UnityEditor.PackageManager.UI.PackageListFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_manager_toolbar">UnityEditor.PackageManager.UI.PackageManagerToolbar</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_manager_window">UnityEditor.PackageManager.UI.PackageManagerWindow</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_manager_window_tests">UnityEditor.PackageManager.UI.Tests.PackageManagerWindowTests</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_mananger_toolbar_factory">UnityEditor.PackageManager.UI.PackageManangerToolbarFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_search_filter">UnityEditor.PackageManager.UI.PackageSearchFilter</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests">UnityEditor.PackageManager.UI.Tests.PackageSearchTests</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_search_toolbar">UnityEditor.PackageManager.UI.PackageSearchToolbar</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_search_toolbar_factory">UnityEditor.PackageManager.UI.PackageSearchToolbarFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_sets">UnityEditor.PackageManager.UI.Tests.PackageSets</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_status_bar">UnityEditor.PackageManager.UI.PackageStatusBar</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package_status_bar_factory">UnityEditor.PackageManager.UI.PackageStatusBarFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_tests">UnityEditor.PackageManager.UI.Tests.PackageTests</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_paged_list_view">UnityEditor.Collaboration.PagedListView</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_pager_element">UnityEditor.Collaboration.PagerElement</link><link linkend="_class_leap_1_1_unity_1_1_palm_direction_detector">Leap.Unity.PalmDirectionDetector</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_physics_callbacks">Leap.Unity.Interaction.PhysicsCallbacks</link><link linkend="_class_leap_1_1_unity_1_1_pinch_detector">Leap.Unity.PinchDetector</link>
<para>A basic utility class to aid in creating pinch based actions. Once linked with a <link linkend="_class_leap_1_1_unity_1_1_hand_model_base">HandModelBase</link>, it can be used to detect pinch gestures that the hand makes </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_planting">Valve.VR.InteractionSystem.Sample.Planting</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_player">Valve.VR.InteractionSystem.Player</link><link linkend="_class_player_controller">PlayerController</link>
<para>This class takes care of the player movement and shooting of bullets </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_play_sound">Valve.VR.InteractionSystem.PlaySound</link><link linkend="_struct_valve_1_1_v_r_1_1_extras_1_1_pointer_event_args">Valve.VR.Extras.PointerEventArgs</link><link linkend="_struct_leap_1_1_point_mapping">Leap.PointMapping</link><link linkend="_class_leap_1_1_point_mapping_change_event_args">Leap.PointMappingChangeEventArgs</link>
<para>Dispatched when point mapping change events are generated by the service </para>
<link linkend="_class_leap_1_1_policy_event_args">Leap.PolicyEventArgs</link>
<para>Dispatched when a policy change is complete </para>
<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_popup_field">UnityEditor.PackageManager.UI.PopupField&lt; T &gt;</link><link linkend="_struct_leap_1_1_unity_1_1_pose">Leap.Unity.Pose</link>
<para>A position and rotation. You can multiply two poses; this acts like Matrix4x4 multiplication, but Poses always have unit scale </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___poser_1_1_pose_blending_behaviour">Valve.VR.SteamVR_Skeleton_Poser.PoseBlendingBehaviour</link>
<para>A filter applied to the base pose. Blends to a secondary pose by a certain weight. Can be masked per-finger </para>
<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_kabsch_grasped_pose_1_1_pose_point_collection">Leap.Unity.Interaction.KabschGraspedPose.PosePointCollection</link><link linkend="_class_leap_1_1_unity_1_1_post_process_provider">Leap.Unity.PostProcessProvider</link><link linkend="_class_leap_1_1_unity_1_1_post_process_provider_editor">Leap.Unity.PostProcessProviderEditor</link><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_operator_extensions_1_1_prev_pair">Leap.Unity.Query.QueryOperatorExtensions.PrevPair&lt; T &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_procedural_hats">Valve.VR.InteractionSystem.Sample.ProceduralHats</link><link linkend="_class_leap_1_1_unity_1_1_produce_consume_buffer">Leap.Unity.ProduceConsumeBuffer&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_produce_consume_buffer_test">Leap.Unity.Tests.ProduceConsumeBufferTest</link><link linkend="_struct_leap_1_1_unity_1_1_profiler_sample">Leap.Unity.ProfilerSample</link>
<para>A utility struct for ease of use when you want to wrap a piece of code in a Profiler.BeginSample/EndSample. Usage: </para>
<link linkend="_class_leap_1_1_unity_1_1_progress_bar">Leap.Unity.ProgressBar</link>
<para>This class allows you to easily give feedback of an action as it completes </para>
<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider">Leap.Unity.Examples.ProjectionPostProcessProvider</link><link linkend="_class_leap_1_1_unity_1_1_proximity_detector">Leap.Unity.ProximityDetector</link><link linkend="_class_leap_1_1_unity_1_1_proximity_event">Leap.Unity.ProximityEvent</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_quaternion_interpolator_base">Leap.Unity.Animation.Internal.QuaternionInterpolatorBase&lt; ObjType &gt;</link><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Leap.Unity.Query.Query&lt; T &gt;</link>
<para>A <link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link> object is a type of immutable ordered collection of elements that can be used to perform useful queries. These queries are very similar to LINQ style queries, providing useful methods such as Where, Select, Concat, etc... </para>
<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_query_tests_1_1_query_arg">Leap.Unity.Tests.QueryTests.QueryArg</link><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">Leap.Unity.Query.Query&lt; T &gt;.QuerySlice</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_query_tests">Leap.Unity.Tests.QueryTests</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_quick_button_attribute">Leap.Unity.Attributes.QuickButtonAttribute</link><link linkend="_struct_leap_1_1_unity_1_1_readonly_hash_set">Leap.Unity.ReadonlyHashSet&lt; T &gt;</link>
<para>A simple wrapper around HashSet to provide readonly access. Useful when you want to return a HashSet to someone but you want to make sure they don&apos;t muck it up! </para>
<link linkend="_struct_leap_1_1_unity_1_1_readonly_list">Leap.Unity.ReadonlyList&lt; T &gt;</link>
<para>A simple wrapper around List to provide readonly access. Useful when you want to return a list to someone but you want to make sure they don&apos;t muck it up! </para>
<link linkend="_struct_leap_1_1_unity_1_1_readonly_slice">Leap.Unity.ReadonlySlice&lt; T &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_render_model">Valve.VR.InteractionSystem.RenderModel</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model_1_1_render_model">Valve.VR.SteamVR_RenderModel.RenderModel</link><link linkend="_struct_valve_1_1_v_r_1_1_render_model___component_state__t">Valve.VR.RenderModel_ComponentState_t</link><link linkend="_struct_valve_1_1_v_r_1_1_render_model___controller_mode___state__t">Valve.VR.RenderModel_ControllerMode_State_t</link><link linkend="_struct_valve_1_1_v_r_1_1_render_model__t">Valve.VR.RenderModel_t</link><link linkend="_struct_valve_1_1_v_r_1_1_render_model__t___packed">Valve.VR.RenderModel_t_Packed</link><link linkend="_struct_valve_1_1_v_r_1_1_render_model___texture_map__t">Valve.VR.RenderModel_TextureMap_t</link><link linkend="_struct_valve_1_1_v_r_1_1_render_model___texture_map__t___packed">Valve.VR.RenderModel_TextureMap_t_Packed</link><link linkend="_struct_valve_1_1_v_r_1_1_render_model___vertex__t">Valve.VR.RenderModel_Vertex_t</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_render_model_changer_u_i">Valve.VR.InteractionSystem.Sample.RenderModelChangerUI</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model_1_1_render_model_interface_holder">Valve.VR.SteamVR_RenderModel.RenderModelInterfaceHolder</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_render_wire_sphere">Leap.Unity.Examples.RenderWireSphere</link><link linkend="_struct_t_m_pro_1_1_t_m_p___default_controls_1_1_resources">TMPro.TMP_DefaultControls.Resources</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_custom_skeleton_helper_1_1_retargetable">Valve.VR.InteractionSystem.Sample.CustomSkeletonHelper.Retargetable</link><link linkend="_class_leap_1_1_unity_1_1_rigged_finger">Leap.Unity.RiggedFinger</link>
<para>Manages the position and orientation of the bones in a model rigged for skeletal animation </para>
<link linkend="_class_leap_1_1_unity_1_1_rigged_hand">Leap.Unity.RiggedHand</link><link linkend="_class_leap_1_1_unity_1_1_rigid_finger">Leap.Unity.RigidFinger</link><link linkend="_class_leap_1_1_unity_1_1_rigid_hand">Leap.Unity.RigidHand</link><link linkend="_struct_valve_1_1_v_r_1_1_steam_v_r___utils_1_1_rigid_transform">Valve.VR.SteamVR_Utils.RigidTransform</link><link linkend="_class_leap_1_1_unity_1_1_ring_buffer">Leap.Unity.RingBuffer&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_collider_gizmos">Leap.Unity.RuntimeGizmos.RuntimeColliderGizmos</link><link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer">Leap.Unity.RuntimeGizmos.RuntimeGizmoDrawer</link><link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_manager">Leap.Unity.RuntimeGizmos.RuntimeGizmoManager</link><link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_toggle">Leap.Unity.RuntimeGizmos.RuntimeGizmoToggle</link>
<para>This class controls the display of all the runtime gizmos that are either attatched to this gameObject, or a child of this gameObject. Enable this component to allow the gizmos to be drawn, and disable it to hide them </para>
<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_run_time_only_attribute">Leap.Unity.Attributes.RunTimeOnlyAttribute</link><link linkend="_class_ditzel_games_1_1_fast_i_k_1_1_sample_procedual_animation">DitzelGames.FastIK.SampleProcedualAnimation</link><link linkend="_class_ditzel_games_1_1_fast_i_k_1_1_sample_sin_mover">DitzelGames.FastIK.SampleSinMover</link><link linkend="_class_leap_1_1_unity_1_1_s_dictionary_attribute">Leap.Unity.SDictionaryAttribute</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_see_thru">Valve.VR.InteractionSystem.SeeThru</link><link linkend="_class_t_m_pro_1_1_t_m_p___input_field_1_1_selection_event">TMPro.TMP_InputField.SelectionEvent</link><link linkend="_class_semver_1_1_sem_version">Semver.SemVersion</link>
<para>A semantic version implementation. Conforms to v2.0.0 of <link xlink:href="http://semver.org/">http://semver.org/</link> </para>
<link linkend="_class_leap_1_1_unity_1_1_serializable_dictionary">Leap.Unity.SerializableDictionary&lt; TKey, TValue &gt;</link>
<para>In order to have this class be serialized, you will always need to create your own non-generic version specific to your needs. This is the same workflow that exists for using the UnityEvent class as well </para>
<link linkend="_class_leap_1_1_unity_1_1_serializable_dictionary_base">Leap.Unity.SerializableDictionaryBase</link><link linkend="_class_leap_1_1_unity_1_1_serializable_dictionary_editor">Leap.Unity.SerializableDictionaryEditor</link><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set">Leap.Unity.SerializableHashSet&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_base">Leap.Unity.SerializableHashSetBase</link><link linkend="_class_leap_1_1_unity_1_1_serializable_hash_set_editor">Leap.Unity.SerializableHashSetEditor</link><link linkend="_struct_leap_1_1_unity_1_1_serializable_type">Leap.Unity.SerializableType</link><link linkend="_class_leap_1_1_set_config_response_event_args">Leap.SetConfigResponseEventArgs</link>
<para>Dispatched when a configuration change is completed </para>
<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i_1_1_shader_feature">TMPro.EditorUtilities.TMP_BaseShaderGUI.ShaderFeature</link>
<para>Representation of a #pragma shader_feature </para>
<link linkend="_class_leap_1_1_unity_1_1_s_hash_set_attribute">Leap.Unity.SHashSetAttribute</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_anchor_feedback">Leap.Unity.Examples.SimpleAnchorFeedback</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_facing_camera_callbacks">Leap.Unity.Examples.SimpleFacingCameraCallbacks</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_interaction_emission">Leap.Unity.Examples.SimpleInteractionEmission</link><link linkend="_class_simple_interaction_glow">SimpleInteractionGlow</link>
<para>This simple script changes the color of an InteractionBehaviour as a function of its distance to the palm of the closest hand that is hovering nearby </para>
<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_match_anchor_scale_and_state">Leap.Unity.Examples.SimpleMatchAnchorScaleAndState</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_renderer_util">Leap.Unity.Examples.SimpleRendererUtil</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_scale_util">Leap.Unity.Examples.SimpleScaleUtil</link><link linkend="_class_simple_shoot">SimpleShoot</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_simple_transform_util">Leap.Unity.Examples.SimpleTransformUtil</link><link linkend="_struct_leap_1_1_unity_1_1_single_layer">Leap.Unity.SingleLayer</link>
<para>An object you can use to represent a single <link linkend="_namespace_leap_1_1_unity">Unity</link> layer as a dropdown in the inspector. Can be converted back and forth between the integer representation <link linkend="_namespace_leap_1_1_unity">Unity</link> usually uses in its own methods </para>
<link linkend="_class_leap_1_1_unity_1_1_single_layer_editor">Leap.Unity.SingleLayerEditor</link><link linkend="_class_leap_1_1_unity_1_1_skeletal_finger">Leap.Unity.SkeletalFinger</link><link linkend="_class_leap_1_1_unity_1_1_skeletal_hand">Leap.Unity.SkeletalHand</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___poser_1_1_skeleton_blendable_pose">Valve.VR.SteamVR_Skeleton_Poser.SkeletonBlendablePose</link>
<para>A <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___poser_1_1_skeleton_blendable_pose">SkeletonBlendablePose</link> holds a reference to a Skeleton_Pose scriptableObject, and also contains some helper functions. Also handles pose-specific animation like additive finger motion </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_skeleton_u_i_options">Valve.VR.InteractionSystem.Sample.SkeletonUIOptions</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sleep_on_awake">Valve.VR.InteractionSystem.SleepOnAwake</link><link linkend="_struct_leap_1_1_unity_1_1_slice">Leap.Unity.Slice&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_sliding_max">Leap.Unity.SlidingMax</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_sliding_max_test">Leap.Unity.Tests.SlidingMaxTest</link><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_sliding_window_throw">Leap.Unity.Interaction.SlidingWindowThrow</link>
<para>The sliding window throw handler implements a simple heuristic that provides a reasonably accurate measure of the user&apos;s intended &quot;throw direction&quot; for a physical object. It is used as the default implementation of an <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Behaviour&apos;s throw handler </para>
<link linkend="_class_leap_1_1_unity_1_1_smoothed_float">Leap.Unity.SmoothedFloat</link>
<para>Time-step independent exponential smoothing </para>
<link linkend="_class_leap_1_1_unity_1_1_smoothed_quaternion">Leap.Unity.SmoothedQuaternion</link>
<para>Time-step independent exponential smoothing </para>
<link linkend="_class_leap_1_1_unity_1_1_smoothed_vector3">Leap.Unity.SmoothedVector3</link>
<para>Time-step independent exponential smoothing </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_bow_click">Valve.VR.InteractionSystem.SoundBowClick</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_deparent">Valve.VR.InteractionSystem.SoundDeparent</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sound_play_oneshot">Valve.VR.InteractionSystem.SoundPlayOneshot</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship">Leap.Unity.Examples.Spaceship</link>
<para>The spaceship in this example is a kinematic rigidbody with a force API, but having a rigidbody on your <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager&apos;s reference frame is entirely optional. Any moving transform can provide a frame of reference for the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager and encompassing interfaces </para>
<link linkend="_struct_valve_1_1_v_r_1_1_spatial_anchor_pose__t">Valve.VR.SpatialAnchorPose_t</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_spawn_and_attach_after_controller_is_tracking">Valve.VR.InteractionSystem.SpawnAndAttachAfterControllerIsTracking</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_spawn_and_attach_to_hand">Valve.VR.InteractionSystem.SpawnAndAttachToHand</link><link linkend="_struct_t_m_pro_1_1_sprite_asset_utilities_1_1_texture_packer_1_1_sprite_data">TMPro.SpriteAssetUtilities.TexturePacker.SpriteData</link><link linkend="_class_t_m_pro_1_1_sprite_asset_utilities_1_1_texture_packer_1_1_sprite_data_object">TMPro.SpriteAssetUtilities.TexturePacker.SpriteDataObject</link><link linkend="_struct_t_m_pro_1_1_sprite_asset_utilities_1_1_texture_packer_1_1_sprite_frame">TMPro.SpriteAssetUtilities.TexturePacker.SpriteFrame</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_sprite_info_drawer">TMPro.EditorUtilities.SpriteInfoDrawer</link><link linkend="_struct_t_m_pro_1_1_sprite_asset_utilities_1_1_texture_packer_1_1_sprite_size">TMPro.SpriteAssetUtilities.TexturePacker.SpriteSize</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_squishy_toy">Valve.VR.InteractionSystem.Sample.SquishyToy</link><link linkend="_class_leap_1_1_unity_1_1_stationary_test_leap_provider">Leap.Unity.StationaryTestLeapProvider</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_status_view">UnityEditor.Collaboration.StatusView</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r">Valve.VR.SteamVR</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action">Valve.VR.SteamVR_Action&lt; SourceMap, SourceElement &gt;</link>
<para>This is the base level action for <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r">SteamVR</link> Input Actions. All <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___in">SteamVR_Action_In</link> and <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___out">SteamVR_Action_Out</link> inherit from this. Initializes the ulong handle for the action, has some helper references that all actions will have </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___boolean">Valve.VR.SteamVR_Action_Boolean</link>
<para>Boolean actions are either true or false. There are a variety of helper events included that will fire for the given input source. They&apos;re prefixed with &quot;on&quot; </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source">Valve.VR.SteamVR_Action_Boolean_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___boolean___source___map">Valve.VR.SteamVR_Action_Boolean_Source_Map</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___in">Valve.VR.SteamVR_Action_In&lt; SourceMap, SourceElement &gt;</link>
<para>In actions are all input type actions. Boolean, Single, Vector2, Vector3, Skeleton, and Pose </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___in___source">Valve.VR.SteamVR_Action_In_Source</link>
<para>In actions are all input type actions. Boolean, Single, Vector2, Vector3, Skeleton, and Pose. This class fires onChange and onUpdate events </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___in___source___map">Valve.VR.SteamVR_Action_In_Source_Map&lt; SourceElement &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___out">Valve.VR.SteamVR_Action_Out&lt; SourceMap, SourceElement &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___out___source">Valve.VR.SteamVR_Action_Out_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___pose">Valve.VR.SteamVR_Action_Pose</link>
<para>Pose actions represent a position, rotation, and velocities inside the tracked space. <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r">SteamVR</link> keeps a log of past poses so you can retrieve old poses with GetPoseAtTimeOffset or GetVelocitiesAtTimeOffset. You can also pass in times in the future to these methods for <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r">SteamVR</link>&apos;s best prediction of where the pose will be at that time </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___pose___base">Valve.VR.SteamVR_Action_Pose_Base&lt; SourceMap, SourceElement &gt;</link>
<para>The base pose action (pose and skeleton inherit from this) </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source">Valve.VR.SteamVR_Action_Pose_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___pose___source___map">Valve.VR.SteamVR_Action_Pose_Source_Map&lt; Source &gt;</link>
<para>Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___single">Valve.VR.SteamVR_Action_Single</link>
<para>An analog action with a value generally from 0 to 1. Also provides a delta since the last update </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___single___source">Valve.VR.SteamVR_Action_Single_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___single___source___map">Valve.VR.SteamVR_Action_Single_Source_Map</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton">Valve.VR.SteamVR_Action_Skeleton</link>
<para>Skeleton Actions are our best approximation of where your hands are while holding vr controllers and pressing buttons. We give you 31 bones to help you animate hand models. For more information check out this blog post: <link xlink:href="https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068">https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068</link> </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source">Valve.VR.SteamVR_Action_Skeleton_Source</link>
<para>Skeleton Actions are our best approximation of where your hands are while holding vr controllers and pressing buttons. We give you 31 bones to help you animate hand models. For more information check out this blog post: <link xlink:href="https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068">https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068</link> </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___skeleton___source___map">Valve.VR.SteamVR_Action_Skeleton_Source_Map</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___source">Valve.VR.SteamVR_Action_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___source___map">Valve.VR.SteamVR_Action_Source_Map&lt; SourceElement &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vector2">Valve.VR.SteamVR_Action_Vector2</link>
<para>An analog action with two values generally from -1 to 1. Also provides a delta since the last update </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vector2___source">Valve.VR.SteamVR_Action_Vector2_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vector2___source___map">Valve.VR.SteamVR_Action_Vector2_Source_Map</link>
<para>Boolean actions are either true or false. There is an onStateUp and onStateDown event for the rising and falling edge </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vector3">Valve.VR.SteamVR_Action_Vector3</link>
<para>An analog action with three values generally from -1 to 1. Also provides a delta since the last update </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vector3___source">Valve.VR.SteamVR_Action_Vector3_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vector3___source___map">Valve.VR.SteamVR_Action_Vector3_Source_Map</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vibration">Valve.VR.SteamVR_Action_Vibration</link>
<para>Vibration actions are used to trigger haptic feedback in vr controllers </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source">Valve.VR.SteamVR_Action_Vibration_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___vibration___source___map">Valve.VR.SteamVR_Action_Vibration_Source_Map</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___actions">Valve.VR.SteamVR_Actions</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action_set">Valve.VR.SteamVR_ActionSet</link>
<para>Action sets are logical groupings of actions. Multiple sets can be active at one time </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action_set___data">Valve.VR.SteamVR_ActionSet_Data</link>
<para>Action sets are logical groupings of actions. Multiple sets can be active at one time </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___activate_action_set_on_load">Valve.VR.SteamVR_ActivateActionSetOnLoad</link>
<para>Automatically activates an action set on Start() and deactivates the set on OnDestroy(). Optionally deactivating all other sets as well </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___auto_enable_v_r">Valve.VR.SteamVR_AutoEnableVR</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour">Valve.VR.SteamVR_Behaviour</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean">Valve.VR.SteamVR_Behaviour_Boolean</link>
<para>This component simplifies using boolean actions </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___boolean_event">Valve.VR.SteamVR_Behaviour_BooleanEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose">Valve.VR.SteamVR_Behaviour_Pose</link>
<para>This component simplifies the use of Pose actions. Adding it to a gameobject will auto set that transform&apos;s position and rotation every update to match the pose. Advanced velocity estimation is handled through a buffer of the last 30 updates </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___connected_changed_event">Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___device_index_changed_event">Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose___tracking_changed_event">Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose_event">Valve.VR.SteamVR_Behaviour_PoseEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___single">Valve.VR.SteamVR_Behaviour_Single</link>
<para><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___single">SteamVR_Behaviour_Single</link> simplifies the use of single actions. It gives an event to subscribe to for when the action has changed </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___single_event">Valve.VR.SteamVR_Behaviour_SingleEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___skeleton">Valve.VR.SteamVR_Behaviour_Skeleton</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___skeleton___connected_changed_event">Valve.VR.SteamVR_Behaviour_Skeleton_ConnectedChangedEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___skeleton___tracking_changed_event">Valve.VR.SteamVR_Behaviour_Skeleton_TrackingChangedEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___skeleton_custom">Valve.VR.SteamVR_Behaviour_SkeletonCustom</link>
<para>The major difference between this component and the standard <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___skeleton">SteamVR_Behaviour_Skeleton</link> is this one lets you only use the joints you care about. You can set the transforms you&apos;re concerned with and ignore the ones you&apos;re not </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___skeleton_event">Valve.VR.SteamVR_Behaviour_SkeletonEvent</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___vector2">Valve.VR.SteamVR_Behaviour_Vector2</link>
<para>Simplifies the use of the Vector2 action. Provides an onChange event that fires whenever the vector2 changes </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___vector2_event">Valve.VR.SteamVR_Behaviour_Vector2Event</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___vector3">Valve.VR.SteamVR_Behaviour_Vector3</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___vector3_event">Valve.VR.SteamVR_Behaviour_Vector3Event</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___camera">Valve.VR.SteamVR_Camera</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___camera_flip">Valve.VR.SteamVR_CameraFlip</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___camera_mask">Valve.VR.SteamVR_CameraMask</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___copy_example_input_files">Valve.VR.SteamVR_CopyExampleInputFiles</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___ears">Valve.VR.SteamVR_Ears</link><link linkend="_class_steam_v_r___editor">SteamVR_Editor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___external_camera">Valve.VR.SteamVR_ExternalCamera</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___fade">Valve.VR.SteamVR_Fade</link><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___force_steam_v_r_mode">Valve.VR.Extras.SteamVR_ForceSteamVRMode</link>
<para>This is an example class of how to force steamvr initialization. You still need to have vr mode enabled but you can have the top sdk set to None, then this script will force it to <link linkend="_class_valve_1_1_v_r_1_1_open_v_r">OpenVR</link> after a second </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___frustum">Valve.VR.SteamVR_Frustum</link><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___gaze_tracker">Valve.VR.Extras.SteamVR_GazeTracker</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___history_buffer">Valve.VR.SteamVR_HistoryBuffer</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___history_step">Valve.VR.SteamVR_HistoryStep</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___i_k">Valve.VR.SteamVR_IK</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input">Valve.VR.SteamVR_Input</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action___boolean___property_editor">Valve.VR.SteamVR_Input_Action_Boolean_PropertyEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action___generic_property_editor">Valve.VR.SteamVR_Input_Action_GenericPropertyEditor&lt; T &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action___pose___property_editor">Valve.VR.SteamVR_Input_Action_Pose_PropertyEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action___single___property_editor">Valve.VR.SteamVR_Input_Action_Single_PropertyEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action___skeleton___property_editor">Valve.VR.SteamVR_Input_Action_Skeleton_PropertyEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action___vector2___property_editor">Valve.VR.SteamVR_Input_Action_Vector2_PropertyEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action___vector3___property_editor">Valve.VR.SteamVR_Input_Action_Vector3_PropertyEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action___vibration___property_editor">Valve.VR.SteamVR_Input_Action_Vibration_PropertyEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_file">Valve.VR.SteamVR_Input_ActionFile</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_file___action">Valve.VR.SteamVR_Input_ActionFile_Action</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_file___action_set">Valve.VR.SteamVR_Input_ActionFile_ActionSet</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_file___default_binding">Valve.VR.SteamVR_Input_ActionFile_DefaultBinding</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_file___localization_item">Valve.VR.SteamVR_Input_ActionFile_LocalizationItem</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_manifest___manager">Valve.VR.SteamVR_Input_ActionManifest_Manager</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__buggy">Valve.VR.SteamVR_Input_ActionSet_buggy</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__default">Valve.VR.SteamVR_Input_ActionSet_default</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__mixedreality">Valve.VR.SteamVR_Input_ActionSet_mixedreality</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_set__platformer">Valve.VR.SteamVR_Input_ActionSet_platformer</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___action_set_property_editor">Valve.VR.SteamVR_Input_ActionSetPropertyEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file">Valve.VR.SteamVR_Input_BindingFile</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file___action_list">Valve.VR.SteamVR_Input_BindingFile_ActionList</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file___chord">Valve.VR.SteamVR_Input_BindingFile_Chord</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file___haptic">Valve.VR.SteamVR_Input_BindingFile_Haptic</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file___pose">Valve.VR.SteamVR_Input_BindingFile_Pose</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file___skeleton">Valve.VR.SteamVR_Input_BindingFile_Skeleton</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file___source">Valve.VR.SteamVR_Input_BindingFile_Source</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file___source___input">Valve.VR.SteamVR_Input_BindingFile_Source_Input</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___binding_file___source___input___string_dictionary">Valve.VR.SteamVR_Input_BindingFile_Source_Input_StringDictionary</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___create_partial">Valve.VR.SteamVR_Input_CreatePartial</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___editor_window">Valve.VR.SteamVR_Input_EditorWindow</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___generator___names">Valve.VR.SteamVR_Input_Generator_Names</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___live_window">Valve.VR.SteamVR_Input_LiveWindow</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___manifest_file">Valve.VR.SteamVR_Input_ManifestFile</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___manifest_file___application">Valve.VR.SteamVR_Input_ManifestFile_Application</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___manifest_file___application___binding">Valve.VR.SteamVR_Input_ManifestFile_Application_Binding</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___manifest_file___application___binding___controller_types">Valve.VR.SteamVR_Input_ManifestFile_Application_Binding_ControllerTypes</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___manifest_file___application_string">Valve.VR.SteamVR_Input_ManifestFile_ApplicationString</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___post_process_build">Valve.VR.SteamVR_Input_PostProcessBuild</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___settings_editor">Valve.VR.SteamVR_Input_SettingsEditor</link><link linkend="_struct_valve_1_1_v_r_1_1_steam_v_r___input___sources___comparer">Valve.VR.SteamVR_Input_Sources_Comparer</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input___unity___assembly_file___definition">Valve.VR.SteamVR_Input_Unity_AssemblyFile_Definition</link><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___laser_pointer">Valve.VR.Extras.SteamVR_LaserPointer</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___load_level">Valve.VR.SteamVR_LoadLevel</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___menu">Valve.VR.SteamVR_Menu</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___overlay">Valve.VR.SteamVR_Overlay</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___partial_input_bindings">Valve.VR.SteamVR_PartialInputBindings</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___play_area">Valve.VR.SteamVR_PlayArea</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render">Valve.VR.SteamVR_Render</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model">Valve.VR.SteamVR_RenderModel</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___render_model_editor">Valve.VR.SteamVR_RenderModelEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___ring_buffer">Valve.VR.SteamVR_RingBuffer&lt; T &gt;</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___settings">Valve.VR.SteamVR_Settings</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___finger_extension_type_lists">Valve.VR.SteamVR_Skeleton_FingerExtensionTypeLists</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___finger_indexes">Valve.VR.SteamVR_Skeleton_FingerIndexes</link>
<para>The order of the fingers that <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r">SteamVR</link> Skeleton Input outputs </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___finger_splay_indexes">Valve.VR.SteamVR_Skeleton_FingerSplayIndexes</link>
<para>The order of the fingerSplays that <link linkend="_class_valve_1_1_v_r_1_1_steam_v_r">SteamVR</link> Skeleton Input outputs </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___hand_mask">Valve.VR.SteamVR_Skeleton_HandMask</link>
<para>Simple mask for fingers </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___pose">Valve.VR.SteamVR_Skeleton_Pose</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___pose___hand">Valve.VR.SteamVR_Skeleton_Pose_Hand</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___poser">Valve.VR.SteamVR_Skeleton_Poser</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___poser_editor">Valve.VR.SteamVR_Skeleton_PoserEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skeleton___pose_snapshot">Valve.VR.SteamVR_Skeleton_PoseSnapshot</link>
<para>PoseSnapshots hold a skeleton pose for one hand, as well as storing which hand they contain. They have several functions for combining BlendablePoses </para>
<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skybox">Valve.VR.SteamVR_Skybox</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___skybox_editor">Valve.VR.SteamVR_SkyboxEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___spherical_projection">Valve.VR.SteamVR_SphericalProjection</link><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw">Valve.VR.Extras.SteamVR_TestThrow</link><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_tracked_camera">Valve.VR.Extras.SteamVR_TestTrackedCamera</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___tracked_camera">Valve.VR.SteamVR_TrackedCamera</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___tracked_object">Valve.VR.SteamVR_TrackedObject</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___unity_settings_window">Valve.VR.SteamVR_UnitySettingsWindow</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___update">Valve.VR.SteamVR_Update</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___update_modes_editor">Valve.VR.SteamVR_UpdateModesEditor</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___windows___editor___helper">Valve.VR.SteamVR_Windows_Editor_Helper</link><link linkend="_struct_valve_1_1_v_r_1_1_steam_v_r_enum_equality_comparer">Valve.VR.SteamVREnumEqualityComparer&lt; TEnum &gt;</link><link linkend="_class_leap_1_1_unity_1_1_streaming_asset">Leap.Unity.StreamingAsset</link><link linkend="_class_leap_1_1_unity_1_1_streaming_asset_property_drawer">Leap.Unity.StreamingAssetPropertyDrawer</link><link linkend="_class_leap_1_1_unity_1_1_streaming_folder">Leap.Unity.StreamingFolder</link><link linkend="_class_leap_1_1_unity_1_1_streaming_folder_property_drawer">Leap.Unity.StreamingFolderPropertyDrawer</link><link linkend="_class_leap_1_1_leap_c_sharp_1_1_tests_1_1_struct_marshal_tests">Leap.LeapCSharp.Tests.StructMarshalTests</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_style_drawer">TMPro.EditorUtilities.StyleDrawer</link><link linkend="_class_t_m_pro_1_1_t_m_p___input_field_1_1_submit_event">TMPro.TMP_InputField.SubmitEvent</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_swap_grasp_example">Leap.Unity.Examples.SwapGraspExample</link><link linkend="_struct_t_m_pro_1_1_tag_attribute">TMPro.TagAttribute</link>
<para>Structure used to store retrieve the name and hashcode of the font and material </para>
<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_hit_effect">Valve.VR.InteractionSystem.Sample.TargetHitEffect</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_target_measurement">Valve.VR.InteractionSystem.Sample.TargetMeasurement</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_teleport">Valve.VR.InteractionSystem.Teleport</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_teleport_arc">Valve.VR.InteractionSystem.TeleportArc</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_teleport_area">Valve.VR.InteractionSystem.TeleportArea</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_teleport_marker_base">Valve.VR.InteractionSystem.TeleportMarkerBase</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_teleport_point">Valve.VR.InteractionSystem.TeleportPoint</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_query_tests_1_1_test_enumerator">Leap.Unity.Tests.QueryTests.TestEnumerator</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_tests_1_1_test_history_window">UnityEditor.Collaboration.Tests.TestHistoryWindow</link><link linkend="_struct_leap_1_1_leap_c_sharp_1_1_tests_1_1_test_marshaled_struct">Leap.LeapCSharp.Tests.TestMarshaledStruct</link><link linkend="_class_leap_1_1_leap_c_sharp_1_1_tests_1_1_test_object_type">Leap.LeapCSharp.Tests.TestObjectType</link><link linkend="_class_unity_editor_1_1_collaboration_1_1_tests_1_1_test_revisions_service">UnityEditor.Collaboration.Tests.TestRevisionsService</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_text_alignment_drawer">TMPro.EditorUtilities.TextAlignmentDrawer</link><link linkend="_class_t_m_pro_1_1_text_container">TMPro.TextContainer</link><link linkend="_classtextlookout">textlookout</link>
<para>This class take care of the player name to be represented over the player By default it will show the network Id set by the network identity manager , but you have an option to change the name from GUI interface and that will be displayed over the network </para>
<link linkend="_class_t_m_pro_1_1_text_mesh_pro">TMPro.TextMeshPro</link><link linkend="_class_t_m_pro_1_1_text_mesh_pro_u_g_u_i">TMPro.TextMeshProUGUI</link><link linkend="_class_t_m_pro_1_1_t_m_p___input_field_1_1_text_selection_event">TMPro.TMP_InputField.TextSelectionEvent</link><link linkend="_struct_valve_1_1_v_r_1_1_texture__t">Valve.VR.Texture_t</link><link linkend="_class_t_m_pro_1_1_sprite_asset_utilities_1_1_texture_packer">TMPro.SpriteAssetUtilities.TexturePacker</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_threaded_delay">UnityEditor.PackageManager.UI.ThreadedDelay</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_throwable">Valve.VR.InteractionSystem.Throwable</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_custom_skeleton_helper_1_1_thumb">Valve.VR.InteractionSystem.Sample.CustomSkeletonHelper.Thumb</link><link linkend="_class_t_m_pro_1_1_t_m_p___asset">TMPro.TMP_Asset</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_editor_panel">TMPro.EditorUtilities.TMP_BaseEditorPanel</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___base_shader_g_u_i">TMPro.EditorUtilities.TMP_BaseShaderGUI</link>
<para>Base class for TextMesh Pro shader GUIs </para>
<link linkend="_struct_t_m_pro_1_1_t_m_p___basic_xml_tag_stack">TMPro.TMP_BasicXmlTagStack</link>
<para>Structure used to track basic XML tags which are binary (on / off) </para>
<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___bitmap_shader_g_u_i">TMPro.EditorUtilities.TMP_BitmapShaderGUI</link><link linkend="_struct_t_m_pro_1_1_t_m_p___character_info">TMPro.TMP_CharacterInfo</link>
<para>TMP custom data type to represent 32 bit characters </para>
<link linkend="_class_t_m_pro_1_1_t_m_p___color_gradient">TMPro.TMP_ColorGradient</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___color_gradient_editor">TMPro.EditorUtilities.TMP_ColorGradientEditor</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___context_menus">TMPro.EditorUtilities.TMP_ContextMenus</link><link linkend="_class_t_m_pro_1_1_t_m_p___dropdown">TMPro.TMP_Dropdown</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___editor_panel">TMPro.EditorUtilities.TMP_EditorPanel</link><link linkend="_class_t_m_pro_1_1_t_m_p___editor_tests">TMPro.TMP_EditorTests</link><link linkend="_class_t_m_pro_1_1_t_m_p___font_asset">TMPro.TMP_FontAsset</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___font_asset_editor">TMPro.EditorUtilities.TMP_FontAssetEditor</link><link linkend="_struct_t_m_pro_1_1_t_m_p___font_weights">TMPro.TMP_FontWeights</link>
<para>Contains the font asset for the specified font weight styles </para>
<link linkend="_class_t_m_pro_1_1_t_m_p___glyph">TMPro.TMP_Glyph</link><link linkend="_class_t_m_pro_1_1_t_m_p___input_field">TMPro.TMP_InputField</link>
<para>Editable text input field </para>
<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___input_field_editor">TMPro.EditorUtilities.TMP_InputFieldEditor</link><link linkend="_class_t_m_pro_1_1_t_m_p___input_validator">TMPro.TMP_InputValidator</link>
<para>Custom text input validator where user can implement their own custom character validation </para>
<link linkend="_struct_t_m_pro_1_1_t_m_p___line_info">TMPro.TMP_LineInfo</link>
<para>Structure which contains information about the individual lines of text </para>
<link linkend="_struct_t_m_pro_1_1_t_m_p___link_info">TMPro.TMP_LinkInfo</link>
<para>Structure containing information about individual links contained in the text object </para>
<link linkend="_struct_t_m_pro_1_1_t_m_p___mesh_info">TMPro.TMP_MeshInfo</link>
<para>Structure which contains the vertex attributes (geometry) of the text object </para>
<link linkend="_class_t_m_pro_1_1_t_m_p___object_pool">TMPro.TMP_ObjectPool&lt; T &gt;</link><link linkend="_class_t_m_pro_1_1_t_m_p___package_utilities">TMPro.TMP_PackageUtilities</link><link linkend="_struct_t_m_pro_1_1_t_m_p___page_info">TMPro.TMP_PageInfo</link><link linkend="_class_t_m_pro_1_1_t_m_p___post_build_process_handler">TMPro.TMP_PostBuildProcessHandler</link><link linkend="_class_t_m_pro_1_1_t_m_p___project_conversion_utility">TMPro.TMP_ProjectConversionUtility</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___resources_loader">TMPro.EditorUtilities.TMP_ResourcesLoader</link><link linkend="_class_t_m_pro_1_1_t_m_p___runtime_tests">TMPro.TMP_RuntimeTests</link><link linkend="_class_t_m_pro_1_1_t_m_p___scrollbar_event_handler">TMPro.TMP_ScrollbarEventHandler</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___s_d_f_shader_g_u_i">TMPro.EditorUtilities.TMP_SDFShaderGUI</link><link linkend="_class_t_m_pro_1_1_t_m_p___selection_caret">TMPro.TMP_SelectionCaret</link>
<para>A simple component that can be added to a newly created object where inheriting from MaskableGraphic is needed </para>
<link linkend="_class_t_m_pro_1_1_t_m_p___settings">TMPro.TMP_Settings</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___settings_editor">TMPro.EditorUtilities.TMP_SettingsEditor</link><link linkend="_class_t_m_pro_1_1_t_m_p___sprite">TMPro.TMP_Sprite</link><link linkend="_class_t_m_pro_1_1_t_m_p___sprite_animator">TMPro.TMP_SpriteAnimator</link><link linkend="_class_t_m_pro_1_1_t_m_p___sprite_asset">TMPro.TMP_SpriteAsset</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___sprite_asset_editor">TMPro.EditorUtilities.TMP_SpriteAssetEditor</link><link linkend="_class_t_m_pro_1_1_t_m_p___sprite_asset_importer">TMPro.TMP_SpriteAssetImporter</link><link linkend="_struct_t_m_pro_1_1_t_m_p___sprite_info">TMPro.TMP_SpriteInfo</link><link linkend="_class_t_m_pro_1_1_t_m_p___style">TMPro.TMP_Style</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___style_editor">TMPro.EditorUtilities.TMP_StyleEditor</link><link linkend="_class_t_m_pro_1_1_t_m_p___style_sheet">TMPro.TMP_StyleSheet</link><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh">TMPro.TMP_SubMesh</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___sub_mesh___editor">TMPro.EditorUtilities.TMP_SubMesh_Editor</link><link linkend="_class_t_m_pro_1_1_t_m_p___sub_mesh_u_i">TMPro.TMP_SubMeshUI</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___sub_mesh_u_i___editor">TMPro.EditorUtilities.TMP_SubMeshUI_Editor</link><link linkend="_class_t_m_pro_1_1_t_m_p___text">TMPro.TMP_Text</link>
<para>Base class which contains common properties and functions shared between the <link linkend="_class_t_m_pro_1_1_text_mesh_pro">TextMeshPro</link> and <link linkend="_class_t_m_pro_1_1_text_mesh_pro_u_g_u_i">TextMeshProUGUI</link> component </para>
<link linkend="_class_t_m_pro_1_1_t_m_p___text_element">TMPro.TMP_TextElement</link>
<para>Base class for all text elements like characters (glyphs) and sprites </para>
<link linkend="_class_t_m_pro_1_1_t_m_p___text_info">TMPro.TMP_TextInfo</link>
<para>Class which contains information about every element contained within the text object </para>
<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_p___ui_editor_panel">TMPro.EditorUtilities.TMP_UiEditorPanel</link><link linkend="_class_t_m_pro_1_1_t_m_p___update_manager">TMPro.TMP_UpdateManager</link><link linkend="_class_t_m_pro_1_1_t_m_p___update_registry">TMPro.TMP_UpdateRegistry</link>
<para>Class for handling and scheduling text object updates </para>
<link linkend="_struct_t_m_pro_1_1_t_m_p___vertex">TMPro.TMP_Vertex</link><link linkend="_struct_t_m_pro_1_1_t_m_p___word_info">TMPro.TMP_WordInfo</link>
<para>Structure containing information about the individual words contained in the text object </para>
<link linkend="_struct_t_m_pro_1_1_t_m_p___xml_tag_stack">TMPro.TMP_XmlTagStack&lt; T &gt;</link>
<para>Structure used to track XML tags of various types </para>
<link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_pro___font_asset_creator_window">TMPro.EditorUtilities.TMPro_FontAssetCreatorWindow</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_pro___font_plugin">TMPro.EditorUtilities.TMPro_FontPlugin</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_pro___text_container_editor">TMPro.EditorUtilities.TMPro_TextContainerEditor</link><link linkend="_class_t_m_pro_1_1_editor_utilities_1_1_t_m_pro___texture_post_processor">TMPro.EditorUtilities.TMPro_TexturePostProcessor</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1track_cam">Valve.VR.InteractionSystem.Sample.trackCam</link><link linkend="_struct_valve_1_1_v_r_1_1_tracked_device_pose__t">Valve.VR.TrackedDevicePose_t</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1track_obj">Valve.VR.InteractionSystem.Sample.trackObj</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_copy_identity">Leap.Unity.Tests.TransformCopyIdentity</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_copy_translation">Leap.Unity.Tests.TransformCopyTranslation</link><link linkend="_struct_leap_1_1_unity_1_1_transform_history_1_1_transform_data">Leap.Unity.TransformHistory.TransformData</link><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_spherical_space_1_1_transformer">Leap.Unity.Space.LeapSphericalSpace.Transformer</link><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer">Leap.Unity.Space.LeapCylindricalSpace.Transformer</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle">Leap.Unity.Examples.TransformHandle</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_handle_editor">Leap.Unity.Examples.TransformHandleEditor</link><link linkend="_class_leap_1_1_unity_1_1_transform_history">Leap.Unity.TransformHistory</link>
<para>Implements a resample-able transform history </para>
<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_rotation_handle">Leap.Unity.Examples.TransformRotationHandle</link><link linkend="_struct_leap_1_1_unity_1_1_leap_1_1_unity_1_1_animation_1_1_internal_1_1_transform_selector">Leap.Unity.Leap.Unity.Animation.Internal.TransformSelector</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_tool">Leap.Unity.Examples.TransformTool</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_transform_translation_handle">Leap.Unity.Examples.TransformTranslationHandle</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_transform_tween_behaviour">Leap.Unity.Animation.TransformTweenBehaviour</link>
<para>This is a wrapper MonoBehaviour that demonstrates and exposes some of the basic functionality of the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> library. Tweens can interpolate between more than just Transform properties, so don&apos;t be afraid to roll your own </para>
<link linkend="_class_leap_1_1_unity_1_1_animation_1_1_transform_tween_behaviour_editor">Leap.Unity.Animation.TransformTweenBehaviourEditor</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_transform_util_tests">Leap.Unity.Tests.TransformUtilTests</link><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Leap.Unity.Animation.Tween</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_tween_instance">Leap.Unity.Animation.Internal.TweenInstance</link><link linkend="_class_t_m_pro_1_1_tween_runner">TMPro.TweenRunner&lt; T &gt;</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_tween_runner">Leap.Unity.Animation.Internal.TweenRunner</link><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_internal_1_1_tween_instance_1_1_tween_yield_instruction">Leap.Unity.Animation.Internal.TweenInstance.TweenYieldInstruction</link><link linkend="_interface_u_a_d_s_in_app_purchase_meta_data">UADSInAppPurchaseMetaData</link><link linkend="_interface_u_a_d_s_json_storage">UADSJsonStorage</link><link linkend="_interface_u_a_d_s_mediation_meta_data">UADSMediationMetaData</link><link linkend="_interface_u_a_d_s_meta_data">UADSMetaData</link><link linkend="_interface_u_a_d_s_player_meta_data">UADSPlayerMetaData</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_u_i_element">Valve.VR.InteractionSystem.UIElement</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_u_i_tests">UnityEditor.PackageManager.UI.Tests.UITests&lt; TWindow &gt;</link><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_unit_curve_attribute">Leap.Unity.Attributes.UnitCurveAttribute</link>
<para>You can use this attribute to mark that an AnimationCurve can only have values that range from 0 to 1. The user will be prevented from entering a curve that lies outside of these bounds </para>
<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_units_attribute">Leap.Unity.Attributes.UnitsAttribute</link><link linkend="_interface_unity_ads">UnityAds</link><link linkend="_protocol_unity_ads_delegate-p">&lt;UnityAdsDelegate&gt;</link><link linkend="_protocol_unity_ads_extended_delegate-p">&lt;UnityAdsExtendedDelegate&gt;</link><link linkend="_protocol_unity_ads_unity_delegate-p">&lt;UnityAdsUnityDelegate&gt;</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_custom_events_1_1_unity_event_hand">Valve.VR.InteractionSystem.CustomEvents.UnityEventHand</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_custom_events_1_1_unity_event_single_float">Valve.VR.InteractionSystem.CustomEvents.UnityEventSingleFloat</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_unparent">Valve.VR.InteractionSystem.Unparent</link><link linkend="_class_leap_1_1_unity_1_1_old_rig_hierarchy_1_1_upgrade_options">Leap.Unity.OldRigHierarchy.UpgradeOptions</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_upm_add_operation">UnityEditor.PackageManager.UI.UpmAddOperation</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_upm_base_operation">UnityEditor.PackageManager.UI.UpmBaseOperation</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_upm_list_operation">UnityEditor.PackageManager.UI.UpmListOperation</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_upm_operation_factory">UnityEditor.PackageManager.UI.UpmOperationFactory</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_upm_remove_operation">UnityEditor.PackageManager.UI.UpmRemoveOperation</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_upm_search_operation">UnityEditor.PackageManager.UI.UpmSearchOperation</link><link linkend="_class_leap_1_1_unity_1_1_tests_1_1_utils_tests">Leap.Unity.Tests.UtilsTests</link><link linkend="_struct_leap_1_1_unity_1_1_delta_buffer_1_1_value_time_pair">Leap.Unity.DeltaBuffer&lt; SampleType, DerivativeType &gt;.ValueTimePair</link><link linkend="_struct_leap_1_1_vector">Leap.Vector</link>
<para>The <link linkend="_struct_leap_1_1_vector">Vector</link> struct represents a three-component mathematical vector or point such as a direction or position in three-dimensional space </para>
<link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_vector2_interpolator_base">Leap.Unity.Animation.Internal.Vector2InterpolatorBase&lt; ObjType &gt;</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_vector3_interpolator_base">Leap.Unity.Animation.Internal.Vector3InterpolatorBase&lt; ObjType &gt;</link><link linkend="_class_leap_1_1_unity_1_1_animation_1_1_internal_1_1_vector4_interpolator_base">Leap.Unity.Animation.Internal.Vector4InterpolatorBase&lt; ObjType &gt;</link><link linkend="_class_leap_1_1_unity_1_1_encoding_1_1_vector_hand">Leap.Unity.Encoding.VectorHand</link>
<para>A Vector-based encoding of a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> <link linkend="_class_leap_1_1_hand">Hand</link> </para>
<link linkend="_class_leap_1_1_unity_1_1_tests_1_1_vector_hand_tests">Leap.Unity.Tests.VectorHandTests</link><link linkend="_class_leap_1_1_leap_c_sharp_1_1_tests_1_1_vector_tests">Leap.LeapCSharp.Tests.VectorTests</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_velocity_estimator">Valve.VR.InteractionSystem.VelocityEstimator</link><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_version_item">UnityEditor.PackageManager.UI.VersionItem</link><link linkend="_struct_t_m_pro_1_1_vertex_gradient">TMPro.VertexGradient</link><link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___tracked_camera_1_1_video_stream_texture">Valve.VR.SteamVR_TrackedCamera.VideoStreamTexture</link><link linkend="_class_voice_checker">VoiceChecker</link>
<para>Voice Check works in a walky talky manner. You press the grip button and it will transfer your voice to other player / clients in the network. You will not be able hear your own voice. Here you convert the voice to float and then to byte to send it on the network. Once the other non local player who receives it will do the reverse of it . There it will get converted from byte to float and then to Audio Clip </para>
<link linkend="_struct_valve_1_1_v_r_1_1_v_r_active_action_set__t">Valve.VR.VRActiveActionSet_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_bone_transform__t">Valve.VR.VRBoneTransform_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_controller_axis__t">Valve.VR.VRControllerAxis_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_controller_state__t">Valve.VR.VRControllerState_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_controller_state__t___packed">Valve.VR.VRControllerState_t_Packed</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___application_launch__t">Valve.VR.VREvent_ApplicationLaunch_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___chaperone__t">Valve.VR.VREvent_Chaperone_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___controller__t">Valve.VR.VREvent_Controller_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___data__t">Valve.VR.VREvent_Data_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___dual_analog__t">Valve.VR.VREvent_DualAnalog_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___editing_camera_surface__t">Valve.VR.VREvent_EditingCameraSurface_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___haptic_vibration__t">Valve.VR.VREvent_HapticVibration_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___input_action_manifest_load__t">Valve.VR.VREvent_InputActionManifestLoad_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___input_binding_load__t">Valve.VR.VREvent_InputBindingLoad_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___ipd__t">Valve.VR.VREvent_Ipd_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___keyboard__t">Valve.VR.VREvent_Keyboard_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___message_overlay__t">Valve.VR.VREvent_MessageOverlay_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___mouse__t">Valve.VR.VREvent_Mouse_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___notification__t">Valve.VR.VREvent_Notification_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___overlay__t">Valve.VR.VREvent_Overlay_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___performance_test__t">Valve.VR.VREvent_PerformanceTest_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___process__t">Valve.VR.VREvent_Process_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___progress_update__t">Valve.VR.VREvent_ProgressUpdate_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___property__t">Valve.VR.VREvent_Property_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___reserved__t">Valve.VR.VREvent_Reserved_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___screenshot__t">Valve.VR.VREvent_Screenshot_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___screenshot_progress__t">Valve.VR.VREvent_ScreenshotProgress_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___scroll__t">Valve.VR.VREvent_Scroll_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___seated_zero_pose_reset__t">Valve.VR.VREvent_SeatedZeroPoseReset_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___show_u_i__t">Valve.VR.VREvent_ShowUI_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___spatial_anchor__t">Valve.VR.VREvent_SpatialAnchor_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___status__t">Valve.VR.VREvent_Status_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event__t">Valve.VR.VREvent_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event__t___packed">Valve.VR.VREvent_t_Packed</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___touch_pad_move__t">Valve.VR.VREvent_TouchPadMove_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_event___web_console__t">Valve.VR.VREvent_WebConsole_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_overlay_intersection_mask_primitive___data__t">Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_overlay_intersection_mask_primitive__t">Valve.VR.VROverlayIntersectionMaskPrimitive_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_overlay_intersection_params__t">Valve.VR.VROverlayIntersectionParams_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_overlay_intersection_results__t">Valve.VR.VROverlayIntersectionResults_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_skeletal_summary_data__t">Valve.VR.VRSkeletalSummaryData_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_texture_bounds__t">Valve.VR.VRTextureBounds_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_texture_depth_info__t">Valve.VR.VRTextureDepthInfo_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_texture_with_depth__t">Valve.VR.VRTextureWithDepth_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_texture_with_pose__t">Valve.VR.VRTextureWithPose_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_texture_with_pose_and_depth__t">Valve.VR.VRTextureWithPoseAndDepth_t</link><link linkend="_struct_valve_1_1_v_r_1_1_v_r_vulkan_texture_data__t">Valve.VR.VRVulkanTextureData_t</link><link linkend="_class_unity_editor_1_1_web_view_static">UnityEditor.WebViewStatic</link><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_wheel_dust">Valve.VR.InteractionSystem.Sample.WheelDust</link><link linkend="_struct_t_m_pro_1_1_word_wrap_state">TMPro.WordWrapState</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_workstation_behaviour_editor">Leap.Unity.Examples.WorkstationBehaviourEditor</link><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_workstation_behaviour_example">Leap.Unity.Examples.WorkstationBehaviourExample</link>
<para>This example script constructs behavior for a very specific kind of UI object that can animate out a &quot;workstation&quot; panel when thrown or placed outside of an anchor </para>
<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_workstation_pose_test">Leap.Unity.Examples.WorkstationPoseTest</link><link linkend="_struct_t_m_pro_1_1_x_m_l___tag_attribute">TMPro.XML_TagAttribute</link><link linkend="_class_leap_1_1_unity_1_1_x_r_height_offset">Leap.Unity.XRHeightOffset</link><link linkend="_class_leap_1_1_unity_1_1_x_r_height_offset_editor">Leap.Unity.XRHeightOffsetEditor</link></section>
