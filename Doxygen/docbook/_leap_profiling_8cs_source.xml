<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_profiling_8cs_source">
<title>LeapProfiling.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/LeapProfiling.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System.Threading;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Profiling;
00014 
00015 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00016 
00020 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>LeapProfiling&#32;{
00021 
00022 &#32;&#32;&#32;&#32;<emphasis role="comment">//Maps&#32;a&#32;block&#32;name&#32;to&#32;the&#32;sampler&#32;for&#32;it</emphasis>
00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Dictionary&lt;string,&#32;CustomSampler&gt;&#32;_samplers&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;CustomSampler&gt;();
00024 
00025 &#32;&#32;&#32;&#32;<emphasis role="comment">//Represents&#32;a&#32;queue&#32;of&#32;samplers&#32;that&#32;need&#32;to&#32;be&#32;created.</emphasis>
00026 &#32;&#32;&#32;&#32;<emphasis role="comment">//Samplers&#32;can&#32;only&#32;be&#32;created&#32;on&#32;the&#32;main&#32;thread,&#32;so&#32;we&#32;need&#32;some&#32;way&#32;for&#32;the&#32;info&#32;given</emphasis>
00027 &#32;&#32;&#32;&#32;<emphasis role="comment">//on&#32;alternate&#32;threads&#32;to&#32;be&#32;passed&#32;to&#32;the&#32;main&#32;thread.</emphasis>
00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Queue&lt;string&gt;&#32;_samplersToCreate&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Queue&lt;string&gt;();
00029 
00030 &#32;&#32;&#32;&#32;<emphasis role="comment">//We&#32;keep&#32;track&#32;of&#32;the&#32;size&#32;of&#32;the&#32;queue&#32;in&#32;a&#32;member&#32;variable</emphasis>
00031 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_samplersToCreateCount&#32;=&#32;0;
00032 
00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Read&#32;of&#32;_samplersToCreateCount&#32;is&#32;atomic</emphasis>
00035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_samplersToCreateCount&#32;&gt;&#32;0)&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Only&#32;if&#32;the&#32;count&#32;is&#32;nonzero&#32;do&#32;we&#32;do&#32;an&#32;expensive&#32;lock&#32;</emphasis>
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(_samplersToCreate)&#32;{
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//First&#32;duplicate&#32;the&#32;existing&#32;dictionary</emphasis>
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;newDictionary&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Dictionary&lt;string,&#32;CustomSampler&gt;(_samplers);
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Then&#32;construct&#32;all&#32;of&#32;the&#32;new&#32;samplers&#32;and&#32;add&#32;them&#32;to&#32;the&#32;new&#32;dictionary</emphasis>
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(_samplersToCreate.Count&#32;&gt;&#32;0)&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;blockName&#32;=&#32;_samplersToCreate.Dequeue();
00044 
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newDictionary[blockName]&#32;=&#32;CustomSampler.Create(blockName);
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00047 
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Reset&#32;samplers&#32;to&#32;create&#32;to&#32;zero</emphasis>
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_samplersToCreateCount&#32;=&#32;0;
00050 
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Reference&#32;assignments&#32;are&#32;atomic&#32;in&#32;C#</emphasis>
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//All&#32;new&#32;callbacks&#32;will&#32;now&#32;reference&#32;the&#32;updated&#32;dictionary</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Old&#32;dictionary&#32;will&#32;be&#32;collected&#32;by&#32;GC</emphasis>
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_samplers&#32;=&#32;newDictionary;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00056 &#32;&#32;&#32;&#32;&#32;&#32;}
00057 &#32;&#32;&#32;&#32;}
00058 
00059 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;BeginProfilingForThread(BeginProfilingForThreadArgs&#32;eventData)&#32;{
00060 <emphasis role="preprocessor">#if&#32;UNITY_2017_3_OR_NEWER</emphasis>
00061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Enable&#32;unity&#32;profiling&#32;for&#32;this&#32;thread</emphasis>
00062 &#32;&#32;&#32;&#32;&#32;&#32;Profiler.BeginThreadProfiling(<emphasis role="stringliteral">&quot;LeapCSharp&quot;</emphasis>,&#32;eventData.threadName);
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Assume&#32;that&#32;threads&#32;are&#32;not&#32;stopping&#32;and&#32;starting&#32;frequently</emphasis>
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//so&#32;we&#32;can&#32;get&#32;away&#32;with&#32;less-than-optimal&#32;strategies&#32;when&#32;starting&#32;a&#32;thread.</emphasis>
00066 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//in&#32;this&#32;case&#32;we&#32;use&#32;a&#32;naive&#32;queue&#32;with&#32;a&#32;lock.</emphasis>
00067 &#32;&#32;&#32;&#32;&#32;&#32;lock&#32;(_samplersToCreate)&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;blockName&#32;<emphasis role="keywordflow">in</emphasis>&#32;eventData.blockNames)&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_samplersToCreate.Enqueue(blockName);
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00071 
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Interlocked.Add(ref&#32;_samplersToCreateCount,&#32;eventData.blockNames.Length);
00073 &#32;&#32;&#32;&#32;&#32;&#32;}
00074 <emphasis role="preprocessor">#else</emphasis>
00075 &#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(<emphasis role="stringliteral">&quot;Thread&#32;Profiling&#32;is&#32;unavailable&#32;in&#32;versions&#32;of&#32;Unity&#32;below&#32;2017.3&quot;</emphasis>);
00076 <emphasis role="preprocessor">#endif</emphasis>
00077 &#32;&#32;&#32;&#32;}
00078 
00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EndProfilingForThread(EndProfilingForThreadArgs&#32;eventData)&#32;{
00080 <emphasis role="preprocessor">#if&#32;UNITY_2017_3_OR_NEWER</emphasis>
00081 &#32;&#32;&#32;&#32;&#32;&#32;Profiler.EndThreadProfiling();
00082 <emphasis role="preprocessor">#else</emphasis>
00083 &#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(<emphasis role="stringliteral">&quot;Thread&#32;Profiling&#32;is&#32;unavailable&#32;in&#32;versions&#32;of&#32;Unity&#32;below&#32;2017.3&quot;</emphasis>);
00084 <emphasis role="preprocessor">#endif</emphasis>
00085 &#32;&#32;&#32;&#32;}
00086 
00087 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;BeginProfilingBlock(BeginProfilingBlockArgs&#32;eventData)&#32;{
00088 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Sampler&#32;might&#32;not&#32;have&#32;been&#32;created&#32;yet&#32;because&#32;samplers&#32;can&#32;only&#32;be&#32;created</emphasis>
00089 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//on&#32;the&#32;main&#32;thread.&#32;&#32;We&#32;will&#32;simply&#32;not&#32;be&#32;able&#32;to&#32;report&#32;all&#32;blocks&#32;until</emphasis>
00090 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//a&#32;sampler&#32;is&#32;available.</emphasis>
00091 
00092 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Note&#32;that&#32;the&#32;Dictionary&#32;type&#32;is&#32;thread&#32;safe&#32;for&#32;read&#32;operations</emphasis>
00093 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Dictionary&#32;is&#32;only&#32;used&#32;once&#32;and&#32;so&#32;there&#32;is&#32;no&#32;risk&#32;of&#32;the&#32;dictionary&#32;</emphasis>
00094 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//being&#32;swapped&#32;out&#32;from&#32;underneath&#32;us</emphasis>
00095 
00096 &#32;&#32;&#32;&#32;&#32;&#32;CustomSampler&#32;sampler;
00097 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_samplers.TryGetValue(eventData.blockName,&#32;out&#32;sampler))&#32;{
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampler.Begin();
00099 &#32;&#32;&#32;&#32;&#32;&#32;}
00100 &#32;&#32;&#32;&#32;}
00101 
00102 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EndProfilingBlock(EndProfilingBlockArgs&#32;eventData)&#32;{
00103 &#32;&#32;&#32;&#32;&#32;&#32;CustomSampler&#32;sampler;
00104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_samplers.TryGetValue(eventData.blockName,&#32;out&#32;sampler))&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sampler.End();
00106 &#32;&#32;&#32;&#32;&#32;&#32;}
00107 &#32;&#32;&#32;&#32;}
00108 &#32;&#32;}
00109 }
</programlisting></section>
