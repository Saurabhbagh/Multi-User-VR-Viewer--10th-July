<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__projection_post_process_provider_8cs_source">
<title>ProjectionPostProcessProvider.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Examples/Example Assets/ProjectionPostProcessProvider.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 
00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_examples">Leap.Unity.Examples</link>&#32;{
00013 
<anchor xml:id="__projection_post_process_provider_8cs_source_1l00014"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider">00014</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider">ProjectionPostProcessProvider</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_post_process_provider">PostProcessProvider</link>&#32;{
00015 &#32;&#32;&#32;&#32;
00016 &#32;&#32;&#32;&#32;[Header(<emphasis role="stringliteral">&quot;Projection&quot;</emphasis>)]
00017 
00018 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;exponent&#32;of&#32;the&#32;projection&#32;of&#32;any&#32;hand&#32;distance&#32;from&#32;the&#32;approximated&#32;&quot;</emphasis>
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;shoulder&#32;beyond&#32;the&#32;handMergeDistance.&quot;</emphasis>)]
00020 &#32;&#32;&#32;&#32;[Range(0f,&#32;5f)]
<anchor xml:id="__projection_post_process_provider_8cs_source_1l00021"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider_1ab20b11dc9cb64bb7e1dfdef74727a4e3">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider_1ab20b11dc9cb64bb7e1dfdef74727a4e3">projectionExponent</link>&#32;=&#32;3.50f;
00022 
00023 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;distance&#32;from&#32;the&#32;approximated&#32;shoulder&#32;beyond&#32;which&#32;any&#32;additional&#32;&quot;</emphasis>
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;distance&#32;is&#32;exponentiated&#32;by&#32;the&#32;projectionExponent.&quot;</emphasis>)]
00025 &#32;&#32;&#32;&#32;[Range(0f,&#32;1f)]
<anchor xml:id="__projection_post_process_provider_8cs_source_1l00026"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider_1a79847c705a1245acf42aa1376e88accf">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider_1a79847c705a1245acf42aa1376e88accf">handMergeDistance</link>&#32;=&#32;0.30f;
00027 
<anchor xml:id="__projection_post_process_provider_8cs_source_1l00028"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider_1a967ec672c9d36c7141ecdb3dbf63b36c">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider_1a967ec672c9d36c7141ecdb3dbf63b36c">ProcessFrame</link>(ref&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;inputFrame)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;position&#32;of&#32;the&#32;head&#32;and&#32;the&#32;basis&#32;to&#32;calculate&#32;shoulder&#32;position.</emphasis>
00030 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;headPos&#32;=&#32;Camera.main.transform.position;
00031 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;shoulderBasis&#32;=&#32;Quaternion.LookRotation(
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.ProjectOnPlane(Camera.main.transform.forward,&#32;Vector3.up),
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3.up);
00034 
00035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;hand&#32;<emphasis role="keywordflow">in</emphasis>&#32;inputFrame.Hands)&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Approximate&#32;shoulder&#32;position&#32;with&#32;magic&#32;values.</emphasis>
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;shoulderPos&#32;=&#32;headPos
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(shoulderBasis&#32;*&#32;(<emphasis role="keyword">new</emphasis>&#32;Vector3(0f,&#32;-0.2f,&#32;-0.1f)
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Vector3.left&#32;*&#32;0.1f&#32;*&#32;(hand.IsLeft&#32;?&#32;1f&#32;:&#32;-1f)));
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;projection&#32;of&#32;the&#32;hand&#32;if&#32;it&#32;extends&#32;beyond&#32;the</emphasis>
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;handMergeDistance.</emphasis>
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;shoulderToHand&#32;=&#32;hand.PalmPosition.ToVector3()&#32;-&#32;shoulderPos;
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;handShoulderDist&#32;=&#32;shoulderToHand.magnitude;
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;projectionDistance&#32;=&#32;Mathf.Max(0f,&#32;handShoulderDist&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider_1a79847c705a1245acf42aa1376e88accf">handMergeDistance</link>);
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;projectionAmount&#32;=&#32;Mathf.Pow(1&#32;+&#32;projectionDistance,&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_projection_post_process_provider_1ab20b11dc9cb64bb7e1dfdef74727a4e3">projectionExponent</link>);
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hand.SetTransform(shoulderPos&#32;+&#32;shoulderToHand&#32;*&#32;projectionAmount,
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hand.Rotation.ToQuaternion());
00049 &#32;&#32;&#32;&#32;&#32;&#32;}
00050 &#32;&#32;&#32;&#32;}
00051 
00052 &#32;&#32;}
00053 }
</programlisting></section>
