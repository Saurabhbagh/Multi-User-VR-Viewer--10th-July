<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__attachment_point_behaviour_8cs_source">
<title>AttachmentPointBehaviour.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Attachments/AttachmentPointBehaviour.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_attributes">Attributes</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00015 
00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_attachments">Leap.Unity.Attachments</link>&#32;{
00017 
00026 &#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
00027 &#32;&#32;[ExecuteInEditMode]
<anchor xml:id="__attachment_point_behaviour_8cs_source_1l00028"/><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour">00028</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour">AttachmentPointBehaviour</link>&#32;:&#32;MonoBehaviour&#32;{
00029 
00030 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;The&#32;AttachmentHand&#32;associated&#32;with&#32;this&#32;AttachmentPointBehaviour.&#32;AttachmentPointBehaviours&#32;&quot;</emphasis>
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;should&#32;be&#32;beneath&#32;their&#32;AttachmentHand&#32;object&#32;in&#32;the&#32;hierarchy.&quot;</emphasis>)]
00032 &#32;&#32;&#32;&#32;[Disable]
<anchor xml:id="__attachment_point_behaviour_8cs_source_1l00033"/><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a290ccc63d725900866edb0e951869be9">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand">AttachmentHand</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a290ccc63d725900866edb0e951869be9">attachmentHand</link>;
00034 
00035 &#32;&#32;&#32;&#32;[Tooltip(<emphasis role="stringliteral">&quot;To&#32;change&#32;which&#32;attachment&#32;points&#32;are&#32;available&#32;on&#32;an&#32;AttachmentHand,&#32;refer&#32;to&#32;the&#32;&quot;</emphasis>
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;inspector&#32;for&#32;the&#32;parent&#32;AttachmentHands&#32;object.&quot;</emphasis>)]
00037 &#32;&#32;&#32;&#32;[Disable]
<anchor xml:id="__attachment_point_behaviour_8cs_source_1l00038"/><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a7344e503f10013a48b805d012054f6a1">00038</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a7344e503f10013a48b805d012054f6a1">attachmentPoint</link>;
00039 
00040 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnValidate()&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a7344e503f10013a48b805d012054f6a1">attachmentPoint</link>.IsSinglePoint()&#32;&amp;&amp;&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a7344e503f10013a48b805d012054f6a1">attachmentPoint</link>&#32;!=&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.None)&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;AttachmentPointBehaviours&#32;should&#32;refer&#32;to&#32;a&#32;single&#32;attachmentPoint&#32;flag.&quot;</emphasis>,&#32;this.gameObject);
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a7344e503f10013a48b805d012054f6a1">attachmentPoint</link>&#32;=&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.None;
00044 &#32;&#32;&#32;&#32;&#32;&#32;}
00045 &#32;&#32;&#32;&#32;}
00046 
00047 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnDestroy()&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a290ccc63d725900866edb0e951869be9">attachmentHand</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a290ccc63d725900866edb0e951869be9">attachmentHand</link>.<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_hand_1adedcd7d579e0f342314d32a4af28092b">notifyPointBehaviourDeleted</link>(<emphasis role="keyword">this</emphasis>);
00050 &#32;&#32;&#32;&#32;&#32;&#32;}
00051 &#32;&#32;&#32;&#32;}
00052 
<anchor xml:id="__attachment_point_behaviour_8cs_source_1l00053"/><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1af2b9cb4aa7bc97715ba572180d450538">00053</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;implicit&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>(<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour">AttachmentPointBehaviour</link>&#32;p)&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.None;
00055 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p.<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a7344e503f10013a48b805d012054f6a1">attachmentPoint</link>;
00056 &#32;&#32;&#32;&#32;}
00057 
<anchor xml:id="__attachment_point_behaviour_8cs_source_1l00058"/><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a14331ba6656c65a7b30134517126c776">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a14331ba6656c65a7b30134517126c776">SetTransformUsingHand</link>(<link linkend="_namespace_leap">Leap</link>.<link linkend="_class_leap_1_1_hand">Hand</link>&#32;hand)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hand&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Debug.LogError(&quot;Unable&#32;to&#32;set&#32;transform&#32;with&#32;a&#32;null&#32;hand.&quot;,&#32;this.gameObject);</emphasis>
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00062 &#32;&#32;&#32;&#32;&#32;&#32;}
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position&#32;=&#32;Vector3.zero;
00065 &#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.identity;
00066 
00067 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a80f3e3a2fa250a6b955a50f471b4a498">GetLeapHandPointData</link>(hand,&#32;this.attachmentPoint,&#32;out&#32;position,&#32;out&#32;rotation);
00068 
00069 &#32;&#32;&#32;&#32;&#32;&#32;this.transform.position&#32;=&#32;position;
00070 &#32;&#32;&#32;&#32;&#32;&#32;this.transform.rotation&#32;=&#32;rotation;
00071 &#32;&#32;&#32;&#32;}
00072 
<anchor xml:id="__attachment_point_behaviour_8cs_source_1l00073"/><link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a80f3e3a2fa250a6b955a50f471b4a498">00073</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_attachments_1_1_attachment_point_behaviour_1a80f3e3a2fa250a6b955a50f471b4a498">GetLeapHandPointData</link>(<link linkend="_namespace_leap">Leap</link>.<link linkend="_class_leap_1_1_hand">Hand</link>&#32;hand,&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>&#32;singlePoint,&#32;out&#32;Vector3&#32;position,&#32;out&#32;Quaternion&#32;rotation)&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;Vector3.zero;
00075 &#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;Quaternion.identity;
00076 
00077 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(singlePoint&#32;!=&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.None&#32;&amp;&amp;&#32;!singlePoint.IsSinglePoint())&#32;{
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Cannot&#32;get&#32;attachment&#32;point&#32;data&#32;for&#32;an&#32;AttachmentPointFlags&#32;argument&#32;consisting&#32;of&#32;more&#32;than&#32;one&#32;set&#32;flag.&quot;</emphasis>);
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00080 &#32;&#32;&#32;&#32;&#32;&#32;}
00081 
00082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(singlePoint)&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.None:
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00085 
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.Wrist:
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.WristPosition.ToVector3();
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Arm.Basis.rotation.ToQuaternion();
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.Palm:
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.PalmPosition.ToVector3();
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Basis.rotation.ToQuaternion();
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00094 
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.ThumbProximalJoint:
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[0].bones[1].NextJoint.ToVector3();
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[0].bones[2].Rotation.ToQuaternion();
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.ThumbDistalJoint:
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[0].bones[2].NextJoint.ToVector3();
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[0].bones[3].Rotation.ToQuaternion();
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.ThumbTip:
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[0].bones[3].NextJoint.ToVector3();
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[0].bones[3].Rotation.ToQuaternion();
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00107 
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.IndexKnuckle:
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[1].bones[0].NextJoint.ToVector3();
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[1].bones[1].Rotation.ToQuaternion();
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.IndexMiddleJoint:
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[1].bones[1].NextJoint.ToVector3();
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[1].bones[2].Rotation.ToQuaternion();
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.IndexDistalJoint:
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[1].bones[2].NextJoint.ToVector3();
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[1].bones[3].Rotation.ToQuaternion();
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.IndexTip:
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[1].bones[3].NextJoint.ToVector3();
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[1].bones[3].Rotation.ToQuaternion();
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00124 
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.MiddleKnuckle:
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[2].bones[0].NextJoint.ToVector3();
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[2].bones[1].Rotation.ToQuaternion();
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.MiddleMiddleJoint:
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[2].bones[1].NextJoint.ToVector3();
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[2].bones[2].Rotation.ToQuaternion();
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.MiddleDistalJoint:
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[2].bones[2].NextJoint.ToVector3();
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[2].bones[3].Rotation.ToQuaternion();
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.MiddleTip:
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[2].bones[3].NextJoint.ToVector3();
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[2].bones[3].Rotation.ToQuaternion();
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00141 
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.RingKnuckle:
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[3].bones[0].NextJoint.ToVector3();
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[3].bones[1].Rotation.ToQuaternion();
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.RingMiddleJoint:
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[3].bones[1].NextJoint.ToVector3();
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[3].bones[2].Rotation.ToQuaternion();
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.RingDistalJoint:
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[3].bones[2].NextJoint.ToVector3();
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[3].bones[3].Rotation.ToQuaternion();
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.RingTip:
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[3].bones[3].NextJoint.ToVector3();
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[3].bones[3].Rotation.ToQuaternion();
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00158 
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.PinkyKnuckle:
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[4].bones[0].NextJoint.ToVector3();
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[4].bones[1].Rotation.ToQuaternion();
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.PinkyMiddleJoint:
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[4].bones[1].NextJoint.ToVector3();
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[4].bones[2].Rotation.ToQuaternion();
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.PinkyDistalJoint:
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[4].bones[2].NextJoint.ToVector3();
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[4].bones[3].Rotation.ToQuaternion();
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attachments_1a4b32b38f722ad110fcd5a817256e09ab">AttachmentPointFlags</link>.PinkyTip:
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;hand.Fingers[4].bones[3].NextJoint.ToVector3();
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation&#32;=&#32;hand.Fingers[4].bones[3].Rotation.ToQuaternion();
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00175 &#32;&#32;&#32;&#32;&#32;&#32;}
00176 &#32;&#32;&#32;&#32;}
00177 
00178 &#32;&#32;}
00179 
00180 }
</programlisting></section>
