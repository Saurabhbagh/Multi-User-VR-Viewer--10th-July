<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__implements_interface_8cs_source">
<title>ImplementsInterface.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Attributes/ImplementsInterface.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;System;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00014 <emphasis role="keyword">using</emphasis>&#32;System.Text.RegularExpressions;
00015 
00016 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00017 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00018 <emphasis role="preprocessor">#endif</emphasis>
00019 
<anchor xml:id="__implements_interface_8cs_source_1l00020"/><link linkend="__implements_interface_8cs_1a324f8dae84ead9019a250b472ca1b436">00020</link> <emphasis role="keyword">using</emphasis>&#32;<link linkend="__implements_interface_8cs_1a324f8dae84ead9019a250b472ca1b436">UnityObject</link>&#32;=&#32;<link linkend="_namespace_unity_engine">UnityEngine</link>.Object;
00021 
00022 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_attributes">Leap.Unity.Attributes</link>&#32;{
00023 
<anchor xml:id="__implements_interface_8cs_source_1l00024"/><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_implements_interface_attribute">00024</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_implements_interface_attribute">ImplementsInterfaceAttribute</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_combinable_property_attribute">CombinablePropertyAttribute</link>,
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_property_constrainer">IPropertyConstrainer</link>,
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_full_property_drawer">IFullPropertyDrawer</link>,
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_interface_leap_1_1_unity_1_1_attributes_1_1_i_support_drag_and_drop">ISupportDragAndDrop</link>&#32;{
00028 
00029 <emphasis role="preprocessor">#pragma&#32;warning&#32;disable&#32;0414</emphasis>
00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Type&#32;type;
00031 <emphasis role="preprocessor">#pragma&#32;warning&#32;restore&#32;0414</emphasis>
00032 
<anchor xml:id="__implements_interface_8cs_source_1l00033"/><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_implements_interface_attribute_1a1dd460b87ace21b04011095a6bf364e9">00033</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_implements_interface_attribute_1a1dd460b87ace21b04011095a6bf364e9">ImplementsInterfaceAttribute</link>(Type&#32;type)&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!type.IsInterface)&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;System.Exception(type.Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;is&#32;not&#32;an&#32;interface.&quot;</emphasis>);
00036 &#32;&#32;&#32;&#32;&#32;&#32;}
00037 &#32;&#32;&#32;&#32;&#32;&#32;this.type&#32;=&#32;type;
00038 &#32;&#32;&#32;&#32;}
00039 
00040 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00041 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConstrainValue(SerializedProperty&#32;property)&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(property.objectReferenceValue&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00043 
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_leap_1_1_unity_1_1_attributes_1a71d15e38cb19d7d2ffb1aa310ce8f0f9">UnityObject</link>&#32;implementingObject&#32;=&#32;FindImplementer(property,
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;property.objectReferenceValue);
00046 
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(implementingObject&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(property.objectReferenceValue.GetType().Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;does&#32;not&#32;implement&#32;&quot;</emphasis>&#32;+&#32;type.Name);
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00050 
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.objectReferenceValue&#32;=&#32;implementingObject;
00052 &#32;&#32;&#32;&#32;&#32;&#32;}
00053 &#32;&#32;&#32;&#32;}
00054 
00060 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="__implements_interface_8cs_1a324f8dae84ead9019a250b472ca1b436">UnityObject</link>&#32;FindImplementer(SerializedProperty&#32;property,&#32;<link linkend="__implements_interface_8cs_1a324f8dae84ead9019a250b472ca1b436">UnityObject</link>&#32;fromObj)&#32;{
00061 
00062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Don&apos;t&#32;use&#32;fieldInfo&#32;here&#32;because&#32;it&#32;is&#32;very&#32;convenient&#32;for&#32;it&#32;to&#32;be&#32;left&#32;null</emphasis>
00063 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;the&#32;CombinablePropertyAttribute&#32;when&#32;dealing&#32;with&#32;generic-type&#32;situations</emphasis>
00064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;where&#32;the&#32;ImplementsInterface&#32;class&#32;has&#32;to&#32;be&#32;constructed&#32;manually&#32;in&#32;a&#32;custom</emphasis>
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;editor.&#32;(Specific&#32;case:&#32;StreamConnectorEditor.cs)</emphasis>
00066 
00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isTypeDefinitelyIncompatible;
00068 &#32;&#32;&#32;&#32;&#32;&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isTypeDefinitelyIncompatible&#32;=&#32;!this.type.IsAssignableFrom(fromObj.GetType());
00070 
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;have&#32;to&#32;make&#32;an&#32;exception&#32;when&#32;a&#32;GameObject&#32;is&#32;dragged&#32;into&#32;a&#32;field&#32;whose</emphasis>
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;type&#32;is&#32;a&#32;Component,&#32;because&#32;it&apos;s&#32;expected&#32;that&#32;we&#32;can&#32;use&#32;GetComponent&#32;in</emphasis>
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;that&#32;case.&#32;(We&#32;might&#32;still&#32;fail&#32;later&#32;if&#32;the&#32;component&#32;isn&apos;t&#32;found.)</emphasis>
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;objIsGameObject&#32;=&#32;fromObj.GetType()&#32;==&#32;typeof(GameObject);
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(objIsGameObject)&#32;{
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isTypeDefinitelyIncompatible&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00078 
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;also&#32;make&#32;an&#32;exception&#32;when&#32;a&#32;Component&#32;is&#32;dragged&#32;into&#32;a&#32;field&#32;that</emphasis>
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;doesn&apos;t&#32;directly&#32;satisfy&#32;the&#32;interface&#32;because&#32;it&#32;might&#32;have&#32;other&#32;Components</emphasis>
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;its&#32;GameObject&#32;that&#32;_do_&#32;satisfy&#32;the&#32;field,&#32;again&#32;via&#32;GetComponent.</emphasis>
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;objIsComponent&#32;=&#32;typeof(Component).IsAssignableFrom(fromObj.GetType());
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(objIsComponent)&#32;{
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isTypeDefinitelyIncompatible&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00086 
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;However,&#32;you&#32;can&apos;t&#32;assign&#32;a&#32;ScriptableObject&#32;to&#32;a&#32;field&#32;expecting&#32;a&#32;Component,</emphasis>
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;or&#32;vice-versa,&#32;no&#32;matter&#32;what.</emphasis>
00089 
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fieldIsScriptableObject
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_combinable_property_attribute_1ae004e1a43bf7445dd61fe2f519a6f937">fieldInfo</link>.FieldType.IsAssignableFrom(typeof(ScriptableObject));
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldIsScriptableObject&#32;&amp;&amp;&#32;(objIsComponent&#32;||&#32;objIsGameObject))&#32;{
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isTypeDefinitelyIncompatible&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00095 
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;fieldTakesComponent
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;typeof(Component).IsAssignableFrom(<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_combinable_property_attribute_1ae004e1a43bf7445dd61fe2f519a6f937">fieldInfo</link>.FieldType);
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fieldTakesComponent&#32;&amp;&amp;&#32;(!objIsComponent&#32;&amp;&amp;&#32;!objIsGameObject))&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isTypeDefinitelyIncompatible&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00101 &#32;&#32;&#32;&#32;&#32;&#32;}
00102 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isTypeDefinitelyIncompatible)&#32;{
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00104 &#32;&#32;&#32;&#32;&#32;&#32;}
00105 
00106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fromObj.GetType().ImplementsInterface(type))&#32;{
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;All&#32;good!&#32;This&#32;object&#32;reference&#32;implements&#32;the&#32;interface.</emphasis>
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fromObj;
00109 &#32;&#32;&#32;&#32;&#32;&#32;}
00110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__implements_interface_8cs_1a324f8dae84ead9019a250b472ca1b436">UnityObject</link>&#32;implementingObject;
00112 
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fromObj&#32;is&#32;GameObject)&#32;{
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fromObj&#32;=&#32;(fromObj&#32;as&#32;GameObject).transform;
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00116 
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fromObj&#32;is&#32;Component)&#32;{
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;object&#32;is&#32;a&#32;Component,&#32;first&#32;search&#32;the&#32;rest&#32;of&#32;the&#32;GameObject&#32;</emphasis>
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;a&#32;component&#32;that&#32;implements&#32;the&#32;interface.&#32;If&#32;found,&#32;assign&#32;it&#32;instead,</emphasis>
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;otherwise&#32;null&#32;out&#32;the&#32;property.</emphasis>
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;implementingObject&#32;=&#32;(fromObj&#32;as&#32;Component)
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.GetComponents&lt;Component&gt;()
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Query()
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.Where(c&#32;=&gt;&#32;c.GetType().ImplementsInterface(type))
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.FirstOrDefault();
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;object&#32;is&#32;not&#32;a&#32;Component,&#32;just&#32;null&#32;out&#32;the&#32;property.</emphasis>
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;implementingObject&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00131 
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;implementingObject;
00133 &#32;&#32;&#32;&#32;&#32;&#32;}
00134 &#32;&#32;&#32;&#32;}
00135 
00136 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawProperty(Rect&#32;rect,&#32;SerializedProperty&#32;property,&#32;GUIContent&#32;label)&#32;{
00137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(property.objectReferenceValue&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.ObjectField(rect,&#32;property,&#32;type,&#32;label);
00139 &#32;&#32;&#32;&#32;&#32;&#32;}
00140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.ObjectField(rect,&#32;label,&#32;<emphasis role="keyword">null</emphasis>,&#32;type,&#32;<emphasis role="keyword">false</emphasis>);
00142 &#32;&#32;&#32;&#32;&#32;&#32;}
00143 &#32;&#32;&#32;&#32;}
00144 
00145 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Rect&#32;GetDropArea(Rect&#32;rect,&#32;SerializedProperty&#32;property)&#32;{
00146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rect;
00147 &#32;&#32;&#32;&#32;}
00148 
00149 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IsDropValid(<link linkend="__implements_interface_8cs_1a324f8dae84ead9019a250b472ca1b436">UnityObject</link>[]&#32;draggedObjects,&#32;SerializedProperty&#32;property)&#32;{
00150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;draggedObjects.Query().Any(o&#32;=&gt;&#32;FindImplementer(property,&#32;o)&#32;!=&#32;<emphasis role="keyword">null</emphasis>);
00151 &#32;&#32;&#32;&#32;}
00152 
00153 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;ProcessDroppedObjects(<link linkend="__implements_interface_8cs_1a324f8dae84ead9019a250b472ca1b436">UnityObject</link>[]&#32;droppedObjects,
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;property)&#32;{
00155 
00156 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;implementer&#32;=&#32;droppedObjects.Query()
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.FirstOrDefault(o&#32;=&gt;&#32;FindImplementer(property,&#32;o));
00158 
00159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(implementer&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(property.objectReferenceValue.GetType().Name
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;does&#32;not&#32;implement&#32;&quot;</emphasis>&#32;+&#32;type.Name);
00162 &#32;&#32;&#32;&#32;&#32;&#32;}
00163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>.objectReferenceValue&#32;=&#32;implementer;
00165 &#32;&#32;&#32;&#32;&#32;&#32;}
00166 &#32;&#32;&#32;&#32;}
00167 
00168 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;IEnumerable&lt;SerializedPropertyType&gt;&#32;SupportedTypes&#32;{
00169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;SerializedPropertyType.ObjectReference;
00171 &#32;&#32;&#32;&#32;&#32;&#32;}
00172 &#32;&#32;&#32;&#32;}
00173 <emphasis role="preprocessor">#endif</emphasis>
00174 &#32;&#32;}
00175 }
</programlisting></section>
