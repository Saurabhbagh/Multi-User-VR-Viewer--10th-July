<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__asset_folder_property_drawer_8cs_source">
<title>AssetFolderPropertyDrawer.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/Editor/AssetFolderPropertyDrawer.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System.IO;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Linq;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_query">Query</link>;
00015 
00016 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00017 
00018 &#32;&#32;[CustomPropertyDrawer(typeof(AssetFolder),&#32;useForChildren:&#32;<emphasis role="keyword">true</emphasis>)]
<anchor xml:id="__asset_folder_property_drawer_8cs_source_1l00019"/><link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer">00019</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer">AssetFolderPropertyDrawer</link>&#32;:&#32;PropertyDrawer&#32;{
00020 
<anchor xml:id="__asset_folder_property_drawer_8cs_source_1l00021"/><link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1af800a23a840208fb890ab61022942301">00021</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1af800a23a840208fb890ab61022942301">OnGUI</link>(Rect&#32;position,&#32;SerializedProperty&#32;property,&#32;GUIContent&#32;label)&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;Rect&#32;left,&#32;right;
00023 &#32;&#32;&#32;&#32;&#32;&#32;position.SplitHorizontallyWithRight(out&#32;left,&#32;out&#32;right,&#32;position.height);
00024 &#32;&#32;&#32;&#32;&#32;&#32;left.width&#32;-=&#32;2;
00025 
00026 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>&#32;folderAsset&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00027 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;folderPath&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
00028 
00029 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;folderProp&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_assetFolder&quot;</emphasis>);
00030 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(folderProp.hasMultipleDifferentValues)&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00032 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;folderAsset&#32;=&#32;folderProp.objectReferenceValue;
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(folderAsset&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;folderPath&#32;=&#32;AssetDatabase.GetAssetPath(folderAsset);
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00037 &#32;&#32;&#32;&#32;&#32;&#32;}
00038 
00039 &#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.TextField(left,&#32;label,&#32;folderPath);
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;content&#32;=&#32;EditorGUIUtility.IconContent(<emphasis role="stringliteral">&quot;Folder&#32;Icon&quot;</emphasis>);
00042 
00043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUI.Button(right,&#32;content,&#32;GUIStyle.none))&#32;{
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;resultPath&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1adf5a06cc37ba9285efd63ac70c08c5d0">PromptUserForPath</link>(folderPath);
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(resultPath))&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;relativePath&#32;=&#32;Utils.MakeRelativePath(Application.dataPath,&#32;resultPath);
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;asset&#32;=&#32;AssetDatabase.LoadAssetAtPath&lt;DefaultAsset&gt;(relativePath);
00048 
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;errorMessage;
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a758121df1db1aa0c8e81154f239297a6">ValidatePath</link>(resultPath,&#32;relativePath,&#32;out&#32;errorMessage))&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorUtility.DisplayDialog(<emphasis role="stringliteral">&quot;Invalid&#32;selection.&quot;</emphasis>,&#32;errorMessage,&#32;<emphasis role="stringliteral">&quot;OK&quot;</emphasis>);
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;folderProp.objectReferenceValue&#32;=&#32;asset;
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00056 &#32;&#32;&#32;&#32;&#32;&#32;}
00057 
00058 &#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.showMixedValue&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00059 
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(position.Contains(Event.current.mousePosition))&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;draggedObject&#32;=&#32;DragAndDrop.objectReferences.FirstOrDefault();
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;errorMessage;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(draggedObject&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(Event.current.type)&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EventType.DragUpdated:
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a12d6bf97d917cba11f0036ff110530f2">ValidateObject</link>(draggedObject,&#32;out&#32;errorMessage))&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DragAndDrop.visualMode&#32;=&#32;DragAndDropVisualMode.Link;
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DragAndDrop.visualMode&#32;=&#32;DragAndDropVisualMode.Rejected;
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;EventType.DragPerform:
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a12d6bf97d917cba11f0036ff110530f2">ValidateObject</link>(draggedObject,&#32;out&#32;errorMessage))&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DragAndDrop.AcceptDrag();
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;folderProp.objectReferenceValue&#32;=&#32;draggedObject;
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00080 &#32;&#32;&#32;&#32;&#32;&#32;}
00081 &#32;&#32;&#32;&#32;}
00082 
<anchor xml:id="__asset_folder_property_drawer_8cs_source_1l00083"/><link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a3b57e2738c7c482308b07f3ebfbce706">00083</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a3b57e2738c7c482308b07f3ebfbce706">GetPropertyHeight</link>(SerializedProperty&#32;property,&#32;GUIContent&#32;label)&#32;{
00084 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EditorGUIUtility.singleLineHeight;
00085 &#32;&#32;&#32;&#32;}
00086 
<anchor xml:id="__asset_folder_property_drawer_8cs_source_1l00087"/><link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1adf5a06cc37ba9285efd63ac70c08c5d0">00087</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1adf5a06cc37ba9285efd63ac70c08c5d0">PromptUserForPath</link>(<emphasis role="keywordtype">string</emphasis>&#32;currentPath)&#32;{
00088 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EditorUtility.OpenFolderPanel(<emphasis role="stringliteral">&quot;Select&#32;Folder&quot;</emphasis>,&#32;currentPath,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
00089 &#32;&#32;&#32;&#32;}
00090 
<anchor xml:id="__asset_folder_property_drawer_8cs_source_1l00091"/><link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a12d6bf97d917cba11f0036ff110530f2">00091</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a12d6bf97d917cba11f0036ff110530f2">ValidateObject</link>(<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>&#32;asset,&#32;out&#32;<emphasis role="keywordtype">string</emphasis>&#32;errorMessage)&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;relativePath&#32;=&#32;AssetDatabase.GetAssetPath(asset);
00093 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;fullPath&#32;=&#32;Path.GetFullPath(relativePath);
00094 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a758121df1db1aa0c8e81154f239297a6">ValidatePath</link>(fullPath,&#32;relativePath,&#32;out&#32;errorMessage);
00095 &#32;&#32;&#32;&#32;}
00096 
<anchor xml:id="__asset_folder_property_drawer_8cs_source_1l00097"/><link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a758121df1db1aa0c8e81154f239297a6">00097</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_asset_folder_property_drawer_1a758121df1db1aa0c8e81154f239297a6">ValidatePath</link>(<emphasis role="keywordtype">string</emphasis>&#32;fullPath,&#32;<emphasis role="keywordtype">string</emphasis>&#32;relativePath,&#32;out&#32;<emphasis role="keywordtype">string</emphasis>&#32;errorMessage)&#32;{
00098 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Directory.Exists(fullPath))&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorMessage&#32;=&#32;<emphasis role="stringliteral">&quot;The&#32;specified&#32;folder&#32;does&#32;not&#32;exist!&quot;</emphasis>;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00101 &#32;&#32;&#32;&#32;&#32;&#32;}
00102 
00103 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;asset&#32;=&#32;AssetDatabase.LoadAssetAtPath&lt;DefaultAsset&gt;(relativePath);
00104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(asset&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorMessage&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00107 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorMessage&#32;=&#32;<emphasis role="stringliteral">&quot;The&#32;specified&#32;folder&#32;is&#32;not&#32;an&#32;asset&#32;folder.&#32;Asset&#32;folders&#32;must&#32;be&#32;inside&#32;project&apos;s&#32;Assets&#32;directory.&quot;</emphasis>;
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00110 &#32;&#32;&#32;&#32;&#32;&#32;}
00111 &#32;&#32;&#32;&#32;}
00112 &#32;&#32;}
00113 }
</programlisting></section>
