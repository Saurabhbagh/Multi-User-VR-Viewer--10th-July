<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__steam_v_r___test_throw_8cs_source">
<title>SteamVR_TestThrow.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/Extras/SteamVR_TestThrow.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//=======&#32;Copyright&#32;(c)&#32;Valve&#32;Corporation,&#32;All&#32;rights&#32;reserved.&#32;===============</emphasis>
00002 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00003 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00004 
00005 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_extras">Valve.VR.Extras</link>
00006 {
00007 &#32;&#32;&#32;&#32;[RequireComponent(typeof(SteamVR_TrackedObject))]
<anchor xml:id="__steam_v_r___test_throw_8cs_source_1l00008"/><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw">SteamVR_TestThrow</link>&#32;:&#32;MonoBehaviour
00009 &#32;&#32;&#32;&#32;{
<anchor xml:id="__steam_v_r___test_throw_8cs_source_1l00010"/><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1a7c18e05c94ca48194ceba72faf8107e7">00010</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;<link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1a7c18e05c94ca48194ceba72faf8107e7">prefab</link>;
<anchor xml:id="__steam_v_r___test_throw_8cs_source_1l00011"/><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1acc9402353f3d39517b0b4a9bd4a01bb0">00011</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Rigidbody&#32;<link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1acc9402353f3d39517b0b4a9bd4a01bb0">attachPoint</link>;
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__steam_v_r___test_throw_8cs_source_1l00013"/><link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1ad42383e28568def64bda4ac349af0e09">00013</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___boolean">SteamVR_Action_Boolean</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1ad42383e28568def64bda4ac349af0e09">spawn</link>&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___input">SteamVR_Input</link>.GetAction&lt;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___boolean">SteamVR_Action_Boolean</link>&gt;(<emphasis role="stringliteral">&quot;InteractUI&quot;</emphasis>);
00014 
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___behaviour___pose">SteamVR_Behaviour_Pose</link>&#32;trackedObj;
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FixedJoint&#32;joint;
00017 
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;trackedObj&#32;=&#32;GetComponent&lt;SteamVR_Behaviour_Pose&gt;();
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00022 
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;FixedUpdate()
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(joint&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1ad42383e28568def64bda4ac349af0e09">spawn</link>.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1aa0a7eb5f7e02e35fd6922dd30b087f77">GetStateDown</link>(trackedObj.inputSource))
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;go&#32;=&#32;GameObject.Instantiate(<link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1a7c18e05c94ca48194ceba72faf8107e7">prefab</link>);
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;go.transform.position&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1acc9402353f3d39517b0b4a9bd4a01bb0">attachPoint</link>.transform.position;
00029 
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joint&#32;=&#32;go.AddComponent&lt;FixedJoint&gt;();
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joint.connectedBody&#32;=&#32;<link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1acc9402353f3d39517b0b4a9bd4a01bb0">attachPoint</link>;
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(joint&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;<link linkend="_class_valve_1_1_v_r_1_1_extras_1_1_steam_v_r___test_throw_1ad42383e28568def64bda4ac349af0e09">spawn</link>.<link linkend="_class_valve_1_1_v_r_1_1_steam_v_r___action___boolean_1a4b582272fb4f9c529e519246332e9922">GetStateUp</link>(trackedObj.inputSource))
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;go&#32;=&#32;joint.gameObject;
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;rigidbody&#32;=&#32;go.GetComponent&lt;Rigidbody&gt;();
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>.DestroyImmediate(joint);
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;joint&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__t_m_pro___font_asset_creator_window_8cs_1aef19bab18b9814edeef255c43e4f6bbc">Object</link>.Destroy(go,&#32;15.0f);
00040 
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;should&#32;probably&#32;apply&#32;the&#32;offset&#32;between&#32;trackedObj.transform.position</emphasis>
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;and&#32;device.transform.pos&#32;to&#32;insert&#32;into&#32;the&#32;physics&#32;sim&#32;at&#32;the&#32;correct</emphasis>
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;location,&#32;however,&#32;we&#32;would&#32;then&#32;want&#32;to&#32;predict&#32;ahead&#32;the&#32;visual&#32;representation</emphasis>
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;by&#32;the&#32;same&#32;amount&#32;we&#32;are&#32;predicting&#32;our&#32;render&#32;poses.</emphasis>
00045 
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;origin&#32;=&#32;trackedObj.origin&#32;?&#32;trackedObj.origin&#32;:&#32;trackedObj.transform.parent;
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(origin&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.velocity&#32;=&#32;origin.TransformVector(trackedObj.GetVelocity());
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.angularVelocity&#32;=&#32;origin.TransformVector(trackedObj.GetAngularVelocity());
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.velocity&#32;=&#32;trackedObj.GetVelocity();
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.angularVelocity&#32;=&#32;trackedObj.GetAngularVelocity();
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00057 
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.maxAngularVelocity&#32;=&#32;rigidbody.angularVelocity.magnitude;
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00061 &#32;&#32;&#32;&#32;}
00062 }
</programlisting></section>
