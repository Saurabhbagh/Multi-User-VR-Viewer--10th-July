<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__grenade_8cs_source">
<title>Grenade.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Samples/Grenade/Grenade.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00002 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00003 
00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system_1_1_sample">Valve.VR.InteractionSystem.Sample</link>
00005 {
<anchor xml:id="__grenade_8cs_source_1l00006"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade">00006</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade">Grenade</link>&#32;:&#32;MonoBehaviour
00007 &#32;&#32;&#32;&#32;{
<anchor xml:id="__grenade_8cs_source_1l00008"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1a35871cdd033148c6279bd16992cc656b">00008</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1a35871cdd033148c6279bd16992cc656b">explodePartPrefab</link>;
<anchor xml:id="__grenade_8cs_source_1l00009"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1aad5d8ce9979d97f5cc30ffe82f4bf550">00009</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1aad5d8ce9979d97f5cc30ffe82f4bf550">explodeCount</link>&#32;=&#32;10;
00010 
<anchor xml:id="__grenade_8cs_source_1l00011"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1ac7b2055641a0a93c3416d80dd9eeeb62">00011</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1ac7b2055641a0a93c3416d80dd9eeeb62">minMagnitudeToExplode</link>&#32;=&#32;1f;
00012 
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_interactable">Interactable</link>&#32;interactable;
00014 
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interactable&#32;=&#32;this.GetComponent&lt;Interactable&gt;();
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00019 
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnCollisionEnter(Collision&#32;collision)
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(interactable&#32;!=&#32;<emphasis role="keyword">null</emphasis>&#32;&amp;&amp;&#32;interactable.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_interactable_1a1980377b09ca72c574f045e7d6aac17f">attachedToHand</link>&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;<emphasis role="comment">//don&apos;t&#32;explode&#32;in&#32;hand</emphasis>
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00024 
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(collision.impulse.magnitude&#32;&gt;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1ac7b2055641a0a93c3416d80dd9eeeb62">minMagnitudeToExplode</link>)
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;explodeIndex&#32;=&#32;0;&#32;explodeIndex&#32;&lt;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1aad5d8ce9979d97f5cc30ffe82f4bf550">explodeCount</link>;&#32;explodeIndex++)
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;explodePart&#32;=&#32;(GameObject)GameObject.Instantiate(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_grenade_1a35871cdd033148c6279bd16992cc656b">explodePartPrefab</link>,&#32;<emphasis role="keyword">this</emphasis>.transform.position,&#32;<emphasis role="keyword">this</emphasis>.transform.rotation);
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;explodePart.GetComponentInChildren&lt;MeshRenderer&gt;().material.SetColor(<emphasis role="stringliteral">&quot;_TintColor&quot;</emphasis>,&#32;Random.ColorHSV(0f,&#32;1f,&#32;1f,&#32;1f,&#32;0.5f,&#32;1f));
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00032 
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Destroy(this.gameObject);
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00036 &#32;&#32;&#32;&#32;}
00037 }
</programlisting></section>
