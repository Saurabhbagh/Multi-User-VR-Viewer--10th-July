<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base">
<title>Leap.Unity.Attributes.DisableIfBase Class Reference</title>
<indexterm><primary>Leap.Unity.Attributes.DisableIfBase</primary></indexterm>
<para>

<para>Conditionally disables a property based on the value of another property. The only condition types that are currently supported are bool types, and enum types. The property has two arguments names &apos;equalTo&apos; and &apos;notEqualTo&apos;. Exactly one of them must be specified, like so: </para>
 
</para>
<para>Inheritance diagram for Leap.Unity.Attributes.DisableIfBase:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1a4bbcfc61cfc971972a5ea0725916a44e">DisableIfBase</link> (object isEqualTo, object isNotEqualTo, bool <link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1a0b33d1b01859c98669e445ac4c0570fa">isAndOperation</link>, params string[] <link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1a5c529573cc3c68609da4337c7acf1cf2">propertyNames</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>readonly string [] <link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1a5c529573cc3c68609da4337c7acf1cf2">propertyNames</link></para>
</listitem>
            <listitem><para>readonly object <link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1aef08e07168b8f1ca42d005a1e4dac19c">testValue</link></para>
</listitem>
            <listitem><para>readonly bool <link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1ae9879c16470936206d68800ce2dfa26a">disableResult</link></para>
</listitem>
            <listitem><para>readonly bool <link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1a0b33d1b01859c98669e445ac4c0570fa">isAndOperation</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Conditionally disables a property based on the value of another property. The only condition types that are currently supported are bool types, and enum types. The property has two arguments names &apos;equalTo&apos; and &apos;notEqualTo&apos;. Exactly one of them must be specified, like so: </para>



<para>[<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if">DisableIf</link>(&quot;myBoolProperty&quot;, isEqualTo: true)] [<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if">DisableIf</link>(&quot;myEnumProperty&quot;, isNotEqualTo: MyEnum.Value)] [<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_any">DisableIfAny</link>(&quot;bool1&quot;, &quot;bool2&quot;, isEqualTo: false)] [<link linkend="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_all">DisableIfAll</link>(&quot;cond1&quot;, &quot;cond2&quot;, &quot;cond3&quot;, isNotEqualTo: true)] </para>
<para>
Definition at line <link linkend="__disable_if_8cs_source_1l00028">28</link> of file <link linkend="__disable_if_8cs_source">DisableIf.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1a4bbcfc61cfc971972a5ea0725916a44e"/>    <section>
    <title>DisableIfBase()</title>
<indexterm><primary>DisableIfBase</primary><secondary>Leap.Unity.Attributes.DisableIfBase</secondary></indexterm>
<indexterm><primary>Leap.Unity.Attributes.DisableIfBase</primary><secondary>DisableIfBase</secondary></indexterm>
<para><computeroutput>Leap.Unity.Attributes.DisableIfBase.DisableIfBase (object isEqualTo, object isNotEqualTo, bool isAndOperation, params string [] propertyNames)</computeroutput></para><para>
Definition at line <link linkend="__disable_if_8cs_source_1l00034">34</link> of file <link linkend="__disable_if_8cs_source">DisableIf.cs</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1ae9879c16470936206d68800ce2dfa26a"/>    <section>
    <title>disableResult</title>
<indexterm><primary>disableResult</primary><secondary>Leap.Unity.Attributes.DisableIfBase</secondary></indexterm>
<indexterm><primary>Leap.Unity.Attributes.DisableIfBase</primary><secondary>disableResult</secondary></indexterm>
<para><computeroutput>readonly bool Leap.Unity.Attributes.DisableIfBase.disableResult</computeroutput></para><para>
Definition at line <link linkend="__disable_if_8cs_source_1l00031">31</link> of file <link linkend="__disable_if_8cs_source">DisableIf.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1a0b33d1b01859c98669e445ac4c0570fa"/>    <section>
    <title>isAndOperation</title>
<indexterm><primary>isAndOperation</primary><secondary>Leap.Unity.Attributes.DisableIfBase</secondary></indexterm>
<indexterm><primary>Leap.Unity.Attributes.DisableIfBase</primary><secondary>isAndOperation</secondary></indexterm>
<para><computeroutput>readonly bool Leap.Unity.Attributes.DisableIfBase.isAndOperation</computeroutput></para><para>
Definition at line <link linkend="__disable_if_8cs_source_1l00032">32</link> of file <link linkend="__disable_if_8cs_source">DisableIf.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1a5c529573cc3c68609da4337c7acf1cf2"/>    <section>
    <title>propertyNames</title>
<indexterm><primary>propertyNames</primary><secondary>Leap.Unity.Attributes.DisableIfBase</secondary></indexterm>
<indexterm><primary>Leap.Unity.Attributes.DisableIfBase</primary><secondary>propertyNames</secondary></indexterm>
<para><computeroutput>readonly string [] Leap.Unity.Attributes.DisableIfBase.propertyNames</computeroutput></para><para>
Definition at line <link linkend="__disable_if_8cs_source_1l00029">29</link> of file <link linkend="__disable_if_8cs_source">DisableIf.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_attributes_1_1_disable_if_base_1aef08e07168b8f1ca42d005a1e4dac19c"/>    <section>
    <title>testValue</title>
<indexterm><primary>testValue</primary><secondary>Leap.Unity.Attributes.DisableIfBase</secondary></indexterm>
<indexterm><primary>Leap.Unity.Attributes.DisableIfBase</primary><secondary>testValue</secondary></indexterm>
<para><computeroutput>readonly object Leap.Unity.Attributes.DisableIfBase.testValue</computeroutput></para><para>
Definition at line <link linkend="__disable_if_8cs_source_1l00030">30</link> of file <link linkend="__disable_if_8cs_source">DisableIf.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Attributes/<link linkend="__disable_if_8cs">DisableIf.cs</link></section>
</section>
