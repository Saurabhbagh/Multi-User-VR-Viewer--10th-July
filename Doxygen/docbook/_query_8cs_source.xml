<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__query_8cs_source">
<title>Query.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Query/Query.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00013 
<anchor xml:id="__query_8cs_source_1l00014"/><link linkend="_namespace_leap_1_1_unity_1_1_query">00014</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_query">Leap.Unity.Query</link>&#32;{
00015 
00016 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>QueryConversionExtensions&#32;{
00017 
00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(<emphasis role="keyword">this</emphasis>&#32;ICollection&lt;T&gt;&#32;collection)&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(collection);
00023 &#32;&#32;&#32;&#32;}
00024 
00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(<emphasis role="keyword">this</emphasis>&#32;IEnumerable&lt;T&gt;&#32;enumerable)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;T&gt;&#32;list&#32;=&#32;Pool&lt;List&lt;T&gt;&gt;.Spawn();
00030 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.AddRange(enumerable);
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(list);
00033 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">finally</emphasis>&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Clear();
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;List&lt;T&gt;&gt;.Recycle(list);
00036 &#32;&#32;&#32;&#32;&#32;&#32;}
00037 &#32;&#32;&#32;&#32;}
00038 
00042 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(<emphasis role="keyword">this</emphasis>&#32;IEnumerator&lt;T&gt;&#32;enumerator)&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;List&lt;T&gt;&#32;list&#32;=&#32;Pool&lt;List&lt;T&gt;&gt;.Spawn();
00044 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(enumerator.MoveNext())&#32;{
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Add(enumerator.Current);
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(list);
00049 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">finally</emphasis>&#32;{
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.Clear();
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;List&lt;T&gt;&gt;.Recycle(list);
00052 &#32;&#32;&#32;&#32;&#32;&#32;}
00053 &#32;&#32;&#32;&#32;}
00054 
00058 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(<emphasis role="keyword">this</emphasis>&#32;T[,]&#32;array)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;dst&#32;=&#32;ArrayPool&lt;T&gt;.Spawn(array.GetLength(0)&#32;*&#32;array.GetLength(1));
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dstIndex&#32;=&#32;0;
00061 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;array.GetLength(0);&#32;i++)&#32;{
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;array.GetLength(1);&#32;j++)&#32;{
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dst[dstIndex++]&#32;=&#32;array[i,&#32;j];
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00065 &#32;&#32;&#32;&#32;&#32;&#32;}
00066 
00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>(dst,&#32;array.GetLength(0)&#32;*&#32;array.GetLength(1));
00068 &#32;&#32;&#32;&#32;}
00069 &#32;&#32;}
00070 
<anchor xml:id="__query_8cs_source_1l00091"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">00091</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query</link>&lt;T&gt;&#32;{
00092 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;T[]&#32;_array;
00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_count;
00094 
00095 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Validator&#32;_validator;
00096 
<anchor xml:id="__query_8cs_source_1l00102"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a045e15022385ac33bf7ea2448de59f93">00102</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a045e15022385ac33bf7ea2448de59f93">Query</link>(T[]&#32;array,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)&#32;{
00103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(array&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentNullException(<emphasis role="stringliteral">&quot;array&quot;</emphasis>);
00105 &#32;&#32;&#32;&#32;&#32;&#32;}
00106 
00107 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;&lt;&#32;0)&#32;{
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentException(<emphasis role="stringliteral">&quot;Count&#32;must&#32;be&#32;non-negative,&#32;but&#32;was&#32;&quot;</emphasis>&#32;+&#32;count);
00109 &#32;&#32;&#32;&#32;&#32;&#32;}
00110 
00111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;&gt;&#32;array.Length)&#32;{
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentException(<emphasis role="stringliteral">&quot;Count&#32;was&#32;&quot;</emphasis>&#32;+&#32;count&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;but&#32;the&#32;provided&#32;array&#32;only&#32;had&#32;a&#32;length&#32;of&#32;&quot;</emphasis>&#32;+&#32;array.Length);
00113 &#32;&#32;&#32;&#32;&#32;&#32;}
00114 
00115 &#32;&#32;&#32;&#32;&#32;&#32;_array&#32;=&#32;array;
00116 &#32;&#32;&#32;&#32;&#32;&#32;_count&#32;=&#32;count;
00117 &#32;&#32;&#32;&#32;&#32;&#32;_validator&#32;=&#32;Validator.Spawn();
00118 &#32;&#32;&#32;&#32;}
00119 
<anchor xml:id="__query_8cs_source_1l00123"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a38ad1df9355f871cde35fe9ca7c72da0">00123</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a38ad1df9355f871cde35fe9ca7c72da0">Query</link>(ICollection&lt;T&gt;&#32;collection)&#32;{
00124 &#32;&#32;&#32;&#32;&#32;&#32;_array&#32;=&#32;ArrayPool&lt;T&gt;.Spawn(collection.Count);
00125 &#32;&#32;&#32;&#32;&#32;&#32;_count&#32;=&#32;collection.Count;
00126 &#32;&#32;&#32;&#32;&#32;&#32;collection.CopyTo(_array,&#32;0);
00127 
00128 &#32;&#32;&#32;&#32;&#32;&#32;_validator&#32;=&#32;Validator.Spawn();
00129 &#32;&#32;&#32;&#32;}
00130 
<anchor xml:id="__query_8cs_source_1l00134"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a023addd104eccd2f92b37e67eb84208f">00134</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a023addd104eccd2f92b37e67eb84208f">Query</link>(<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;T&gt;</link>&#32;other)&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;other._validator.Validate();
00136 
00137 &#32;&#32;&#32;&#32;&#32;&#32;_array&#32;=&#32;ArrayPool&lt;T&gt;.Spawn(other._count);
00138 &#32;&#32;&#32;&#32;&#32;&#32;_count&#32;=&#32;other._count;
00139 &#32;&#32;&#32;&#32;&#32;&#32;Array.Copy(other._array,&#32;_array,&#32;_count);
00140 
00141 &#32;&#32;&#32;&#32;&#32;&#32;_validator&#32;=&#32;Validator.Spawn();
00142 &#32;&#32;&#32;&#32;}
00143 
00144 &#32;&#32;&#32;&#32;<emphasis role="comment">//Certain&#32;operators&#32;cannot&#32;be&#32;implemented&#32;as&#32;extension&#32;methods&#32;due&#32;to&#32;the&#32;way</emphasis>
00145 &#32;&#32;&#32;&#32;<emphasis role="comment">//the&#32;generic&#32;arguments&#32;are&#32;to&#32;be&#32;consumed&#32;by&#32;the&#32;user,&#32;so&#32;there&#32;are&#32;implemented</emphasis>
00146 &#32;&#32;&#32;&#32;<emphasis role="comment">//directly&#32;here&#32;in&#32;the&#32;Query&#32;class.</emphasis>
00147 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;DIRECT&#32;IMPLEMENTED&#32;OPERATORS</emphasis>
00148 
<anchor xml:id="__query_8cs_source_1l00158"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a88411752d9806dc0364de025ac9b53b9">00158</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;K&gt;</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a88411752d9806dc0364de025ac9b53b9">OfType&lt;K&gt;</link>()&#32;where&#32;K&#32;:&#32;T&#32;{
00159 &#32;&#32;&#32;&#32;&#32;&#32;_validator.Validate();
00160 
00161 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;dstArray&#32;=&#32;ArrayPool&lt;K&gt;.Spawn(_count);
00162 
00163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dstCount&#32;=&#32;0;
00164 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_count;&#32;i++)&#32;{
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_array[i]&#32;is&#32;K)&#32;{
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dstArray[dstCount++]&#32;=&#32;(K)_array[i];
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00168 &#32;&#32;&#32;&#32;&#32;&#32;}
00169 
00170 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a4c333e8a0bb14c3237fa65d2ad308c5a">Dispose</link>();
00171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;K&gt;</link>(dstArray,&#32;dstCount);
00172 &#32;&#32;&#32;&#32;}
00173 
<anchor xml:id="__query_8cs_source_1l00178"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a907b194ea3d1901191343fa409ca6c42">00178</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query">Query&lt;K&gt;</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a907b194ea3d1901191343fa409ca6c42">Cast&lt;K&gt;</link>()&#32;where&#32;K&#32;:&#32;class&#32;{
00179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this.Select(item&#32;=&gt;&#32;item&#32;as&#32;K);
00180 &#32;&#32;&#32;&#32;}
00181 
00182 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00183 
<anchor xml:id="__query_8cs_source_1l00188"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a4c333e8a0bb14c3237fa65d2ad308c5a">00188</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a4c333e8a0bb14c3237fa65d2ad308c5a">Dispose</link>()&#32;{
00189 &#32;&#32;&#32;&#32;&#32;&#32;_validator.Validate();
00190 
00191 &#32;&#32;&#32;&#32;&#32;&#32;ArrayPool&lt;T&gt;.Recycle(_array);
00192 &#32;&#32;&#32;&#32;&#32;&#32;Validator.Invalidate(_validator);
00193 
00194 &#32;&#32;&#32;&#32;&#32;&#32;_array&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00195 &#32;&#32;&#32;&#32;&#32;&#32;_count&#32;=&#32;0;
00196 &#32;&#32;&#32;&#32;}
00197 
<anchor xml:id="__query_8cs_source_1l00203"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a411e47e60b7ae4d9df1d64f280feb617">00203</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a411e47e60b7ae4d9df1d64f280feb617">Deconstruct</link>(out&#32;T[]&#32;array,&#32;out&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)&#32;{
00204 &#32;&#32;&#32;&#32;&#32;&#32;_validator.Validate();
00205 
00206 &#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;_array;
00207 &#32;&#32;&#32;&#32;&#32;&#32;count&#32;=&#32;_count;
00208 
00209 &#32;&#32;&#32;&#32;&#32;&#32;Validator.Invalidate(_validator);
00210 &#32;&#32;&#32;&#32;&#32;&#32;_array&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00211 &#32;&#32;&#32;&#32;&#32;&#32;_count&#32;=&#32;0;
00212 &#32;&#32;&#32;&#32;}
00213 
<anchor xml:id="__query_8cs_source_1l00220"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a945832fdab8203804442a9d043ea55cf">00220</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">QuerySlice</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a945832fdab8203804442a9d043ea55cf">Deconstruct</link>()&#32;{
00221 &#32;&#32;&#32;&#32;&#32;&#32;T[]&#32;array;
00222 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count;
00223 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a945832fdab8203804442a9d043ea55cf">Deconstruct</link>(out&#32;array,&#32;out&#32;count);
00224 
00225 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">QuerySlice</link>(array,&#32;count);
00226 &#32;&#32;&#32;&#32;}
00227 
<anchor xml:id="__query_8cs_source_1l00228"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a754dd1572406e8be39111c186daa1b74">00228</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator">Enumerator</link>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a754dd1572406e8be39111c186daa1b74">GetEnumerator</link>()&#32;{
00229 &#32;&#32;&#32;&#32;&#32;&#32;_validator.Validate();
00230 
00231 &#32;&#32;&#32;&#32;&#32;&#32;T[]&#32;array;
00232 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count;
00233 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1a945832fdab8203804442a9d043ea55cf">Deconstruct</link>(out&#32;array,&#32;out&#32;count);
00234 
00235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator">Enumerator</link>(array,&#32;count);
00236 &#32;&#32;&#32;&#32;}
00237 
<anchor xml:id="__query_8cs_source_1l00238"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator">00238</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator">Enumerator</link>&#32;:&#32;IEnumerator&lt;T&gt;&#32;{
00239 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;T[]&#32;_array;
00240 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_count;
00241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_nextIndex;
00242 
<anchor xml:id="__query_8cs_source_1l00243"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a6feb268d2a5f9856c0305eace9bb7c23">00243</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;T&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a6feb268d2a5f9856c0305eace9bb7c23">Current</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">set</emphasis>;&#32;}
00244 
<anchor xml:id="__query_8cs_source_1l00245"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1af3a50234f50d45d3e42c0d3963586a41">00245</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1af3a50234f50d45d3e42c0d3963586a41">Enumerator</link>(T[]&#32;array,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)&#32;{
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_array&#32;=&#32;array;
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_count&#32;=&#32;count;
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_nextIndex&#32;=&#32;0;
00249 
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a6feb268d2a5f9856c0305eace9bb7c23">Current</link>&#32;=&#32;<emphasis role="keywordflow">default</emphasis>(T);
00251 &#32;&#32;&#32;&#32;&#32;&#32;}
00252 
<anchor xml:id="__query_8cs_source_1l00253"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a47cac3a6e8199ed509d811a3a6322441">00253</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">object</emphasis>&#32;IEnumerator.Current&#32;{
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_nextIndex&#32;==&#32;0)&#32;{
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;InvalidOperationException();
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00258 
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a6feb268d2a5f9856c0305eace9bb7c23">Current</link>;
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00261 &#32;&#32;&#32;&#32;&#32;&#32;}
00262 
<anchor xml:id="__query_8cs_source_1l00263"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a37bb49da4458584db3d123073cd910df">00263</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a37bb49da4458584db3d123073cd910df">MoveNext</link>()&#32;{
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_nextIndex&#32;&gt;=&#32;_count)&#32;{
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00267 
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a6feb268d2a5f9856c0305eace9bb7c23">Current</link>&#32;=&#32;_array[_nextIndex++];
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00270 &#32;&#32;&#32;&#32;&#32;&#32;}
00271 
<anchor xml:id="__query_8cs_source_1l00272"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a484f305e44e8eb6174d2dd9d3c8a97e4">00272</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1a484f305e44e8eb6174d2dd9d3c8a97e4">Dispose</link>()&#32;{
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ArrayPool&lt;T&gt;.Recycle(_array);
00274 &#32;&#32;&#32;&#32;&#32;&#32;}
00275 
<anchor xml:id="__query_8cs_source_1l00276"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1abaeb7f38f97d51e247fb0e5baf3b2964">00276</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_enumerator_1abaeb7f38f97d51e247fb0e5baf3b2964">Reset</link>()&#32;{&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;InvalidOperationException();&#32;}
00277 &#32;&#32;&#32;&#32;}
00278 
<anchor xml:id="__query_8cs_source_1l00279"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">00279</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice">QuerySlice</link>&#32;:&#32;IDisposable&#32;{
<anchor xml:id="__query_8cs_source_1l00280"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a58cf958adb993f6899d6cf781275ffd5">00280</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;T[]&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a58cf958adb993f6899d6cf781275ffd5">BackingArray</link>;
<anchor xml:id="__query_8cs_source_1l00281"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a6075d2a16ccb46aa50e334152f61ddab">00281</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;readonly&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a6075d2a16ccb46aa50e334152f61ddab">Count</link>;
00282 
<anchor xml:id="__query_8cs_source_1l00283"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a6183738029036bc563835eee8fee7dbc">00283</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a6183738029036bc563835eee8fee7dbc">QuerySlice</link>(T[]&#32;array,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count)&#32;{
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a58cf958adb993f6899d6cf781275ffd5">BackingArray</link>&#32;=&#32;array;
00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a6075d2a16ccb46aa50e334152f61ddab">Count</link>&#32;=&#32;count;
00286 &#32;&#32;&#32;&#32;&#32;&#32;}
00287 
<anchor xml:id="__query_8cs_source_1l00288"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a34e22931e27acc329a9eabef65040823">00288</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;T&#32;<emphasis role="keyword">this</emphasis>[<emphasis role="keywordtype">int</emphasis>&#32;index]&#32;{
00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a58cf958adb993f6899d6cf781275ffd5">BackingArray</link>[index];
00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00292 &#32;&#32;&#32;&#32;&#32;&#32;}
00293 
<anchor xml:id="__query_8cs_source_1l00294"/><link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1ac55109634717c8cbbc44aefb5c686040">00294</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1ac55109634717c8cbbc44aefb5c686040">Dispose</link>()&#32;{
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ArrayPool&lt;T&gt;.Recycle(<link linkend="_struct_leap_1_1_unity_1_1_query_1_1_query_1_1_query_slice_1a58cf958adb993f6899d6cf781275ffd5">BackingArray</link>);
00296 &#32;&#32;&#32;&#32;&#32;&#32;}
00297 &#32;&#32;&#32;&#32;}
00298 
00299 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>Validator&#32;{
00300 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_nextId&#32;=&#32;1;
00301 
00302 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Id&#32;_idRef;
00303 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_idValue;
00304 
00305 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Validate()&#32;{
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_idValue&#32;==&#32;0)&#32;{
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;InvalidOperationException(<emphasis role="stringliteral">&quot;This&#32;Query&#32;is&#32;not&#32;valid,&#32;you&#32;cannot&#32;construct&#32;a&#32;Query&#32;using&#32;the&#32;default&#32;constructor.&quot;</emphasis>);
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00309 
00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_idRef&#32;==&#32;<emphasis role="keyword">null</emphasis>&#32;||&#32;_idRef.value&#32;!=&#32;_idValue)&#32;{
00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;InvalidOperationException(<emphasis role="stringliteral">&quot;This&#32;Query&#32;has&#32;already&#32;been&#32;disposed.&#32;&#32;A&#32;Query&#32;can&#32;only&#32;be&#32;used&#32;once&#32;before&#32;it&#32;is&#32;automatically&#32;disposed.&quot;</emphasis>);
00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00313 &#32;&#32;&#32;&#32;&#32;&#32;}
00314 
00315 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;Validator&#32;Spawn()&#32;{
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Id&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;Pool&lt;Id&gt;.Spawn();
00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">id</emphasis>.value&#32;=&#32;_nextId++;
00318 
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Validator()&#32;{
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_idRef&#32;=&#32;id,
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_idValue&#32;=&#32;<emphasis role="keywordtype">id</emphasis>.value
00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
00323 &#32;&#32;&#32;&#32;&#32;&#32;}
00324 
00325 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Invalidate(Validator&#32;validator)&#32;{
00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;validator._idRef.value&#32;=&#32;-1;
00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Pool&lt;Id&gt;.Recycle(validator._idRef);
00328 &#32;&#32;&#32;&#32;&#32;&#32;}
00329 
00330 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>Id&#32;{
00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value;
00332 &#32;&#32;&#32;&#32;&#32;&#32;}
00333 &#32;&#32;&#32;&#32;}
00334 &#32;&#32;}
00335 }
</programlisting></section>
