<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__multi_typed_reference_8cs_source">
<title>MultiTypedReference.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/DataStructures/MultiTypedReference.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00013 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00014 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00015 <emphasis role="preprocessor">#endif</emphasis>
00016 
00017 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00018 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00028"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">00028</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link>&lt;BaseType&gt;&#32;where&#32;BaseType&#32;:&#32;class&#32;{
00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Clear();
<anchor xml:id="__multi_typed_reference_8cs_source_1l00030"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a91b2326316c634aa0f22c22711116f23">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">abstract</emphasis>&#32;BaseType&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a91b2326316c634aa0f22c22711116f23">Value</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
00031 &#32;&#32;}
00032 
00033 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>MultiTypedReferenceUtil&#32;{
00034 
00035 <emphasis role="preprocessor">#if&#32;UNITY_EDITOR</emphasis>
00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;ID_NAME_TABLE&#32;=&#32;<emphasis role="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz&quot;</emphasis>;
00037 
00038 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;SerializedProperty&#32;GetReferenceProperty(SerializedProperty&#32;property)&#32;{
00039 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;indexProp&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(<emphasis role="stringliteral">&quot;_index&quot;</emphasis>);
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;indexValue&#32;=&#32;indexProp.intValue;
00041 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(indexValue&#32;==&#32;-1)&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00043 &#32;&#32;&#32;&#32;&#32;&#32;}
00044 
00045 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;listPropName&#32;=&#32;<emphasis role="stringliteral">&quot;_&quot;</emphasis>&#32;+&#32;ID_NAME_TABLE[indexValue];
00046 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;listProp&#32;=&#32;<emphasis role="keyword">property</emphasis>.FindPropertyRelative(listPropName);
00047 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;listProp.GetArrayElementAtIndex(0);
00048 &#32;&#32;&#32;&#32;}
00049 <emphasis role="preprocessor">#endif</emphasis>
00050 &#32;&#32;}
00051 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00052"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">00052</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link>&lt;BaseType,&#32;A,&#32;B&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link>&lt;BaseType&gt;
00053 &#32;&#32;&#32;&#32;where&#32;BaseType&#32;:&#32;class
00054 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00055 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType&#32;{
00056 
00057 &#32;&#32;&#32;&#32;[SerializeField]
<anchor xml:id="__multi_typed_reference_8cs_source_1l00058"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a027fa28970647a98011ac3ffb2ab98e7">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a027fa28970647a98011ac3ffb2ab98e7">_index</link>&#32;=&#32;-1;
00059 
00060 &#32;&#32;&#32;&#32;[SerializeField]
00061 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;A&gt;&#32;_a&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;A&gt;();
00062 
00063 &#32;&#32;&#32;&#32;[SerializeField]
00064 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;B&gt;&#32;_b&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;B&gt;();
00065 
00066 &#32;&#32;&#32;&#32;[NonSerialized]
<anchor xml:id="__multi_typed_reference_8cs_source_1l00067"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1af1b814f440dbe6f0aa99832e744ff20b">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;BaseType&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1af1b814f440dbe6f0aa99832e744ff20b">_cachedValue</link>;
00068 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00069"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a0d93a26bf48ef26add26b05375e71abf">00069</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a0d93a26bf48ef26add26b05375e71abf">Clear</link>()&#32;{
00070 &#32;&#32;&#32;&#32;&#32;&#32;_cachedValue&#32;=&#32;<emphasis role="keyword">null</emphasis>;
00071 
00072 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_index&#32;==&#32;0)&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_a.Clear();
00074 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_index&#32;==&#32;1)&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_b.Clear();
00076 &#32;&#32;&#32;&#32;&#32;&#32;}
00077 
00078 &#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;-1;
00079 &#32;&#32;&#32;&#32;}
00080 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00081"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1ade92d6c8400705d9c1e95e17b3b5fad0">00081</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;sealed&#32;<emphasis role="keyword">override</emphasis>&#32;BaseType&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a91b2326316c634aa0f22c22711116f23">Value</link>&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_cachedValue&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_cachedValue;
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00086 
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_cachedValue&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a06947a64ab5255d15d5da3378f408d57">internalGet</link>();
00088 
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_cachedValue;
00090 &#32;&#32;&#32;&#32;&#32;&#32;}
00091 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a41f239c861d98712ece560121a3424d6">Clear</link>();
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a29c01de065a580a0fe0b71b40a18151b">internalSetAfterClear</link>(value);
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_cachedValue&#32;=&#32;value;
00095 &#32;&#32;&#32;&#32;&#32;&#32;}
00096 &#32;&#32;&#32;&#32;}
00097 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00098"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a06947a64ab5255d15d5da3378f408d57">00098</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;BaseType&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a06947a64ab5255d15d5da3378f408d57">internalGet</link>()&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_index&#32;==&#32;-1)&#32;{
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00101 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_index&#32;==&#32;0)&#32;{
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_cachedValue&#32;=&#32;_a[0];
00103 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_index&#32;==&#32;1)&#32;{
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_cachedValue&#32;=&#32;_b[0];
00105 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;Exception(<emphasis role="stringliteral">&quot;Invalid&#32;index&#32;&quot;</emphasis>&#32;+&#32;_index);
00107 &#32;&#32;&#32;&#32;&#32;&#32;}
00108 &#32;&#32;&#32;&#32;}
00109 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00110"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a29c01de065a580a0fe0b71b40a18151b">00110</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a29c01de065a580a0fe0b71b40a18151b">internalSetAfterClear</link>(BaseType&#32;obj)&#32;{
00111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;-1;
00113 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;is&#32;A)&#32;{
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_a.Add((A)obj);
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;0;
00116 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;is&#32;B)&#32;{
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_b.Add((B)obj);
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_index&#32;=&#32;1;
00119 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;ArgumentException(<emphasis role="stringliteral">&quot;The&#32;type&#32;&quot;</emphasis>&#32;+&#32;obj.GetType().Name&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;is&#32;not&#32;supported&#32;by&#32;this&#32;reference.&quot;</emphasis>);
00121 &#32;&#32;&#32;&#32;&#32;&#32;}
00122 &#32;&#32;&#32;&#32;}
00123 &#32;&#32;}
00124 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00125"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">00125</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link>&lt;BaseType,&#32;A,&#32;B,&#32;C&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link>&lt;BaseType,&#32;A,&#32;B&gt;
00126 &#32;&#32;&#32;&#32;where&#32;BaseType&#32;:&#32;class
00127 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00128 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType
00129 &#32;&#32;&#32;&#32;where&#32;C&#32;:&#32;BaseType&#32;{
00130 
00131 &#32;&#32;&#32;&#32;[SerializeField]
00132 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;C&gt;&#32;_c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;C&gt;();
00133 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00134"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a0d93a26bf48ef26add26b05375e71abf">00134</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a0d93a26bf48ef26add26b05375e71abf">Clear</link>()&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a027fa28970647a98011ac3ffb2ab98e7">_index</link>&#32;==&#32;2)&#32;{
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_c.Clear();
00137 &#32;&#32;&#32;&#32;&#32;&#32;}
00138 
00139 &#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
00140 &#32;&#32;&#32;&#32;}
00141 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00142"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a49ff1664d5d36e404895ec93b97582e4">00142</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;BaseType&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a49ff1664d5d36e404895ec93b97582e4">internalGet</link>()&#32;{
00143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a027fa28970647a98011ac3ffb2ab98e7">_index</link>&#32;==&#32;2)&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_c[0];
00145 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.internalGet();
00147 &#32;&#32;&#32;&#32;&#32;&#32;}
00148 &#32;&#32;&#32;&#32;}
00149 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00150"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a175a0d04c19c40484ddd0cdc6cee34fb">00150</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a175a0d04c19c40484ddd0cdc6cee34fb">internalSetAfterClear</link>(BaseType&#32;obj)&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;is&#32;C)&#32;{
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_c.Add((C)obj);
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a027fa28970647a98011ac3ffb2ab98e7">_index</link>&#32;=&#32;2;
00154 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.internalSetAfterClear(obj);
00156 &#32;&#32;&#32;&#32;&#32;&#32;}
00157 &#32;&#32;&#32;&#32;}
00158 &#32;&#32;}
00159 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00160"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">00160</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link>&lt;BaseType,&#32;A,&#32;B,&#32;C,&#32;D&gt;&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference">MultiTypedReference</link>&lt;BaseType,&#32;A,&#32;B,&#32;C&gt;
00161 &#32;&#32;&#32;&#32;where&#32;BaseType&#32;:&#32;class
00162 &#32;&#32;&#32;&#32;where&#32;A&#32;:&#32;BaseType
00163 &#32;&#32;&#32;&#32;where&#32;B&#32;:&#32;BaseType
00164 &#32;&#32;&#32;&#32;where&#32;C&#32;:&#32;BaseType
00165 &#32;&#32;&#32;&#32;where&#32;D&#32;:&#32;BaseType&#32;{
00166 
00167 &#32;&#32;&#32;&#32;[SerializeField]
00168 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;D&gt;&#32;_d&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;D&gt;();
00169 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00170"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a0d93a26bf48ef26add26b05375e71abf">00170</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a0d93a26bf48ef26add26b05375e71abf">Clear</link>()&#32;{
00171 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a027fa28970647a98011ac3ffb2ab98e7">_index</link>&#32;==&#32;3)&#32;{
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_d.Clear();
00173 &#32;&#32;&#32;&#32;&#32;&#32;}
00174 
00175 &#32;&#32;&#32;&#32;&#32;&#32;base.Clear();
00176 &#32;&#32;&#32;&#32;}
00177 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00178"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a49ff1664d5d36e404895ec93b97582e4">00178</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;BaseType&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a49ff1664d5d36e404895ec93b97582e4">internalGet</link>()&#32;{
00179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a027fa28970647a98011ac3ffb2ab98e7">_index</link>&#32;==&#32;3)&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_d[0];
00181 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;base.internalGet();
00183 &#32;&#32;&#32;&#32;&#32;&#32;}
00184 &#32;&#32;&#32;&#32;}
00185 
<anchor xml:id="__multi_typed_reference_8cs_source_1l00186"/><link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a175a0d04c19c40484ddd0cdc6cee34fb">00186</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a175a0d04c19c40484ddd0cdc6cee34fb">internalSetAfterClear</link>(BaseType&#32;obj)&#32;{
00187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(obj&#32;is&#32;D)&#32;{
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_d.Add((D)obj);
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_multi_typed_reference_1a027fa28970647a98011ac3ffb2ab98e7">_index</link>&#32;=&#32;3;
00190 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base.internalSetAfterClear(obj);
00192 &#32;&#32;&#32;&#32;&#32;&#32;}
00193 &#32;&#32;&#32;&#32;}
00194 &#32;&#32;}
00195 }
</programlisting></section>
