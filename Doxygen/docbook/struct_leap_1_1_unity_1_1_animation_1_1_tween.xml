<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween">
<title>Leap.Unity.Animation.Tween Struct Reference</title>
<indexterm><primary>Leap.Unity.Animation.Tween</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>MaterialSelector <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ace36e93470c4b1168289ae1eef2e4736">Target</link> (Material material)</para>
</listitem>
            <listitem><para>TransformSelector <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aa7b22a26af26ea28523475885b119dda">Target</link> (Transform transform)</para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a831691155a74d63fe5a0a8c07bce6d13">Value</link> (float a, float b, Action&lt; float &gt; onValue)</para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4b8b8872079eed40ed3565488390768b">Value</link> (Vector2 a, Vector2 b, Action&lt; Vector2 &gt; onValue)</para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad8eaac902159cb11727ed3fdb9b29f8a">Value</link> (Vector3 a, Vector3 b, Action&lt; Vector3 &gt; onValue)</para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4877dc9c6bc0010523f51d21549098fa">Value</link> (Quaternion a, Quaternion b, Action&lt; Quaternion &gt; onValue)</para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aab3b83bfba4ff98c4ddb8129501e731b">Value</link> (Color a, Color b, Action&lt; Color &gt; onValue)</para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c">AddInterpolator</link> (<link linkend="_interface_leap_1_1_unity_1_1_animation_1_1_i_interpolator">IInterpolator</link> interpolator)</para>

<para>Adds a new Interpolator to this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. This Interpolator will have it&apos;s Interpolate method called every step of the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> with the smoothed progress value. All Interpolators are recycled when the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> itself is Recycled. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a233ad9426dc52f71fd5ac36500946d76">OverTime</link> (float seconds)</para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should travel from begining to end over a certain number of seconds. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a8a9610fdde3d806fdd7ca4c6e06f1645">AtRate</link> (float unitsPerSecond)</para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should travel at the given rate. This rate is measured against the FIRST interpolator added to this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>, at the moment AtRate is called. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7bb854a75ebd46b16addf1018768d6cd">Smooth</link> (<link linkend="_namespace_leap_1_1_unity_1_1_animation_1a9667bc3fe4218574cb25efb892505c77">SmoothType</link> type=SmoothType.Smooth)</para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should the given smoothing method. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae1929c2f7f8dc7636e16d54b67d75337">Smooth</link> (AnimationCurve curve)</para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should use the given <link linkend="_namespace_leap_1_1_unity_1_1_animation">Animation</link> curve for its smoothing. The curve should map from [0-1] to [0-1]. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a27b1991777c67934e885c0d01c64d031">Smooth</link> (Func&lt; float, float &gt; smoothFunction)</para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should use the given Function for its smoothing. The function should map from [0-1] to [0-1]. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a2f1e2df07793b5a7c397184cedeaca02">OnProgress</link> (Action&lt; float &gt; action)</para>

<para>Specifies an action to be called every step of the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a6aa4eb20bcc8295adee7afc50e8fe731">OnLeaveStart</link> (Action action)</para>

<para>Specifies an action to be called whenever this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is Played forward when at the start. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1af996cdf4236de2395c88bd0ba0fe65fb">OnReachStart</link> (Action action)</para>

<para>Specifies an action to be called whenever this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> reaches the start. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ac971360d59e189a9b5f788f1c881969c">OnLeaveEnd</link> (Action action)</para>

<para>Specifies an action to be called whenever this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is Played backwards when at the end. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a6444cd8ffe0160d1431e091f3c4d8649">OnReachEnd</link> (Action action)</para>

<para>Specifies an action to be called whenever this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> reaches the end. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a00ec83a05cb0637fc0bcc24e8703c572">Play</link> ()</para>

<para>Starts playing this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. It will continue from the same position it left off on, and will continue in the same direction. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a1428d270a9c131173d13fe41c0728088">Play</link> (<link linkend="_namespace_leap_1_1_unity_1_1_animation_1ab080d4756e4d3d6a2fc9cd9a7f4e695a">Direction</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae88d2317428932c7de52a00298005696">direction</link>)</para>

<para>Starts playing this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> in a specific direction. It will condition from the same position it left off on. The direction will change even if the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is already playing. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a8453ef9311e720d1518b1a6bd9466ff9">Play</link> (float destinationPercent)</para>

<para>Starts playing this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> towards a destination percent. Once it reaches that value, it will stop. If the destination percent is not 0 or 1, it will not trigger OnReachStart or OnReachEnd. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_internal_1_1_tween_instance_1_1_tween_yield_instruction">TweenInstance.TweenYieldInstruction</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae3aea546f6195b60ace0fd614c3925d4">Yield</link> ()</para>

<para>Returns a custom yield instruction that can be yielded to in order to wait for the completion of this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. This will yield correctly even if the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is modified as it is playing. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a081bc17380d04763af8322c31b1ab887">Pause</link> ()</para>

<para>Pauses this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. It retains its position and direction. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad5f8092aec0bf5f7f301b9dbeef5a666">Stop</link> ()</para>

<para>Stops this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. If it is not a persistant <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>, it will be recycled right away. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aae3c96c326e36d7dd2079ec15f772409">Release</link> ()</para>

<para>Forces this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> to be recycled right away. Once this method is called, the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> will be invalid and unable to be modified. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7238365f2fb16c95082dc5d71b8f5139">Single</link> ()</para>

<para>Create a single-use <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> that will auto-release itself as soon as it is finished playing. </para>
</listitem>
            <listitem><para>static <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4e3149fd5f794b71c50a8bb18b6d338e">Persistent</link> ()</para>

<para>Creates a persistant <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> that will not ever auto-release itself. You must specifically call Release in order for the resources of the tween to be returned to the pool. </para>
</listitem>
            <listitem><para>static <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a77dd8bb5e57e2fffe9351ad806eaf53f">AfterDelay</link> (float delay, Action onReachEnd)</para>

<para>Create a single-use <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> that will fire onReachEnd after the specified delay in seconds. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891">isValid</link><computeroutput> [get]</computeroutput>
</para>

<para>Returns whether or not this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is considered valid. A <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> can become invalid under the following conditions: </para>
</listitem>
            <listitem><para>bool <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a0af0e03e8197661737ace80ef03636c6">isRunning</link><computeroutput> [get]</computeroutput>
</para>

<para>Returns whether or not the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is currently running. </para>
</listitem>
            <listitem><para><link linkend="_namespace_leap_1_1_unity_1_1_animation_1ab080d4756e4d3d6a2fc9cd9a7f4e695a">Direction</link>? <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae88d2317428932c7de52a00298005696">direction</link><computeroutput> [get, set]</computeroutput>
</para>

<para>Gets or sets whether or not this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is moving forwards or backwards. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a27ebf28615fd4bfe76cf8c9eb2bd3379">timeLeft</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets how much time is left before the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> stops. </para>
</listitem>
            <listitem><para>float <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae0123854170a23519792c97c8620645c">progress</link><computeroutput> [get, set]</computeroutput>
</para>

<para>Gets or sets how far along completion this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is. This value is a percent that ranges from 0 to 1. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__material_interpolators_8cs_source_1l00015">15</link> of file <link linkend="__material_interpolators_8cs_source">MaterialInterpolators.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4003f15c23a01d48cc1c2b5ecf48373c"/>    <section>
    <title>AddInterpolator()</title>
<indexterm><primary>AddInterpolator</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>AddInterpolator</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.AddInterpolator (<link linkend="_interface_leap_1_1_unity_1_1_animation_1_1_i_interpolator">IInterpolator</link> interpolator)</computeroutput></para><para>

<para>Adds a new Interpolator to this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. This Interpolator will have it&apos;s Interpolate method called every step of the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> with the smoothed progress value. All Interpolators are recycled when the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> itself is Recycled. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00152">152</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a77dd8bb5e57e2fffe9351ad806eaf53f"/>    <section>
    <title>AfterDelay()</title>
<indexterm><primary>AfterDelay</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>AfterDelay</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.AfterDelay (float delay, Action onReachEnd)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Create a single-use <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> that will fire onReachEnd after the specified delay in seconds. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00044">44</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a8a9610fdde3d806fdd7ca4c6e06f1645"/>    <section>
    <title>AtRate()</title>
<indexterm><primary>AtRate</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>AtRate</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.AtRate (float unitsPerSecond)</computeroutput></para><para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should travel at the given rate. This rate is measured against the FIRST interpolator added to this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>, at the moment AtRate is called. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00176">176</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ac971360d59e189a9b5f788f1c881969c"/>    <section>
    <title>OnLeaveEnd()</title>
<indexterm><primary>OnLeaveEnd</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>OnLeaveEnd</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.OnLeaveEnd (Action action)</computeroutput></para><para>

<para>Specifies an action to be called whenever this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is Played backwards when at the end. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00253">253</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a6aa4eb20bcc8295adee7afc50e8fe731"/>    <section>
    <title>OnLeaveStart()</title>
<indexterm><primary>OnLeaveStart</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>OnLeaveStart</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.OnLeaveStart (Action action)</computeroutput></para><para>

<para>Specifies an action to be called whenever this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is Played forward when at the start. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00233">233</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a2f1e2df07793b5a7c397184cedeaca02"/>    <section>
    <title>OnProgress()</title>
<indexterm><primary>OnProgress</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>OnProgress</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.OnProgress (Action&lt; float &gt; action)</computeroutput></para><para>

<para>Specifies an action to be called every step of the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. </para>
</para>

<para>This callback happens after:<itemizedlist>
<listitem>
<para>OnLeaveStart</para>
</listitem><listitem>
<para>OnLeaveEnd</para>
</listitem><listitem>
<para>All interpolators have been interpolated This callback happens before:</para>
</listitem><listitem>
<para>OnReachStart</para>
</listitem><listitem>
<para>OnReachEnd </para>
</listitem></itemizedlist>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00223">223</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a6444cd8ffe0160d1431e091f3c4d8649"/>    <section>
    <title>OnReachEnd()</title>
<indexterm><primary>OnReachEnd</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>OnReachEnd</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.OnReachEnd (Action action)</computeroutput></para><para>

<para>Specifies an action to be called whenever this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> reaches the end. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00263">263</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1af996cdf4236de2395c88bd0ba0fe65fb"/>    <section>
    <title>OnReachStart()</title>
<indexterm><primary>OnReachStart</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>OnReachStart</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.OnReachStart (Action action)</computeroutput></para><para>

<para>Specifies an action to be called whenever this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> reaches the start. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00243">243</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a233ad9426dc52f71fd5ac36500946d76"/>    <section>
    <title>OverTime()</title>
<indexterm><primary>OverTime</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>OverTime</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.OverTime (float seconds)</computeroutput></para><para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should travel from begining to end over a certain number of seconds. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00166">166</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a081bc17380d04763af8322c31b1ab887"/>    <section>
    <title>Pause()</title>
<indexterm><primary>Pause</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Pause</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Animation.Tween.Pause ( )</computeroutput></para><para>

<para>Pauses this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. It retains its position and direction. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00335">335</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4e3149fd5f794b71c50a8bb18b6d338e"/>    <section>
    <title>Persistent()</title>
<indexterm><primary>Persistent</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Persistent</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Persistent ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Creates a persistant <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> that will not ever auto-release itself. You must specifically call Release in order for the resources of the tween to be returned to the pool. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00037">37</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a00ec83a05cb0637fc0bcc24e8703c572"/>    <section>
    <title>Play()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Play</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Play</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Play ( )</computeroutput></para><para>

<para>Starts playing this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. It will continue from the same position it left off on, and will continue in the same direction. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00273">273</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a1428d270a9c131173d13fe41c0728088"/>    <section>
    <title>Play()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Play</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Play</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Play (<link linkend="_namespace_leap_1_1_unity_1_1_animation_1ab080d4756e4d3d6a2fc9cd9a7f4e695a">Direction</link> direction)</computeroutput></para><para>

<para>Starts playing this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> in a specific direction. It will condition from the same position it left off on. The direction will change even if the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is already playing. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00293">293</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a8453ef9311e720d1518b1a6bd9466ff9"/>    <section>
    <title>Play()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Play</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Play</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Play (float destinationPercent)</computeroutput></para><para>

<para>Starts playing this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> towards a destination percent. Once it reaches that value, it will stop. If the destination percent is not 0 or 1, it will not trigger OnReachStart or OnReachEnd. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00307">307</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aae3c96c326e36d7dd2079ec15f772409"/>    <section>
    <title>Release()</title>
<indexterm><primary>Release</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Release</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Animation.Tween.Release ( )</computeroutput></para><para>

<para>Forces this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> to be recycled right away. Once this method is called, the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> will be invalid and unable to be modified. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00363">363</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7238365f2fb16c95082dc5d71b8f5139"/>    <section>
    <title>Single()</title>
<indexterm><primary>Single</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Single</secondary></indexterm>
<para><computeroutput>static <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Single ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Create a single-use <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> that will auto-release itself as soon as it is finished playing. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00029">29</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7bb854a75ebd46b16addf1018768d6cd"/>    <section>
    <title>Smooth()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Smooth</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Smooth</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Smooth (<link linkend="_namespace_leap_1_1_unity_1_1_animation_1a9667bc3fe4218574cb25efb892505c77">SmoothType</link> type = <computeroutput>SmoothType.Smooth</computeroutput>
)</computeroutput></para><para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should the given smoothing method. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00185">185</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae1929c2f7f8dc7636e16d54b67d75337"/>    <section>
    <title>Smooth()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Smooth</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Smooth</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Smooth (AnimationCurve curve)</computeroutput></para><para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should use the given <link linkend="_namespace_leap_1_1_unity_1_1_animation">Animation</link> curve for its smoothing. The curve should map from [0-1] to [0-1]. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00195">195</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a27b1991777c67934e885c0d01c64d031"/>    <section>
    <title>Smooth()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Smooth</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Smooth</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Smooth (Func&lt; float, float &gt; smoothFunction)</computeroutput></para><para>

<para>Specifies that this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> should use the given Function for its smoothing. The function should map from [0-1] to [0-1]. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00206">206</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad5f8092aec0bf5f7f301b9dbeef5a666"/>    <section>
    <title>Stop()</title>
<indexterm><primary>Stop</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Stop</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Animation.Tween.Stop ( )</computeroutput></para><para>

<para>Stops this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. If it is not a persistant <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>, it will be recycled right away. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00346">346</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ace36e93470c4b1168289ae1eef2e4736"/>    <section>
    <title>Target()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Target</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Target</secondary></indexterm>
<para><computeroutput>MaterialSelector Leap.Unity.Animation.Tween.Target (Material material)</computeroutput></para><para>
Definition at line <link linkend="__material_interpolators_8cs_source_1l00016">16</link> of file <link linkend="__material_interpolators_8cs_source">MaterialInterpolators.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aa7b22a26af26ea28523475885b119dda"/>    <section>
    <title>Target()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Target</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Target</secondary></indexterm>
<para><computeroutput>TransformSelector Leap.Unity.Animation.Tween.Target (Transform transform)</computeroutput></para><para>
Definition at line <link linkend="__transform_interpolators_8cs_source_1l00017">17</link> of file <link linkend="__transform_interpolators_8cs_source">TransformInterpolators.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a831691155a74d63fe5a0a8c07bce6d13"/>    <section>
    <title>Value()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Value (float a, float b, Action&lt; float &gt; onValue)</computeroutput></para><para>
Definition at line <link linkend="__value_interpolators_8cs_source_1l00019">19</link> of file <link linkend="__value_interpolators_8cs_source">ValueInterpolators.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4b8b8872079eed40ed3565488390768b"/>    <section>
    <title>Value()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Value (Vector2 a, Vector2 b, Action&lt; Vector2 &gt; onValue)</computeroutput></para><para>
Definition at line <link linkend="__value_interpolators_8cs_source_1l00039">39</link> of file <link linkend="__value_interpolators_8cs_source">ValueInterpolators.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ad8eaac902159cb11727ed3fdb9b29f8a"/>    <section>
    <title>Value()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Value (Vector3 a, Vector3 b, Action&lt; Vector3 &gt; onValue)</computeroutput></para><para>
Definition at line <link linkend="__value_interpolators_8cs_source_1l00059">59</link> of file <link linkend="__value_interpolators_8cs_source">ValueInterpolators.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a4877dc9c6bc0010523f51d21549098fa"/>    <section>
    <title>Value()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Value (Quaternion a, Quaternion b, Action&lt; Quaternion &gt; onValue)</computeroutput></para><para>
Definition at line <link linkend="__value_interpolators_8cs_source_1l00079">79</link> of file <link linkend="__value_interpolators_8cs_source">ValueInterpolators.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1aab3b83bfba4ff98c4ddb8129501e731b"/>    <section>
    <title>Value()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>Value</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Value</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> Leap.Unity.Animation.Tween.Value (Color a, Color b, Action&lt; Color &gt; onValue)</computeroutput></para><para>
Definition at line <link linkend="__value_interpolators_8cs_source_1l00099">99</link> of file <link linkend="__value_interpolators_8cs_source">ValueInterpolators.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae3aea546f6195b60ace0fd614c3925d4"/>    <section>
    <title>Yield()</title>
<indexterm><primary>Yield</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>Yield</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_internal_1_1_tween_instance_1_1_tween_yield_instruction">TweenInstance.TweenYieldInstruction</link> Leap.Unity.Animation.Tween.Yield ( )</computeroutput></para><para>

<para>Returns a custom yield instruction that can be yielded to in order to wait for the completion of this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link>. This will yield correctly even if the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is modified as it is playing. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00326">326</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae88d2317428932c7de52a00298005696"/>    <section>
    <title>direction</title>
<indexterm><primary>direction</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>direction</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_leap_1_1_unity_1_1_animation_1ab080d4756e4d3d6a2fc9cd9a7f4e695a">Direction</link>? Leap.Unity.Animation.Tween.direction<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Gets or sets whether or not this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is moving forwards or backwards. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00074">74</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a0af0e03e8197661737ace80ef03636c6"/>    <section>
    <title>isRunning</title>
<indexterm><primary>isRunning</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>isRunning</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.Animation.Tween.isRunning<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Returns whether or not the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is currently running. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00064">64</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a9a3bab65cf734fb04f4c7c7525719891"/>    <section>
    <title>isValid</title>
<indexterm><primary>isValid</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>isValid</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.Animation.Tween.isValid<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Returns whether or not this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is considered valid. A <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> can become invalid under the following conditions: </para>
</para>

<para><itemizedlist>
<listitem>
<para>It was constructed with the default constructor. Only ever use <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7238365f2fb16c95082dc5d71b8f5139">Tween.Single</link> or Tween.Persistant to create Tweens.</para>
</listitem><listitem>
<para>It was constructed with <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a7238365f2fb16c95082dc5d71b8f5139">Tween.Single</link> and has already finished playing. Use Tween.Persistant if you want to keep it for longer.</para>
</listitem><listitem>
<para>It had Release called. </para>
</listitem></itemizedlist>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00055">55</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1ae0123854170a23519792c97c8620645c"/>    <section>
    <title>progress</title>
<indexterm><primary>progress</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>progress</secondary></indexterm>
<para><computeroutput>float Leap.Unity.Animation.Tween.progress<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Gets or sets how far along completion this <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> is. This value is a percent that ranges from 0 to 1. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00100">100</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_unity_1_1_animation_1_1_tween_1a27ebf28615fd4bfe76cf8c9eb2bd3379"/>    <section>
    <title>timeLeft</title>
<indexterm><primary>timeLeft</primary><secondary>Leap.Unity.Animation.Tween</secondary></indexterm>
<indexterm><primary>Leap.Unity.Animation.Tween</primary><secondary>timeLeft</secondary></indexterm>
<para><computeroutput>float Leap.Unity.Animation.Tween.timeLeft<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets how much time is left before the <link linkend="_struct_leap_1_1_unity_1_1_animation_1_1_tween">Tween</link> stops. </para>
</para>
<para>
Definition at line <link linkend="__tween_8cs_source_1l00089">89</link> of file <link linkend="__tween_8cs_source">Tween.cs</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/<link linkend="__material_interpolators_8cs">MaterialInterpolators.cs</link>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/<link linkend="__tween_8cs">Tween.cs</link>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/<link linkend="__transform_interpolators_8cs">TransformInterpolators.cs</link>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Animation/Tween/Internal/Interpolators/<link linkend="__value_interpolators_8cs">ValueInterpolators.cs</link></section>
</section>
