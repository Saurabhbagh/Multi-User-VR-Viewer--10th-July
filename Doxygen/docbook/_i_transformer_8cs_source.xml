<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__i_transformer_8cs_source">
<title>ITransformer.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Space/ITransformer.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 
00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_space">Leap.Unity.Space</link>&#32;{
00013 
<anchor xml:id="__i_transformer_8cs_source_1l00014"/><link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">00014</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis><link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;{
00015 
<anchor xml:id="__i_transformer_8cs_source_1l00016"/><link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1a95fc8ef0dbdc20ff39b82db2575fc10b">00016</link> &#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor">LeapSpaceAnchor</link>&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1a95fc8ef0dbdc20ff39b82db2575fc10b">anchor</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;}
00017 
00021 &#32;&#32;&#32;&#32;Vector3&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1ad4ffef6002e74fe4967c4b7b9d5a5f74">TransformPoint</link>(Vector3&#32;localRectPos);
00022 
00026 &#32;&#32;&#32;&#32;Vector3&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1ad919653073748169561e99cace4f5931">InverseTransformPoint</link>(Vector3&#32;localWarpedSpace);
00027 
00031 &#32;&#32;&#32;&#32;Quaternion&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1a69931f79b1e951cf38f1b3855e02ba91">TransformRotation</link>(Vector3&#32;localRectPos,&#32;Quaternion&#32;localRectRot);
00032 
00036 &#32;&#32;&#32;&#32;Quaternion&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1abfcf877e117b7f70b2ce60259b88c459">InverseTransformRotation</link>(Vector3&#32;localWarpedPos,&#32;Quaternion&#32;localWarpedRot);
00037 
00041 &#32;&#32;&#32;&#32;Vector3&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1a86883dfa18d51d4254dff56b1d9f5024">TransformDirection</link>(Vector3&#32;localRectPos,&#32;Vector3&#32;localRectDirection);
00042 
00046 &#32;&#32;&#32;&#32;Vector3&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1aa555a28ab51ed506732bb88756f06168">InverseTransformDirection</link>(Vector3&#32;localWarpedSpace,&#32;Vector3&#32;localWarpedDirection);
00047 
00052 &#32;&#32;&#32;&#32;Matrix4x4&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer_1a151be0f514da2568b75177fdb31724b3">GetTransformationMatrix</link>(Vector3&#32;localRectPos);
00053 &#32;&#32;}
00054 
<anchor xml:id="__i_transformer_8cs_source_1l00055"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer">00055</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer">IdentityTransformer</link>&#32;:&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;{
<anchor xml:id="__i_transformer_8cs_source_1l00056"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a3ec1330730787111258ed33bb4050886">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;readonly&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer">IdentityTransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a3ec1330730787111258ed33bb4050886">single</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer">IdentityTransformer</link>();
00057 
<anchor xml:id="__i_transformer_8cs_source_1l00058"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a262c6ce350ad3ce0aa9090f0360508fe">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor">LeapSpaceAnchor</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a262c6ce350ad3ce0aa9090f0360508fe">anchor</link>&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00061 &#32;&#32;&#32;&#32;&#32;&#32;}
00062 &#32;&#32;&#32;&#32;}
00063 
<anchor xml:id="__i_transformer_8cs_source_1l00064"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1ab0c7ba8c98e532237b23e6bffb67becd">00064</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1ab0c7ba8c98e532237b23e6bffb67becd">TransformPoint</link>(Vector3&#32;localRectPos)&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;localRectPos;
00066 &#32;&#32;&#32;&#32;}
00067 
<anchor xml:id="__i_transformer_8cs_source_1l00068"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a404c960dbb06676aee1e634957349e4b">00068</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a404c960dbb06676aee1e634957349e4b">InverseTransformPoint</link>(Vector3&#32;localWarpedSpace)&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;localWarpedSpace;
00070 &#32;&#32;&#32;&#32;}
00071 
<anchor xml:id="__i_transformer_8cs_source_1l00072"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a299300bfabf6eb706fe3f876ca3384c8">00072</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a299300bfabf6eb706fe3f876ca3384c8">TransformRotation</link>(Vector3&#32;localRectPos,&#32;Quaternion&#32;localRectRot)&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;localRectRot;
00074 &#32;&#32;&#32;&#32;}
00075 
<anchor xml:id="__i_transformer_8cs_source_1l00076"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1acd239c878d3c9edba001ed51f4511c1a">00076</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1acd239c878d3c9edba001ed51f4511c1a">InverseTransformRotation</link>(Vector3&#32;localWarpedPos,&#32;Quaternion&#32;localWarpedRot)&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;localWarpedRot;
00078 &#32;&#32;&#32;&#32;}
00079 
<anchor xml:id="__i_transformer_8cs_source_1l00080"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a653673b36d9de3f837033af24b75da49">00080</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a653673b36d9de3f837033af24b75da49">TransformDirection</link>(Vector3&#32;localRectPos,&#32;Vector3&#32;localRectDirection)&#32;{
00081 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;localRectDirection;
00082 &#32;&#32;&#32;&#32;}
00083 
<anchor xml:id="__i_transformer_8cs_source_1l00084"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a793967a882ba3156bf728ca4ad8afd26">00084</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a793967a882ba3156bf728ca4ad8afd26">InverseTransformDirection</link>(Vector3&#32;localWarpedSpace,&#32;Vector3&#32;localWarpedDirection)&#32;{
00085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;localWarpedDirection;
00086 &#32;&#32;&#32;&#32;}
00087 
<anchor xml:id="__i_transformer_8cs_source_1l00088"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a693ed0cac442e346b6bad9e1a5dc92a1">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Matrix4x4&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_identity_transformer_1a693ed0cac442e346b6bad9e1a5dc92a1">GetTransformationMatrix</link>(Vector3&#32;localRectPos)&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Matrix4x4.TRS(localRectPos,&#32;Quaternion.identity,&#32;Vector3.one);
00090 &#32;&#32;&#32;&#32;}
00091 &#32;&#32;}
00092 
00093 &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>ITransformerExtensions&#32;{
00094 
00101 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;WorldSpaceUnwarp(<emphasis role="keyword">this</emphasis>&#32;ITransformer&#32;transformer,
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;worldWarpedPosition,&#32;Quaternion&#32;worldWarpedRotation,
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;Vector3&#32;worldRectilinearPosition,&#32;out&#32;Quaternion&#32;worldRectilinearRotation)&#32;{
00104 &#32;&#32;&#32;&#32;&#32;&#32;Transform&#32;spaceTransform&#32;=&#32;transformer.anchor.space.transform;
00105 
00106 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorLocalWarpedPosition&#32;=&#32;spaceTransform.InverseTransformPoint(worldWarpedPosition);
00107 &#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;anchorLocalWarpedRotation&#32;=&#32;spaceTransform.InverseTransformRotation(worldWarpedRotation);
00108 
00109 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorLocalRectPosition&#32;=&#32;transformer.InverseTransformPoint(anchorLocalWarpedPosition);
00110 &#32;&#32;&#32;&#32;&#32;&#32;worldRectilinearPosition&#32;=&#32;spaceTransform.TransformPoint(anchorLocalRectPosition);
00111 
00112 &#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;anchorLocalRectRotation&#32;=&#32;transformer.InverseTransformRotation(anchorLocalWarpedPosition,&#32;anchorLocalWarpedRotation);
00113 &#32;&#32;&#32;&#32;&#32;&#32;worldRectilinearRotation&#32;=&#32;spaceTransform.TransformRotation(anchorLocalRectRotation);
00114 &#32;&#32;&#32;&#32;}
00115 
00116 &#32;&#32;}
00117 
00118 }
</programlisting></section>
