<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__package_search_tests_8cs_source">
<title>PackageSearchTests.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.package-manager-ui@2.0.7/Tests/Editor/Services/Packages/PackageSearchTests.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00002 <emphasis role="keyword">using</emphasis>&#32;NUnit.Framework;
00003 
00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests">UnityEditor.PackageManager.UI.Tests</link>
00005 {
<anchor xml:id="__package_search_tests_8cs_source_1l00006"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests">00006</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">internal</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests">PackageSearchTests</link>&#32;:&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_base_tests">PackageBaseTests</link>
00007 &#32;&#32;&#32;&#32;{
00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;kName&#32;=&#32;<emphasis role="stringliteral">&quot;Test-Package&quot;</emphasis>;
00009 
00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;kCurrentVersion&#32;=&#32;<emphasis role="stringliteral">&quot;3.0.0&quot;</emphasis>;
00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;kPrerelease&#32;=&#32;<emphasis role="stringliteral">&quot;preview&quot;</emphasis>;
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;kUpperPrerelease&#32;=&#32;<emphasis role="stringliteral">&quot;PREVIEW&quot;</emphasis>;
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;kMixedPrerelease&#32;=&#32;<emphasis role="stringliteral">&quot;pReViEw&quot;</emphasis>;
00014 
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package">Package</link>&#32;testPackage;
00016 
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[SetUp]
<anchor xml:id="__package_search_tests_8cs_source_1l00018"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1ae0af173d00abe16f5507a58042c4f4c7">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1ae0af173d00abe16f5507a58042c4f4c7">Setup</link>()
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;testPackage&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_package">Package</link>(kName,&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;PackageInfo&gt;
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_sets">PackageSets</link>.<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_sets_1a8330e0a210e88e4598e34dbef1a17430">Instance</link>.<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_sets_1a7a674621cd6993b95bf2f727f713bf62">Single</link>(PackageSource.Registry,&#32;kName,&#32;kCurrentVersion&#32;+&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>&#32;+&#32;kPrerelease,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">true</emphasis>)
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00025 
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="keyword">null</emphasis>)]
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;\t&quot;</emphasis>)]
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>)]
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;&#32;&#32;&quot;</emphasis>)]
<anchor xml:id="__package_search_tests_8cs_source_1l00031"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1a09426b3f6170cb8d9a1afbdcfb38842c">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1a09426b3f6170cb8d9a1afbdcfb38842c">MatchCriteria_NullOrEmptyCriteria_ReturnsTrue</link>(<emphasis role="keywordtype">string</emphasis>&#32;criteria)
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(PackageFiltering.FilterByText(testPackage,&#32;criteria));
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00035 
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCaseSource(<emphasis role="stringliteral">&quot;GetAllPartialName&quot;</emphasis>)]
<anchor xml:id="__package_search_tests_8cs_source_1l00037"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1ab7d9d52f26706b43529d74fd315c10b9">00037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1ab7d9d52f26706b43529d74fd315c10b9">MatchCriteria_CriteriaMatchDisplayNamePartially_ReturnsTrue</link>(<emphasis role="keywordtype">string</emphasis>&#32;criteria)
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(PackageFiltering.FilterByText(testPackage,&#32;criteria));
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00041 
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCaseSource(<emphasis role="stringliteral">&quot;GetAllPartialVersions&quot;</emphasis>)]
<anchor xml:id="__package_search_tests_8cs_source_1l00043"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1a2ba0175162fd71f13e527c8ffd3d4d8e">00043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1a2ba0175162fd71f13e527c8ffd3d4d8e">MatchCriteria_CriteriaMatchCurrentVersion_ReturnsTrue</link>(<emphasis role="keywordtype">string</emphasis>&#32;criteria)
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(PackageFiltering.FilterByText(testPackage,&#32;criteria));
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(kPrerelease)]
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(kUpperPrerelease)]
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(kMixedPrerelease)]
<anchor xml:id="__package_search_tests_8cs_source_1l00051"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1af4d61f55af7634bf9b20bf598272c73e">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1af4d61f55af7634bf9b20bf598272c73e">MatchCriteria_CriteriaMatchCurrentVersionPreRelease_ReturnsTrue</link>(<emphasis role="keywordtype">string</emphasis>&#32;criteria)
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(PackageFiltering.FilterByText(testPackage,&#32;criteria));
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00055 
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;p&quot;</emphasis>)]
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;pr&quot;</emphasis>)]
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;pre&quot;</emphasis>)]
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;prev&quot;</emphasis>)]
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;view&quot;</emphasis>)]
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;vie&quot;</emphasis>)]
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;vi&quot;</emphasis>)]
<anchor xml:id="__package_search_tests_8cs_source_1l00063"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1ad7764ccdca43f1c514b61de7e4bf494a">00063</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1ad7764ccdca43f1c514b61de7e4bf494a">MatchCriteria_CriteriaPartialMatchCurrentVersionPreRelease_ReturnsTrue</link>(<emphasis role="keywordtype">string</emphasis>&#32;criteria)
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(PackageFiltering.FilterByText(testPackage,&#32;criteria));
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00067 
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;-p&quot;</emphasis>)]
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;-pr&quot;</emphasis>)]
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;-pre&quot;</emphasis>)]
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;-prev&quot;</emphasis>)]
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;-previ&quot;</emphasis>)]
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;-previe&quot;</emphasis>)]
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;-preview&quot;</emphasis>)]
<anchor xml:id="__package_search_tests_8cs_source_1l00075"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1a8a65a57c2927b54bbf286f9096233450">00075</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1a8a65a57c2927b54bbf286f9096233450">MatchCriteria_CriteriaPartialMatchCurrentVersionPreReleaseLeadingDash_ReturnsTrue</link>(<emphasis role="keywordtype">string</emphasis>&#32;criteria)
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(PackageFiltering.FilterByText(testPackage,&#32;criteria));
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00079 
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;veri&quot;</emphasis>)]
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;verif&quot;</emphasis>)]
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;verifie&quot;</emphasis>)]
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;verified&quot;</emphasis>)]
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;erified&quot;</emphasis>)]
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;rified&quot;</emphasis>)]
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;ified&quot;</emphasis>)]
<anchor xml:id="__package_search_tests_8cs_source_1l00087"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1a1abc0ff8b9f82ebc843c92a0c3e88e92">00087</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1a1abc0ff8b9f82ebc843c92a0c3e88e92">MatchCriteria_CriteriaPartialMatchVerified_ReturnsTrue</link>(<emphasis role="keywordtype">string</emphasis>&#32;criteria)
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsTrue(PackageFiltering.FilterByText(testPackage,&#32;criteria));
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00091 
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;Test&#32;Package&quot;</emphasis>)]
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;Test&#32;-Package&quot;</emphasis>)]
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;Test&#32;-&#32;Package&quot;</emphasis>)]
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;Test-&#32;Package&quot;</emphasis>)]
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;NotFound&quot;</emphasis>)]
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;1.0.0-preview&quot;</emphasis>)]
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;5.0.0&quot;</emphasis>)]
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;beta&quot;</emphasis>)]
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;previewed&quot;</emphasis>)]
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;verify&quot;</emphasis>)]
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[TestCase(<emphasis role="stringliteral">&quot;experimental&quot;</emphasis>)]
<anchor xml:id="__package_search_tests_8cs_source_1l00103"/><link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1ad24487967c023724fa4fc16c5ec346a6">00103</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_editor_1_1_package_manager_1_1_u_i_1_1_tests_1_1_package_search_tests_1ad24487967c023724fa4fc16c5ec346a6">MatchCriteria_CriteriaDoesntMatch_ReturnsFalse</link>(<emphasis role="keywordtype">string</emphasis>&#32;criteria)
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.IsFalse(PackageFiltering.FilterByText(testPackage,&#32;criteria));
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00107 
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;IEnumerable&lt;string&gt;&#32;GetAllPartialVersions()
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;versions&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;kCurrentVersion.Length;&#32;i++)
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;versions.Add(kCurrentVersion.Substring(0,&#32;i));
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;versions;
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;IEnumerable&lt;string&gt;&#32;GetAllPartial(<emphasis role="keywordtype">string</emphasis>&#32;str)
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;names&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;string&gt;();
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(var&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;str.Length;&#32;i++)
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;s1&#32;=&#32;str.Substring(0,&#32;i&#32;+&#32;1);
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;s2&#32;=&#32;str.Substring(i,&#32;str.Length&#32;-&#32;i);
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(s1);
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(s1.ToLower());
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(s1.ToUpper());
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;s1);
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(s1&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>);
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;s1&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>);
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(s2);
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(s2.ToLower());
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(s2.ToUpper());
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;s2);
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(s2&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>);
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;names.Add(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;+&#32;s2&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>);
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;names;
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00140 
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;IEnumerable&lt;string&gt;&#32;GetAllPartialName()
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GetAllPartial(kName);
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00145 &#32;&#32;&#32;&#32;}
00146 }
</programlisting></section>
