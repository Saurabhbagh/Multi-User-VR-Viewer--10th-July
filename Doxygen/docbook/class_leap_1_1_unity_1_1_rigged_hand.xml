<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_leap_1_1_unity_1_1_rigged_hand">
<title>Leap.Unity.RiggedHand Class Reference</title>
<indexterm><primary>Leap.Unity.RiggedHand</primary></indexterm>
<para>Inheritance diagram for Leap.Unity.RiggedHand:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_leap_1_1_unity_1_1_rigged_hand.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1aa44bd1ae715125809d5803b293eb1bee">SupportsEditorPersistence</link> ()</para>

<para>Returns whether or not this hand model supports editor persistence. This is false by default and must be opt-in by a developer making their own hand model script if they want editor persistence. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1a588b2f58a5ffbbfc451ddf8432228507">InitHand</link> ()</para>
</listitem>
            <listitem><para>Quaternion <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1aa4056b463cf5f441e96e1805a609cd6f">Reorientation</link> ()</para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1ac4e41fd3965e2d0d56379d3fc6011128">UpdateHand</link> ()</para>
</listitem>
            <listitem><para>Quaternion <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1aeeb6a629e804a4047ff01562cde17371">GetRiggedPalmRotation</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1a5a1c018bad50c06259998bdccbc2c513">SetupRiggedHand</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1a919b4e3b967a79eb3bcce6d838a7ef4c">AutoRigRiggedHand</link> (Transform <link linkend="_class_leap_1_1_unity_1_1_hand_model_1a9ed203915ef3ad91ea37b705c1fcffa1">palm</link>, Transform finger1, Transform finger2)</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1ae59cd89a5a3b39f56be3b8db74030fa5">StoreJointsStartPose</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d">RestoreJointsStartPose</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1a375204e4916d600d49dcd6812d08f56e">OnValidate</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static Vector3 <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b">CalculateZeroedVector</link> (Vector3 vectorToZero)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf">DeformPositionsInFingers</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1aba36c91e04e41858d120462170cf7902">ModelPalmAtLeapWrist</link> = true</para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1ad02235db6045a120093cdca16b1e61bf">UseMetaCarpals</link></para>
</listitem>
            <listitem><para>Vector3 <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a">modelFingerPointing</link> = new Vector3(0, 0, 0)</para>
</listitem>
            <listitem><para>Vector3 <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1">modelPalmFacing</link> = new Vector3(0, 0, 0)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>override <link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0">ModelType</link> <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1aafa1ebadbf7fb5901f22f5834bac4dba">HandModelType</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1ab8de11dc599037ace3a7bce66cdb8b94">SetEditorLeapPose</link><computeroutput> [get, set]</computeroutput>
</para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_rigged_hand_1a5b746af2657245a3e8cad12b081d1fe0">scaleLastFingerBones</link><computeroutput> [get, set]</computeroutput>
</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This version of <link linkend="_class_leap_1_1_unity_1_1_hand_model_base">HandModelBase</link> supports a hand respresentation based on a skinned and jointed 3D model asset. </para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00019">19</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1a919b4e3b967a79eb3bcce6d838a7ef4c"/>    <section>
    <title>AutoRigRiggedHand()</title>
<indexterm><primary>AutoRigRiggedHand</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>AutoRigRiggedHand</secondary></indexterm>
<para><computeroutput>void Leap.Unity.RiggedHand.AutoRigRiggedHand (Transform palm, Transform finger1, Transform finger2)</computeroutput></para>
<para>Sets up the rigged hand if <link linkend="_class_leap_1_1_unity_1_1_rigged_finger">RiggedFinger</link> scripts have already been assigned using Mecanim values. </para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00152">152</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1a67e0012de184ea7ea1e76cec5a21589b"/>    <section>
    <title>CalculateZeroedVector()</title>
<indexterm><primary>CalculateZeroedVector</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>CalculateZeroedVector</secondary></indexterm>
<para><computeroutput>static Vector3 Leap.Unity.RiggedHand.CalculateZeroedVector (Vector3 vectorToZero)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Finds nearest cardinal vector to a vector </para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00269">269</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1aeeb6a629e804a4047ff01562cde17371"/>    <section>
    <title>GetRiggedPalmRotation()</title>
<indexterm><primary>GetRiggedPalmRotation</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>GetRiggedPalmRotation</secondary></indexterm>
<para><computeroutput>Quaternion Leap.Unity.RiggedHand.GetRiggedPalmRotation ( )</computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00123">123</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1a588b2f58a5ffbbfc451ddf8432228507"/>    <section>
    <title>InitHand()</title>
<indexterm><primary>InitHand</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>InitHand</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.RiggedHand.InitHand ( )<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Implement this function to initialise this hand after it is created. This function is called by the HandController during the <link linkend="_namespace_leap_1_1_unity">Unity</link> Update() phase when a new hand is detected by the <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Motion device. </para>
<para>
Reimplemented from <link linkend="_class_leap_1_1_unity_1_1_hand_model_1a67f1a6887e0803c96095a376fc1e6031">Leap.Unity.HandModel</link>.</para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00082">82</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1a375204e4916d600d49dcd6812d08f56e"/>    <section>
    <title>OnValidate()</title>
<indexterm><primary>OnValidate</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>OnValidate</secondary></indexterm>
<para><computeroutput>void Leap.Unity.RiggedHand.OnValidate ( )</computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00317">317</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1aa4056b463cf5f441e96e1805a609cd6f"/>    <section>
    <title>Reorientation()</title>
<indexterm><primary>Reorientation</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>Reorientation</secondary></indexterm>
<para><computeroutput>Quaternion Leap.Unity.RiggedHand.Reorientation ( )</computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00088">88</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1aad0ba3eb19fbd881af90b7e5b6ffaf7d"/>    <section>
    <title>RestoreJointsStartPose()</title>
<indexterm><primary>RestoreJointsStartPose</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>RestoreJointsStartPose</secondary></indexterm>
<para><computeroutput>void Leap.Unity.RiggedHand.RestoreJointsStartPose ( )</computeroutput></para>
<para>Restores original joint positions, particularly after model has been placed in <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link>&apos;s editor pose </para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00294">294</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1a5a1c018bad50c06259998bdccbc2c513"/>    <section>
    <title>SetupRiggedHand()</title>
<indexterm><primary>SetupRiggedHand</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>SetupRiggedHand</secondary></indexterm>
<para><computeroutput>void Leap.Unity.RiggedHand.SetupRiggedHand ( )</computeroutput></para>
<para>Sets up the rigged hand by finding base of each finger by name </para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00141">141</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1ae59cd89a5a3b39f56be3b8db74030fa5"/>    <section>
    <title>StoreJointsStartPose()</title>
<indexterm><primary>StoreJointsStartPose</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>StoreJointsStartPose</secondary></indexterm>
<para><computeroutput>void Leap.Unity.RiggedHand.StoreJointsStartPose ( )</computeroutput></para>
<para>Stores a snapshot of original joint positions </para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00285">285</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1aa44bd1ae715125809d5803b293eb1bee"/>    <section>
    <title>SupportsEditorPersistence()</title>
<indexterm><primary>SupportsEditorPersistence</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>SupportsEditorPersistence</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.RiggedHand.SupportsEditorPersistence ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Returns whether or not this hand model supports editor persistence. This is false by default and must be opt-in by a developer making their own hand model script if they want editor persistence. </para>
</para>
<para>
Reimplemented from <link linkend="_class_leap_1_1_unity_1_1_hand_model_base_1acd4789523584dd7d240e1d426b4d321c">Leap.Unity.HandModelBase</link>.</para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00025">25</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1ac4e41fd3965e2d0d56379d3fc6011128"/>    <section>
    <title>UpdateHand()</title>
<indexterm><primary>UpdateHand</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>UpdateHand</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.RiggedHand.UpdateHand ( )<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Implement this function to update this hand once every game loop. For <link linkend="_class_leap_1_1_unity_1_1_hand_model">HandModel</link> instances assigned to the HandController graphics hand list, the HandController calls this function during the <link linkend="_namespace_leap_1_1_unity">Unity</link> Update() phase. For <link linkend="_class_leap_1_1_unity_1_1_hand_model">HandModel</link> instances in the physics hand list, the HandController calls this function in the FixedUpdate() phase. </para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_hand_model_1acbb96fd18f28d01a74c1e0ac709b1977">Leap.Unity.HandModel</link>.</para>
<para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00095">95</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1a58577754d59a13b304fd1855bab163cf"/>    <section>
    <title>DeformPositionsInFingers</title>
<indexterm><primary>DeformPositionsInFingers</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>DeformPositionsInFingers</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.RiggedHand.DeformPositionsInFingers</computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00042">42</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1ac0ccd96e23893625056adc4929688f5a"/>    <section>
    <title>modelFingerPointing</title>
<indexterm><primary>modelFingerPointing</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>modelFingerPointing</secondary></indexterm>
<para><computeroutput>Vector3 Leap.Unity.RiggedHand.modelFingerPointing = new Vector3(0, 0, 0)</computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00071">71</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1aba36c91e04e41858d120462170cf7902"/>    <section>
    <title>ModelPalmAtLeapWrist</title>
<indexterm><primary>ModelPalmAtLeapWrist</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>ModelPalmAtLeapWrist</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.RiggedHand.ModelPalmAtLeapWrist = true</computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00049">49</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1a684f30ad8b1293a862bc3f6ddc6fb5a1"/>    <section>
    <title>modelPalmFacing</title>
<indexterm><primary>modelPalmFacing</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>modelPalmFacing</secondary></indexterm>
<para><computeroutput>Vector3 Leap.Unity.RiggedHand.modelPalmFacing = new Vector3(0, 0, 0)</computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00072">72</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1ad02235db6045a120093cdca16b1e61bf"/>    <section>
    <title>UseMetaCarpals</title>
<indexterm><primary>UseMetaCarpals</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>UseMetaCarpals</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.RiggedHand.UseMetaCarpals</computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00052">52</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1aafa1ebadbf7fb5901f22f5834bac4dba"/>    <section>
    <title>HandModelType</title>
<indexterm><primary>HandModelType</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>HandModelType</secondary></indexterm>
<para><computeroutput>override <link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0">ModelType</link> Leap.Unity.RiggedHand.HandModelType<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00020">20</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1a5b746af2657245a3e8cad12b081d1fe0"/>    <section>
    <title>scaleLastFingerBones</title>
<indexterm><primary>scaleLastFingerBones</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>scaleLastFingerBones</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.RiggedHand.scaleLastFingerBones<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00063">63</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_rigged_hand_1ab8de11dc599037ace3a7bce66cdb8b94"/>    <section>
    <title>SetEditorLeapPose</title>
<indexterm><primary>SetEditorLeapPose</primary><secondary>Leap.Unity.RiggedHand</secondary></indexterm>
<indexterm><primary>Leap.Unity.RiggedHand</primary><secondary>SetEditorLeapPose</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.RiggedHand.SetEditorLeapPose<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__rigged_hand_8cs_source_1l00032">32</link> of file <link linkend="__rigged_hand_8cs_source">RiggedHand.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Hands/<link linkend="__rigged_hand_8cs">RiggedHand.cs</link></section>
</section>
