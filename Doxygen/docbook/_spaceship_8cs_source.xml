<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__spaceship_8cs_source">
<title>Spaceship.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Examples/7. Moving Reference Frames/Scripts/Spaceship.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_leap">Leap</link>.<link linkend="_namespace_leap_1_1_unity">Unity</link>.<link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link>;
00012 <emphasis role="keyword">using</emphasis>&#32;System;
00013 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00014 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00015 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00016 
00017 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_examples">Leap.Unity.Examples</link>&#32;{
00018 
00033 &#32;&#32;[AddComponentMenu(<emphasis role="stringliteral">&quot;&quot;</emphasis>)]
<anchor xml:id="__spaceship_8cs_source_1l00034"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship">00034</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship">Spaceship</link>&#32;:&#32;MonoBehaviour&#32;{
00035 
00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Rigidbody&#32;_body;
00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>
00045 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;UNITY_EDITOR</emphasis>
00046 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>
00047 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__spaceship_8cs_source_1l00048"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a1e2feb769d40fe69ee816294bea0c326">00048</link> &#32;&#32;&#32;&#32;Rigidbody&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a1e2feb769d40fe69ee816294bea0c326">rigidbody</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_body;&#32;}&#32;}
00049 
00050 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;_mass&#32;=&#32;10F;
00051 
00052 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;_velocity;
<anchor xml:id="__spaceship_8cs_source_1l00053"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a85db85a569f39191c86b6d13e64a5d72">00053</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a85db85a569f39191c86b6d13e64a5d72">velocity</link>&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_velocity;&#32;}
00055 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;_velocity&#32;=&#32;value;&#32;}
00056 &#32;&#32;&#32;&#32;}
00057 
<anchor xml:id="__spaceship_8cs_source_1l00058"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1ae135263bab134965e23c622b8be345ce">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1ae135263bab134965e23c622b8be345ce">shipAlignedVelocity</link>&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Inverse(this.transform.rotation)&#32;*&#32;_velocity;&#32;}
00060 &#32;&#32;&#32;&#32;}
00061 
00062 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;_angularVelocity;
<anchor xml:id="__spaceship_8cs_source_1l00063"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a8cf051cbc8502f4407e535a944640ca2">00063</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a8cf051cbc8502f4407e535a944640ca2">angularVelocity</link>&#32;{
00064 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;_angularVelocity;&#32;}
00065 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">set</emphasis>&#32;{&#32;_angularVelocity&#32;=&#32;value;&#32;}
00066 &#32;&#32;&#32;&#32;}
00067 
<anchor xml:id="__spaceship_8cs_source_1l00068"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a93b58eabd1710a71b7a087e274b9fa8c">00068</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a93b58eabd1710a71b7a087e274b9fa8c">shipAlignedAngularVelocity</link>&#32;{
00069 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">get</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Inverse(this.transform.rotation)&#32;*&#32;_angularVelocity;&#32;}
00070 &#32;&#32;&#32;&#32;}
00071 
00072 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;_accumulatedForce;
00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;Vector3&#32;_accumulatedTorque;
00074 
00075 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Awake()&#32;{
00076 &#32;&#32;&#32;&#32;&#32;&#32;_body&#32;=&#32;GetComponent&lt;Rigidbody&gt;();
00077 &#32;&#32;&#32;&#32;&#32;&#32;_body.mass&#32;=&#32;_mass;
00078 &#32;&#32;&#32;&#32;&#32;&#32;_body.isKinematic&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00079 &#32;&#32;&#32;&#32;}
00080 
00081 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;ship&#32;is&#32;moved&#32;in&#32;the&#32;manager&apos;s&#32;OnPrePhysicalUpdate&#32;callback,&#32;which&#32;ensures</emphasis>
00083 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(1)&#32;the&#32;ship&apos;s&#32;transform&#32;is&#32;updated&#32;before&#32;the&#32;Interaction&#32;Manager&#32;runs,&#32;and</emphasis>
00084 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;(2)&#32;the&#32;ship&apos;s&#32;transform&#32;is&#32;updated&#32;in&#32;FixedUpdate.</emphasis>
00085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
00086 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;Interaction&#32;Manager&#32;takes&#32;into&#32;account&#32;how&#32;it&#32;has&#32;moved&#32;since&#32;its&#32;last</emphasis>
00087 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;update,&#32;and&#32;informs&#32;interaction&#32;controllers&#32;appropriately,&#32;allowing</emphasis>
00088 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;interfaces&#32;to&#32;function&#32;properly.</emphasis>
00089 
00090 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager">InteractionManager</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ad59361bc7c0cc65f18f0c9b9b0fac587">instance</link>.<link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_manager_1ac5ca2a8716263ba7c473cf120fd5dca2">OnPrePhysicalUpdate</link>&#32;+=&#32;updateShipPhysics;
00091 &#32;&#32;&#32;&#32;}
00092 
00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;updateShipPhysics()&#32;{
00094 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;velocity.</emphasis>
00095 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;acceleration&#32;=&#32;_accumulatedForce&#32;/&#32;_mass;
00096 &#32;&#32;&#32;&#32;&#32;&#32;_velocity&#32;+=&#32;acceleration&#32;*&#32;Time.deltaTime;
00097 
00098 &#32;&#32;&#32;&#32;&#32;&#32;_accumulatedForce&#32;=&#32;Vector3.zero;
00099 
00100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;position.</emphasis>
00101 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;newPosition&#32;=&#32;this.transform.position&#32;+&#32;_velocity&#32;*&#32;Time.deltaTime;
00102 &#32;&#32;&#32;&#32;&#32;&#32;this.transform.position&#32;=&#32;newPosition;
00103 
00104 
00105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;angular&#32;velocity.</emphasis>
00106 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;eulerAcceleration&#32;=&#32;_accumulatedTorque;
00107 &#32;&#32;&#32;&#32;&#32;&#32;_angularVelocity&#32;+=&#32;eulerAcceleration&#32;*&#32;Time.deltaTime;
00108 
00109 &#32;&#32;&#32;&#32;&#32;&#32;_accumulatedTorque&#32;=&#32;Vector3.zero;
00110 
00111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;rotation.</emphasis>
00112 &#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;newRotation&#32;=&#32;Quaternion.Euler(_angularVelocity&#32;*&#32;Time.deltaTime)&#32;*&#32;this.transform.rotation;
00113 &#32;&#32;&#32;&#32;&#32;&#32;this.transform.rotation&#32;=&#32;newRotation;
00114 
00115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sync&#32;transforms&#32;with&#32;the&#32;Physics&#32;engine&#32;so&#32;Rigidbody&#32;changes&#32;reflect</emphasis>
00116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;movement&#32;of&#32;the&#32;ship.&#32;(Required&#32;for&#32;2017.3&#32;and&#32;newer.)</emphasis>
00117 <emphasis role="preprocessor">#if&#32;UNITY_2017_3_OR_NEWER</emphasis>
00118 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_leap_1_1_unity_1a186e5eb0a2b743f1f6b79346f0ab8ad0a50ae99e9c35446c2580e4b540b0fd104">Physics</link>.SyncTransforms();
00119 <emphasis role="preprocessor">#endif</emphasis>
00120 &#32;&#32;&#32;&#32;}
00121 
00122 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#region&#32;Ship&#32;Forces&#32;API</emphasis>
00123 
<anchor xml:id="__spaceship_8cs_source_1l00124"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a9a263aa09c845c7a17303f7dde6c0254">00124</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a9a263aa09c845c7a17303f7dde6c0254">AddForce</link>(Vector3&#32;force)&#32;{
00125 &#32;&#32;&#32;&#32;&#32;&#32;_accumulatedForce&#32;+=&#32;force;
00126 &#32;&#32;&#32;&#32;}
00127 
<anchor xml:id="__spaceship_8cs_source_1l00128"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a47a880f577cb1fead6e5606acb05e456">00128</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a47a880f577cb1fead6e5606acb05e456">AddForceAtPosition</link>(Vector3&#32;force,&#32;Vector3&#32;position)&#32;{
00129 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;toCenterOfMass&#32;=&#32;this.transform.TransformPoint(_body.centerOfMass)&#32;-&#32;position;
00130 
00131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;forceCMAngle&#32;=&#32;Vector3.Angle(force,&#32;toCenterOfMass);
00132 
00133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Linear&#32;force</emphasis>
00134 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;linForce&#32;=&#32;force&#32;*&#32;Mathf.Cos(forceCMAngle);
00135 &#32;&#32;&#32;&#32;&#32;&#32;_accumulatedForce&#32;+=&#32;linForce;
00136 
00137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Torque</emphasis>
00138 &#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;torqueVector&#32;=&#32;force&#32;*&#32;Mathf.Sin(forceCMAngle)&#32;*&#32;toCenterOfMass.magnitude;
00139 
00140 &#32;&#32;&#32;&#32;&#32;&#32;_accumulatedTorque&#32;+=&#32;Vector3.Cross(torqueVector,&#32;toCenterOfMass);
00141 &#32;&#32;&#32;&#32;}
00142 
<anchor xml:id="__spaceship_8cs_source_1l00143"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1ad8f932ac8f92aa063fa7855b8616c204">00143</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1ad8f932ac8f92aa063fa7855b8616c204">AddShipAlignedTorque</link>(Vector3&#32;shipAlignedTorque)&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;_accumulatedTorque&#32;+=&#32;this.transform.rotation&#32;*&#32;shipAlignedTorque;
00145 &#32;&#32;&#32;&#32;}
00146 
<anchor xml:id="__spaceship_8cs_source_1l00147"/><link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a1e08f5f7108281adb9deab1c2af31f9e">00147</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_examples_1_1_spaceship_1a1e08f5f7108281adb9deab1c2af31f9e">AddShipAlignedForce</link>(Vector3&#32;shipAlignedForce)&#32;{
00148 &#32;&#32;&#32;&#32;&#32;&#32;_accumulatedForce&#32;+=&#32;this.transform.rotation&#32;*&#32;shipAlignedForce;
00149 &#32;&#32;&#32;&#32;}
00150 
00151 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endregion</emphasis>
00152 
00153 &#32;&#32;}
00154 
00155 }
00156 
</programlisting></section>
