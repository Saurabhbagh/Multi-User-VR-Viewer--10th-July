<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__leap_cylindrical_space_8cs_source">
<title>LeapCylindricalSpace.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Space/Definitions/LeapCylindricalSpace.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00012"/><link linkend="_namespace_leap_1_1_unity_1_1_space">00012</link> <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity_1_1_space">Leap.Unity.Space</link>&#32;{
00013 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00014"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space">00014</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space">LeapCylindricalSpace</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space">LeapRadialSpace</link>&#32;{
00015 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00016"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1a65ae2afb61d3f9fe727a5a08dcc6a2ec">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1a65ae2afb61d3f9fe727a5a08dcc6a2ec">CosntructBaseTransformer</link>()&#32;{
00017 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer">Transformer</link>()&#32;{
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a77daae8f1a9f57ef4dc3e75fe5801bcd">space</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>,
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchor&#32;=&#32;<emphasis role="keyword">this</emphasis>,
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angleOffset&#32;=&#32;0,
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;heightOffset&#32;=&#32;0,
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiusOffset&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>,
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;radiansPerMeter&#32;=&#32;1.0f&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>
00024 &#32;&#32;&#32;&#32;&#32;&#32;};
00025 &#32;&#32;&#32;&#32;}
00026 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00027"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1ae0d1e2b264077a2f5075a239903a91d9">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1ae0d1e2b264077a2f5075a239903a91d9">ConstructTransformer</link>(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor">LeapSpaceAnchor</link>&#32;anchor)&#32;{
00028 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer">Transformer</link>()&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a77daae8f1a9f57ef4dc3e75fe5801bcd">space</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>,
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchor&#32;=&#32;anchor
00031 &#32;&#32;&#32;&#32;&#32;&#32;};
00032 &#32;&#32;&#32;&#32;}
00033 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00034"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1aaf93c86d6ae53e212049898f2bb2a2cf">00034</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1aaf93c86d6ae53e212049898f2bb2a2cf">UpdateRadialTransformer</link>(<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a6f98d35d75f83e2ff2c978715520c836">transformer</link>,&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_transformer">ITransformer</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a8df76f5c9ba6a0f169880fec6bca557b">parent</link>,&#32;Vector3&#32;rectSpaceDelta)&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;radialTransformer&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a6f98d35d75f83e2ff2c978715520c836">transformer</link>&#32;as&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer">Transformer</link>;
00036 &#32;&#32;&#32;&#32;&#32;&#32;var&#32;radialParent&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor_1a8df76f5c9ba6a0f169880fec6bca557b">parent</link>&#32;as&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer">Transformer</link>;
00037 
00038 &#32;&#32;&#32;&#32;&#32;&#32;radialTransformer.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">angleOffset</link>&#32;=&#32;radialParent.angleOffset&#32;+&#32;rectSpaceDelta.x&#32;/&#32;radialParent.radiusOffset;
00039 &#32;&#32;&#32;&#32;&#32;&#32;radialTransformer.heightOffset&#32;=&#32;radialParent.heightOffset&#32;+&#32;rectSpaceDelta.y;
00040 &#32;&#32;&#32;&#32;&#32;&#32;radialTransformer.radiusOffset&#32;=&#32;radialParent.radiusOffset&#32;+&#32;rectSpaceDelta.z;
00041 &#32;&#32;&#32;&#32;&#32;&#32;radialTransformer.radiansPerMeter&#32;=&#32;1.0f&#32;/&#32;(radialTransformer.radiusOffset);
00042 &#32;&#32;&#32;&#32;}
00043 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00044"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer">00044</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer">Transformer</link>&#32;:&#32;<link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_radial_transformer">IRadialTransformer</link>&#32;{
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00045"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">00045</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space">LeapCylindricalSpace</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00046"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b0c7e65513d10439dc35f983cb90a38">00046</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_space_anchor">LeapSpaceAnchor</link>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b0c7e65513d10439dc35f983cb90a38">anchor</link>&#32;{&#32;<emphasis role="keyword">get</emphasis>;&#32;<emphasis role="keyword">set</emphasis>;&#32;}
00047 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00048"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">00048</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">angleOffset</link>;
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00049"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a713b656dee217115df25fb7cbf2f5024">00049</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a713b656dee217115df25fb7cbf2f5024">heightOffset</link>;
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00050"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">00050</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00051"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a7c876cc0b394a8bc2bc0a59a7fc5d4a1">00051</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a7c876cc0b394a8bc2bc0a59a7fc5d4a1">radiansPerMeter</link>;
00052 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00053"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1aa912ab55d4e9a20dcbfaff6717f688f9">00053</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1aa912ab55d4e9a20dcbfaff6717f688f9">TransformPoint</link>(Vector3&#32;localRectPos)&#32;{
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00055 
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b0c7e65513d10439dc35f983cb90a38">anchor</link>.transform.position);
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta&#32;=&#32;localRectPos&#32;-&#32;anchorRectPos;
00058 
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">angleOffset</link>&#32;+&#32;anchorDelta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;height&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a713b656dee217115df25fb7cbf2f5024">heightOffset</link>&#32;+&#32;anchorDelta.y;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>&#32;+&#32;anchorDelta.z;
00062 
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position;
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.x&#32;=&#32;Mathf.Sin(angle)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.y&#32;=&#32;height;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.z&#32;=&#32;Mathf.Cos(angle)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;position;
00068 &#32;&#32;&#32;&#32;&#32;&#32;}
00069 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00070"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a4005272b32cd3040a830f43ad9e072d9">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a4005272b32cd3040a830f43ad9e072d9">InverseTransformPoint</link>(Vector3&#32;localWarpedPos)&#32;{
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localWarpedPos.z&#32;+=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00072 
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;Mathf.Atan2(localWarpedPos.x,&#32;localWarpedPos.z);
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;height&#32;=&#32;localWarpedPos.y;
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Vector2(localWarpedPos.x,&#32;localWarpedPos.z).magnitude;
00076 
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta.x&#32;=&#32;(angle&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">angleOffset</link>)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta.y&#32;=&#32;height&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a713b656dee217115df25fb7cbf2f5024">heightOffset</link>;
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta.z&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
00081 
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b0c7e65513d10439dc35f983cb90a38">anchor</link>.transform.position);
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;localRectPos&#32;=&#32;anchorRectPos&#32;+&#32;anchorDelta;
00084 
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;localRectPos;
00086 &#32;&#32;&#32;&#32;&#32;&#32;}
00087 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00088"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1afdb282453fb2729b9e8ee426814f6d30">00088</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1afdb282453fb2729b9e8ee426814f6d30">TransformRotation</link>(Vector3&#32;localRectPos,&#32;Quaternion&#32;localRectRot)&#32;{
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00090 
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b0c7e65513d10439dc35f983cb90a38">anchor</link>.transform.position);
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta&#32;=&#32;localRectPos&#32;-&#32;anchorRectPos;
00093 
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">angleOffset</link>&#32;+&#32;anchorDelta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
00095 
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.Euler(0,&#32;angle&#32;*&#32;Mathf.Rad2Deg,&#32;0);
00097 
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rotation&#32;*&#32;localRectRot;
00099 &#32;&#32;&#32;&#32;&#32;&#32;}
00100 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00101"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a679c3020469b4b124056bd8f83c99c26">00101</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Quaternion&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a679c3020469b4b124056bd8f83c99c26">InverseTransformRotation</link>(Vector3&#32;localWarpedPos,&#32;Quaternion&#32;localWarpedRot)&#32;{
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localWarpedPos.z&#32;+=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00103 
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;Mathf.Atan2(localWarpedPos.x,&#32;localWarpedPos.z);
00105 
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Euler(0,&#32;-angle&#32;*&#32;Mathf.Rad2Deg,&#32;0)&#32;*&#32;localWarpedRot;
00107 &#32;&#32;&#32;&#32;&#32;&#32;}
00108 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00109"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9ee37b1079bb46d1f4ae1e87cb3491f2">00109</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9ee37b1079bb46d1f4ae1e87cb3491f2">TransformDirection</link>(Vector3&#32;localRectPos,&#32;Vector3&#32;localRectDirection)&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00111 
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b0c7e65513d10439dc35f983cb90a38">anchor</link>.transform.position);
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta&#32;=&#32;localRectPos&#32;-&#32;anchorRectPos;
00114 
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">angleOffset</link>&#32;+&#32;anchorDelta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
00116 
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.Euler(0,&#32;angle&#32;*&#32;Mathf.Rad2Deg,&#32;0);
00118 
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rotation&#32;*&#32;localRectDirection;
00120 &#32;&#32;&#32;&#32;&#32;&#32;}
00121 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00122"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1ab494977cfba432d2af0103dbe9a004dd">00122</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector3&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1ab494977cfba432d2af0103dbe9a004dd">InverseTransformDirection</link>(Vector3&#32;localWarpedPos,&#32;Vector3&#32;localWarpedDirection)&#32;{
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localWarpedPos.z&#32;+=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00124 
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;Mathf.Atan2(localWarpedPos.x,&#32;localWarpedPos.z);
00126 
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Quaternion.Euler(0,&#32;-angle&#32;*&#32;Mathf.Rad2Deg,&#32;0)&#32;*&#32;localWarpedDirection;
00128 &#32;&#32;&#32;&#32;&#32;&#32;}
00129 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00130"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b84b4d4ae446344b19c6c6218e1a249">00130</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Matrix4x4&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b84b4d4ae446344b19c6c6218e1a249">GetTransformationMatrix</link>(Vector3&#32;localRectPos)&#32;{
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorDelta;
00132 
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b0c7e65513d10439dc35f983cb90a38">anchor</link>.transform.position);
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;anchorDelta&#32;=&#32;localRectPos&#32;-&#32;anchorRectPos;
00135 
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;angle&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">angleOffset</link>&#32;+&#32;anchorDelta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;height&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a713b656dee217115df25fb7cbf2f5024">heightOffset</link>&#32;+&#32;anchorDelta.y;
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>&#32;+&#32;anchorDelta.z;
00139 
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;position;
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.x&#32;=&#32;Mathf.Sin(angle)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.y&#32;=&#32;height;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position.z&#32;=&#32;Mathf.Cos(angle)&#32;*&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>&#32;-&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_radial_space_1a1d081038262c174f0ccc7accc0d39897">radius</link>;
00144 
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Quaternion&#32;rotation&#32;=&#32;Quaternion.Euler(0,&#32;angle&#32;*&#32;Mathf.Rad2Deg,&#32;0);
00146 
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Matrix4x4.TRS(position,&#32;rotation,&#32;Vector3.one);
00148 &#32;&#32;&#32;&#32;&#32;&#32;}
00149 
<anchor xml:id="__leap_cylindrical_space_8cs_source_1l00150"/><link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a7229a4bf75a299edb189790eeadd9341">00150</link> &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Vector4&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a7229a4bf75a299edb189790eeadd9341">GetVectorRepresentation</link>(Transform&#32;element)&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;elementRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.transform.InverseTransformPoint(element.position);
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;anchorRectPos&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a06f1107a2386c409efa1e2b912974634">space</link>.transform.InverseTransformPoint(<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a9b0c7e65513d10439dc35f983cb90a38">anchor</link>.transform.position);
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;delta&#32;=&#32;elementRectPos&#32;-&#32;anchorRectPos;
00154 
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector4&#32;rep;
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rep.x&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a2aaf4113a6fd898b782a533219d3d8b0">angleOffset</link>&#32;+&#32;delta.x&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rep.y&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a713b656dee217115df25fb7cbf2f5024">heightOffset</link>&#32;+&#32;delta.y;
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rep.z&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>&#32;+&#32;delta.z;
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rep.w&#32;=&#32;1.0f&#32;/&#32;<link linkend="_class_leap_1_1_unity_1_1_space_1_1_leap_cylindrical_space_1_1_transformer_1a378887c4ce4937377dacb6984ee30c06">radiusOffset</link>;
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rep;
00161 &#32;&#32;&#32;&#32;&#32;&#32;}
00162 &#32;&#32;&#32;&#32;}
00163 &#32;&#32;}
00164 }
</programlisting></section>
