<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__i_a_p_transaction_tests_8cs_source">
<title>IAPTransactionTests.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.analytics@3.2.2/Tests/Editor/Unity.Analytics.StandardEvents/IAPTransactionTests.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;System;
00002 <emphasis role="keyword">using</emphasis>&#32;NUnit.Framework;
00003 
00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_unity_engine_1_1_analytics_1_1_tests">UnityEngine.Analytics.Tests</link>
00005 {
00006 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis>AnalyticsEventTests
00007 &#32;&#32;&#32;&#32;{
00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__i_a_p_transaction_tests_8cs_source_1l00009"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a9ef273baa081d85d9e651c3f3668650e">00009</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a9ef273baa081d85d9e651c3f3668650e">IAPTransaction_ContextTest</link>(
00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;context)
00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;price&#32;=&#32;1f;
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00014 
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(context))
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Throws&lt;ArgumentException&gt;(()&#32;=&gt;&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId));
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId));
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00023 
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00026 
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__i_a_p_transaction_tests_8cs_source_1l00028"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1ad6d934091b1f41a3de4c35941579a44e">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1ad6d934091b1f41a3de4c35941579a44e">IAPTransaction_PriceTest</link>(
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(-1f,&#32;0f,&#32;1f)]&#32;<emphasis role="keywordtype">float</emphasis>&#32;price)
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00033 
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId));
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00037 
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__i_a_p_transaction_tests_8cs_source_1l00039"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a047702af2884cc70440d73571a29f86e">00039</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a047702af2884cc70440d73571a29f86e">IAPTransaction_ItemIdTest</link>(
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;itemId)
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;price&#32;=&#32;1f;
00044 
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(itemId))
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Throws&lt;ArgumentException&gt;(()&#32;=&gt;&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId));
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId));
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00053 
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00056 
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__i_a_p_transaction_tests_8cs_source_1l00058"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a138b8789fd0277ab323ee67d171141e0">00058</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a138b8789fd0277ab323ee67d171141e0">IAPTransaction_ItemTypeTest</link>(
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test_type&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;itemType)
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;price&#32;=&#32;1f;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00064 
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId,&#32;itemType));
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00068 
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__i_a_p_transaction_tests_8cs_source_1l00070"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a519fcc2f47aaae37231255d8c4dbf761">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a519fcc2f47aaae37231255d8c4dbf761">IAPTransaction_LevelTest</link>(
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test_level&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;level)
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;price&#32;=&#32;1f;
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemType&#32;=&#32;<emphasis role="stringliteral">&quot;test_type&quot;</emphasis>;
00077 
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId,&#32;itemType,&#32;level));
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00081 
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__i_a_p_transaction_tests_8cs_source_1l00083"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a9a292322c9fc08b516000291580482b4">00083</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a9a292322c9fc08b516000291580482b4">IAPTransaction_TransactionIdTest</link>(
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test_id&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;transactionId)
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;price&#32;=&#32;1f;
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemType&#32;=&#32;<emphasis role="stringliteral">&quot;test_type&quot;</emphasis>;
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;level&#32;=&#32;<emphasis role="stringliteral">&quot;test_level&quot;</emphasis>;
00091 
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId,&#32;itemType,&#32;level,&#32;transactionId));
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00095 
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__i_a_p_transaction_tests_8cs_source_1l00097"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a4458ced6de6579a40d80cfb8c3dfc25f">00097</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a4458ced6de6579a40d80cfb8c3dfc25f">IAPTransaction_CustomDataTest</link>()
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;price&#32;=&#32;1f;
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemType&#32;=&#32;<emphasis role="stringliteral">&quot;test_type&quot;</emphasis>;
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;level&#32;=&#32;<emphasis role="stringliteral">&quot;test_level&quot;</emphasis>;
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;transactionId&#32;=&#32;<emphasis role="stringliteral">&quot;test_id&quot;</emphasis>;
00105 
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.IAPTransaction(context,&#32;price,&#32;itemId,&#32;itemType,&#32;level,&#32;transactionId,&#32;m_CustomData));
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1addfce5dc50d03ecdb8b9791b06450b2b">EvaluateCustomData</link>(m_CustomData);
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00110 &#32;&#32;&#32;&#32;}
00111 }
</programlisting></section>
