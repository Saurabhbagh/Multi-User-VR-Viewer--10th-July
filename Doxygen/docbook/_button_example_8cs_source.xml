<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__button_example_8cs_source">
<title>ButtonExample.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/SteamVR/InteractionSystem/Samples/Scripts/ButtonExample.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00002 <emphasis role="keyword">using</emphasis>&#32;System.Collections;
00003 
00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_valve_1_1_v_r_1_1_interaction_system_1_1_sample">Valve.VR.InteractionSystem.Sample</link>
00005 {
<anchor xml:id="__button_example_8cs_source_1l00006"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example">00006</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example">ButtonExample</link>&#32;:&#32;MonoBehaviour
00007 &#32;&#32;&#32;&#32;{
<anchor xml:id="__button_example_8cs_source_1l00008"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example_1a96231382d398136b857b1ca992ca7ad7">00008</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hover_button">HoverButton</link>&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example_1a96231382d398136b857b1ca992ca7ad7">hoverButton</link>;
00009 
<anchor xml:id="__button_example_8cs_source_1l00010"/><link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example_1a6304ed983b27429144348fed86e6a74b">00010</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;GameObject&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example_1a6304ed983b27429144348fed86e6a74b">prefab</link>;
00011 
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Start()
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example_1a96231382d398136b857b1ca992ca7ad7">hoverButton</link>.<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hover_button_1acb3cd0d38ff7a054b761c7e232817ec5">onButtonDown</link>.AddListener(OnButtonDown);
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00016 
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnButtonDown(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_hand">Hand</link>&#32;hand)
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StartCoroutine(DoPlant());
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00021 
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;IEnumerator&#32;DoPlant()
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GameObject&#32;planting&#32;=&#32;GameObject.Instantiate&lt;GameObject&gt;(<link linkend="_class_valve_1_1_v_r_1_1_interaction_system_1_1_sample_1_1_button_example_1a6304ed983b27429144348fed86e6a74b">prefab</link>);
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;planting.transform.position&#32;=&#32;this.transform.position;
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;planting.transform.rotation&#32;=&#32;Quaternion.Euler(0,&#32;Random.value&#32;*&#32;360f,&#32;0);
00027 
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;planting.GetComponentInChildren&lt;MeshRenderer&gt;().material.SetColor(<emphasis role="stringliteral">&quot;_TintColor&quot;</emphasis>,&#32;Random.ColorHSV(0f,&#32;1f,&#32;1f,&#32;1f,&#32;0.5f,&#32;1f));
00029 
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Rigidbody&#32;rigidbody&#32;=&#32;planting.GetComponent&lt;Rigidbody&gt;();
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rigidbody&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.isKinematic&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00033 
00034 
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;initialScale&#32;=&#32;Vector3.one&#32;*&#32;0.01f;
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vector3&#32;targetScale&#32;=&#32;Vector3.one&#32;*&#32;(1&#32;+&#32;(Random.value&#32;*&#32;0.25f));
00037 
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;startTime&#32;=&#32;Time.time;
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;overTime&#32;=&#32;0.5f;
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;endTime&#32;=&#32;startTime&#32;+&#32;overTime;
00041 
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(Time.time&#32;&lt;&#32;endTime)
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;planting.transform.localScale&#32;=&#32;Vector3.Slerp(initialScale,&#32;targetScale,&#32;(Time.time&#32;-&#32;startTime)&#32;/&#32;overTime);
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;yield&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">null</emphasis>;
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00047 
00048 
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rigidbody&#32;!=&#32;<emphasis role="keyword">null</emphasis>)
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rigidbody.isKinematic&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00052 &#32;&#32;&#32;&#32;}
00053 }
</programlisting></section>
