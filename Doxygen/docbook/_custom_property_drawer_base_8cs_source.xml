<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__custom_property_drawer_base_8cs_source">
<title>CustomPropertyDrawerBase.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Editor/CustomPropertyDrawerBase.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;System;
00011 <emphasis role="keyword">using</emphasis>&#32;System.Collections.Generic;
00012 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00013 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00014 
00015 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00016 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00017"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base">00017</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base">CustomPropertyDrawerBase</link>&#32;:&#32;PropertyDrawer&#32;{
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00018"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a3423b6bcde5af34f26eb046f47e094">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a3423b6bcde5af34f26eb046f47e094">INDENT_AMOUNT</link>&#32;=&#32;12;
00019 
00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;List&lt;IDrawable&gt;&#32;_drawables;
00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;SerializedProperty&#32;_property;
00022 
00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;_onGuiSampleName;
00024 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;_getHeightSampleName;
00025 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00026"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a1ea66e1186afcd296e95407337093f7d">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a1ea66e1186afcd296e95407337093f7d">CustomPropertyDrawerBase</link>()&#32;{
00027 &#32;&#32;&#32;&#32;&#32;&#32;_onGuiSampleName&#32;=&#32;<emphasis role="stringliteral">&quot;OnGUI&#32;for&#32;&quot;</emphasis>&#32;+&#32;GetType().Name;
00028 &#32;&#32;&#32;&#32;&#32;&#32;_getHeightSampleName&#32;=&#32;<emphasis role="stringliteral">&quot;GetPropertyHeight&#32;for&#32;&quot;</emphasis>&#32;+&#32;GetType().Name;
00029 &#32;&#32;&#32;&#32;}
00030 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00031"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a7a817930dcea770d52ef267ce720c650">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a7a817930dcea770d52ef267ce720c650">OnGUI</link>(Rect&#32;position,&#32;SerializedProperty&#32;property,&#32;GUIContent&#32;label)&#32;{
00032 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_profiler_sample">ProfilerSample</link>(_onGuiSampleName))&#32;{
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a1db92388446d13bf0e497f47b4fbc06a">init</link>(property);
00034 
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;drawable&#32;<emphasis role="keywordflow">in</emphasis>&#32;_drawables)&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;drawable.Draw(ref&#32;position);
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00038 &#32;&#32;&#32;&#32;&#32;&#32;}
00039 &#32;&#32;&#32;&#32;}
00040 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00041"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a302e44c3a3a0dae054573810855c219e">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a302e44c3a3a0dae054573810855c219e">GetPropertyHeight</link>(SerializedProperty&#32;property,&#32;GUIContent&#32;label)&#32;{
00042 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_struct_leap_1_1_unity_1_1_profiler_sample">ProfilerSample</link>(_getHeightSampleName))&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a1db92388446d13bf0e497f47b4fbc06a">init</link>(property);
00044 
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;height&#32;=&#32;0;
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">foreach</emphasis>&#32;(var&#32;drawable&#32;<emphasis role="keywordflow">in</emphasis>&#32;_drawables)&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(drawable&#32;is&#32;PropertyContainer)&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;height&#32;+=&#32;((PropertyContainer)drawable).getHeight();
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00051 
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;height;
00053 &#32;&#32;&#32;&#32;&#32;&#32;}
00054 &#32;&#32;&#32;&#32;}
00055 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00056"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a1db92388446d13bf0e497f47b4fbc06a">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a1db92388446d13bf0e497f47b4fbc06a">init</link>(SerializedProperty&#32;property)&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_property&#32;==&#32;property)&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00059 &#32;&#32;&#32;&#32;&#32;&#32;}
00060 
00061 &#32;&#32;&#32;&#32;&#32;&#32;_drawables&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;List&lt;IDrawable&gt;();
00062 &#32;&#32;&#32;&#32;&#32;&#32;_property&#32;=&#32;property;
00063 &#32;&#32;&#32;&#32;}
00064 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00065"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1ae8ffab0ab4a37260bbd0855e530c21f3">00065</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1ae8ffab0ab4a37260bbd0855e530c21f3">drawPropertyConditionally</link>(<emphasis role="keywordtype">string</emphasis>&#32;propertyName,&#32;<emphasis role="keywordtype">string</emphasis>&#32;conditionalName,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;includeChildren&#32;=&#32;<emphasis role="keyword">true</emphasis>)&#32;{
00066 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;property,&#32;condition;
00067 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a48ff6212e10ab69a24c538226a8466">tryGetProperty</link>(propertyName,&#32;out&#32;property)&#32;||&#32;!<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a48ff6212e10ab69a24c538226a8466">tryGetProperty</link>(conditionalName,&#32;out&#32;condition))&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00069 &#32;&#32;&#32;&#32;&#32;&#32;}
00070 
00071 &#32;&#32;&#32;&#32;&#32;&#32;_drawables.Add(<emphasis role="keyword">new</emphasis>&#32;PropertyContainer()&#32;{
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draw&#32;=&#32;rect&#32;=&gt;&#32;{
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(condition.boolValue)&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(rect,&#32;property,&#32;includeChildren);
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;getHeight&#32;=&#32;()&#32;=&gt;&#32;{
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;condition.boolValue&#32;?&#32;EditorGUI.GetPropertyHeight(property,&#32;GUIContent.none,&#32;includeChildren)&#32;:&#32;0;
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00080 &#32;&#32;&#32;&#32;&#32;&#32;});
00081 &#32;&#32;&#32;&#32;}
00082 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00083"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1ab4f0ecabdcb89d099b1b9ad6c71f1e0d">00083</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1ab4f0ecabdcb89d099b1b9ad6c71f1e0d">drawPropertyConditionally</link>(<emphasis role="keywordtype">string</emphasis>&#32;propertyName,&#32;Func&lt;bool&gt;&#32;condition,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;includeChildren&#32;=&#32;<emphasis role="keyword">true</emphasis>)&#32;{
00084 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;property;
00085 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a48ff6212e10ab69a24c538226a8466">tryGetProperty</link>(propertyName,&#32;out&#32;property))&#32;{
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00087 &#32;&#32;&#32;&#32;&#32;&#32;}
00088 
00089 &#32;&#32;&#32;&#32;&#32;&#32;_drawables.Add(<emphasis role="keyword">new</emphasis>&#32;PropertyContainer()&#32;{
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draw&#32;=&#32;rect&#32;=&gt;&#32;{
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(condition())&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(rect,&#32;property,&#32;includeChildren);
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;getHeight&#32;=&#32;()&#32;=&gt;&#32;{
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;condition()&#32;?&#32;EditorGUI.GetPropertyHeight(property,&#32;GUIContent.none,&#32;includeChildren)&#32;:&#32;0;
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00098 &#32;&#32;&#32;&#32;&#32;&#32;});
00099 &#32;&#32;&#32;&#32;}
00100 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00101"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a4e6c925f85520c7ffdb8498fed683d22">00101</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a4e6c925f85520c7ffdb8498fed683d22">drawProperty</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;includeChildren&#32;=&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;disable&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;{
00102 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;property;
00103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a48ff6212e10ab69a24c538226a8466">tryGetProperty</link>(name,&#32;out&#32;property))&#32;{
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00105 &#32;&#32;&#32;&#32;&#32;&#32;}
00106 
00107 &#32;&#32;&#32;&#32;&#32;&#32;GUIContent&#32;content&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(property.displayName,&#32;property.tooltip);
00108 &#32;&#32;&#32;&#32;&#32;&#32;_drawables.Add(<emphasis role="keyword">new</emphasis>&#32;PropertyContainer()&#32;{
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draw&#32;=&#32;rect&#32;=&gt;&#32;{
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.BeginDisabledGroup(disable);
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(rect,&#32;property,&#32;content,&#32;includeChildren);
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.EndDisabledGroup();
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;getHeight&#32;=&#32;()&#32;=&gt;&#32;EditorGUI.GetPropertyHeight(property,&#32;GUIContent.none,&#32;includeChildren)
00115 &#32;&#32;&#32;&#32;&#32;&#32;});
00116 &#32;&#32;&#32;&#32;}
00117 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00118"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a5490dfb02384c005ddd9d65c39e72132">00118</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a5490dfb02384c005ddd9d65c39e72132">drawProperty</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;Func&lt;string&gt;&#32;nameFunc,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;includeChildren&#32;=&#32;<emphasis role="keyword">true</emphasis>)&#32;{
00119 &#32;&#32;&#32;&#32;&#32;&#32;SerializedProperty&#32;property;
00120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a48ff6212e10ab69a24c538226a8466">tryGetProperty</link>(name,&#32;out&#32;property))&#32;{
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00122 &#32;&#32;&#32;&#32;&#32;&#32;}
00123 
00124 &#32;&#32;&#32;&#32;&#32;&#32;GUIContent&#32;content&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIContent(nameFunc(),&#32;property.tooltip);
00125 
00126 &#32;&#32;&#32;&#32;&#32;&#32;_drawables.Add(<emphasis role="keyword">new</emphasis>&#32;PropertyContainer()&#32;{
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draw&#32;=&#32;rect&#32;=&gt;&#32;{
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content.text&#32;=&#32;nameFunc()&#32;??&#32;<emphasis role="keyword">property</emphasis>.displayName;
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.PropertyField(rect,&#32;property,&#32;content,&#32;includeChildren);
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;getHeight&#32;=&#32;()&#32;=&gt;&#32;EditorGUI.GetPropertyHeight(property,&#32;content,&#32;includeChildren)
00132 &#32;&#32;&#32;&#32;&#32;&#32;});
00133 &#32;&#32;&#32;&#32;}
00134 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00135"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a8fc359bb586463a7b8c7672c7dd1cc60">00135</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a8fc359bb586463a7b8c7672c7dd1cc60">drawCustom</link>(Action&lt;Rect&gt;&#32;drawFunc,&#32;<emphasis role="keywordtype">float</emphasis>&#32;height)&#32;{
00136 &#32;&#32;&#32;&#32;&#32;&#32;_drawables.Add(<emphasis role="keyword">new</emphasis>&#32;PropertyContainer()&#32;{
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draw&#32;=&#32;drawFunc,
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;getHeight&#32;=&#32;()&#32;=&gt;&#32;height
00139 &#32;&#32;&#32;&#32;&#32;&#32;});
00140 &#32;&#32;&#32;&#32;}
00141 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00142"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a6fc64f4861bd0657b3a9a97140a996b5">00142</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a6fc64f4861bd0657b3a9a97140a996b5">drawCustom</link>(Action&lt;Rect&gt;&#32;drawFunc,&#32;Func&lt;float&gt;&#32;heightFunc)&#32;{
00143 &#32;&#32;&#32;&#32;&#32;&#32;_drawables.Add(<emphasis role="keyword">new</emphasis>&#32;PropertyContainer()&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draw&#32;=&#32;drawFunc,
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;getHeight&#32;=&#32;heightFunc
00146 &#32;&#32;&#32;&#32;&#32;&#32;});
00147 &#32;&#32;&#32;&#32;}
00148 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00149"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a2a57e8f6b5ac89d2616b44f4819dc117">00149</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a2a57e8f6b5ac89d2616b44f4819dc117">increaseIndent</link>()&#32;{
00150 &#32;&#32;&#32;&#32;&#32;&#32;_drawables.Add(<emphasis role="keyword">new</emphasis>&#32;IndentDrawable()&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indent&#32;=&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a3423b6bcde5af34f26eb046f47e094">INDENT_AMOUNT</link>
00152 &#32;&#32;&#32;&#32;&#32;&#32;});
00153 &#32;&#32;&#32;&#32;}
00154 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00155"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1aa29f79e7f8dc83ff5625aee15a60087b">00155</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1aa29f79e7f8dc83ff5625aee15a60087b">decreaseIndent</link>()&#32;{
00156 &#32;&#32;&#32;&#32;&#32;&#32;_drawables.Add(<emphasis role="keyword">new</emphasis>&#32;IndentDrawable()&#32;{
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indent&#32;=&#32;-<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a3423b6bcde5af34f26eb046f47e094">INDENT_AMOUNT</link>
00158 &#32;&#32;&#32;&#32;&#32;&#32;});
00159 &#32;&#32;&#32;&#32;}
00160 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00161"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a48ff6212e10ab69a24c538226a8466">00161</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a9a48ff6212e10ab69a24c538226a8466">tryGetProperty</link>(<emphasis role="keywordtype">string</emphasis>&#32;name,&#32;out&#32;SerializedProperty&#32;property)&#32;{
00162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">property</emphasis>&#32;=&#32;_property.FindPropertyRelative(name);
00163 
00164 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(property&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(<emphasis role="stringliteral">&quot;Could&#32;not&#32;find&#32;property&#32;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;was&#32;it&#32;renamed&#32;or&#32;removed?&quot;</emphasis>);
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00167 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00169 &#32;&#32;&#32;&#32;&#32;&#32;}
00170 &#32;&#32;&#32;&#32;}
00171 
<anchor xml:id="__custom_property_drawer_base_8cs_source_1l00172"/><link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a7b61387c6f2b8fd23cf9260000a1152f">00172</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_property_drawer_base_1a7b61387c6f2b8fd23cf9260000a1152f">validateProperty</link>(<emphasis role="keywordtype">string</emphasis>&#32;name)&#32;{
00173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_property.FindPropertyRelative(name)&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogWarning(<emphasis role="stringliteral">&quot;Could&#32;not&#32;find&#32;property&#32;&quot;</emphasis>&#32;+&#32;name&#32;+&#32;<emphasis role="stringliteral">&quot;,&#32;was&#32;it&#32;renamed&#32;or&#32;removed?&quot;</emphasis>);
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00176 &#32;&#32;&#32;&#32;&#32;&#32;}
00177 
00178 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00179 &#32;&#32;&#32;&#32;}
00180 
00181 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">interface&#32;</emphasis>IDrawable&#32;{
00182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Draw(ref&#32;Rect&#32;rect);
00183 &#32;&#32;&#32;&#32;}
00184 
00185 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>PropertyContainer&#32;:&#32;IDrawable&#32;{
00186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Action&lt;Rect&gt;&#32;draw;
00187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;Func&lt;float&gt;&#32;getHeight;
00188 
00189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Draw(ref&#32;Rect&#32;rect)&#32;{
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.height&#32;=&#32;getHeight();
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;draw(rect);
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.y&#32;+=&#32;rect.height;
00193 &#32;&#32;&#32;&#32;&#32;&#32;}
00194 &#32;&#32;&#32;&#32;}
00195 
00196 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>IndentDrawable&#32;:&#32;IDrawable&#32;{
00197 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;indent;
00198 
00199 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Draw(ref&#32;Rect&#32;rect)&#32;{
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.x&#32;+=&#32;indent;
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.width&#32;-=&#32;indent;
00202 &#32;&#32;&#32;&#32;&#32;&#32;}
00203 &#32;&#32;&#32;&#32;}
00204 &#32;&#32;}
00205 }
</programlisting></section>
