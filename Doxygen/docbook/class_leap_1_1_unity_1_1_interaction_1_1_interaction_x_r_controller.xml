<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller">
<title>Leap.Unity.Interaction.InteractionXRController Class Reference</title>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary></indexterm>
<para>Inheritance diagram for Leap.Unity.Interaction.InteractionXRController:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a84947d3cd2c236dab7849e2d805465b6">RefreshControllerConnection</link> ()</para>
</listitem>
            <listitem><para>override Vector3 <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1acf5f67ce22587c6d638890d9af2ecadb">GetGraspPoint</link> ()</para>

<para>Returns approximately where the controller is grasping the currently grasped <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link>. This method will print an error if the controller is not currently grasping an object. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a3d2b1845b1041d41e2a157df230ca42b">OnDrawRuntimeGizmos</link> (<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer">RuntimeGizmos.RuntimeGizmoDrawer</link> drawer)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>float <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a870363d8aa13c1d14481b988608b195e">pollConnectionInterval</link> = 2f</para>
</listitem>
            <listitem><para>new List&lt; Transform &gt; <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a1b5abc7602f840695df4eae23ead0e37">primaryHoverPoints</link></para>
</listitem>
            <listitem><para>Transform <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a45e35489ae52235acd3cece14cf4dbae">graspPoint</link></para>
</listitem>
            <listitem><para>float <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1abd2f8566d2d0e95acd51ae7718b8bc98">maxGraspDistance</link> = 0.06F</para>
</listitem>
            <listitem><para>string <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a857761fb2f53cdf7e9ffd28f396c4712">graspButtonAxis</link></para>
</listitem>
            <listitem><para>float <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6fe4112d61321e09eabefbc59af9d13a">graspTimingSlop</link> = 0.10F</para>
</listitem>
            <listitem><para>Func&lt; float &gt; <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a5c3b54bb8249aacff51aa5e898d95021">graspAxisOverride</link> = null</para>

<para>By default, InteractionVRController uses Input.GetAxis(graspButtonAxis) to determine the &quot;depression&quot; state for the grasp button. By setting this value to something other than null, it is possible to modify this behavior to instead retrieve a grasping axis value based on arbitrary code. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a17a8608c8d69b586256fbcb9877394b3">Reset</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac43db0f1fd87084d1b1468ce95bd58ac">OnValidate</link> ()</para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac50b109d0cd82bb14cd8a19199850c9e">Start</link> ()</para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aa7e13f419009b2f0fd02018cc96f81b4">fixedUpdateController</link> ()</para>

<para>Called just before the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> proceeds with its usual FixedUpdate. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ab287ac4fbd0ba8471ef9787a371470ef">onObjectUnregistered</link> (<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> intObj)</para>

<para>InteractionVRController doesn&apos;t need to do anything when an object is unregistered. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aae371c99d08f9ce6e8850e36109690c5">unwarpColliders</link> (Transform primaryHoverPoint, <link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component">ISpaceComponent</link> warpedSpaceElement)</para>

<para>Implementing this method is necessary to support curved spaces as rendered by a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Graphic Renderer. See <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link> for an example implementation. (Implementing this method is optional if you are not using a curved space as rendered by a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Graphic Renderer.) </para>
</listitem>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6646ebf671991c5bc47a66b2129538b6">initContact</link> ()</para>

<para>Called to initialize contact colliders. See remarks for implementation requirements. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6870022c14d8cea42d36502b7a0a299f">getColliderBoneTargetPositionRotation</link> (int contactBoneIndex, out Vector3 targetPosition, out Quaternion targetRotation)</para>

<para>If your controller features no moving colliders relative to itself, simply return the desired position and rotation for the given indexed contact bone in the contactBones array. (For example, by recording the local position and local rotation of each contact bone in <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6646ebf671991c5bc47a66b2129538b6">initContact()</link>). More complex controllers, such as <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link>, uses this method to set <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link> target positions and rotations based on the tracked <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand. </para>
</listitem>
            <listitem><para>override void <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1abbf181ce05807d75809cac14c0fa8a27">fixedUpdateGraspingState</link> ()</para>

<para>Called every fixed frame if grasping is enabled in the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager. </para>
</listitem>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aad12f5a78dea6345158e44d87e17a5f6">checkShouldGrasp</link> (out <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> objectToGrasp)</para>

<para>Returns whether this controller should grasp an object this fixed frame, and if so, sets objectToGrasp to the object the controller should grasp. </para>
</listitem>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a4756d119b4d5a13574ed990e439e64f3">checkShouldGraspAtemporal</link> (<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> intObj)</para>

<para>If the provided object is within range of this VR controller&apos;s grasp point and the grasp button is currently held down, this method will manually initiate a grasp and return true. Otherwise, the method returns false. </para>
</listitem>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a46275014cfc4325621c01097047bb701">checkShouldRelease</link> (out <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> objectToRelease)</para>

<para>Returns whether this controller should release an object this fixed frame, and if so, sets objectToRelease to the object the controller should release. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a621446c06cfa8391f7f0d8990d885bf5">isUsingCustomTracking</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>string <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac3f3ac7b791e70390c8ba9a547162525">deviceJoystickTokens</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para><link linkend="_namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606f">Chirality</link> <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a84e32cb318c25dbb329b6766c6f895f8">chirality</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a96ffe3a41a49ca69c3e15de4badbb98b">pollConnection</link><computeroutput> [get, set]</computeroutput>
</para>

<para>Whether to continuously poll attached joystick data for a joystick that matches the device joystick tokens, using Input.GetJoystickNames(). This call allocates garbage, so be wary of setting a low polling interval. </para>
</listitem>
            <listitem><para>List&lt; GameObject &gt; <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a0cf4a1150ff9575affb5532f1e252b6a">enableObjectsOnlyWhenTracked</link><computeroutput> [get]</computeroutput>
</para>

<para>These objects will be made active only while the controller is tracked. For more fine-tuned behavior, we recommend implementing your own logic. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac017dcb1298c729f9cc46f24aeeb6a00">isJoystickDetected</link><computeroutput> [get]</computeroutput>
</para>

<para>Whether the device joystick tokens matched an entry in Input.GetJoystickNames(). If pollConnection is set to true, this status is refreshed periodically based on the pollConnectionInterval, but only while the joystick tokens have not been detected from Input.GetJoystickNames(). Call <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a84947d3cd2c236dab7849e2d805465b6">RefreshControllerConnection()</link> to detect if the controller has been disconnected. </para>
</listitem>
            <listitem><para><link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_x_r_controller_tracking_provider">IXRControllerTrackingProvider</link> <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aebc2b694592123f75013dd012e8f357f">trackingProvider</link><computeroutput> [get, set]</computeroutput>
</para>
</listitem>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ab5d50597383ad3e552e3c16d1e91e5a7">isTracked</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets whether or not the underlying controller is currently tracked and any joystick token filtering has confirmed that this controller has been detected as a connected joystick. </para>
</listitem>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a362ab5e9ffb5ac5046a869668670b40c">isBeingMoved</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets whether or not the underlying controller is currently being moved in world space, but relative to the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager&apos;s transform. The <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager is usually a sibling of the main camera beneath the camera rig transform, so that if your application is only translating the player rig in space, this method won&apos;t incorrectly return true. </para>
</listitem>
            <listitem><para>VRNode? <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a11711962768f6818de5fb89cbbaeea65">xrNode</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets the XRNode associated with this XR controller. Note: If the tracking mode for this controller is specified as <link linkend="_namespace_leap_1_1_unity_1_1_interaction_1ab4a739b7f8a6748903e2ccc029df7a50a90589c47f06eb971d548591f23c285af">ControllerTrackingMode.Custom</link>, this value may be ignored. </para>
</listitem>
            <listitem><para>override bool <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aa97e1a14b291fe8057eed37d09aa586d">isLeft</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets whether the controller is a left-hand controller. </para>
</listitem>
            <listitem><para>override Vector3 <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aaaa34551dbab0d0a98f1ab22f85adaa6">position</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets the last-tracked position of the controller. </para>
</listitem>
            <listitem><para>override Quaternion <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac6a09708dffecce4b8ef9e4e88097328">rotation</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets the last-tracked rotation of the controller. </para>
</listitem>
            <listitem><para>override Vector3 <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ae21cfe425c83f331f03044e9132674f7">velocity</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets the current velocity of the controller. </para>
</listitem>
            <listitem><para>override <link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6b">ControllerType</link> <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aae01e4ff3ef50d766b1a25d02b0e3e26">controllerType</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets the type of controller this is. For InteractionVRController, the type is always ControllerType.VRController. </para>
</listitem>
            <listitem><para>override <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link> <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a482076db355cd75653f6d9efc8015409">intHand</link><computeroutput> [get]</computeroutput>
</para>

<para>This implementation of InteractionControllerBase does not represent a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand, so it need not return an <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link> object. </para>
</listitem>
            <listitem><para>override Vector3? <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a162487d30c42a8d26711bf80e75230c8">hoverPoint</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets the center point used for hover distance checking. </para>
</listitem>
            <listitem><para>override List&lt; Transform &gt; <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a79aa1c89e60ed3e606957e9c0d92a2b9">_primaryHoverPoints</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets the list of points to be used to perform higher-fidelity &quot;primary hover&quot; checks. Only one interaction object may be the primary hover of an interaction controller (<link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand or otherwise) at a time. Interface objects such as buttons can only be pressed when they are primarily hovered by an interaction controller, so it&apos;s best to return points on whatever you expect to be able to use to push buttons with the controller. </para>
</listitem>
            <listitem><para>override <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link> [] <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a97aebd084ca67cee40ef9f09a362394f">contactBones</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>override GameObject <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a7dc27e56bd7d91b9af6bc5104b8cbd4e">contactBoneParent</link><computeroutput> [get]</computeroutput>
</para>
</listitem>
            <listitem><para>float <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aa003958b17f12b0c1cfe801649e45147">graspDepressedValue</link><computeroutput> [get, set]</computeroutput>
</para>

<para>The value between 0 and 1 past which the grasping axis value will cause an attempt to grasp a graspable interaction object near the grasp point. </para>
</listitem>
            <listitem><para>float <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aebfaa8d5cd025180c86947dcfb5c5cd8">graspReleasedValue</link><computeroutput> [get, set]</computeroutput>
</para>

<para>If the grasping axis value passes the graspDepressedValue, it must then drop underneath this value in order to release the grasp attempt (potentially releasing a held object) and allow a new grasp attempt to occur. </para>
</listitem>
            <listitem><para>override List&lt; Vector3 &gt; <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a521422a5de1b36220698adc1c2b3da18">graspManipulatorPoints</link><computeroutput> [get]</computeroutput>
</para>

<para>Gets a list returning this controller&apos;s hoverPoint. Because the InteractionVRController represents a rigid controller, any two points that rigidly move with the controller position and orientation will provide enough information. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00028">28</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aad12f5a78dea6345158e44d87e17a5f6"/>    <section>
    <title>checkShouldGrasp()</title>
<indexterm><primary>checkShouldGrasp</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>checkShouldGrasp</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.Interaction.InteractionXRController.checkShouldGrasp (out <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> objectToGrasp)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Returns whether this controller should grasp an object this fixed frame, and if so, sets objectToGrasp to the object the controller should grasp. </para>
</para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a672d3a9313dbe37a693702024a61657d">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00780">780</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a4756d119b4d5a13574ed990e439e64f3"/>    <section>
    <title>checkShouldGraspAtemporal()</title>
<indexterm><primary>checkShouldGraspAtemporal</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>checkShouldGraspAtemporal</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.Interaction.InteractionXRController.checkShouldGraspAtemporal (<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> intObj)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>If the provided object is within range of this VR controller&apos;s grasp point and the grasp button is currently held down, this method will manually initiate a grasp and return true. Otherwise, the method returns false. </para>
</para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a99f071b469073deb8265da627e90ad0c">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00796">796</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a46275014cfc4325621c01097047bb701"/>    <section>
    <title>checkShouldRelease()</title>
<indexterm><primary>checkShouldRelease</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>checkShouldRelease</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.Interaction.InteractionXRController.checkShouldRelease (out <link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> objectToRelease)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Returns whether this controller should release an object this fixed frame, and if so, sets objectToRelease to the object the controller should release. </para>
</para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ac2f99423db66dad0d889723c6acff62f">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00814">814</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aa7e13f419009b2f0fd02018cc96f81b4"/>    <section>
    <title>fixedUpdateController()</title>
<indexterm><primary>fixedUpdateController</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>fixedUpdateController</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.Interaction.InteractionXRController.fixedUpdateController ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called just before the <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> proceeds with its usual FixedUpdate. </para>
</para>

<para>It&apos;s generally better to override this method instead of having your <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link> implement FixedUpdate because its execution order relative to the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager is fixed. </para>
<para>
Reimplemented from <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ad66e5a09bdbe3e9573a504734bbc34f8">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00179">179</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1abbf181ce05807d75809cac14c0fa8a27"/>    <section>
    <title>fixedUpdateGraspingState()</title>
<indexterm><primary>fixedUpdateGraspingState</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>fixedUpdateGraspingState</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.Interaction.InteractionXRController.fixedUpdateGraspingState ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called every fixed frame if grasping is enabled in the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager. </para>
</para>

<para>graspActivityManager.ActiveObjects will contain objects around the hoverPoint within the grasping radius &#8211; in other words, objects eligible to be grasped by the controller. Refer to it to avoid checking grasp eligibility against all graspable objects in your scene. </para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5d182056bac8aea2d0ec005e35f768ca">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00703">703</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6870022c14d8cea42d36502b7a0a299f"/>    <section>
    <title>getColliderBoneTargetPositionRotation()</title>
<indexterm><primary>getColliderBoneTargetPositionRotation</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>getColliderBoneTargetPositionRotation</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.Interaction.InteractionXRController.getColliderBoneTargetPositionRotation (int contactBoneIndex, out Vector3 targetPosition, out Quaternion targetRotation)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>If your controller features no moving colliders relative to itself, simply return the desired position and rotation for the given indexed contact bone in the contactBones array. (For example, by recording the local position and local rotation of each contact bone in <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6646ebf671991c5bc47a66b2129538b6">initContact()</link>). More complex controllers, such as <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link>, uses this method to set <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link> target positions and rotations based on the tracked <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand. </para>
</para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1ae5ccd0183ff87fd51107a5b082116ce0">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00630">630</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1acf5f67ce22587c6d638890d9af2ecadb"/>    <section>
    <title>GetGraspPoint()</title>
<indexterm><primary>GetGraspPoint</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>GetGraspPoint</secondary></indexterm>
<para><computeroutput>override Vector3 Leap.Unity.Interaction.InteractionXRController.GetGraspPoint ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Returns approximately where the controller is grasping the currently grasped <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_behaviour">InteractionBehaviour</link>. This method will print an error if the controller is not currently grasping an object. </para>
</para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aca84a24dd5f2f73a7c8bee6a15cea0a4">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00699">699</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6646ebf671991c5bc47a66b2129538b6"/>    <section>
    <title>initContact()</title>
<indexterm><primary>initContact</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>initContact</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.Interaction.InteractionXRController.initContact ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Called to initialize contact colliders. See remarks for implementation requirements. </para>
</para>

<para><link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6646ebf671991c5bc47a66b2129538b6">initContact()</link> should:<itemizedlist>
<listitem>
<para>Return false at any time if initialization cannot be performed.</para>
</listitem><listitem>
<para>Ensure the &quot;contactBones&quot; property returns all contact colliders.<itemizedlist>
<listitem>
<para>(Construct contact colliders if they don&apos;t already exist.)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem>
<para>Ensure the &quot;contactBoneParent&quot; property returns the common parent of all contact colliders.<itemizedlist>
<listitem>
<para>(Construct the contact bone parent if it doesn&apos;t already exist.)</para>
</listitem></itemizedlist>
</para>
</listitem><listitem>
<para>Return true if initialization was successful.</para>
</listitem></itemizedlist>
</para>

<para>Contact will only begin updating after initialization succeeds, otherwise it will try to initialize again on the next fixed frame.</para>

<para>After initialization, the contact bone parent&apos;s layer will be set to the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager&apos;s contactBoneLayer. </para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a5d9713dd48f3093aefbd8ebbba3b0251">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00536">536</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a3d2b1845b1041d41e2a157df230ca42b"/>    <section>
    <title>OnDrawRuntimeGizmos()</title>
<indexterm><primary>OnDrawRuntimeGizmos</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>OnDrawRuntimeGizmos</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.Interaction.InteractionXRController.OnDrawRuntimeGizmos (<link linkend="_class_leap_1_1_unity_1_1_runtime_gizmos_1_1_runtime_gizmo_drawer">RuntimeGizmos.RuntimeGizmoDrawer</link> drawer)</computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00827">827</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ab287ac4fbd0ba8471ef9787a371470ef"/>    <section>
    <title>onObjectUnregistered()</title>
<indexterm><primary>onObjectUnregistered</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>onObjectUnregistered</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.Interaction.InteractionXRController.onObjectUnregistered (<link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_interaction_behaviour">IInteractionBehaviour</link> intObj)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>InteractionVRController doesn&apos;t need to do anything when an object is unregistered. </para>
</para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a0798edd8ad92d6b7f6229e3d9ac26d07">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00468">468</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac43db0f1fd87084d1b1468ce95bd58ac"/>    <section>
    <title>OnValidate()</title>
<indexterm><primary>OnValidate</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>OnValidate</secondary></indexterm>
<para><computeroutput>virtual void Leap.Unity.Interaction.InteractionXRController.OnValidate ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00169">169</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a84947d3cd2c236dab7849e2d805465b6"/>    <section>
    <title>RefreshControllerConnection()</title>
<indexterm><primary>RefreshControllerConnection</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>RefreshControllerConnection</secondary></indexterm>
<para><computeroutput>void Leap.Unity.Interaction.InteractionXRController.RefreshControllerConnection ( )</computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00229">229</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a17a8608c8d69b586256fbcb9877394b3"/>    <section>
    <title>Reset()</title>
<indexterm><primary>Reset</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>Reset</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.Interaction.InteractionXRController.Reset ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a593d87fbcfe464b2308a56a60b4796d5">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00153">153</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac50b109d0cd82bb14cd8a19199850c9e"/>    <section>
    <title>Start()</title>
<indexterm><primary>Start</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>Start</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.Interaction.InteractionXRController.Start ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1a697f206b8e73d177c203b3ca12874cb6">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00173">173</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aae371c99d08f9ce6e8850e36109690c5"/>    <section>
    <title>unwarpColliders()</title>
<indexterm><primary>unwarpColliders</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>unwarpColliders</secondary></indexterm>
<para><computeroutput>override void Leap.Unity.Interaction.InteractionXRController.unwarpColliders (Transform primaryHoverPoint, <link linkend="_interface_leap_1_1_unity_1_1_space_1_1_i_space_component">ISpaceComponent</link> warpedSpaceElement)<computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Implementing this method is necessary to support curved spaces as rendered by a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Graphic Renderer. See <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link> for an example implementation. (Implementing this method is optional if you are not using a curved space as rendered by a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Graphic Renderer.) </para>
</para>

<para>Warps the collider transforms of this controller by the inverse of the transformation that is applied on the provided warpedSpaceElement, using the primaryHoverPoint as the pivot transform for the transformation.</para>

<para>ITransformer.WorldSpaceUnwarp is a useful method here. (ISpaceComponents contain references to their transformers via their anchors.)</para>

<para>ISpaceComponents denote game objects whose visual positions are warped from rectilinear (non-warped) space into a curved space (via, for example, a LeapCylindricalSpace, which can only be rendered correctly by the <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> Graphic Renderer). This method reverses that transformation for the hand, bringing it into the object&apos;s rectilinear space, allowing objects curved in this way to correctly collide with the bones in the hand or collider of a held controller.</para>

<para>The provided Transform is the closest primary hover point to any given primary hover candidate, so it is used as the pivot point for unwarping the colliders of this <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller">InteractionController</link>. </para>
<para>
Implements <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_controller_1aef6aebf580bed0a675b59e1c4a267376">Leap.Unity.Interaction.InteractionController</link>.</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00497">497</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a5c3b54bb8249aacff51aa5e898d95021"/>    <section>
    <title>graspAxisOverride</title>
<indexterm><primary>graspAxisOverride</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>graspAxisOverride</secondary></indexterm>
<para><computeroutput>Func&lt;float&gt; Leap.Unity.Interaction.InteractionXRController.graspAxisOverride = null</computeroutput></para><para>

<para>By default, InteractionVRController uses Input.GetAxis(graspButtonAxis) to determine the &quot;depression&quot; state for the grasp button. By setting this value to something other than null, it is possible to modify this behavior to instead retrieve a grasping axis value based on arbitrary code. </para>
</para>

<para>A grasp is attempted when the grasp button axis value returned by this method becomes larger than the graspButtonDepressedValue, and a grasp is released when the grasp button axis value returned by this method becomes smaller than the graspButtonReleasedValue. Both of these values provide public setters. </para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00652">652</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a857761fb2f53cdf7e9ffd28f396c4712"/>    <section>
    <title>graspButtonAxis</title>
<indexterm><primary>graspButtonAxis</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>graspButtonAxis</secondary></indexterm>
<para><computeroutput>string Leap.Unity.Interaction.InteractionXRController.graspButtonAxis</computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00118">118</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a45e35489ae52235acd3cece14cf4dbae"/>    <section>
    <title>graspPoint</title>
<indexterm><primary>graspPoint</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>graspPoint</secondary></indexterm>
<para><computeroutput>Transform Leap.Unity.Interaction.InteractionXRController.graspPoint</computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00112">112</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a6fe4112d61321e09eabefbc59af9d13a"/>    <section>
    <title>graspTimingSlop</title>
<indexterm><primary>graspTimingSlop</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>graspTimingSlop</secondary></indexterm>
<para><computeroutput>float Leap.Unity.Interaction.InteractionXRController.graspTimingSlop = 0.10F</computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00125">125</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1abd2f8566d2d0e95acd51ae7718b8bc98"/>    <section>
    <title>maxGraspDistance</title>
<indexterm><primary>maxGraspDistance</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>maxGraspDistance</secondary></indexterm>
<para><computeroutput>float Leap.Unity.Interaction.InteractionXRController.maxGraspDistance = 0.06F</computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00114">114</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a870363d8aa13c1d14481b988608b195e"/>    <section>
    <title>pollConnectionInterval</title>
<indexterm><primary>pollConnectionInterval</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>pollConnectionInterval</secondary></indexterm>
<para><computeroutput>float Leap.Unity.Interaction.InteractionXRController.pollConnectionInterval = 2f</computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00083">83</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a1b5abc7602f840695df4eae23ead0e37"/>    <section>
    <title>primaryHoverPoints</title>
<indexterm><primary>primaryHoverPoints</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>primaryHoverPoints</secondary></indexterm>
<para><computeroutput>new List&lt;Transform&gt; Leap.Unity.Interaction.InteractionXRController.primaryHoverPoints</computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00104">104</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a79aa1c89e60ed3e606957e9c0d92a2b9"/>    <section>
    <title>_primaryHoverPoints</title>
<indexterm><primary>_primaryHoverPoints</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>_primaryHoverPoints</secondary></indexterm>
<para><computeroutput>override List&lt;Transform&gt; Leap.Unity.Interaction.InteractionXRController._primaryHoverPoints<computeroutput>[get]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Gets the list of points to be used to perform higher-fidelity &quot;primary hover&quot; checks. Only one interaction object may be the primary hover of an interaction controller (<link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand or otherwise) at a time. Interface objects such as buttons can only be pressed when they are primarily hovered by an interaction controller, so it&apos;s best to return points on whatever you expect to be able to use to push buttons with the controller. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00489">489</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a84e32cb318c25dbb329b6766c6f895f8"/>    <section>
    <title>chirality</title>
<indexterm><primary>chirality</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>chirality</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_leap_1_1_unity_1a4d15adcf20ba121b2cd9c07f503b606f">Chirality</link> Leap.Unity.Interaction.InteractionXRController.chirality<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00058">58</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a7dc27e56bd7d91b9af6bc5104b8cbd4e"/>    <section>
    <title>contactBoneParent</title>
<indexterm><primary>contactBoneParent</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>contactBoneParent</secondary></indexterm>
<para><computeroutput>override GameObject Leap.Unity.Interaction.InteractionXRController.contactBoneParent<computeroutput>[get]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00532">532</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a97aebd084ca67cee40ef9f09a362394f"/>    <section>
    <title>contactBones</title>
<indexterm><primary>contactBones</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>contactBones</secondary></indexterm>
<para><computeroutput>override <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_contact_bone">ContactBone</link> [] Leap.Unity.Interaction.InteractionXRController.contactBones<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00527">527</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aae01e4ff3ef50d766b1a25d02b0e3e26"/>    <section>
    <title>controllerType</title>
<indexterm><primary>controllerType</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>controllerType</secondary></indexterm>
<para><computeroutput>override <link linkend="_namespace_leap_1_1_unity_1_1_interaction_1a9752eb3e2905e8ebd134fff20c155e6b">ControllerType</link> Leap.Unity.Interaction.InteractionXRController.controllerType<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets the type of controller this is. For InteractionVRController, the type is always ControllerType.VRController. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00452">452</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac3f3ac7b791e70390c8ba9a547162525"/>    <section>
    <title>deviceJoystickTokens</title>
<indexterm><primary>deviceJoystickTokens</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>deviceJoystickTokens</secondary></indexterm>
<para><computeroutput>string Leap.Unity.Interaction.InteractionXRController.deviceJoystickTokens<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00052">52</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a0cf4a1150ff9575affb5532f1e252b6a"/>    <section>
    <title>enableObjectsOnlyWhenTracked</title>
<indexterm><primary>enableObjectsOnlyWhenTracked</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>enableObjectsOnlyWhenTracked</secondary></indexterm>
<para><computeroutput>List&lt;GameObject&gt; Leap.Unity.Interaction.InteractionXRController.enableObjectsOnlyWhenTracked<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>These objects will be made active only while the controller is tracked. For more fine-tuned behavior, we recommend implementing your own logic. </para>
</para>

<para>controller.isJoystickDetected and controller.isTracked are useful for this. </para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00140">140</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aa003958b17f12b0c1cfe801649e45147"/>    <section>
    <title>graspDepressedValue</title>
<indexterm><primary>graspDepressedValue</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>graspDepressedValue</secondary></indexterm>
<para><computeroutput>float Leap.Unity.Interaction.InteractionXRController.graspDepressedValue<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The value between 0 and 1 past which the grasping axis value will cause an attempt to grasp a graspable interaction object near the grasp point. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00659">659</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a521422a5de1b36220698adc1c2b3da18"/>    <section>
    <title>graspManipulatorPoints</title>
<indexterm><primary>graspManipulatorPoints</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>graspManipulatorPoints</secondary></indexterm>
<para><computeroutput>override List&lt;Vector3&gt; Leap.Unity.Interaction.InteractionXRController.graspManipulatorPoints<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets a list returning this controller&apos;s hoverPoint. Because the InteractionVRController represents a rigid controller, any two points that rigidly move with the controller position and orientation will provide enough information. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00682">682</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aebfaa8d5cd025180c86947dcfb5c5cd8"/>    <section>
    <title>graspReleasedValue</title>
<indexterm><primary>graspReleasedValue</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>graspReleasedValue</secondary></indexterm>
<para><computeroutput>float Leap.Unity.Interaction.InteractionXRController.graspReleasedValue<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>If the grasping axis value passes the graspDepressedValue, it must then drop underneath this value in order to release the grasp attempt (potentially releasing a held object) and allow a new grasp attempt to occur. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00670">670</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a162487d30c42a8d26711bf80e75230c8"/>    <section>
    <title>hoverPoint</title>
<indexterm><primary>hoverPoint</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>hoverPoint</secondary></indexterm>
<para><computeroutput>override Vector3? Leap.Unity.Interaction.InteractionXRController.hoverPoint<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets the center point used for hover distance checking. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00477">477</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a482076db355cd75653f6d9efc8015409"/>    <section>
    <title>intHand</title>
<indexterm><primary>intHand</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>intHand</secondary></indexterm>
<para><computeroutput>override <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link> Leap.Unity.Interaction.InteractionXRController.intHand<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>This implementation of InteractionControllerBase does not represent a <link linkend="_namespace_leap_1_1_unity_1_1_leap">Leap</link> hand, so it need not return an <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_hand">InteractionHand</link> object. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00460">460</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a362ab5e9ffb5ac5046a869668670b40c"/>    <section>
    <title>isBeingMoved</title>
<indexterm><primary>isBeingMoved</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>isBeingMoved</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.Interaction.InteractionXRController.isBeingMoved<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets whether or not the underlying controller is currently being moved in world space, but relative to the <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager&apos;s transform. The <link linkend="_namespace_leap_1_1_unity_1_1_interaction">Interaction</link> Manager is usually a sibling of the main camera beneath the camera rig transform, so that if your application is only translating the player rig in space, this method won&apos;t incorrectly return true. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00387">387</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac017dcb1298c729f9cc46f24aeeb6a00"/>    <section>
    <title>isJoystickDetected</title>
<indexterm><primary>isJoystickDetected</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>isJoystickDetected</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.Interaction.InteractionXRController.isJoystickDetected<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Whether the device joystick tokens matched an entry in Input.GetJoystickNames(). If pollConnection is set to true, this status is refreshed periodically based on the pollConnectionInterval, but only while the joystick tokens have not been detected from Input.GetJoystickNames(). Call <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a84947d3cd2c236dab7849e2d805465b6">RefreshControllerConnection()</link> to detect if the controller has been disconnected. </para>
</para>

<para>Joystick detection is skipped if deviceJoystickTokens is null or empty, causing this check to always return true. </para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00211">211</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aa97e1a14b291fe8057eed37d09aa586d"/>    <section>
    <title>isLeft</title>
<indexterm><primary>isLeft</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>isLeft</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.Interaction.InteractionXRController.isLeft<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets whether the controller is a left-hand controller. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00412">412</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ab5d50597383ad3e552e3c16d1e91e5a7"/>    <section>
    <title>isTracked</title>
<indexterm><primary>isTracked</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>isTracked</secondary></indexterm>
<para><computeroutput>override bool Leap.Unity.Interaction.InteractionXRController.isTracked<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets whether or not the underlying controller is currently tracked and any joystick token filtering has confirmed that this controller has been detected as a connected joystick. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00374">374</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a621446c06cfa8391f7f0d8990d885bf5"/>    <section>
    <title>isUsingCustomTracking</title>
<indexterm><primary>isUsingCustomTracking</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>isUsingCustomTracking</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.Interaction.InteractionXRController.isUsingCustomTracking<computeroutput>[get]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00043">43</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a96ffe3a41a49ca69c3e15de4badbb98b"/>    <section>
    <title>pollConnection</title>
<indexterm><primary>pollConnection</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>pollConnection</secondary></indexterm>
<para><computeroutput>bool Leap.Unity.Interaction.InteractionXRController.pollConnection<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>Whether to continuously poll attached joystick data for a joystick that matches the device joystick tokens, using Input.GetJoystickNames(). This call allocates garbage, so be wary of setting a low polling interval. </para>
</para>

<para>The connection is polled only until a joystick is detected to minimize allocation. Once a joystick has been detected (isJoystickDetected), you must manually call <link linkend="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a84947d3cd2c236dab7849e2d805465b6">RefreshControllerConnection()</link> to check if the joystick is no longer detected. </para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00074">74</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aaaa34551dbab0d0a98f1ab22f85adaa6"/>    <section>
    <title>position</title>
<indexterm><primary>position</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>position</secondary></indexterm>
<para><computeroutput>override Vector3 Leap.Unity.Interaction.InteractionXRController.position<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets the last-tracked position of the controller. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00419">419</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ac6a09708dffecce4b8ef9e4e88097328"/>    <section>
    <title>rotation</title>
<indexterm><primary>rotation</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>rotation</secondary></indexterm>
<para><computeroutput>override Quaternion Leap.Unity.Interaction.InteractionXRController.rotation<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets the last-tracked rotation of the controller. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00428">428</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1aebc2b694592123f75013dd012e8f357f"/>    <section>
    <title>trackingProvider</title>
<indexterm><primary>trackingProvider</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>trackingProvider</secondary></indexterm>
<para><computeroutput><link linkend="_interface_leap_1_1_unity_1_1_interaction_1_1_i_x_r_controller_tracking_provider">IXRControllerTrackingProvider</link> Leap.Unity.Interaction.InteractionXRController.trackingProvider<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00254">254</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1ae21cfe425c83f331f03044e9132674f7"/>    <section>
    <title>velocity</title>
<indexterm><primary>velocity</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>velocity</secondary></indexterm>
<para><computeroutput>override Vector3 Leap.Unity.Interaction.InteractionXRController.velocity<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets the current velocity of the controller. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00437">437</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
    </section><anchor xml:id="_class_leap_1_1_unity_1_1_interaction_1_1_interaction_x_r_controller_1a11711962768f6818de5fb89cbbaeea65"/>    <section>
    <title>xrNode</title>
<indexterm><primary>xrNode</primary><secondary>Leap.Unity.Interaction.InteractionXRController</secondary></indexterm>
<indexterm><primary>Leap.Unity.Interaction.InteractionXRController</primary><secondary>xrNode</secondary></indexterm>
<para><computeroutput>VRNode? Leap.Unity.Interaction.InteractionXRController.xrNode<computeroutput>[get]</computeroutput></computeroutput></para><para>

<para>Gets the XRNode associated with this XR controller. Note: If the tracking mode for this controller is specified as <link linkend="_namespace_leap_1_1_unity_1_1_interaction_1ab4a739b7f8a6748903e2ccc029df7a50a90589c47f06eb971d548591f23c285af">ControllerTrackingMode.Custom</link>, this value may be ignored. </para>
</para>
<para>
Definition at line <link linkend="__interaction_x_r_controller_8cs_source_1l00404">404</link> of file <link linkend="__interaction_x_r_controller_8cs_source">InteractionXRController.cs</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Modules/InteractionEngine/Scripts/<link linkend="__interaction_x_r_controller_8cs">InteractionXRController.cs</link></section>
</section>
