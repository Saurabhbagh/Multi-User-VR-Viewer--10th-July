<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__fps_label_8cs_source">
<title>FpsLabel.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/FpsLabel.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 
00012 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
<anchor xml:id="__fps_label_8cs_source_1l00013"/><link linkend="_class_leap_1_1_unity_1_1_fps_label">00013</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_fps_label">FpsLabel</link>&#32;:&#32;MonoBehaviour&#32;{
00014 
00015 &#32;&#32;&#32;&#32;[SerializeField]
00016 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_leap_provider">LeapProvider</link>&#32;_provider;
00017 
00018 &#32;&#32;&#32;&#32;[SerializeField]
00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;TextMesh&#32;_frameRateText;
00020 
00021 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_smoothed_float">SmoothedFloat</link>&#32;_smoothedRenderFps&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_smoothed_float">SmoothedFloat</link>();
00022 
00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;OnEnable()&#32;{
00024 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_provider&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_provider&#32;=&#32;Hands.Provider;
00026 &#32;&#32;&#32;&#32;&#32;&#32;}
00027 
00028 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_frameRateText&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frameRateText&#32;=&#32;GetComponentInChildren&lt;TextMesh&gt;();
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_frameRateText&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Debug.LogError(<emphasis role="stringliteral">&quot;Could&#32;not&#32;enable&#32;FpsLabel&#32;because&#32;no&#32;TextMesh&#32;was&#32;specified!&quot;</emphasis>);
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;enabled&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00034 &#32;&#32;&#32;&#32;&#32;&#32;}
00035 
00036 &#32;&#32;&#32;&#32;&#32;&#32;_smoothedRenderFps.<link linkend="_class_leap_1_1_unity_1_1_smoothed_float_1a5cd6d4133c91fa19fd4599f446f3d7f5">delay</link>&#32;=&#32;0.3f;
00037 &#32;&#32;&#32;&#32;&#32;&#32;_smoothedRenderFps.<link linkend="_class_leap_1_1_unity_1_1_smoothed_float_1a3d1208cb585d835e90d82118724082c7">reset</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00038 &#32;&#32;&#32;&#32;}
00039 
00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Update()&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;_frameRateText.text&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
00042 
00043 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_provider&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_frame">Frame</link>&#32;frame&#32;=&#32;_provider.<link linkend="_class_leap_1_1_unity_1_1_leap_provider_1a9a5cf65099912311c37f340d3be7e454">CurrentFrame</link>;
00045 
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frame&#32;!=&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frameRateText.text&#32;+=&#32;<emphasis role="stringliteral">&quot;Data&#32;FPS:&quot;</emphasis>&#32;+&#32;_provider.<link linkend="_class_leap_1_1_unity_1_1_leap_provider_1a9a5cf65099912311c37f340d3be7e454">CurrentFrame</link>.<link linkend="_class_leap_1_1_frame_1acf9127d430f61dc4ed2dfae8674c3a30">CurrentFramesPerSecond</link>.ToString(<emphasis role="stringliteral">&quot;f2&quot;</emphasis>);
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_frameRateText.text&#32;+=&#32;System.Environment.NewLine;
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00050 &#32;&#32;&#32;&#32;&#32;&#32;}
00051 
00052 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Time.smoothDeltaTime&#32;&gt;&#32;Mathf.Epsilon)&#32;{
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_smoothedRenderFps.<link linkend="_class_leap_1_1_unity_1_1_smoothed_float_1ad83fc14468793a846eb227919002fed0">Update</link>(1.0f&#32;/&#32;Time.smoothDeltaTime,&#32;Time.deltaTime);
00054 &#32;&#32;&#32;&#32;&#32;&#32;}
00055 
00056 &#32;&#32;&#32;&#32;&#32;&#32;_frameRateText.text&#32;+=&#32;<emphasis role="stringliteral">&quot;Render&#32;FPS:&quot;</emphasis>&#32;+&#32;Mathf.RoundToInt(_smoothedRenderFps.<link linkend="_class_leap_1_1_unity_1_1_smoothed_float_1a1fdf3ee4ae067a5ccb975320829a4327">value</link>).ToString(<emphasis role="stringliteral">&quot;f2&quot;</emphasis>);
00057 &#32;&#32;&#32;&#32;}
00058 &#32;&#32;}
00059 }
</programlisting></section>
