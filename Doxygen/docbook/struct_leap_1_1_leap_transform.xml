<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_leap_1_1_leap_transform">
<title>Leap.LeapTransform Struct Reference</title>
<indexterm><primary>Leap.LeapTransform</primary></indexterm>
<para>

<para>The <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> class represents a transform in three dimensional space. </para>
 
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_leap_1_1_leap_transform_1a202169e88920074c2ca30144a4de20df">LeapTransform</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1ac7de7c75b3f77718715055990131f08b">translation</link>, <link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> <link linkend="_struct_leap_1_1_leap_transform_1a69917840386ec2421d3886be4ec7833a">rotation</link>)</para>

<para>Constructs a new transform from the specified translation and rotation. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_leap_transform_1a9cb17381736fafcf776c1f5e8b154009">LeapTransform</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1ac7de7c75b3f77718715055990131f08b">translation</link>, <link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> <link linkend="_struct_leap_1_1_leap_transform_1a69917840386ec2421d3886be4ec7833a">rotation</link>, <link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1ac8b265b9dfa089183c263bbe7ff0e42d">scale</link>)</para>

<para>Constructs a new transform from the specified translation, rotation and scale. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1a069ce8e414f0def9697b7816dcc4a799">TransformPoint</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> point)</para>

<para>Transforms the specified position vector, applying translation, rotation and scale. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1a05c90f4a484f3b55e415c0e203f78870">TransformDirection</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> direction)</para>

<para>Transforms the specified direction vector, applying rotation only. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1a415819fca9f811c44dc5d855b2099f61">TransformVelocity</link> (<link linkend="_struct_leap_1_1_vector">Vector</link> velocity)</para>

<para>Transforms the specified velocity vector, applying rotation and scale. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> <link linkend="_struct_leap_1_1_leap_transform_1ad9658850a91beef88214dcaac6f6e6af">TransformQuaternion</link> (<link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> rhs)</para>

<para>Transforms the specified quaternion. Multiplies the quaternion representing the rotational part of this transform by the specified quaternion. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_leap_1_1_leap_transform_1a1184d7a37a603a07ed15373bb08c8901">MirrorX</link> ()</para>

<para>Mirrors this transform&apos;s rotation and scale across the x-axis. Translation is not affected. </para>
</listitem>
            <listitem><para>void <link linkend="_struct_leap_1_1_leap_transform_1a699bd459e338da85f1ee7c2de9e466de">MirrorZ</link> ()</para>

<para>Mirrors this transform&apos;s rotation and scale across the z-axis. Translation is not affected. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static readonly <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> <link linkend="_struct_leap_1_1_leap_transform_1a10de68df5cf1afa89c273a33d0629f16">Identity</link> = new <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>(<link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">Vector.Zero</link>, LeapQuaternion.Identity, <link linkend="_struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d">Vector.Ones</link>)</para>

<para>The identity transform. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1a8a67b81b7344f05e136048e2159ab663">xBasis</link><computeroutput> [get, set]</computeroutput>
</para>

<para>The x-basis of the transform. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1ac46874ef78036f1bc2d2bf76dd9a62a2">yBasis</link><computeroutput> [get, set]</computeroutput>
</para>

<para>The y-basis of the transform. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1a59e5ecf307c5938bf9e04902b8395f8a">zBasis</link><computeroutput> [get, set]</computeroutput>
</para>

<para>The z-basis of the transform. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1ac7de7c75b3f77718715055990131f08b">translation</link><computeroutput> [get, set]</computeroutput>
</para>

<para>The translation component of the transform. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_vector">Vector</link> <link linkend="_struct_leap_1_1_leap_transform_1ac8b265b9dfa089183c263bbe7ff0e42d">scale</link><computeroutput> [get, set]</computeroutput>
</para>

<para>The scale factors of the transform. Scale is kept separate from translation. </para>
</listitem>
            <listitem><para><link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> <link linkend="_struct_leap_1_1_leap_transform_1a69917840386ec2421d3886be4ec7833a">rotation</link><computeroutput> [get, set]</computeroutput>
</para>

<para>The rotational component of the transform. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> class represents a transform in three dimensional space. </para>



<para>Note that the <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> class replaces the <link linkend="_struct_leap_1_1_matrix">Leap.Matrix</link> class. <formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00019">19</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_struct_leap_1_1_leap_transform_1a202169e88920074c2ca30144a4de20df"/>    <section>
    <title>LeapTransform()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>LeapTransform</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>LeapTransform</secondary></indexterm>
<para><computeroutput>Leap.LeapTransform.LeapTransform (<link linkend="_struct_leap_1_1_vector">Vector</link> translation, <link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> rotation)</computeroutput></para><para>

<para>Constructs a new transform from the specified translation and rotation. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00024">24</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1a9cb17381736fafcf776c1f5e8b154009"/>    <section>
    <title>LeapTransform()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>LeapTransform</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>LeapTransform</secondary></indexterm>
<para><computeroutput>Leap.LeapTransform.LeapTransform (<link linkend="_struct_leap_1_1_vector">Vector</link> translation, <link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> rotation, <link linkend="_struct_leap_1_1_vector">Vector</link> scale)</computeroutput></para><para>

<para>Constructs a new transform from the specified translation, rotation and scale. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00032">32</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_struct_leap_1_1_leap_transform_1a1184d7a37a603a07ed15373bb08c8901"/>    <section>
    <title>MirrorX()</title>
<indexterm><primary>MirrorX</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>MirrorX</secondary></indexterm>
<para><computeroutput>void Leap.LeapTransform.MirrorX ( )</computeroutput></para><para>

<para>Mirrors this transform&apos;s rotation and scale across the x-axis. Translation is not affected. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00094">94</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1a699bd459e338da85f1ee7c2de9e466de"/>    <section>
    <title>MirrorZ()</title>
<indexterm><primary>MirrorZ</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>MirrorZ</secondary></indexterm>
<para><computeroutput>void Leap.LeapTransform.MirrorZ ( )</computeroutput></para><para>

<para>Mirrors this transform&apos;s rotation and scale across the z-axis. Translation is not affected. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00107">107</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1a05c90f4a484f3b55e415c0e203f78870"/>    <section>
    <title>TransformDirection()</title>
<indexterm><primary>TransformDirection</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>TransformDirection</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.LeapTransform.TransformDirection (<link linkend="_struct_leap_1_1_vector">Vector</link> direction)</computeroutput></para><para>

<para>Transforms the specified direction vector, applying rotation only. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00052">52</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1a069ce8e414f0def9697b7816dcc4a799"/>    <section>
    <title>TransformPoint()</title>
<indexterm><primary>TransformPoint</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>TransformPoint</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.LeapTransform.TransformPoint (<link linkend="_struct_leap_1_1_vector">Vector</link> point)</computeroutput></para><para>

<para>Transforms the specified position vector, applying translation, rotation and scale. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00044">44</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1ad9658850a91beef88214dcaac6f6e6af"/>    <section>
    <title>TransformQuaternion()</title>
<indexterm><primary>TransformQuaternion</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>TransformQuaternion</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> Leap.LeapTransform.TransformQuaternion (<link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> rhs)</computeroutput></para><para>

<para>Transforms the specified quaternion. Multiplies the quaternion representing the rotational part of this transform by the specified quaternion. </para>
</para>

<para><emphasis role="bold">Important:</emphasis> Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state. Neither this function nor the <link linkend="_struct_leap_1_1_leap_transform_1a69917840386ec2421d3886be4ec7833a">LeapTransform.rotation</link> quaternion can be used after the basis vectors are set.</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00075">75</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1a415819fca9f811c44dc5d855b2099f61"/>    <section>
    <title>TransformVelocity()</title>
<indexterm><primary>TransformVelocity</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>TransformVelocity</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.LeapTransform.TransformVelocity (<link linkend="_struct_leap_1_1_vector">Vector</link> velocity)</computeroutput></para><para>

<para>Transforms the specified velocity vector, applying rotation and scale. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00060">60</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_leap_1_1_leap_transform_1a10de68df5cf1afa89c273a33d0629f16"/>    <section>
    <title>Identity</title>
<indexterm><primary>Identity</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>Identity</secondary></indexterm>
<para><computeroutput>readonly <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link> Leap.LeapTransform.Identity = new <link linkend="_struct_leap_1_1_leap_transform">LeapTransform</link>(<link linkend="_struct_leap_1_1_vector_1a007c4ee68aa890118b7a2d24aa4d9a6b">Vector.Zero</link>, LeapQuaternion.Identity, <link linkend="_struct_leap_1_1_vector_1a0eb4303bb2650290ac5ca18f1e59563d">Vector.Ones</link>)<computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>The identity transform. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00239">239</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
</section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_struct_leap_1_1_leap_transform_1a69917840386ec2421d3886be4ec7833a"/>    <section>
    <title>rotation</title>
<indexterm><primary>rotation</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>rotation</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_leap_quaternion">LeapQuaternion</link> Leap.LeapTransform.rotation<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The rotational component of the transform. </para>
</para>

<para><emphasis role="bold">Important:</emphasis> Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state. This rotation quaternion cannot be accessed after the basis vectors are modified directly.</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00205">205</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1ac8b265b9dfa089183c263bbe7ff0e42d"/>    <section>
    <title>scale</title>
<indexterm><primary>scale</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>scale</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.LeapTransform.scale<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The scale factors of the transform. Scale is kept separate from translation. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00186">186</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1ac7de7c75b3f77718715055990131f08b"/>    <section>
    <title>translation</title>
<indexterm><primary>translation</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>translation</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.LeapTransform.translation<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The translation component of the transform. </para>
</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00174">174</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1a8a67b81b7344f05e136048e2159ab663"/>    <section>
    <title>xBasis</title>
<indexterm><primary>xBasis</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>xBasis</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.LeapTransform.xBasis<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The x-basis of the transform. </para>
</para>

<para><emphasis role="bold">Important:</emphasis> Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state. Neither the <link linkend="_struct_leap_1_1_leap_transform_1ad9658850a91beef88214dcaac6f6e6af">TransformQuaternion()</link> function nor the <link linkend="_struct_leap_1_1_leap_transform_1a69917840386ec2421d3886be4ec7833a">LeapTransform.rotation</link> quaternion can be used after the basis vectors are set.</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00125">125</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1ac46874ef78036f1bc2d2bf76dd9a62a2"/>    <section>
    <title>yBasis</title>
<indexterm><primary>yBasis</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>yBasis</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.LeapTransform.yBasis<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The y-basis of the transform. </para>
</para>

<para><emphasis role="bold">Important:</emphasis> Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state. Neither the <link linkend="_struct_leap_1_1_leap_transform_1ad9658850a91beef88214dcaac6f6e6af">TransformQuaternion()</link> function nor the <link linkend="_struct_leap_1_1_leap_transform_1a69917840386ec2421d3886be4ec7833a">LeapTransform.rotation</link> quaternion can be used after the basis vectors are set.</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00143">143</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
    </section><anchor xml:id="_struct_leap_1_1_leap_transform_1a59e5ecf307c5938bf9e04902b8395f8a"/>    <section>
    <title>zBasis</title>
<indexterm><primary>zBasis</primary><secondary>Leap.LeapTransform</secondary></indexterm>
<indexterm><primary>Leap.LeapTransform</primary><secondary>zBasis</secondary></indexterm>
<para><computeroutput><link linkend="_struct_leap_1_1_vector">Vector</link> Leap.LeapTransform.zBasis<computeroutput>[get]</computeroutput>, <computeroutput>[set]</computeroutput></computeroutput></para><para>

<para>The z-basis of the transform. </para>
</para>

<para><emphasis role="bold">Important:</emphasis> Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state. Neither the <link linkend="_struct_leap_1_1_leap_transform_1ad9658850a91beef88214dcaac6f6e6af">TransformQuaternion()</link> function nor the <link linkend="_struct_leap_1_1_leap_transform_1a69917840386ec2421d3886be4ec7833a">LeapTransform.rotation</link> quaternion can be used after the basis vectors are set.</para>

<para><formalpara><title>Since: </title>

<para>3.1.2 </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__leap_transform_8cs_source_1l00161">161</link> of file <link linkend="__leap_transform_8cs_source">LeapTransform.cs</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Plugins/LeapCSharp/<link linkend="__leap_transform_8cs">LeapTransform.cs</link></section>
</section>
