<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__item_spent_tests_8cs_source">
<title>ItemSpentTests.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Library/PackageCache/com.unity.analytics@3.2.2/Tests/Editor/Unity.Analytics.StandardEvents/ItemSpentTests.cs</primary></indexterm>
<programlisting>00001 <emphasis role="keyword">using</emphasis>&#32;System;
00002 <emphasis role="keyword">using</emphasis>&#32;NUnit.Framework;
00003 
00004 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_unity_engine_1_1_analytics_1_1_tests">UnityEngine.Analytics.Tests</link>
00005 {
00006 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">partial&#32;class&#32;</emphasis>AnalyticsEventTests
00007 &#32;&#32;&#32;&#32;{
00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00009"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a1c1d0973b8b39a33133a0c144cc1c2ad">00009</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a1c1d0973b8b39a33133a0c144cc1c2ad">ItemSpent_CurrencyTypeTest</link>(
00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(AcquisitionType.Premium,&#32;AcquisitionType.Soft)]&#32;AcquisitionType&#32;currencyType)
00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;amount&#32;=&#32;1f;
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;balance&#32;=&#32;1f;
00016 
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId));
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00019 
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance));
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00023 
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00025"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a3eab110b01b749ea42e31b7ef60f9a34">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a3eab110b01b749ea42e31b7ef60f9a34">ItemSpent_ContextTest</link>(
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;context)
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currencyType&#32;=&#32;AcquisitionType.Soft;
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;amount&#32;=&#32;1f;
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;balance&#32;=&#32;1f;
00032 
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(context))
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Throws&lt;ArgumentException&gt;(()&#32;=&gt;&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId));
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Throws&lt;ArgumentException&gt;(()&#32;=&gt;&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance));
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance));
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00042 
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance));
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00047 
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00049"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a29a0cc781b0776cc9fed64f0f320a671">00049</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a29a0cc781b0776cc9fed64f0f320a671">ItemSpent_AmountTest</link>(
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(-1f,&#32;0f,&#32;1f)]&#32;<emphasis role="keywordtype">float</emphasis>&#32;amount)
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currencyType&#32;=&#32;AcquisitionType.Soft;
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;balance&#32;=&#32;1f;
00056 
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId));
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00059 
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance));
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00063 
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00065"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1ad60de9bd1b1c0982fe9742da7959c08d">00065</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1ad60de9bd1b1c0982fe9742da7959c08d">ItemSpent_ItemIdTest</link>(
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;itemId)
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currencyType&#32;=&#32;AcquisitionType.Soft;
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;amount&#32;=&#32;1f;
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;balance&#32;=&#32;1f;
00072 
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(itemId))
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Throws&lt;ArgumentException&gt;(()&#32;=&gt;&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId));
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.Throws&lt;ArgumentException&gt;(()&#32;=&gt;&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance));
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId));
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00082 
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance));
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00087 
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00089"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a720e56a22997a75b3a9f042108f9ef79">00089</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a720e56a22997a75b3a9f042108f9ef79">ItemSpent_BalanceTest</link>(
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(-1f,&#32;0,&#32;1f)]&#32;<emphasis role="keywordtype">float</emphasis>&#32;balance)
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currencyType&#32;=&#32;AcquisitionType.Soft;
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;amount&#32;=&#32;1f;
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00096 
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance));
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00100 
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00102"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a70dc4e03d33cf66d7c33656e4a8eedf5">00102</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a70dc4e03d33cf66d7c33656e4a8eedf5">ItemSpent_ItemTypeTest</link>(
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test_type&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;itemType)
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currencyType&#32;=&#32;AcquisitionType.Soft;
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;amount&#32;=&#32;1f;
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;balance&#32;=&#32;1f;
00110 
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;itemType));
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00113 
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance,&#32;itemType));
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00117 
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00119"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a5f3bfe78e8056c3e9ff5238bf7fb1c93">00119</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a5f3bfe78e8056c3e9ff5238bf7fb1c93">ItemSpent_LevelTest</link>(
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test_level&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;level)
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currencyType&#32;=&#32;AcquisitionType.Soft;
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;amount&#32;=&#32;1f;
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;balance&#32;=&#32;1f;
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemType&#32;=&#32;<emphasis role="stringliteral">&quot;test_type&quot;</emphasis>;
00128 
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;itemType,&#32;level));
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00131 
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance,&#32;itemType,&#32;level));
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00135 
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00137"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a7a301640f7a2fbd342f07ae3cb892f66">00137</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a7a301640f7a2fbd342f07ae3cb892f66">ItemSpent_TransactionIdTest</link>(
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Values(<emphasis role="stringliteral">&quot;test_id&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="keyword">null</emphasis>)]&#32;<emphasis role="keywordtype">string</emphasis>&#32;transactionId)
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currencyType&#32;=&#32;AcquisitionType.Soft;
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;amount&#32;=&#32;1f;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;balance&#32;=&#32;1f;
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemType&#32;=&#32;<emphasis role="stringliteral">&quot;test_type&quot;</emphasis>;
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;level&#32;=&#32;<emphasis role="stringliteral">&quot;test_level&quot;</emphasis>;
00147 
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;itemType,&#32;level,&#32;transactionId));
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00150 
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance,&#32;itemType,&#32;level,&#32;transactionId));
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00154 
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[Test]
<anchor xml:id="__item_spent_tests_8cs_source_1l00156"/><link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1ac7a1599e935daf864875a803ac998229">00156</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1ac7a1599e935daf864875a803ac998229">ItemSpent_CustomDataTest</link>()
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;currencyType&#32;=&#32;AcquisitionType.Soft;
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;context&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;amount&#32;=&#32;1f;
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemId&#32;=&#32;<emphasis role="stringliteral">&quot;test_item&quot;</emphasis>;
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;balance&#32;=&#32;1f;
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;itemType&#32;=&#32;<emphasis role="stringliteral">&quot;test_type&quot;</emphasis>;
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;level&#32;=&#32;<emphasis role="stringliteral">&quot;test_level&quot;</emphasis>;
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;transactionId&#32;=&#32;<emphasis role="stringliteral">&quot;test_id&quot;</emphasis>;
00166 
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;itemType,&#32;level,&#32;transactionId,&#32;m_CustomData));
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1addfce5dc50d03ecdb8b9791b06450b2b">EvaluateCustomData</link>(m_CustomData);
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00170 
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Assert.DoesNotThrow(()&#32;=&gt;&#32;m_Result&#32;=&#32;AnalyticsEvent.ItemSpent(currencyType,&#32;context,&#32;amount,&#32;itemId,&#32;balance,&#32;itemType,&#32;level,&#32;transactionId,&#32;m_CustomData));
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1addfce5dc50d03ecdb8b9791b06450b2b">EvaluateCustomData</link>(m_CustomData);
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_unity_engine_1_1_analytics_1_1_tests_1_1_analytics_event_tests_1a423dd55d4efe58ed4e98fba55f4bc4fb">EvaluateAnalyticsResult</link>(m_Result);
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00175 &#32;&#32;&#32;&#32;}
00176 }
</programlisting></section>
