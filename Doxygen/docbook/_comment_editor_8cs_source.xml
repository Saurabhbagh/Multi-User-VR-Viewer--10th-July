<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__comment_editor_8cs_source">
<title>CommentEditor.cs</title>
<indexterm><primary>O:/GitHUBMINIPRoject/Assets/LeapMotion/Core/Scripts/Utils/Editor/CommentEditor.cs</primary></indexterm>
<programlisting>00001 <emphasis role="comment">/******************************************************************************</emphasis>
00002 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;Leap&#32;Motion,&#32;Inc.&#32;2011-2018.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00003 <emphasis role="comment">&#32;*&#32;Leap&#32;Motion&#32;proprietary&#32;and&#32;confidential.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00004 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00005 <emphasis role="comment">&#32;*&#32;Use&#32;subject&#32;to&#32;the&#32;terms&#32;of&#32;the&#32;Leap&#32;Motion&#32;SDK&#32;Agreement&#32;available&#32;at&#32;&#32;&#32;&#32;&#32;*</emphasis>
00006 <emphasis role="comment">&#32;*&#32;https://developer.leapmotion.com/sdk_agreement,&#32;or&#32;another&#32;agreement&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00007 <emphasis role="comment">&#32;*&#32;between&#32;Leap&#32;Motion&#32;and&#32;you,&#32;your&#32;company&#32;or&#32;other&#32;organization.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
00008 <emphasis role="comment">&#32;******************************************************************************/</emphasis>
00009 
00010 <emphasis role="keyword">using</emphasis>&#32;<link linkend="__balloon_8cs_1a7d67e097df9376eb709b6a23aa3c7d23">UnityEngine</link>;
00011 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_namespace_unity_editor">UnityEditor</link>;
00012 
00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_leap_1_1_unity">Leap.Unity</link>&#32;{
00014 
00015 &#32;&#32;[CustomEditor(typeof(Comment))]
<anchor xml:id="__comment_editor_8cs_source_1l00016"/><link linkend="_class_leap_1_1_unity_1_1_comment_editor">00016</link> &#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_leap_1_1_unity_1_1_comment_editor">CommentEditor</link>&#32;:&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base">CustomEditorBase</link>&lt;Comment&gt;&#32;{
00017 
00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;SerializedProperty&#32;_isEditing;
00019 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GUIStyle&#32;_editStyle;
00020 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;GUIStyle&#32;_displayStyle;
00021 
<anchor xml:id="__comment_editor_8cs_source_1l00022"/><link linkend="_class_leap_1_1_unity_1_1_comment_editor_1a791bd306d98e332059fb4936256e5bac">00022</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<emphasis role="keyword">override</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_leap_1_1_unity_1_1_comment_editor_1a791bd306d98e332059fb4936256e5bac">OnEnable</link>()&#32;{
00023 &#32;&#32;&#32;&#32;&#32;&#32;base.OnEnable();
00024 
00025 &#32;&#32;&#32;&#32;&#32;&#32;_isEditing&#32;=&#32;serializedObject.FindProperty(<emphasis role="stringliteral">&quot;_isEditing&quot;</emphasis>);
00026 
00027 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1a08ac3b5610a14389384b3db0f8612b42">dontShowScriptField</link>();
00028 
00029 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_leap_1_1_unity_1_1_custom_editor_base_1aab8bbda3edcc92a5c3d5a5360988c265">specifyCustomDrawer</link>(<emphasis role="stringliteral">&quot;_comment&quot;</emphasis>,&#32;drawComment);
00030 &#32;&#32;&#32;&#32;}
00031 
00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;drawComment(SerializedProperty&#32;commentProp)&#32;{
00033 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;text&#32;=&#32;commentProp.stringValue;
00034 
00035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_editStyle&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_editStyle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(EditorStyles.textArea);
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_editStyle.wordWrap&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00038 &#32;&#32;&#32;&#32;&#32;&#32;}
00039 
00040 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_displayStyle&#32;==&#32;<emphasis role="keyword">null</emphasis>)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_displayStyle&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;GUIStyle(EditorStyles.label);
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_displayStyle.wordWrap&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_displayStyle.richText&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00044 &#32;&#32;&#32;&#32;&#32;&#32;}
00045 
00046 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keywordtype">string</emphasis>.IsNullOrEmpty(text))&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_isEditing.boolValue&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00048 &#32;&#32;&#32;&#32;&#32;&#32;}
00049 
00050 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_isEditing.boolValue)&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(GUILayout.Button(<emphasis role="stringliteral">&quot;Finish&quot;</emphasis>))&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_isEditing.boolValue&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00054 
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;commentProp.stringValue&#32;=&#32;EditorGUILayout.TextArea(text,&#32;_editStyle);
00056 &#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUILayout.Space();
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;var&#32;rect&#32;=&#32;GUILayoutUtility.GetRect(<emphasis role="keyword">new</emphasis>&#32;GUIContent(text),&#32;_displayStyle);
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EditorGUI.SelectableLabel(rect,&#32;text,&#32;_displayStyle);
00060 &#32;&#32;&#32;&#32;&#32;&#32;}
00061 &#32;&#32;&#32;&#32;}
00062 
00063 &#32;&#32;}
00064 }
</programlisting></section>
