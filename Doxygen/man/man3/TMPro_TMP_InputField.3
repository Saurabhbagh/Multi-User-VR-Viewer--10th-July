.TH "TMPro.TMP_InputField" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TMPro.TMP_InputField \- Editable text input field\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits Selectable, IUpdateSelectedHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IPointerClickHandler, ISubmitHandler, ICanvasElement, and IScrollHandler\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBOnChangeEvent\fP"
.br
.ti -1c
.RI "class \fBSelectionEvent\fP"
.br
.ti -1c
.RI "class \fBSubmitEvent\fP"
.br
.ti -1c
.RI "class \fBTextSelectionEvent\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBContentType\fP { \fBContentType\&.Standard\fP, \fBContentType\&.Autocorrected\fP, \fBContentType\&.IntegerNumber\fP, \fBContentType\&.DecimalNumber\fP, \fBContentType\&.Alphanumeric\fP, \fBContentType\&.Name\fP, \fBContentType\&.EmailAddress\fP, \fBContentType\&.Password\fP, \fBContentType\&.Pin\fP, \fBContentType\&.Custom\fP }"
.br
.ti -1c
.RI "enum \fBInputType\fP { \fBInputType\&.Standard\fP, \fBInputType\&.AutoCorrect\fP, \fBInputType\&.Password\fP }"
.br
.ti -1c
.RI "enum \fBCharacterValidation\fP { \fBCharacterValidation\&.None\fP, \fBCharacterValidation\&.Digit\fP, \fBCharacterValidation\&.Integer\fP, \fBCharacterValidation\&.Decimal\fP, \fBCharacterValidation\&.Alphanumeric\fP, \fBCharacterValidation\&.Name\fP, \fBCharacterValidation\&.Regex\fP, \fBCharacterValidation\&.EmailAddress\fP, \fBCharacterValidation\&.CustomValidator\fP }"
.br
.ti -1c
.RI "enum \fBLineType\fP { \fBLineType\&.SingleLine\fP, \fBLineType\&.MultiLineSubmit\fP, \fBLineType\&.MultiLineNewline\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "delegate char \fBOnValidateInput\fP (string \fBtext\fP, int charIndex, char addedChar)"
.br
.ti -1c
.RI "void \fBMoveTextEnd\fP (bool shift)"
.br
.RI "Move to the end of the text\&. "
.ti -1c
.RI "void \fBMoveTextStart\fP (bool shift)"
.br
.RI "Move to the start of the text\&. "
.ti -1c
.RI "void \fBMoveToEndOfLine\fP (bool shift, bool ctrl)"
.br
.RI "Move to the end of the current line of text\&. "
.ti -1c
.RI "void \fBMoveToStartOfLine\fP (bool shift, bool ctrl)"
.br
.RI "Move to the start of the current line of text\&. "
.ti -1c
.RI "virtual void \fBOnBeginDrag\fP (PointerEventData eventData)"
.br
.ti -1c
.RI "virtual void \fBOnDrag\fP (PointerEventData eventData)"
.br
.ti -1c
.RI "virtual void \fBOnEndDrag\fP (PointerEventData eventData)"
.br
.ti -1c
.RI "override void \fBOnPointerDown\fP (PointerEventData eventData)"
.br
.ti -1c
.RI "void \fBProcessEvent\fP (Event e)"
.br
.ti -1c
.RI "virtual void \fBOnUpdateSelected\fP (BaseEventData eventData)"
.br
.ti -1c
.RI "virtual void \fBOnScroll\fP (PointerEventData eventData)"
.br
.ti -1c
.RI "void \fBForceLabelUpdate\fP ()"
.br
.ti -1c
.RI "virtual void \fBRebuild\fP (CanvasUpdate update)"
.br
.ti -1c
.RI "virtual void \fBLayoutComplete\fP ()"
.br
.ti -1c
.RI "virtual void \fBGraphicUpdateComplete\fP ()"
.br
.ti -1c
.RI "void \fBActivateInputField\fP ()"
.br
.ti -1c
.RI "override void \fBOnSelect\fP (BaseEventData eventData)"
.br
.ti -1c
.RI "virtual void \fBOnPointerClick\fP (PointerEventData eventData)"
.br
.ti -1c
.RI "void \fBOnControlClick\fP ()"
.br
.ti -1c
.RI "void \fBDeactivateInputField\fP ()"
.br
.ti -1c
.RI "override void \fBOnDeselect\fP (BaseEventData eventData)"
.br
.ti -1c
.RI "virtual void \fBOnSubmit\fP (BaseEventData eventData)"
.br
.ti -1c
.RI "void \fBSetGlobalPointSize\fP (float \fBpointSize\fP)"
.br
.RI "Function to conveniently set the point size of both Placeholder and Input Field text object\&. "
.ti -1c
.RI "void \fBSetGlobalFontAsset\fP (\fBTMP_FontAsset\fP \fBfontAsset\fP)"
.br
.RI "Function to conveniently set the Font Asset of both Placeholder and Input Field text object\&. "
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum \fBEditState\fP { \fBEditState\&.Continue\fP, \fBEditState\&.Finish\fP }"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBTMP_InputField\fP ()"
.br
.ti -1c
.RI "void \fBClampStringPos\fP (ref int pos)"
.br
.ti -1c
.RI "void \fBClampCaretPos\fP (ref int pos)"
.br
.ti -1c
.RI "override void \fBOnEnable\fP ()"
.br
.ti -1c
.RI "override void \fBOnDisable\fP ()"
.br
.ti -1c
.RI "void \fBOnFocus\fP ()"
.br
.ti -1c
.RI "void \fBSelectAll\fP ()"
.br
.ti -1c
.RI "virtual void \fBLateUpdate\fP ()"
.br
.RI "Update the text based on input\&. "
.ti -1c
.RI "\fBEditState\fP \fBKeyPressed\fP (Event evt)"
.br
.ti -1c
.RI "virtual void \fBAppend\fP (string input)"
.br
.RI "Append the specified text to the end of the current\&. "
.ti -1c
.RI "virtual void \fBAppend\fP (char input)"
.br
.ti -1c
.RI "void \fBSendOnEndEdit\fP ()"
.br
.RI "Submit the input field's text\&. "
.ti -1c
.RI "void \fBSendOnSubmit\fP ()"
.br
.ti -1c
.RI "void \fBSendOnFocus\fP ()"
.br
.ti -1c
.RI "void \fBSendOnFocusLost\fP ()"
.br
.ti -1c
.RI "void \fBSendOnTextSelection\fP ()"
.br
.ti -1c
.RI "void \fBSendOnEndTextSelection\fP ()"
.br
.ti -1c
.RI "void \fBUpdateLabel\fP ()"
.br
.RI "Update the visual text Text\&. "
.ti -1c
.RI "char \fBValidate\fP (string \fBtext\fP, int pos, char ch)"
.br
.RI "Validate the specified input\&. "
.ti -1c
.RI "override void \fBDoStateTransition\fP (SelectionState state, bool instant)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "TouchScreenKeyboard \fBm_Keyboard\fP"
.br
.ti -1c
.RI "RectTransform \fBm_TextViewport\fP"
.br
.RI "Text Text used to display the input's value\&. "
.ti -1c
.RI "\fBTMP_Text\fP \fBm_TextComponent\fP"
.br
.ti -1c
.RI "RectTransform \fBm_TextComponentRectTransform\fP"
.br
.ti -1c
.RI "Graphic \fBm_Placeholder\fP"
.br
.ti -1c
.RI "Scrollbar \fBm_VerticalScrollbar\fP"
.br
.ti -1c
.RI "\fBTMP_ScrollbarEventHandler\fP \fBm_VerticalScrollbarEventHandler\fP"
.br
.ti -1c
.RI "float \fBm_ScrollSensitivity\fP = 1\&.0f"
.br
.ti -1c
.RI "string \fBm_Text\fP = string\&.Empty"
.br
.RI "Input field's value\&. "
.ti -1c
.RI "int \fBm_StringPosition\fP = 0"
.br
.ti -1c
.RI "int \fBm_StringSelectPosition\fP = 0"
.br
.ti -1c
.RI "int \fBm_CaretPosition\fP = 0"
.br
.ti -1c
.RI "int \fBm_CaretSelectPosition\fP = 0"
.br
.ti -1c
.RI "UIVertex [] \fBm_CursorVerts\fP = null"
.br
.ti -1c
.RI "Mesh \fBm_Mesh\fP"
.br
.ti -1c
.RI "bool \fBm_CaretVisible\fP"
.br
.ti -1c
.RI "\fBTMP_FontAsset\fP \fBm_GlobalFontAsset\fP"
.br
.ti -1c
.RI "bool \fBm_OnFocusSelectAll\fP = true"
.br
.ti -1c
.RI "bool \fBm_isSelectAll\fP"
.br
.ti -1c
.RI "bool \fBm_ResetOnDeActivation\fP = true"
.br
.ti -1c
.RI "bool \fBm_isRichTextEditingAllowed\fP = true"
.br
.ti -1c
.RI "\fBTMP_InputValidator\fP \fBm_InputValidator\fP = null"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "Mesh \fBmesh\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBshouldHideMobileInput\fP\fC [get, set]\fP"
.br
.RI "Should the mobile keyboard input be hidden\&. "
.ti -1c
.RI "string \fBtext\fP\fC [get, set]\fP"
.br
.RI "Input field's current text value\&. "
.ti -1c
.RI "bool \fBisFocused\fP\fC [get]\fP"
.br
.ti -1c
.RI "float \fBcaretBlinkRate\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBcaretWidth\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "RectTransform \fBtextViewport\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBTMP_Text\fP \fBtextComponent\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "Graphic \fBplaceholder\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "Scrollbar \fBverticalScrollbar\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "float \fBscrollSensitivity\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "Color? \fBcaretColor\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "bool \fBcustomCaretColor\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "Color \fBselectionColor\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBSubmitEvent\fP \fBonEndEdit\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBSubmitEvent\fP \fBonSubmit\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBSelectionEvent\fP \fBonSelect\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBSelectionEvent\fP \fBonDeselect\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBTextSelectionEvent\fP \fBonTextSelection\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBTextSelectionEvent\fP \fBonEndTextSelection\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBOnChangeEvent\fP \fBonValueChanged\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBOnValidateInput\fP \fBonValidateInput\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBcharacterLimit\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "float \fBpointSize\fP\fC [get, set]\fP"
.br
.RI "Set the point size on both Placeholder and Input text object\&. "
.ti -1c
.RI "\fBTMP_FontAsset\fP \fBfontAsset\fP\fC [get, set]\fP"
.br
.RI "Sets the Font Asset on both Placeholder and Input child objects\&. "
.ti -1c
.RI "bool \fBonFocusSelectAll\fP\fC [get, set]\fP"
.br
.RI "Determines if the whole text will be selected when focused\&. "
.ti -1c
.RI "bool \fBresetOnDeActivation\fP\fC [get, set]\fP"
.br
.RI "Determines if the text and caret position as well as selection will be reset when the input field is deactivated\&. "
.ti -1c
.RI "bool \fBrestoreOriginalTextOnEscape\fP\fC [get, set]\fP"
.br
.RI "Controls whether the original text is restored when pressing 'ESC'\&. "
.ti -1c
.RI "bool \fBisRichTextEditingAllowed\fP\fC [get, set]\fP"
.br
.RI "Is Rich Text editing allowed? "
.ti -1c
.RI "\fBContentType\fP \fBcontentType\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBLineType\fP \fBlineType\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBInputType\fP \fBinputType\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "TouchScreenKeyboardType \fBkeyboardType\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBCharacterValidation\fP \fBcharacterValidation\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBTMP_InputValidator\fP \fBinputValidator\fP\fC [get, set]\fP"
.br
.RI "Sets the Input Validation to use a Custom Input Validation script\&. "
.ti -1c
.RI "bool \fBreadOnly\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "bool \fBrichText\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "bool \fBmultiLine\fP\fC [get]\fP"
.br
.ti -1c
.RI "char \fBasteriskChar\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "bool \fBwasCanceled\fP\fC [get]\fP"
.br
.ti -1c
.RI "int \fBcaretPositionInternal\fP\fC [get, set]\fP"
.br
.RI "Current position of the cursor\&. Getters are public Setters are protected "
.ti -1c
.RI "int \fBstringPositionInternal\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBcaretSelectPositionInternal\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBstringSelectPositionInternal\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBcaretPosition\fP\fC [get, set]\fP"
.br
.RI "Get: Returns the focus position as thats the position that moves around even during selection\&. Set: Set both the anchor and focus position such that a selection doesn't happen "
.ti -1c
.RI "int \fBselectionAnchorPosition\fP\fC [get, set]\fP"
.br
.RI "Get: Returns the fixed position of selection Set: If Input\&.compositionString is 0 set the fixed position "
.ti -1c
.RI "int \fBselectionFocusPosition\fP\fC [get, set]\fP"
.br
.RI "Get: Returns the variable position of selection Set: If Input\&.compositionString is 0 set the variable position "
.ti -1c
.RI "int \fBstringPosition\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "int \fBselectionStringAnchorPosition\fP\fC [get, set]\fP"
.br
.RI "The fixed position of the selection in the raw string which may contains rich text\&. "
.ti -1c
.RI "int \fBselectionStringFocusPosition\fP\fC [get, set]\fP"
.br
.RI "The variable position of the selection in the raw string which may contains rich text\&. "
.in -1c
.SH "Detailed Description"
.PP 
Editable text input field\&. 


.PP
Definition at line 21 of file TMP_InputField\&.cs\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBTMPro\&.TMP_InputField\&.CharacterValidation\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINone \fP\fP
.TP
\fB\fIDigit \fP\fP
.TP
\fB\fIInteger \fP\fP
.TP
\fB\fIDecimal \fP\fP
.TP
\fB\fIAlphanumeric \fP\fP
.TP
\fB\fIName \fP\fP
.TP
\fB\fIRegex \fP\fP
.TP
\fB\fIEmailAddress \fP\fP
.TP
\fB\fICustomValidator \fP\fP
.PP
Definition at line 54 of file TMP_InputField\&.cs\&.
.SS "enum \fBTMPro\&.TMP_InputField\&.ContentType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIStandard \fP\fP
.TP
\fB\fIAutocorrected \fP\fP
.TP
\fB\fIIntegerNumber \fP\fP
.TP
\fB\fIDecimalNumber \fP\fP
.TP
\fB\fIAlphanumeric \fP\fP
.TP
\fB\fIName \fP\fP
.TP
\fB\fIEmailAddress \fP\fP
.TP
\fB\fIPassword \fP\fP
.TP
\fB\fIPin \fP\fP
.TP
\fB\fICustom \fP\fP
.PP
Definition at line 33 of file TMP_InputField\&.cs\&.
.SS "enum \fBTMPro\&.TMP_InputField\&.EditState\fP\fC [strong]\fP, \fC [protected]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIContinue \fP\fP
.TP
\fB\fIFinish \fP\fP
.PP
Definition at line 1378 of file TMP_InputField\&.cs\&.
.SS "enum \fBTMPro\&.TMP_InputField\&.InputType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIStandard \fP\fP
.TP
\fB\fIAutoCorrect \fP\fP
.TP
\fB\fIPassword \fP\fP
.PP
Definition at line 47 of file TMP_InputField\&.cs\&.
.SS "enum \fBTMPro\&.TMP_InputField\&.LineType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISingleLine \fP\fP
.TP
\fB\fIMultiLineSubmit \fP\fP
.TP
\fB\fIMultiLineNewline \fP\fP
.PP
Definition at line 67 of file TMP_InputField\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TMPro\&.TMP_InputField\&.TMP_InputField ()\fC [protected]\fP"

.PP
Definition at line 304 of file TMP_InputField\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void TMPro\&.TMP_InputField\&.ActivateInputField ()"

.PP
Definition at line 3168 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.Append (string input)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Append the specified text to the end of the current\&. 
.PP
Definition at line 2346 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.Append (char input)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 2365 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.ClampCaretPos (ref int pos)\fC [protected]\fP"

.PP
Definition at line 600 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.ClampStringPos (ref int pos)\fC [protected]\fP"

.PP
Definition at line 592 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.DeactivateInputField ()"

.PP
Definition at line 3247 of file TMP_InputField\&.cs\&.
.SS "override void TMPro\&.TMP_InputField\&.DoStateTransition (SelectionState state, bool instant)\fC [protected]\fP"

.PP
Definition at line 3470 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.ForceLabelUpdate ()"

.PP
Definition at line 2647 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.GraphicUpdateComplete ()\fC [virtual]\fP"

.PP
Definition at line 2680 of file TMP_InputField\&.cs\&.
.SS "\fBEditState\fP TMPro\&.TMP_InputField\&.KeyPressed (Event evt)\fC [protected]\fP"

.PP
Definition at line 1384 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.LateUpdate ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Update the text based on input\&. 
.PP
Definition at line 1082 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.LayoutComplete ()\fC [virtual]\fP"

.PP
Definition at line 2677 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.MoveTextEnd (bool shift)"

.PP
Move to the end of the text\&. 
.PP
\fBParameters:\fP
.RS 4
\fIshift\fP 
.RE
.PP

.PP
Definition at line 931 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.MoveTextStart (bool shift)"

.PP
Move to the start of the text\&. 
.PP
\fBParameters:\fP
.RS 4
\fIshift\fP 
.RE
.PP

.PP
Definition at line 970 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.MoveToEndOfLine (bool shift, bool ctrl)"

.PP
Move to the end of the current line of text\&. 
.PP
\fBParameters:\fP
.RS 4
\fIshift\fP 
.RE
.PP

.PP
Definition at line 1010 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.MoveToStartOfLine (bool shift, bool ctrl)"

.PP
Move to the start of the current line of text\&. 
.PP
\fBParameters:\fP
.RS 4
\fIshift\fP 
.RE
.PP

.PP
Definition at line 1037 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.OnBeginDrag (PointerEventData eventData)\fC [virtual]\fP"

.PP
Definition at line 1219 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.OnControlClick ()"

.PP
Definition at line 3242 of file TMP_InputField\&.cs\&.
.SS "override void TMPro\&.TMP_InputField\&.OnDeselect (BaseEventData eventData)"

.PP
Definition at line 3296 of file TMP_InputField\&.cs\&.
.SS "override void TMPro\&.TMP_InputField\&.OnDisable ()\fC [protected]\fP"

.PP
Definition at line 812 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.OnDrag (PointerEventData eventData)\fC [virtual]\fP"

.PP
Definition at line 1227 of file TMP_InputField\&.cs\&.
.SS "override void TMPro\&.TMP_InputField\&.OnEnable ()\fC [protected]\fP"

.PP
Definition at line 750 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.OnEndDrag (PointerEventData eventData)\fC [virtual]\fP"

.PP
Definition at line 1284 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.OnFocus ()\fC [protected]\fP"

.PP
Definition at line 914 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.OnPointerClick (PointerEventData eventData)\fC [virtual]\fP"

.PP
Definition at line 3234 of file TMP_InputField\&.cs\&.
.SS "override void TMPro\&.TMP_InputField\&.OnPointerDown (PointerEventData eventData)"

.PP
Definition at line 1292 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.OnScroll (PointerEventData eventData)\fC [virtual]\fP"

.PP

.PP
\fBParameters:\fP
.RS 4
\fIeventData\fP 
.RE
.PP

.PP
Definition at line 1624 of file TMP_InputField\&.cs\&.
.SS "override void TMPro\&.TMP_InputField\&.OnSelect (BaseEventData eventData)"

.PP
Definition at line 3224 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.OnSubmit (BaseEventData eventData)\fC [virtual]\fP"

.PP
Definition at line 3306 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.OnUpdateSelected (BaseEventData eventData)\fC [virtual]\fP"

.PP

.PP
\fBParameters:\fP
.RS 4
\fIeventData\fP 
.RE
.PP

.PP
Definition at line 1578 of file TMP_InputField\&.cs\&.
.SS "delegate char TMPro\&.TMP_InputField\&.OnValidateInput (string text, int charIndex, char addedChar)"

.SS "void TMPro\&.TMP_InputField\&.ProcessEvent (Event e)"

.PP
Definition at line 1568 of file TMP_InputField\&.cs\&.
.SS "virtual void TMPro\&.TMP_InputField\&.Rebuild (CanvasUpdate update)\fC [virtual]\fP"

.PP
Definition at line 2667 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SelectAll ()\fC [protected]\fP"

.PP
Definition at line 920 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SendOnEndEdit ()\fC [protected]\fP"

.PP
Submit the input field's text\&. 
.PP
Definition at line 2440 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SendOnEndTextSelection ()\fC [protected]\fP"

.PP
Definition at line 2472 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SendOnFocus ()\fC [protected]\fP"

.PP
Definition at line 2452 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SendOnFocusLost ()\fC [protected]\fP"

.PP
Definition at line 2458 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SendOnSubmit ()\fC [protected]\fP"

.PP
Definition at line 2446 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SendOnTextSelection ()\fC [protected]\fP"

.PP
Definition at line 2464 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SetGlobalFontAsset (\fBTMP_FontAsset\fP fontAsset)"

.PP
Function to conveniently set the Font Asset of both Placeholder and Input Field text object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfontAsset\fP 
.RE
.PP

.PP
Definition at line 3496 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.SetGlobalPointSize (float pointSize)"

.PP
Function to conveniently set the point size of both Placeholder and Input Field text object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpointSize\fP 
.RE
.PP

.PP
Definition at line 3484 of file TMP_InputField\&.cs\&.
.SS "void TMPro\&.TMP_InputField\&.UpdateLabel ()\fC [protected]\fP"

.PP
Update the visual text Text\&. 
.PP
Definition at line 2487 of file TMP_InputField\&.cs\&.
.SS "char TMPro\&.TMP_InputField\&.Validate (string text, int pos, char ch)\fC [protected]\fP"

.PP
Validate the specified input\&. 
.PP
Definition at line 3064 of file TMP_InputField\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "int TMPro\&.TMP_InputField\&.m_CaretPosition = 0\fC [protected]\fP"

.PP
Definition at line 267 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.m_CaretSelectPosition = 0\fC [protected]\fP"

.PP
Definition at line 268 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.m_CaretVisible\fC [protected]\fP"

.PP
Definition at line 285 of file TMP_InputField\&.cs\&.
.SS "UIVertex [] TMPro\&.TMP_InputField\&.m_CursorVerts = null\fC [protected]\fP"

.PP
Definition at line 271 of file TMP_InputField\&.cs\&.
.SS "\fBTMP_FontAsset\fP TMPro\&.TMP_InputField\&.m_GlobalFontAsset\fC [protected]\fP"

.PP
Definition at line 510 of file TMP_InputField\&.cs\&.
.SS "\fBTMP_InputValidator\fP TMPro\&.TMP_InputField\&.m_InputValidator = null\fC [protected]\fP"

.PP
Definition at line 579 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.m_isRichTextEditingAllowed = true\fC [protected]\fP"

.PP
Definition at line 555 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.m_isSelectAll\fC [protected]\fP"

.PP
Definition at line 522 of file TMP_InputField\&.cs\&.
.SS "TouchScreenKeyboard TMPro\&.TMP_InputField\&.m_Keyboard\fC [protected]\fP"

.PP
Definition at line 88 of file TMP_InputField\&.cs\&.
.SS "Mesh TMPro\&.TMP_InputField\&.m_Mesh\fC [protected]\fP"

.PP
Definition at line 277 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.m_OnFocusSelectAll = true\fC [protected]\fP"

.PP
Definition at line 521 of file TMP_InputField\&.cs\&.
.SS "Graphic TMPro\&.TMP_InputField\&.m_Placeholder\fC [protected]\fP"

.PP
Definition at line 107 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.m_ResetOnDeActivation = true\fC [protected]\fP"

.PP
Definition at line 533 of file TMP_InputField\&.cs\&.
.SS "float TMPro\&.TMP_InputField\&.m_ScrollSensitivity = 1\&.0f\fC [protected]\fP"

.PP

.PP
Definition at line 125 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.m_StringPosition = 0\fC [protected]\fP"

.PP
Definition at line 265 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.m_StringSelectPosition = 0\fC [protected]\fP"

.PP
Definition at line 266 of file TMP_InputField\&.cs\&.
.SS "string TMPro\&.TMP_InputField\&.m_Text = string\&.Empty\fC [protected]\fP"

.PP
Input field's value\&. 
.PP
Definition at line 247 of file TMP_InputField\&.cs\&.
.SS "\fBTMP_Text\fP TMPro\&.TMP_InputField\&.m_TextComponent\fC [protected]\fP"

.PP
Definition at line 102 of file TMP_InputField\&.cs\&.
.SS "RectTransform TMPro\&.TMP_InputField\&.m_TextComponentRectTransform\fC [protected]\fP"

.PP
Definition at line 104 of file TMP_InputField\&.cs\&.
.SS "RectTransform TMPro\&.TMP_InputField\&.m_TextViewport\fC [protected]\fP"

.PP
Text Text used to display the input's value\&. 
.PP
Definition at line 97 of file TMP_InputField\&.cs\&.
.SS "Scrollbar TMPro\&.TMP_InputField\&.m_VerticalScrollbar\fC [protected]\fP"

.PP
Definition at line 110 of file TMP_InputField\&.cs\&.
.SS "\fBTMP_ScrollbarEventHandler\fP TMPro\&.TMP_InputField\&.m_VerticalScrollbarEventHandler\fC [protected]\fP"

.PP
Definition at line 113 of file TMP_InputField\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "char TMPro\&.TMP_InputField\&.asteriskChar\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 588 of file TMP_InputField\&.cs\&.
.SS "float TMPro\&.TMP_InputField\&.caretBlinkRate\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 411 of file TMP_InputField\&.cs\&.
.SS "Color? TMPro\&.TMP_InputField\&.caretColor\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 453 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.caretPosition\fC [get]\fP, \fC [set]\fP"

.PP
Get: Returns the focus position as thats the position that moves around even during selection\&. Set: Set both the anchor and focus position such that a selection doesn't happen 
.PP
Definition at line 629 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.caretPositionInternal\fC [get]\fP, \fC [set]\fP, \fC [protected]\fP"

.PP
Current position of the cursor\&. Getters are public Setters are protected 
.PP
Definition at line 613 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.caretSelectPositionInternal\fC [get]\fP, \fC [set]\fP, \fC [protected]\fP"

.PP
Definition at line 616 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.caretWidth\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 423 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.characterLimit\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 475 of file TMP_InputField\&.cs\&.
.SS "\fBCharacterValidation\fP TMPro\&.TMP_InputField\&.characterValidation\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 568 of file TMP_InputField\&.cs\&.
.SS "\fBContentType\fP TMPro\&.TMP_InputField\&.contentType\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 560 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.customCaretColor\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 455 of file TMP_InputField\&.cs\&.
.SS "\fBTMP_FontAsset\fP TMPro\&.TMP_InputField\&.fontAsset\fC [get]\fP, \fC [set]\fP"

.PP
Sets the Font Asset on both Placeholder and Input child objects\&. 
.PP
Definition at line 498 of file TMP_InputField\&.cs\&.
.SS "\fBInputType\fP TMPro\&.TMP_InputField\&.inputType\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 564 of file TMP_InputField\&.cs\&.
.SS "\fBTMP_InputValidator\fP TMPro\&.TMP_InputField\&.inputValidator\fC [get]\fP, \fC [set]\fP"

.PP
Sets the Input Validation to use a Custom Input Validation script\&. 
.PP
Definition at line 574 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.isFocused\fC [get]\fP"

.PP
Definition at line 406 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.isRichTextEditingAllowed\fC [get]\fP, \fC [set]\fP"

.PP
Is Rich Text editing allowed? 
.PP
Definition at line 550 of file TMP_InputField\&.cs\&.
.SS "TouchScreenKeyboardType TMPro\&.TMP_InputField\&.keyboardType\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 566 of file TMP_InputField\&.cs\&.
.SS "\fBLineType\fP TMPro\&.TMP_InputField\&.lineType\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 562 of file TMP_InputField\&.cs\&.
.SS "Mesh TMPro\&.TMP_InputField\&.mesh\fC [get]\fP, \fC [protected]\fP"

.PP
Definition at line 308 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.multiLine\fC [get]\fP"

.PP
Definition at line 586 of file TMP_InputField\&.cs\&.
.SS "\fBSelectionEvent\fP TMPro\&.TMP_InputField\&.onDeselect\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 465 of file TMP_InputField\&.cs\&.
.SS "\fBSubmitEvent\fP TMPro\&.TMP_InputField\&.onEndEdit\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 459 of file TMP_InputField\&.cs\&.
.SS "\fBTextSelectionEvent\fP TMPro\&.TMP_InputField\&.onEndTextSelection\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 469 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.onFocusSelectAll\fC [get]\fP, \fC [set]\fP"

.PP
Determines if the whole text will be selected when focused\&. 
.PP
Definition at line 516 of file TMP_InputField\&.cs\&.
.SS "\fBSelectionEvent\fP TMPro\&.TMP_InputField\&.onSelect\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 463 of file TMP_InputField\&.cs\&.
.SS "\fBSubmitEvent\fP TMPro\&.TMP_InputField\&.onSubmit\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 461 of file TMP_InputField\&.cs\&.
.SS "\fBTextSelectionEvent\fP TMPro\&.TMP_InputField\&.onTextSelection\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 467 of file TMP_InputField\&.cs\&.
.SS "\fBOnValidateInput\fP TMPro\&.TMP_InputField\&.onValidateInput\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 473 of file TMP_InputField\&.cs\&.
.SS "\fBOnChangeEvent\fP TMPro\&.TMP_InputField\&.onValueChanged\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 471 of file TMP_InputField\&.cs\&.
.SS "Graphic TMPro\&.TMP_InputField\&.placeholder\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 431 of file TMP_InputField\&.cs\&.
.SS "float TMPro\&.TMP_InputField\&.pointSize\fC [get]\fP, \fC [set]\fP"

.PP
Set the point size on both Placeholder and Input text object\&. 
.PP
Definition at line 483 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.readOnly\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 581 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.resetOnDeActivation\fC [get]\fP, \fC [set]\fP"

.PP
Determines if the text and caret position as well as selection will be reset when the input field is deactivated\&. 
.PP
Definition at line 528 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.restoreOriginalTextOnEscape\fC [get]\fP, \fC [set]\fP"

.PP
Controls whether the original text is restored when pressing 'ESC'\&. 
.PP
Definition at line 539 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.richText\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 583 of file TMP_InputField\&.cs\&.
.SS "float TMPro\&.TMP_InputField\&.scrollSensitivity\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 451 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.selectionAnchorPosition\fC [get]\fP, \fC [set]\fP"

.PP
Get: Returns the fixed position of selection Set: If Input\&.compositionString is 0 set the fixed position 
.PP
Definition at line 639 of file TMP_InputField\&.cs\&.
.SS "Color TMPro\&.TMP_InputField\&.selectionColor\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 457 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.selectionFocusPosition\fC [get]\fP, \fC [set]\fP"

.PP
Get: Returns the variable position of selection Set: If Input\&.compositionString is 0 set the variable position 
.PP
Definition at line 660 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.selectionStringAnchorPosition\fC [get]\fP, \fC [set]\fP"

.PP
The fixed position of the selection in the raw string which may contains rich text\&. 
.PP
Definition at line 690 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.selectionStringFocusPosition\fC [get]\fP, \fC [set]\fP"

.PP
The variable position of the selection in the raw string which may contains rich text\&. 
.PP
Definition at line 711 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.shouldHideMobileInput\fC [get]\fP, \fC [set]\fP"

.PP
Should the mobile keyboard input be hidden\&. 
.PP
Definition at line 321 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.stringPosition\fC [get]\fP, \fC [set]\fP"

.PP

.PP
Definition at line 680 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.stringPositionInternal\fC [get]\fP, \fC [set]\fP, \fC [protected]\fP"

.PP
Definition at line 614 of file TMP_InputField\&.cs\&.
.SS "int TMPro\&.TMP_InputField\&.stringSelectPositionInternal\fC [get]\fP, \fC [set]\fP, \fC [protected]\fP"

.PP
Definition at line 617 of file TMP_InputField\&.cs\&.
.SS "string TMPro\&.TMP_InputField\&.text\fC [get]\fP, \fC [set]\fP"

.PP
Input field's current text value\&. 
.PP
Definition at line 346 of file TMP_InputField\&.cs\&.
.SS "\fBTMP_Text\fP TMPro\&.TMP_InputField\&.textComponent\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 427 of file TMP_InputField\&.cs\&.
.SS "RectTransform TMPro\&.TMP_InputField\&.textViewport\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 425 of file TMP_InputField\&.cs\&.
.SS "Scrollbar TMPro\&.TMP_InputField\&.verticalScrollbar\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 434 of file TMP_InputField\&.cs\&.
.SS "bool TMPro\&.TMP_InputField\&.wasCanceled\fC [get]\fP"

.PP
Definition at line 589 of file TMP_InputField\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
