.TH "Valve.VR.SteamVR_Action_Vector2_Source" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Valve.VR.SteamVR_Action_Vector2_Source
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBValve\&.VR\&.SteamVR_Action_In_Source\fP, and \fBValve\&.VR\&.ISteamVR_Action_Vector2\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override void \fBPreinitialize\fP (\fBSteamVR_Action\fP wrappingAction, \fBSteamVR_Input_Sources\fP forInputSource)"
.br
.RI "\fB[Should not be called by user code]\fP Sets up the internals of the action source before \fBSteamVR\fP has been initialized\&. "
.ti -1c
.RI "override void \fBInitialize\fP ()"
.br
.RI "\fB[Should not be called by user code]\fP Initializes the handle for the inputSource, the action data size, and any other related \fBSteamVR\fP data\&. "
.ti -1c
.RI "override void \fBUpdateValue\fP ()"
.br
.RI "\fB[Should not be called by user code]\fP Updates the data for this action and this input source\&. Sends related events\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBchangeTolerance\fP = Mathf\&.Epsilon"
.br
.RI "The amount the axis needs to change before a change is detected "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBInputAnalogActionData_t\fP \fBactionData\fP = new \fBInputAnalogActionData_t\fP()"
.br
.ti -1c
.RI "\fBInputAnalogActionData_t\fP \fBlastActionData\fP = new \fBInputAnalogActionData_t\fP()"
.br
.ti -1c
.RI "\fBSteamVR_Action_Vector2\fP \fBvector2Action\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static uint \fBactionData_size\fP = 0"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "Vector2 \fBaxis\fP\fC [get, protected set]\fP"
.br
.RI "The current Vector2 value of the action\&. Note: Will only return non-zero if the action is also active\&. "
.ti -1c
.RI "Vector2 \fBlastAxis\fP\fC [get, protected set]\fP"
.br
.RI "The Vector2 value of the action from the previous update\&. Note: Will only return non-zero if the action is also active\&. "
.ti -1c
.RI "Vector2 \fBdelta\fP\fC [get, protected set]\fP"
.br
.RI "The Vector2 value difference between this update and the previous update\&. Note: Will only return non-zero if the action is also active\&. "
.ti -1c
.RI "Vector2 \fBlastDelta\fP\fC [get, protected set]\fP"
.br
.RI "The Vector2 value difference between the previous update and update before that\&. Note: Will only return non-zero if the action is also active\&. "
.ti -1c
.RI "override bool \fBchanged\fP\fC [get, protected set]\fP"
.br
.RI "If the Vector2 value of this action has changed more than the changeTolerance since the last update "
.ti -1c
.RI "override bool \fBlastChanged\fP\fC [get, protected set]\fP"
.br
.RI "If the Vector2 value of this action has changed more than the changeTolerance between the previous update and the update before that "
.ti -1c
.RI "override ulong \fBactiveOrigin\fP\fC [get]\fP"
.br
.RI "The handle to the origin of the component that was used to update the value for this action "
.ti -1c
.RI "override ulong \fBlastActiveOrigin\fP\fC [get]\fP"
.br
.RI "The handle to the origin of the component that was used to update the value for this action (for the previous update) "
.ti -1c
.RI "override bool \fBactive\fP\fC [get]\fP"
.br
.RI "Returns true if this action is bound and the ActionSet is active "
.ti -1c
.RI "override bool \fBactiveBinding\fP\fC [get]\fP"
.br
.RI "Returns true if the action is bound "
.ti -1c
.RI "override bool \fBlastActive\fP\fC [get, protected set]\fP"
.br
.RI "Returns true if the action was bound and the ActionSet was active during the previous update "
.ti -1c
.RI "override bool \fBlastActiveBinding\fP\fC [get]\fP"
.br
.RI "Returns true if the action was bound during the previous update "
.in -1c
.SS "Events"

.in +1c
.ti -1c
.RI "\fBSteamVR_Action_Vector2\&.AxisHandler\fP \fBonAxis\fP"
.br
.RI "Event fires when the value of the action is non-zero "
.ti -1c
.RI "\fBSteamVR_Action_Vector2\&.ActiveChangeHandler\fP \fBonActiveChange\fP"
.br
.RI "Event fires when the active state (ActionSet active and binding active) changes "
.ti -1c
.RI "\fBSteamVR_Action_Vector2\&.ActiveChangeHandler\fP \fBonActiveBindingChange\fP"
.br
.RI "Event fires when the active state of the binding changes "
.ti -1c
.RI "\fBSteamVR_Action_Vector2\&.ChangeHandler\fP \fBonChange\fP"
.br
.RI "This event fires whenever the axis changes by more than the specified changeTolerance "
.ti -1c
.RI "\fBSteamVR_Action_Vector2\&.UpdateHandler\fP \fBonUpdate\fP"
.br
.RI "Event fires when the action is updated "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 190 of file SteamVR_Action_Vector2\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "override void Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.Initialize ()\fC [virtual]\fP"

.PP
\fB[Should not be called by user code]\fP Initializes the handle for the inputSource, the action data size, and any other related \fBSteamVR\fP data\&. 
.PP
Reimplemented from \fBValve\&.VR\&.SteamVR_Action_In_Source\fP\&.
.PP
Definition at line 284 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override void Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.Preinitialize (\fBSteamVR_Action\fP wrappingAction, \fBSteamVR_Input_Sources\fP forInputSource)\fC [virtual]\fP"

.PP
\fB[Should not be called by user code]\fP Sets up the internals of the action source before \fBSteamVR\fP has been initialized\&. 
.PP
Reimplemented from \fBValve\&.VR\&.SteamVR_Action_Source\fP\&.
.PP
Definition at line 274 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override void Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.UpdateValue ()\fC [virtual]\fP"

.PP
\fB[Should not be called by user code]\fP Updates the data for this action and this input source\&. Sends related events\&. 
.PP
Implements \fBValve\&.VR\&.SteamVR_Action_In_Source\fP\&.
.PP
Definition at line 295 of file SteamVR_Action_Vector2\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBInputAnalogActionData_t\fP Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.actionData = new \fBInputAnalogActionData_t\fP()\fC [protected]\fP"

.PP
Definition at line 266 of file SteamVR_Action_Vector2\&.cs\&.
.SS "uint Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.actionData_size = 0\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 192 of file SteamVR_Action_Vector2\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.changeTolerance = Mathf\&.Epsilon"

.PP
The amount the axis needs to change before a change is detected 
.PP
Definition at line 195 of file SteamVR_Action_Vector2\&.cs\&.
.SS "\fBInputAnalogActionData_t\fP Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.lastActionData = new \fBInputAnalogActionData_t\fP()\fC [protected]\fP"

.PP
Definition at line 267 of file SteamVR_Action_Vector2\&.cs\&.
.SS "\fBSteamVR_Action_Vector2\fP Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.vector2Action\fC [protected]\fP"

.PP
Definition at line 269 of file SteamVR_Action_Vector2\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "override bool Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.active\fC [get]\fP"

.PP
Returns true if this action is bound and the ActionSet is active 
.PP
Definition at line 253 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override bool Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.activeBinding\fC [get]\fP"

.PP
Returns true if the action is bound 
.PP
Definition at line 256 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override ulong Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.activeOrigin\fC [get]\fP"

.PP
The handle to the origin of the component that was used to update the value for this action 
.PP
Definition at line 239 of file SteamVR_Action_Vector2\&.cs\&.
.SS "Vector2 Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.axis\fC [get]\fP, \fC [protected set]\fP"

.PP
The current Vector2 value of the action\&. Note: Will only return non-zero if the action is also active\&. 
.PP
Definition at line 215 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override bool Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.changed\fC [get]\fP, \fC [protected set]\fP"

.PP
If the Vector2 value of this action has changed more than the changeTolerance since the last update 
.PP
Definition at line 231 of file SteamVR_Action_Vector2\&.cs\&.
.SS "Vector2 Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.delta\fC [get]\fP, \fC [protected set]\fP"

.PP
The Vector2 value difference between this update and the previous update\&. Note: Will only return non-zero if the action is also active\&. 
.PP
Definition at line 223 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override bool Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.lastActive\fC [get]\fP, \fC [protected set]\fP"

.PP
Returns true if the action was bound and the ActionSet was active during the previous update 
.PP
Definition at line 260 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override bool Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.lastActiveBinding\fC [get]\fP"

.PP
Returns true if the action was bound during the previous update 
.PP
Definition at line 263 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override ulong Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.lastActiveOrigin\fC [get]\fP"

.PP
The handle to the origin of the component that was used to update the value for this action (for the previous update) 
.PP
Definition at line 250 of file SteamVR_Action_Vector2\&.cs\&.
.SS "Vector2 Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.lastAxis\fC [get]\fP, \fC [protected set]\fP"

.PP
The Vector2 value of the action from the previous update\&. Note: Will only return non-zero if the action is also active\&. 
.PP
Definition at line 219 of file SteamVR_Action_Vector2\&.cs\&.
.SS "override bool Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.lastChanged\fC [get]\fP, \fC [protected set]\fP"

.PP
If the Vector2 value of this action has changed more than the changeTolerance between the previous update and the update before that 
.PP
Definition at line 235 of file SteamVR_Action_Vector2\&.cs\&.
.SS "Vector2 Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.lastDelta\fC [get]\fP, \fC [protected set]\fP"

.PP
The Vector2 value difference between the previous update and update before that\&. Note: Will only return non-zero if the action is also active\&. 
.PP
Definition at line 227 of file SteamVR_Action_Vector2\&.cs\&.
.SH "Event Documentation"
.PP 
.SS "\fBSteamVR_Action_Vector2\&.ActiveChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.onActiveBindingChange"

.PP
Event fires when the active state of the binding changes 
.PP
Definition at line 204 of file SteamVR_Action_Vector2\&.cs\&.
.SS "\fBSteamVR_Action_Vector2\&.ActiveChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.onActiveChange"

.PP
Event fires when the active state (ActionSet active and binding active) changes 
.PP
Definition at line 201 of file SteamVR_Action_Vector2\&.cs\&.
.SS "\fBSteamVR_Action_Vector2\&.AxisHandler\fP Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.onAxis"

.PP
Event fires when the value of the action is non-zero 
.PP
Definition at line 198 of file SteamVR_Action_Vector2\&.cs\&.
.SS "\fBSteamVR_Action_Vector2\&.ChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.onChange"

.PP
This event fires whenever the axis changes by more than the specified changeTolerance 
.PP
Definition at line 207 of file SteamVR_Action_Vector2\&.cs\&.
.SS "\fBSteamVR_Action_Vector2\&.UpdateHandler\fP Valve\&.VR\&.SteamVR_Action_Vector2_Source\&.onUpdate"

.PP
Event fires when the action is updated 
.PP
Definition at line 210 of file SteamVR_Action_Vector2\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
