.TH "Leap.LeapTransform" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.LeapTransform \- The \fBLeapTransform\fP class represents a transform in three dimensional space\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLeapTransform\fP (\fBVector\fP \fBtranslation\fP, \fBLeapQuaternion\fP \fBrotation\fP)"
.br
.RI "Constructs a new transform from the specified translation and rotation\&. "
.ti -1c
.RI "\fBLeapTransform\fP (\fBVector\fP \fBtranslation\fP, \fBLeapQuaternion\fP \fBrotation\fP, \fBVector\fP \fBscale\fP)"
.br
.RI "Constructs a new transform from the specified translation, rotation and scale\&. "
.ti -1c
.RI "\fBVector\fP \fBTransformPoint\fP (\fBVector\fP point)"
.br
.RI "Transforms the specified position vector, applying translation, rotation and scale\&. "
.ti -1c
.RI "\fBVector\fP \fBTransformDirection\fP (\fBVector\fP direction)"
.br
.RI "Transforms the specified direction vector, applying rotation only\&. "
.ti -1c
.RI "\fBVector\fP \fBTransformVelocity\fP (\fBVector\fP velocity)"
.br
.RI "Transforms the specified velocity vector, applying rotation and scale\&. "
.ti -1c
.RI "\fBLeapQuaternion\fP \fBTransformQuaternion\fP (\fBLeapQuaternion\fP rhs)"
.br
.RI "Transforms the specified quaternion\&. Multiplies the quaternion representing the rotational part of this transform by the specified quaternion\&. "
.ti -1c
.RI "void \fBMirrorX\fP ()"
.br
.RI "Mirrors this transform's rotation and scale across the x-axis\&. Translation is not affected\&. "
.ti -1c
.RI "void \fBMirrorZ\fP ()"
.br
.RI "Mirrors this transform's rotation and scale across the z-axis\&. Translation is not affected\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static readonly \fBLeapTransform\fP \fBIdentity\fP = new \fBLeapTransform\fP(\fBVector\&.Zero\fP, LeapQuaternion\&.Identity, \fBVector\&.Ones\fP)"
.br
.RI "The identity transform\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBVector\fP \fBxBasis\fP\fC [get, set]\fP"
.br
.RI "The x-basis of the transform\&. "
.ti -1c
.RI "\fBVector\fP \fByBasis\fP\fC [get, set]\fP"
.br
.RI "The y-basis of the transform\&. "
.ti -1c
.RI "\fBVector\fP \fBzBasis\fP\fC [get, set]\fP"
.br
.RI "The z-basis of the transform\&. "
.ti -1c
.RI "\fBVector\fP \fBtranslation\fP\fC [get, set]\fP"
.br
.RI "The translation component of the transform\&. "
.ti -1c
.RI "\fBVector\fP \fBscale\fP\fC [get, set]\fP"
.br
.RI "The scale factors of the transform\&. Scale is kept separate from translation\&. "
.ti -1c
.RI "\fBLeapQuaternion\fP \fBrotation\fP\fC [get, set]\fP"
.br
.RI "The rotational component of the transform\&. "
.in -1c
.SH "Detailed Description"
.PP 
The \fBLeapTransform\fP class represents a transform in three dimensional space\&. 

Note that the \fBLeapTransform\fP class replaces the \fBLeap\&.Matrix\fP class\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 19 of file LeapTransform\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Leap\&.LeapTransform\&.LeapTransform (\fBVector\fP translation, \fBLeapQuaternion\fP rotation)"

.PP
Constructs a new transform from the specified translation and rotation\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 24 of file LeapTransform\&.cs\&.
.SS "Leap\&.LeapTransform\&.LeapTransform (\fBVector\fP translation, \fBLeapQuaternion\fP rotation, \fBVector\fP scale)"

.PP
Constructs a new transform from the specified translation, rotation and scale\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 32 of file LeapTransform\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Leap\&.LeapTransform\&.MirrorX ()"

.PP
Mirrors this transform's rotation and scale across the x-axis\&. Translation is not affected\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 94 of file LeapTransform\&.cs\&.
.SS "void Leap\&.LeapTransform\&.MirrorZ ()"

.PP
Mirrors this transform's rotation and scale across the z-axis\&. Translation is not affected\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 107 of file LeapTransform\&.cs\&.
.SS "\fBVector\fP Leap\&.LeapTransform\&.TransformDirection (\fBVector\fP direction)"

.PP
Transforms the specified direction vector, applying rotation only\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 52 of file LeapTransform\&.cs\&.
.SS "\fBVector\fP Leap\&.LeapTransform\&.TransformPoint (\fBVector\fP point)"

.PP
Transforms the specified position vector, applying translation, rotation and scale\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 44 of file LeapTransform\&.cs\&.
.SS "\fBLeapQuaternion\fP Leap\&.LeapTransform\&.TransformQuaternion (\fBLeapQuaternion\fP rhs)"

.PP
Transforms the specified quaternion\&. Multiplies the quaternion representing the rotational part of this transform by the specified quaternion\&. \fBImportant:\fP Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state\&. Neither this function nor the \fBLeapTransform\&.rotation\fP quaternion can be used after the basis vectors are set\&.
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 75 of file LeapTransform\&.cs\&.
.SS "\fBVector\fP Leap\&.LeapTransform\&.TransformVelocity (\fBVector\fP velocity)"

.PP
Transforms the specified velocity vector, applying rotation and scale\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 60 of file LeapTransform\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "readonly \fBLeapTransform\fP Leap\&.LeapTransform\&.Identity = new \fBLeapTransform\fP(\fBVector\&.Zero\fP, LeapQuaternion\&.Identity, \fBVector\&.Ones\fP)\fC [static]\fP"

.PP
The identity transform\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 239 of file LeapTransform\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "\fBLeapQuaternion\fP Leap\&.LeapTransform\&.rotation\fC [get]\fP, \fC [set]\fP"

.PP
The rotational component of the transform\&. \fBImportant:\fP Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state\&. This rotation quaternion cannot be accessed after the basis vectors are modified directly\&.
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 205 of file LeapTransform\&.cs\&.
.SS "\fBVector\fP Leap\&.LeapTransform\&.scale\fC [get]\fP, \fC [set]\fP"

.PP
The scale factors of the transform\&. Scale is kept separate from translation\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 186 of file LeapTransform\&.cs\&.
.SS "\fBVector\fP Leap\&.LeapTransform\&.translation\fC [get]\fP, \fC [set]\fP"

.PP
The translation component of the transform\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 174 of file LeapTransform\&.cs\&.
.SS "\fBVector\fP Leap\&.LeapTransform\&.xBasis\fC [get]\fP, \fC [set]\fP"

.PP
The x-basis of the transform\&. \fBImportant:\fP Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state\&. Neither the \fBTransformQuaternion()\fP function nor the \fBLeapTransform\&.rotation\fP quaternion can be used after the basis vectors are set\&.
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 125 of file LeapTransform\&.cs\&.
.SS "\fBVector\fP Leap\&.LeapTransform\&.yBasis\fC [get]\fP, \fC [set]\fP"

.PP
The y-basis of the transform\&. \fBImportant:\fP Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state\&. Neither the \fBTransformQuaternion()\fP function nor the \fBLeapTransform\&.rotation\fP quaternion can be used after the basis vectors are set\&.
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 143 of file LeapTransform\&.cs\&.
.SS "\fBVector\fP Leap\&.LeapTransform\&.zBasis\fC [get]\fP, \fC [set]\fP"

.PP
The z-basis of the transform\&. \fBImportant:\fP Modifying the basis vectors of this transform directly leaves the underlying quaternion in an indeterminate state\&. Neither the \fBTransformQuaternion()\fP function nor the \fBLeapTransform\&.rotation\fP quaternion can be used after the basis vectors are set\&.
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 161 of file LeapTransform\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
