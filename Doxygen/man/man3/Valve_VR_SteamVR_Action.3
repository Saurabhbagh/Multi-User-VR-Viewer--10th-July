.TH "Valve.VR.SteamVR_Action< SourceMap, SourceElement >" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Valve.VR.SteamVR_Action< SourceMap, SourceElement > \- This is the base level action for \fBSteamVR\fP Input Actions\&. All \fBSteamVR_Action_In\fP and \fBSteamVR_Action_Out\fP inherit from this\&. Initializes the ulong handle for the action, has some helper references that all actions will have\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits IEquatable< SteamVR_Action >, \fBValve\&.VR\&.ISteamVR_Action\fP, SteamVR_Action, and \fBValve\&.VR\&.ISteamVR_Action\fP\&.
.PP
Inherited by \fBValve\&.VR\&.SteamVR_Action_In< SourceMap, SourceElement >\fP, and \fBValve\&.VR\&.SteamVR_Action_Out< SourceMap, SourceElement >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override void \fBPreInitialize\fP (string newActionPath)"
.br
.RI "Prepares the action to be initialized\&. Creating dictionaries, finding the right existing action, etc\&. "
.ti -1c
.RI "override string \fBTryNeedsInitData\fP ()"
.br
.RI "\fB[Should not be called by user code]\fP If it looks like we aren't attached to a real action then try and find the existing action for our given path\&. "
.ti -1c
.RI "override void \fBInitialize\fP (bool createNew=false, bool throwErrors=true)"
.br
.RI "\fB[Should not be called by user code]\fP Initializes the individual sources as well as the base map itself\&. Gets the handle for the action from \fBSteamVR\fP and does any other \fBSteamVR\fP related setup that needs to be done "
.ti -1c
.RI "override \fBSteamVR_Action_Source_Map\fP \fBGetSourceMap\fP ()"
.br
.RI "\fB[Should not be called by user code]\fP Returns the underlying source map for the action\&. \fB[Should not be called by user code]\fP Returns the underlying source map for the action\&. "
.ti -1c
.RI "override bool \fBGetActive\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets a value indicating whether or not the action is currently bound and if the containing action set is active "
.ti -1c
.RI "override bool \fBGetActiveBinding\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets a value indicating whether or not the action is currently bound "
.ti -1c
.RI "override bool \fBGetLastActive\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets the value from the previous update indicating whether or not the action was currently bound and if the containing action set was active "
.ti -1c
.RI "override bool \fBGetLastActiveBinding\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets the value from the previous update indicating whether or not the action is currently bound "
.ti -1c
.RI "\fBSteamVR_Action\fP ()"
.br
.ti -1c
.RI "CreateType \fBGetCopy< CreateType >\fP ()"
.br
.RI "\fB[Should not be called by user code]\fP Gets a copy of the underlying source map so we're always using the same underlying event data "
.ti -1c
.RI "abstract string \fBTryNeedsInitData\fP ()"
.br
.ti -1c
.RI "abstract void \fBPreInitialize\fP (string newActionPath)"
.br
.RI "Prepares the action to be initialized\&. Creating dictionaries, finding the right existing action, etc\&. "
.ti -1c
.RI "abstract void \fBInitialize\fP (bool createNew=false, bool throwNotSetError=true)"
.br
.RI "Initializes the individual sources as well as the base map itself\&. Gets the handle for the action from \fBSteamVR\fP and does any other \fBSteamVR\fP related setup that needs to be done "
.ti -1c
.RI "abstract float \fBGetTimeLastChanged\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets the last timestamp this action was changed\&. (by Time\&.realtimeSinceStartup) "
.ti -1c
.RI "abstract \fBSteamVR_Action_Source_Map\fP \fBGetSourceMap\fP ()"
.br
.ti -1c
.RI "abstract bool \fBGetActive\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets a value indicating whether or not the action is currently bound and if the containing action set is active "
.ti -1c
.RI "bool \fBGetSetActive\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets a value indicating whether or not the containing action set is active "
.ti -1c
.RI "abstract bool \fBGetActiveBinding\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets a value indicating whether or not the action is currently bound "
.ti -1c
.RI "abstract bool \fBGetLastActive\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets the value from the previous update indicating whether or not the action is currently bound and if the containing action set is active "
.ti -1c
.RI "abstract bool \fBGetLastActiveBinding\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Gets the value from the previous update indicating whether or not the action is currently bound "
.ti -1c
.RI "string \fBGetPath\fP ()"
.br
.RI "Returns the full action path for this action\&. "
.ti -1c
.RI "abstract bool \fBIsUpdating\fP (\fBSteamVR_Input_Sources\fP inputSource)"
.br
.RI "Returns true if the data for this action is being updated for the specified input source\&. This can be triggered by querying the data "
.ti -1c
.RI "override int \fBGetHashCode\fP ()"
.br
.RI "Creates a hashcode from the full action path of this action "
.ti -1c
.RI "bool \fBEquals\fP (\fBSteamVR_Action\fP other)"
.br
.RI "Compares two \fBSteamVR_Actions\fP by their action path instead of references "
.ti -1c
.RI "override bool \fBEquals\fP (object other)"
.br
.RI "Compares two \fBSteamVR_Actions\fP by their action path instead of references "
.ti -1c
.RI "string \fBGetShortName\fP ()"
.br
.RI "Gets just the name of this action\&. The last part of the path for this action\&. Removes action set, and direction\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static CreateType \fBCreate< CreateType >\fP (string newActionPath)"
.br
.RI "\fB[Should not be called by user code]\fP Creates an actual action that will later be called by user code\&. "
.ti -1c
.RI "static CreateType \fBCreateUninitialized< CreateType >\fP (string setName, \fBSteamVR_ActionDirections\fP \fBdirection\fP, string newActionName, bool caseSensitive)"
.br
.RI "\fB[Should not be called by user code]\fP Creates an uninitialized action that can be saved without being attached to a real action "
.ti -1c
.RI "static CreateType \fBCreateUninitialized< CreateType >\fP (string \fBactionPath\fP, bool caseSensitive)"
.br
.RI "\fB[Should not be called by user code]\fP Creates an uninitialized action that can be saved without being attached to a real action "
.ti -1c
.RI "static bool \fBoperator !=\fP (\fBSteamVR_Action\fP action1, \fBSteamVR_Action\fP action2)"
.br
.RI "Compares two \fBSteamVR_Actions\fP by their action path\&. "
.ti -1c
.RI "static bool \fBoperator==\fP (\fBSteamVR_Action\fP action1, \fBSteamVR_Action\fP action2)"
.br
.RI "Compares two \fBSteamVR_Actions\fP by their action path\&. "
.ti -1c
.RI "static \fBSteamVR_Action\fP \fBFindExistingActionForPartialPath\fP (string path)"
.br
.RI "Tries to find an existing action matching some subsection of an action path\&. More useful functions in \fBSteamVR_Input\fP\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static bool \fBstartUpdatingSourceOnAccess\fP = true"
.br
.RI "\fBNot recommended\&.\fP Determines if we should do a lazy-loading style of updating actions where we don't check for their data until the code asks for it\&. Note: You will have to manually activate actions otherwise\&. Not recommended\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBCreateUninitialized\fP (string newActionPath, bool caseSensitive)"
.br
.ti -1c
.RI "override void \fBCreateUninitialized\fP (string newActionSet, \fBSteamVR_ActionDirections\fP \fBdirection\fP, string newAction, bool caseSensitive)"
.br
.ti -1c
.RI "override void \fBInitializeCopy\fP (string newActionPath, \fBSteamVR_Action_Source_Map\fP newData)"
.br
.ti -1c
.RI "void \fBInitAfterDeserialize\fP ()"
.br
.ti -1c
.RI "abstract void \fBInitializeCopy\fP (string newActionPath, \fBSteamVR_Action_Source_Map\fP newData)"
.br
.ti -1c
.RI "abstract void \fBCreateUninitialized\fP (string newActionPath, bool caseSensitive)"
.br
.ti -1c
.RI "abstract void \fBCreateUninitialized\fP (string newActionSet, \fBSteamVR_ActionDirections\fP \fBdirection\fP, string newAction, bool caseSensitive)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "SourceMap \fBsourceMap\fP"
.br
.RI "The map to the source elements, a dictionary of source elements\&. Should be accessed through the action indexer "
.ti -1c
.RI "bool \fBinitialized\fP = false"
.br
.ti -1c
.RI "string \fBactionPath\fP"
.br
.ti -1c
.RI "bool \fBneedsReinit\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "virtual SourceElement \fBthis[SteamVR_Input_Sources inputSource]\fP\fC [get]\fP"
.br
.RI "Access this action restricted to individual input sources\&. "
.ti -1c
.RI "override string \fBfullPath\fP\fC [get]\fP"
.br
.RI "The full string path for this action "
.ti -1c
.RI "override ulong \fBhandle\fP\fC [get]\fP"
.br
.RI "The underlying handle for this action used for native \fBSteamVR\fP Input calls "
.ti -1c
.RI "override \fBSteamVR_ActionSet\fP \fBactionSet\fP\fC [get]\fP"
.br
.RI "The actionset this action is contained within "
.ti -1c
.RI "override \fBSteamVR_ActionDirections\fP \fBdirection\fP\fC [get]\fP"
.br
.RI "The action direction of this action (in for input - most actions, out for output - mainly haptics) "
.ti -1c
.RI "override bool \fBactive\fP\fC [get]\fP"
.br
.RI "\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action is bound and the actionset is active "
.ti -1c
.RI "override bool \fBlastActive\fP\fC [get]\fP"
.br
.RI "\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action was bound and the ActionSet was active during the previous update "
.ti -1c
.RI "override bool \fBactiveBinding\fP\fC [get]\fP"
.br
.RI "\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action is bound "
.ti -1c
.RI "override bool \fBlastActiveBinding\fP\fC [get]\fP"
.br
.RI "\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action was bound at the previous update "
.ti -1c
.RI "abstract string \fBfullPath\fP\fC [get]\fP"
.br
.RI "The full string path for this action "
.ti -1c
.RI "abstract ulong \fBhandle\fP\fC [get]\fP"
.br
.RI "The underlying handle for this action used for native \fBSteamVR\fP Input calls "
.ti -1c
.RI "abstract \fBSteamVR_ActionSet\fP \fBactionSet\fP\fC [get]\fP"
.br
.RI "The actionset this action is contained within "
.ti -1c
.RI "abstract \fBSteamVR_ActionDirections\fP \fBdirection\fP\fC [get]\fP"
.br
.RI "The action direction of this action (in for input - most actions, out for output - mainly haptics) "
.ti -1c
.RI "bool \fBsetActive\fP\fC [get]\fP"
.br
.RI "\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action set that contains this action is active for Any input source\&. "
.ti -1c
.RI "abstract bool \fBactive\fP\fC [get]\fP"
.br
.RI "\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action is bound and the actionset is active "
.ti -1c
.RI "abstract bool \fBactiveBinding\fP\fC [get]\fP"
.br
.RI "\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action is bound "
.ti -1c
.RI "abstract bool \fBlastActive\fP\fC [get]\fP"
.br
.RI "\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action was bound and the actionset was active at the previous update "
.ti -1c
.RI "abstract bool \fBlastActiveBinding\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is the base level action for \fBSteamVR\fP Input Actions\&. All \fBSteamVR_Action_In\fP and \fBSteamVR_Action_Out\fP inherit from this\&. Initializes the ulong handle for the action, has some helper references that all actions will have\&. 


.PP
\fBType Constraints\fP
.TP
\fISourceMap\fP : \fI\fBSteamVR_Action_Source_Map\fP<SourceElement>\fP
.TP
\fISourceMap\fP : \fInew()\fP
.TP
\fISourceElement\fP : \fI\fBSteamVR_Action_Source\fP\fP
.TP
\fISourceElement\fP : \fInew()\fP
.PP
Definition at line 26 of file SteamVR_Action\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.\fBSteamVR_Action\fP ()"

.PP
Definition at line 275 of file SteamVR_Action\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "static CreateType \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.\fBCreate\fP< CreateType > (string newActionPath)\fC [static]\fP"

.PP
\fB[Should not be called by user code]\fP Creates an actual action that will later be called by user code\&. 
.PP
\fBType Constraints\fP
.TP
\fICreateType\fP : \fISteamVR_Action\fP
.TP
\fICreateType\fP : \fInew()\fP
.PP
Definition at line 291 of file SteamVR_Action\&.cs\&.
.SS "override void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.CreateUninitialized (string newActionPath, bool caseSensitive)\fC [protected]\fP"

.PP
Definition at line 105 of file SteamVR_Action\&.cs\&.
.SS "override void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.CreateUninitialized (string newActionSet, \fBSteamVR_ActionDirections\fP direction, string newAction, bool caseSensitive)\fC [protected]\fP"

.PP
Definition at line 116 of file SteamVR_Action\&.cs\&.
.SS "abstract void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.CreateUninitialized (string newActionPath, bool caseSensitive)\fC [protected]\fP, \fC [pure virtual]\fP"

.SS "abstract void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.CreateUninitialized (string newActionSet, \fBSteamVR_ActionDirections\fP direction, string newAction, bool caseSensitive)\fC [protected]\fP, \fC [pure virtual]\fP"

.SS "static CreateType \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.\fBCreateUninitialized\fP< CreateType > (string setName, \fBSteamVR_ActionDirections\fP direction, string newActionName, bool caseSensitive)\fC [static]\fP"

.PP
\fB[Should not be called by user code]\fP Creates an uninitialized action that can be saved without being attached to a real action 
.PP
\fBType Constraints\fP
.TP
\fICreateType\fP : \fISteamVR_Action\fP
.TP
\fICreateType\fP : \fInew()\fP
.PP
Definition at line 301 of file SteamVR_Action\&.cs\&.
.SS "static CreateType \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.\fBCreateUninitialized\fP< CreateType > (string actionPath, bool caseSensitive)\fC [static]\fP"

.PP
\fB[Should not be called by user code]\fP Creates an uninitialized action that can be saved without being attached to a real action 
.PP
\fBType Constraints\fP
.TP
\fICreateType\fP : \fISteamVR_Action\fP
.TP
\fICreateType\fP : \fInew()\fP
.PP
Definition at line 311 of file SteamVR_Action\&.cs\&.
.SS "bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.Equals (\fBSteamVR_Action\fP< SourceMap, SourceElement > other)"

.PP
Compares two \fBSteamVR_Actions\fP by their action path instead of references 
.PP
Definition at line 444 of file SteamVR_Action\&.cs\&.
.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.Equals (object other)"

.PP
Compares two \fBSteamVR_Actions\fP by their action path instead of references 
.PP
Definition at line 455 of file SteamVR_Action\&.cs\&.
.SS "static \fBSteamVR_Action\fP \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.FindExistingActionForPartialPath (string path)\fC [static]\fP"

.PP
Tries to find an existing action matching some subsection of an action path\&. More useful functions in \fBSteamVR_Input\fP\&. 
.PP
Definition at line 503 of file SteamVR_Action\&.cs\&.
.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetActive (\fBSteamVR_Input_Sources\fP inputSource)"

.PP
Gets a value indicating whether or not the action is currently bound and if the containing action set is active 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.PP
Implements \fBValve\&.VR\&.ISteamVR_Action\fP\&.
.PP
Definition at line 237 of file SteamVR_Action\&.cs\&.
.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetActive (\fBSteamVR_Input_Sources\fP inputSource)\fC [pure virtual]\fP"

.PP
Gets a value indicating whether or not the action is currently bound and if the containing action set is active 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.PP
Implements \fBValve\&.VR\&.ISteamVR_Action\fP\&.
.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetActiveBinding (\fBSteamVR_Input_Sources\fP inputSource)"

.PP
Gets a value indicating whether or not the action is currently bound 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.PP
Definition at line 246 of file SteamVR_Action\&.cs\&.
.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetActiveBinding (\fBSteamVR_Input_Sources\fP inputSource)\fC [pure virtual]\fP"

.PP
Gets a value indicating whether or not the action is currently bound 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.SS "CreateType \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetCopy< CreateType > ()"

.PP
\fB[Should not be called by user code]\fP Gets a copy of the underlying source map so we're always using the same underlying event data 
.PP
\fBType Constraints\fP
.TP
\fICreateType\fP : \fISteamVR_Action\fP
.TP
\fICreateType\fP : \fInew()\fP
.PP
Definition at line 321 of file SteamVR_Action\&.cs\&.
.SS "override int \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetHashCode ()"

.PP
Creates a hashcode from the full action path of this action 
.PP
Definition at line 433 of file SteamVR_Action\&.cs\&.
.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetLastActive (\fBSteamVR_Input_Sources\fP inputSource)"

.PP
Gets the value from the previous update indicating whether or not the action was currently bound and if the containing action set was active 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.PP
Definition at line 256 of file SteamVR_Action\&.cs\&.
.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetLastActive (\fBSteamVR_Input_Sources\fP inputSource)\fC [pure virtual]\fP"

.PP
Gets the value from the previous update indicating whether or not the action is currently bound and if the containing action set is active 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetLastActiveBinding (\fBSteamVR_Input_Sources\fP inputSource)"

.PP
Gets the value from the previous update indicating whether or not the action is currently bound 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.PP
Definition at line 265 of file SteamVR_Action\&.cs\&.
.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetLastActiveBinding (\fBSteamVR_Input_Sources\fP inputSource)\fC [pure virtual]\fP"

.PP
Gets the value from the previous update indicating whether or not the action is currently bound 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.SS "string \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetPath ()"

.PP
Returns the full action path for this action\&. 
.PP
Definition at line 419 of file SteamVR_Action\&.cs\&.
.SS "bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetSetActive (\fBSteamVR_Input_Sources\fP inputSource)"

.PP
Gets a value indicating whether or not the containing action set is active 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The device you would like to get data from\&. Any if the action is not device specific\&.
.RE
.PP

.PP
Definition at line 394 of file SteamVR_Action\&.cs\&.
.SS "string \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetShortName ()"

.PP
Gets just the name of this action\&. The last part of the path for this action\&. Removes action set, and direction\&. 
.PP
Implements \fBValve\&.VR\&.ISteamVR_Action\fP\&.
.PP
Definition at line 532 of file SteamVR_Action\&.cs\&.
.SS "override \fBSteamVR_Action_Source_Map\fP \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetSourceMap ()"

.PP
\fB[Should not be called by user code]\fP Returns the underlying source map for the action\&. \fB[Should not be called by user code]\fP Returns the underlying source map for the action\&. 
.PP
Definition at line 199 of file SteamVR_Action\&.cs\&.
.SS "abstract \fBSteamVR_Action_Source_Map\fP \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetSourceMap ()\fC [pure virtual]\fP"

.SS "abstract float \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.GetTimeLastChanged (\fBSteamVR_Input_Sources\fP inputSource)\fC [pure virtual]\fP"

.PP
Gets the last timestamp this action was changed\&. (by Time\&.realtimeSinceStartup) 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The input source to use to select the last changed time
.RE
.PP

.PP
Implemented in \fBValve\&.VR\&.SteamVR_Action_In< SourceMap, SourceElement >\fP\&.
.SS "void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.InitAfterDeserialize ()\fC [protected]\fP"

.PP
Definition at line 212 of file SteamVR_Action\&.cs\&.
.SS "override void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.Initialize (bool createNew = \fCfalse\fP, bool throwErrors = \fCtrue\fP)"

.PP
\fB[Should not be called by user code]\fP Initializes the individual sources as well as the base map itself\&. Gets the handle for the action from \fBSteamVR\fP and does any other \fBSteamVR\fP related setup that needs to be done 
.PP
Definition at line 159 of file SteamVR_Action\&.cs\&.
.SS "abstract void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.Initialize (bool createNew = \fCfalse\fP, bool throwNotSetError = \fCtrue\fP)\fC [pure virtual]\fP"

.PP
Initializes the individual sources as well as the base map itself\&. Gets the handle for the action from \fBSteamVR\fP and does any other \fBSteamVR\fP related setup that needs to be done 
.SS "override void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.InitializeCopy (string newActionPath, \fBSteamVR_Action_Source_Map\fP newData)\fC [protected]\fP"

.PP
Definition at line 204 of file SteamVR_Action\&.cs\&.
.SS "abstract void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.InitializeCopy (string newActionPath, \fBSteamVR_Action_Source_Map\fP newData)\fC [protected]\fP, \fC [pure virtual]\fP"

.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.IsUpdating (\fBSteamVR_Input_Sources\fP inputSource)\fC [pure virtual]\fP"

.PP
Returns true if the data for this action is being updated for the specified input source\&. This can be triggered by querying the data 
.PP
Implemented in \fBValve\&.VR\&.SteamVR_Action_In< SourceMap, SourceElement >\fP\&.
.SS "static bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.operator != (\fBSteamVR_Action\fP< SourceMap, SourceElement > action1, \fBSteamVR_Action\fP< SourceMap, SourceElement > action2)\fC [static]\fP"

.PP
Compares two \fBSteamVR_Actions\fP by their action path\&. 
.PP
Definition at line 479 of file SteamVR_Action\&.cs\&.
.SS "static bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.operator== (\fBSteamVR_Action\fP< SourceMap, SourceElement > action1, \fBSteamVR_Action\fP< SourceMap, SourceElement > action2)\fC [static]\fP"

.PP
Compares two \fBSteamVR_Actions\fP by their action path\&. 
.PP
Definition at line 487 of file SteamVR_Action\&.cs\&.
.SS "override void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.PreInitialize (string newActionPath)"

.PP
Prepares the action to be initialized\&. Creating dictionaries, finding the right existing action, etc\&. 
.PP
Definition at line 95 of file SteamVR_Action\&.cs\&.
.SS "abstract void \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.PreInitialize (string newActionPath)\fC [pure virtual]\fP"

.PP
Prepares the action to be initialized\&. Creating dictionaries, finding the right existing action, etc\&. 
.SS "override string \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.TryNeedsInitData ()"

.PP
\fB[Should not be called by user code]\fP If it looks like we aren't attached to a real action then try and find the existing action for our given path\&. 
.PP
Definition at line 130 of file SteamVR_Action\&.cs\&.
.SS "abstract string \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.TryNeedsInitData ()\fC [pure virtual]\fP"

.SH "Member Data Documentation"
.PP 
.SS "string \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.actionPath\fC [protected]\fP"

.PP
Definition at line 278 of file SteamVR_Action\&.cs\&.
.SS "bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.initialized = false\fC [protected]\fP"

.PP
Definition at line 90 of file SteamVR_Action\&.cs\&.
.SS "bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.needsReinit\fC [protected]\fP"

.PP
Definition at line 281 of file SteamVR_Action\&.cs\&.
.SS "SourceMap \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.sourceMap\fC [protected]\fP"

.PP
The map to the source elements, a dictionary of source elements\&. Should be accessed through the action indexer 
.PP
Definition at line 32 of file SteamVR_Action\&.cs\&.
.SS "bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.startUpdatingSourceOnAccess = true\fC [static]\fP"

.PP
\fBNot recommended\&.\fP Determines if we should do a lazy-loading style of updating actions where we don't check for their data until the code asks for it\&. Note: You will have to manually activate actions otherwise\&. Not recommended\&. 
.PP
Definition at line 286 of file SteamVR_Action\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "override \fBSteamVR_ActionSet\fP \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.actionSet\fC [get]\fP"

.PP
The actionset this action is contained within 
.PP
Definition at line 60 of file SteamVR_Action\&.cs\&.
.SS "abstract \fBSteamVR_ActionSet\fP \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.actionSet\fC [get]\fP"

.PP
The actionset this action is contained within 
.PP
Definition at line 340 of file SteamVR_Action\&.cs\&.
.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.active\fC [get]\fP"

.PP
\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action is bound and the actionset is active 
.PP
Definition at line 77 of file SteamVR_Action\&.cs\&.
.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.active\fC [get]\fP"

.PP
\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action is bound and the actionset is active 
.PP
Definition at line 349 of file SteamVR_Action\&.cs\&.
.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.activeBinding\fC [get]\fP"

.PP
\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action is bound 
.PP
Definition at line 83 of file SteamVR_Action\&.cs\&.
.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.activeBinding\fC [get]\fP"

.PP
\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action is bound 
.PP
Definition at line 352 of file SteamVR_Action\&.cs\&.
.SS "override \fBSteamVR_ActionDirections\fP \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.direction\fC [get]\fP"

.PP
The action direction of this action (in for input - most actions, out for output - mainly haptics) 
.PP
Definition at line 69 of file SteamVR_Action\&.cs\&.
.SS "abstract \fBSteamVR_ActionDirections\fP \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.direction\fC [get]\fP"

.PP
The action direction of this action (in for input - most actions, out for output - mainly haptics) 
.PP
Definition at line 343 of file SteamVR_Action\&.cs\&.
.SS "override string \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.fullPath\fC [get]\fP"

.PP
The full string path for this action 
.PP
Definition at line 48 of file SteamVR_Action\&.cs\&.
.SS "abstract string \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.fullPath\fC [get]\fP"

.PP
The full string path for this action 
.PP
Definition at line 334 of file SteamVR_Action\&.cs\&.
.SS "override ulong \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.handle\fC [get]\fP"

.PP
The underlying handle for this action used for native \fBSteamVR\fP Input calls 
.PP
Definition at line 56 of file SteamVR_Action\&.cs\&.
.SS "abstract ulong \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.handle\fC [get]\fP"

.PP
The underlying handle for this action used for native \fBSteamVR\fP Input calls 
.PP
Definition at line 337 of file SteamVR_Action\&.cs\&.
.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.lastActive\fC [get]\fP"

.PP
\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action was bound and the ActionSet was active during the previous update 
.PP
Definition at line 80 of file SteamVR_Action\&.cs\&.
.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.lastActive\fC [get]\fP"

.PP
\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action was bound and the actionset was active at the previous update 
.PP
Definition at line 355 of file SteamVR_Action\&.cs\&.
.SS "override bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.lastActiveBinding\fC [get]\fP"

.PP
\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action was bound at the previous update 
.PP
Definition at line 86 of file SteamVR_Action\&.cs\&.
.SS "abstract bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.lastActiveBinding\fC [get]\fP"

.PP

.PP
Definition at line 360 of file SteamVR_Action\&.cs\&.
.SS "bool \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.setActive\fC [get]\fP"

.PP
\fB[Shortcut to: \fBSteamVR_Input_Sources\&.Any\fP]\fP Returns true if the action set that contains this action is active for Any input source\&. 
.PP
Definition at line 346 of file SteamVR_Action\&.cs\&.
.SS "virtual SourceElement \fBValve\&.VR\&.SteamVR_Action\fP< SourceMap, SourceElement >\&.this[\fBSteamVR_Input_Sources\fP inputSource]\fC [get]\fP"

.PP
Access this action restricted to individual input sources\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinputSource\fP The input source to access for this action
.RE
.PP

.PP
Definition at line 39 of file SteamVR_Action\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
