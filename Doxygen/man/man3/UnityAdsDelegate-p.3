.TH "<UnityAdsDelegate>" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
<UnityAdsDelegate>
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <UnityAds\&.h>\fP
.PP
Inherits <NSObject>\&.
.PP
Inherited by \fB<UnityAdsExtendedDelegate>\fP, and \fB<UnityAdsUnityDelegate>\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(void) \- \fBunityAdsReady:\fP"
.br
.ti -1c
.RI "(void) \- \fBunityAdsDidError:withMessage:\fP"
.br
.ti -1c
.RI "(void) \- \fBunityAdsDidStart:\fP"
.br
.ti -1c
.RI "(void) \- \fBunityAdsDidFinish:withFinishState:\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fC\fBUnityAdsDelegate\fP\fP protocol defines the required methods for receiving messages from \fBUnityAds\fP\&. Must be implemented by the hosting app\&. The unityAdsReady: method is called when it's possible to show an ad\&. All other methods are used to provide notifications of events of the ad lifecycle\&. 
.PP
\fBNote:\fP
.RS 4
On initialization, there are ready (or error) callbacks for each placement attached to the game identifier\&. 
.RE
.PP

.PP
Definition at line 107 of file UnityAds\&.h\&.
.SH "Method Documentation"
.PP 
.SS "\- (void) unityAdsDidError: (UnityAdsError) error(NSString *) message"
Called when \fC\fBUnityAds\fP\fP encounters an error\&. All errors will be logged but this method can be used as an additional debugging aid\&. This callback can also be used for collecting statistics from different error scenarios\&.
.PP
\fBParameters:\fP
.RS 4
\fIerror\fP A \fCUnityAdsError\fP error enum value indicating the type of error encountered\&. 
.br
\fImessage\fP A human readable string indicating the type of error encountered\&. 
.RE
.PP

.SS "\- (void) unityAdsDidFinish: (NSString *) placementId(UnityAdsFinishState) state"
Called after the ad has closed\&.
.PP
\fBParameters:\fP
.RS 4
\fIplacementId\fP The ID of the placement that has finished, as defined in Unity Ads admin tools\&. 
.br
\fIstate\fP An enum value indicating the finish state of the ad\&. Possible values are \fCCompleted\fP, \fCSkipped\fP, and \fCError\fP\&. 
.RE
.PP

.SS "\- (void) unityAdsDidStart: (NSString *) placementId"
Called on a successful start of advertisement after calling the \fC\fBUnityAds\fP\fP \fCshow:\fP method\&.
.PP
\fBWarning:\fP
.RS 4
If there are errors in starting the advertisement, this method may never be called\&. Unity Ads will directly call \fCunityAdsDidFinish:withFinishState:\fP with error status\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIplacementId\fP The ID of the placement that has started, as defined in Unity Ads admin tools\&. 
.RE
.PP

.SS "\- (void) unityAdsReady: (NSString *) placementId"
Called when \fC\fBUnityAds\fP\fP is ready to show an ad\&. After this callback you can call the \fC\fBUnityAds\fP\fP \fCshow:\fP method for this placement\&. Note that sometimes placement might no longer be ready due to exceptional reasons\&. These situations will give no new callbacks\&.
.PP
\fBWarning:\fP
.RS 4
To avoid error situations, it is always best to check \fCisReady\fP method status before calling show\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIplacementId\fP The ID of the placement that is ready to show, as defined in Unity Ads admin tools\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
