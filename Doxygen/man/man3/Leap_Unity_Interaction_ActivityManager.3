.TH "Leap.Unity.Interaction.ActivityManager< T >" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Unity.Interaction.ActivityManager< T > \- \fBActivityManager\fP is a wrapper around PhysX sphere queries for arbitrary \fBUnity\fP objects\&. 'Active' objects are objects found in the latest query\&. It's also possible to get the sets of objects that just began or stopped being active since the last query; this requires enabling the trackStateChanges setting\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBActivityManager\fP (float \fBactivationRadius\fP, Func< Collider, T > \fBfilter\fP)"
.br
.ti -1c
.RI "void \fBUpdateActivityQuery\fP (Vector3? queryPosition, List< \fBLeapSpace\fP > spaces=null)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBactivationRadius\fP"
.br
.RI "The radius of the query in world-space\&. "
.ti -1c
.RI "int \fBactivationLayerMask\fP = ~0"
.br
.RI "The layer mask against which to query for active objects\&. The \fBActivityManager\fP will only find objects in these layers\&. By default, the \fBActivityManager\fP will query all layers, but this is highly inefficient\&. "
.ti -1c
.RI "Func< int > \fBactivationLayerFunction\fP = null"
.br
.RI "This function, if set to a non-null value, overrides the activationLayerMask setting with the result of calling the function\&. Use this if your application state will modify the layer mask to use for the activity manager\&. "
.ti -1c
.RI "Func< Collider, T > \fBfilter\fP = null"
.br
.RI "This is the function by which the \fBActivityManager\fP converts the Colliders it finds through PhysX queries into Ts to be placed in the ActiveObjects set\&. "
.ti -1c
.RI "bool \fBtrackStateChanges\fP = false"
.br
.RI "If set to true, BeganActive and EndedActive will be calculated and populated every time a new query occurs\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "HashSet< T > \fBActiveObjects\fP\fC [get]\fP"
.br
.RI "Returns the currently 'active' objects -- objects that were within the latest sphere query\&. "
.ti -1c
.RI "HashSet< T > \fBBeganActive\fP\fC [get]\fP"
.br
.RI "If trackStateChanges is enabled (on by default), contains the objects that just started being active since the last query\&. "
.ti -1c
.RI "HashSet< T > \fBEndedActive\fP\fC [get]\fP"
.br
.RI "If trackStateChanges is enabled (on by default), contains the objects that just stopped being active since the last query\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBActivityManager\fP is a wrapper around PhysX sphere queries for arbitrary \fBUnity\fP objects\&. 'Active' objects are objects found in the latest query\&. It's also possible to get the sets of objects that just began or stopped being active since the last query; this requires enabling the trackStateChanges setting\&. 


.PP
Definition at line 24 of file ActivityManager\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.\fBActivityManager\fP (float activationRadius, Func< Collider, T > filter)"

.PP
Definition at line 85 of file ActivityManager\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.UpdateActivityQuery (Vector3? queryPosition, List< \fBLeapSpace\fP > spaces = \fCnull\fP)"

.PP
Definition at line 92 of file ActivityManager\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "Func<int> \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.activationLayerFunction = null"

.PP
This function, if set to a non-null value, overrides the activationLayerMask setting with the result of calling the function\&. Use this if your application state will modify the layer mask to use for the activity manager\&. 
.PP
Definition at line 45 of file ActivityManager\&.cs\&.
.SS "int \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.activationLayerMask = ~0"

.PP
The layer mask against which to query for active objects\&. The \fBActivityManager\fP will only find objects in these layers\&. By default, the \fBActivityManager\fP will query all layers, but this is highly inefficient\&. See \fBSingleLayer\fP and use bitwise operations on their layerMasks for a convenient way to express layer masks\&. \fBSingleLayer\fP 
.PP
Definition at line 38 of file ActivityManager\&.cs\&.
.SS "float \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.activationRadius"

.PP
The radius of the query in world-space\&. 
.PP
Definition at line 27 of file ActivityManager\&.cs\&.
.SS "Func<Collider, T> \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.filter = null"

.PP
This is the function by which the \fBActivityManager\fP converts the Colliders it finds through PhysX queries into Ts to be placed in the ActiveObjects set\&. Only objects with at least one Collider for which this function returns a non-null T will be added to the ActiveObjects set\&. 
.PP
Definition at line 54 of file ActivityManager\&.cs\&.
.SS "bool \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.trackStateChanges = false"

.PP
If set to true, BeganActive and EndedActive will be calculated and populated every time a new query occurs\&. 
.PP
Definition at line 66 of file ActivityManager\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "HashSet<T> \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.ActiveObjects\fC [get]\fP"

.PP
Returns the currently 'active' objects -- objects that were within the latest sphere query\&. 
.PP
Definition at line 60 of file ActivityManager\&.cs\&.
.SS "HashSet<T> \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.BeganActive\fC [get]\fP"

.PP
If trackStateChanges is enabled (on by default), contains the objects that just started being active since the last query\&. 
.PP
Definition at line 73 of file ActivityManager\&.cs\&.
.SS "HashSet<T> \fBLeap\&.Unity\&.Interaction\&.ActivityManager\fP< T >\&.EndedActive\fC [get]\fP"

.PP
If trackStateChanges is enabled (on by default), contains the objects that just stopped being active since the last query\&. 
.PP
Definition at line 81 of file ActivityManager\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
