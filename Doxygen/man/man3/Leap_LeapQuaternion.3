.TH "Leap.LeapQuaternion" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.LeapQuaternion \- The \fBLeapQuaternion\fP struct represents a rotation in three-dimensional space\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits IEquatable< LeapQuaternion >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLeapQuaternion\fP (float \fBx\fP, float \fBy\fP, float \fBz\fP, float \fBw\fP)"
.br
.RI "Creates a new \fBLeapQuaternion\fP with the specified component values\&. "
.ti -1c
.RI "\fBLeapQuaternion\fP (\fBLeapQuaternion\fP quaternion)"
.br
.RI "Copies the specified \fBLeapQuaternion\fP\&. "
.ti -1c
.RI "\fBLeapQuaternion\fP (\fBLeapInternal\&.LEAP_QUATERNION\fP quaternion)"
.br
.RI "Copies the specified LEAP_QUATERNION\&. "
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.RI "Returns a string containing this quaternion in a human readable format: (x, y, z)\&. "
.ti -1c
.RI "bool \fBEquals\fP (\fBLeapQuaternion\fP v)"
.br
.RI "Compare \fBLeapQuaternion\fP equality component-wise\&. "
.ti -1c
.RI "override bool \fBEquals\fP (\fBObject\fP obj)"
.br
.ti -1c
.RI "bool \fBIsValid\fP ()"
.br
.RI "Returns true if all of the quaternion's components are finite\&. If any component is NaN or infinite, then this returns false\&. "
.ti -1c
.RI "\fBLeapQuaternion\fP \fBMultiply\fP (\fBLeapQuaternion\fP rhs)"
.br
.RI "Concatenates the rotation described by this quaternion with the one provided and returns the result\&. "
.ti -1c
.RI "override int \fBGetHashCode\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "float \fBx\fP"
.br
.ti -1c
.RI "float \fBy\fP"
.br
.ti -1c
.RI "float \fBz\fP"
.br
.ti -1c
.RI "float \fBw\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static readonly \fBLeapQuaternion\fP \fBIdentity\fP = new \fBLeapQuaternion\fP(0, 0, 0, 1)"
.br
.RI "The identity quaternion\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "float \fBMagnitude\fP\fC [get]\fP"
.br
.RI "The magnitude, or length, of this quaternion\&. "
.ti -1c
.RI "float \fBMagnitudeSquared\fP\fC [get]\fP"
.br
.RI "The square of the magnitude, or length, of this quaternion\&. "
.ti -1c
.RI "\fBLeapQuaternion\fP \fBNormalized\fP\fC [get]\fP"
.br
.RI "A normalized copy of this quaternion\&. "
.in -1c
.SH "Detailed Description"
.PP 
The \fBLeapQuaternion\fP struct represents a rotation in three-dimensional space\&. 


.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 18 of file LeapQuaternion\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Leap\&.LeapQuaternion\&.LeapQuaternion (float x, float y, float z, float w)"

.PP
Creates a new \fBLeapQuaternion\fP with the specified component values\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 25 of file LeapQuaternion\&.cs\&.
.SS "Leap\&.LeapQuaternion\&.LeapQuaternion (\fBLeapQuaternion\fP quaternion)"

.PP
Copies the specified \fBLeapQuaternion\fP\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 37 of file LeapQuaternion\&.cs\&.
.SS "Leap\&.LeapQuaternion\&.LeapQuaternion (\fBLeapInternal\&.LEAP_QUATERNION\fP quaternion)"

.PP
Copies the specified LEAP_QUATERNION\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 49 of file LeapQuaternion\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "bool Leap\&.LeapQuaternion\&.Equals (\fBLeapQuaternion\fP v)"

.PP
Compare \fBLeapQuaternion\fP equality component-wise\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 69 of file LeapQuaternion\&.cs\&.
.SS "override bool Leap\&.LeapQuaternion\&.Equals (\fBObject\fP obj)"

.PP
Definition at line 72 of file LeapQuaternion\&.cs\&.
.SS "override int Leap\&.LeapQuaternion\&.GetHashCode ()"

.PP
Definition at line 143 of file LeapQuaternion\&.cs\&.
.SS "bool Leap\&.LeapQuaternion\&.IsValid ()"

.PP
Returns true if all of the quaternion's components are finite\&. If any component is NaN or infinite, then this returns false\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 81 of file LeapQuaternion\&.cs\&.
.SS "\fBLeapQuaternion\fP Leap\&.LeapQuaternion\&.Multiply (\fBLeapQuaternion\fP rhs)"

.PP
Concatenates the rotation described by this quaternion with the one provided and returns the result\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 129 of file LeapQuaternion\&.cs\&.
.SS "override string Leap\&.LeapQuaternion\&.ToString ()"

.PP
Returns a string containing this quaternion in a human readable format: (x, y, z)\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 61 of file LeapQuaternion\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "readonly \fBLeapQuaternion\fP Leap\&.LeapQuaternion\&.Identity = new \fBLeapQuaternion\fP(0, 0, 0, 1)\fC [static]\fP"

.PP
The identity quaternion\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 141 of file LeapQuaternion\&.cs\&.
.SS "float Leap\&.LeapQuaternion\&.w"

.PP
Definition at line 91 of file LeapQuaternion\&.cs\&.
.SS "float Leap\&.LeapQuaternion\&.x"

.PP
Definition at line 88 of file LeapQuaternion\&.cs\&.
.SS "float Leap\&.LeapQuaternion\&.y"

.PP
Definition at line 89 of file LeapQuaternion\&.cs\&.
.SS "float Leap\&.LeapQuaternion\&.z"

.PP
Definition at line 90 of file LeapQuaternion\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "float Leap\&.LeapQuaternion\&.Magnitude\fC [get]\fP"

.PP
The magnitude, or length, of this quaternion\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 97 of file LeapQuaternion\&.cs\&.
.SS "float Leap\&.LeapQuaternion\&.MagnitudeSquared\fC [get]\fP"

.PP
The square of the magnitude, or length, of this quaternion\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 105 of file LeapQuaternion\&.cs\&.
.SS "\fBLeapQuaternion\fP Leap\&.LeapQuaternion\&.Normalized\fC [get]\fP"

.PP
A normalized copy of this quaternion\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.2 
.RE
.PP

.PP
Definition at line 113 of file LeapQuaternion\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
