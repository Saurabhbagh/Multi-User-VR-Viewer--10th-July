.TH "Leap.Unity.Interaction.KabschGraspedPose" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Unity.Interaction.KabschGraspedPose \- This pose handler is the default implementation of \fBIGraspedPoseHandler\fP provided by the \fBInteraction\fP Engine and is most likely the only implementation you will need\&. It uses a Kabsch solve from frame to frame based on the points at which any grasping controller are grasping the interaction object to determine where the object should move and rotate in the grasp\&. Note that IGraspedPoseHandlers only determine the target position and rotation of a held object; actually moving the object is the domain of an \fBIGraspedMovementHandler\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBLeap\&.Unity\&.Interaction\&.IGraspedPoseHandler\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBPosePointCollection\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBSolveMethod\fP { \fBSolveMethod\&.SixDegreeSolve\fP, \fBSolveMethod\&.PivotAroundOrigin\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBKabschGraspedPose\fP (\fBInteractionBehaviour\fP interactionObj)"
.br
.ti -1c
.RI "void \fBAddController\fP (\fBInteractionController\fP controller)"
.br
.RI "Called when a new \fBInteractionController\fP begins grasping a certain object\&. The controller or \fBLeap\fP hand should be included in the held pose calculation\&. "
.ti -1c
.RI "void \fBRemoveController\fP (\fBInteractionController\fP controller)"
.br
.RI "Called when an \fBInteractionController\fP stops grasping a certain object; the controller should no longer be included in the held pose calculation\&. "
.ti -1c
.RI "void \fBClearControllers\fP ()"
.br
.RI "Called e\&.g\&. if the \fBInteractionBehaviour\fP is set not to move while being grasped; this should clear any hands to be included in the grasping position calculation\&. "
.ti -1c
.RI "void \fBGetGraspedPosition\fP (out Vector3 newPosition, out Quaternion newRotation)"
.br
.RI "Calculate the best holding position and orientation given the current state of all InteractionControllers (added via \fBAddController()\fP)\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const int \fBNUM_FINGERS\fP = 5"
.br
.ti -1c
.RI "const int \fBNUM_BONES\fP = 4"
.br
.in -1c
.SH "Detailed Description"
.PP 
This pose handler is the default implementation of \fBIGraspedPoseHandler\fP provided by the \fBInteraction\fP Engine and is most likely the only implementation you will need\&. It uses a Kabsch solve from frame to frame based on the points at which any grasping controller are grasping the interaction object to determine where the object should move and rotate in the grasp\&. Note that IGraspedPoseHandlers only determine the target position and rotation of a held object; actually moving the object is the domain of an \fBIGraspedMovementHandler\fP\&. 


.PP
Definition at line 25 of file KabschGraspedPose\&.cs\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBLeap\&.Unity\&.Interaction\&.KabschGraspedPose\&.SolveMethod\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISixDegreeSolve \fP\fP
.TP
\fB\fIPivotAroundOrigin \fP\fP
.PP
Definition at line 29 of file KabschGraspedPose\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Leap\&.Unity\&.Interaction\&.KabschGraspedPose\&.KabschGraspedPose (\fBInteractionBehaviour\fP interactionObj)"

.PP
Definition at line 44 of file KabschGraspedPose\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Leap\&.Unity\&.Interaction\&.KabschGraspedPose\&.AddController (\fBInteractionController\fP controller)"

.PP
Called when a new \fBInteractionController\fP begins grasping a certain object\&. The controller or \fBLeap\fP hand should be included in the held pose calculation\&. 
.PP
Implements \fBLeap\&.Unity\&.Interaction\&.IGraspedPoseHandler\fP\&.
.PP
Definition at line 52 of file KabschGraspedPose\&.cs\&.
.SS "void Leap\&.Unity\&.Interaction\&.KabschGraspedPose\&.ClearControllers ()"

.PP
Called e\&.g\&. if the \fBInteractionBehaviour\fP is set not to move while being grasped; this should clear any hands to be included in the grasping position calculation\&. 
.PP
Implements \fBLeap\&.Unity\&.Interaction\&.IGraspedPoseHandler\fP\&.
.PP
Definition at line 72 of file KabschGraspedPose\&.cs\&.
.SS "void Leap\&.Unity\&.Interaction\&.KabschGraspedPose\&.GetGraspedPosition (out Vector3 position, out Quaternion rotation)"

.PP
Calculate the best holding position and orientation given the current state of all InteractionControllers (added via \fBAddController()\fP)\&. 
.PP
Implements \fBLeap\&.Unity\&.Interaction\&.IGraspedPoseHandler\fP\&.
.PP
Definition at line 79 of file KabschGraspedPose\&.cs\&.
.SS "void Leap\&.Unity\&.Interaction\&.KabschGraspedPose\&.RemoveController (\fBInteractionController\fP controller)"

.PP
Called when an \fBInteractionController\fP stops grasping a certain object; the controller should no longer be included in the held pose calculation\&. 
.PP
Implements \fBLeap\&.Unity\&.Interaction\&.IGraspedPoseHandler\fP\&.
.PP
Definition at line 64 of file KabschGraspedPose\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "const int Leap\&.Unity\&.Interaction\&.KabschGraspedPose\&.NUM_BONES = 4"

.PP
Definition at line 27 of file KabschGraspedPose\&.cs\&.
.SS "const int Leap\&.Unity\&.Interaction\&.KabschGraspedPose\&.NUM_FINGERS = 5"

.PP
Definition at line 26 of file KabschGraspedPose\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
