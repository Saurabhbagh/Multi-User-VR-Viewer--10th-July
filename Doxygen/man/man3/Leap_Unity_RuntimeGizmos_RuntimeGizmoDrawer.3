.TH "Leap.Unity.RuntimeGizmos.RuntimeGizmoDrawer" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Unity.RuntimeGizmos.RuntimeGizmoDrawer
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBBeginGuard\fP ()"
.br
.RI "Begins a draw-guard\&. If any gizmos are drawn to this drawer an exception will be thrown at the end of the guard\&. "
.ti -1c
.RI "void \fBEndGuard\fP ()"
.br
.RI "Ends a draw-guard\&. If any gizmos were drawn to this drawer during the guard, an exception will be thrown\&. "
.ti -1c
.RI "void \fBRelativeTo\fP (Transform transform)"
.br
.RI "Causes all remaining gizmos drawing to be done in the local coordinate space of the given transform\&. "
.ti -1c
.RI "void \fBPushMatrix\fP ()"
.br
.RI "Saves the current gizmo matrix to the gizmo matrix stack\&. "
.ti -1c
.RI "void \fBPopMatrix\fP ()"
.br
.RI "Restores the current gizmo matrix from the gizmo matrix stack\&. "
.ti -1c
.RI "void \fBResetMatrixAndColorState\fP ()"
.br
.RI "Resets the matrix to the identity matrix and the color to white\&. "
.ti -1c
.RI "void \fBDrawMesh\fP (Mesh mesh, Matrix4x4 \fBmatrix\fP)"
.br
.RI "Draw a filled gizmo mesh using the given matrix transform\&. "
.ti -1c
.RI "void \fBDrawMesh\fP (Mesh mesh, Vector3 position, Quaternion rotation, Vector3 scale)"
.br
.RI "Draws a filled gizmo mesh at the given transform location\&. "
.ti -1c
.RI "void \fBDrawWireMesh\fP (Mesh mesh, Matrix4x4 \fBmatrix\fP)"
.br
.RI "Draws a wire gizmo mesh using the given matrix transform\&. "
.ti -1c
.RI "void \fBDrawWireMesh\fP (Mesh mesh, Vector3 position, Quaternion rotation, Vector3 scale)"
.br
.RI "Draws a wire gizmo mesh at the given transform location\&. "
.ti -1c
.RI "void \fBDrawLine\fP (Vector3 a, Vector3 b)"
.br
.RI "Draws a gizmo line that connects the two positions\&. "
.ti -1c
.RI "void \fBDrawCube\fP (Vector3 position, Vector3 size)"
.br
.RI "Draws a filled gizmo cube at the given position with the given size\&. "
.ti -1c
.RI "void \fBDrawWireCube\fP (Vector3 position, Vector3 size)"
.br
.RI "Draws a wire gizmo cube at the given position with the given size\&. "
.ti -1c
.RI "void \fBDrawSphere\fP (Vector3 center, float radius)"
.br
.RI "Draws a filled gizmo sphere at the given position with the given radius\&. "
.ti -1c
.RI "void \fBDrawWireSphere\fP (\fBPose\fP pose, float radius, int numSegments=32)"
.br
.ti -1c
.RI "void \fBDrawWireSphere\fP (Vector3 center, float radius, int numSegments=32)"
.br
.RI "Draws a wire gizmo sphere at the given position with the given radius\&. "
.ti -1c
.RI "void \fBDrawEllipsoid\fP (Vector3 foci1, Vector3 foci2, float minorAxis)"
.br
.RI "Draws a wire ellipsoid gizmo with two specified foci and a specified minor axis length\&. "
.ti -1c
.RI "void \fBDrawWireCapsule\fP (Vector3 start, Vector3 end, float radius)"
.br
.RI "Draws a wire gizmo capsule at the given position, with the given start and end points and radius\&. "
.ti -1c
.RI "void \fBDrawWireArc\fP (Vector3 center, Vector3 normal, Vector3 radialStartDirection, float radius, float fractionOfCircleToDraw, int numCircleSegments=16)"
.br
.ti -1c
.RI "void \fBDrawColliders\fP (GameObject gameObject, bool useWireframe=true, bool traverseHierarchy=true, bool drawTriggers=false)"
.br
.ti -1c
.RI "void \fBDrawCollider\fP (Collider collider, bool useWireframe=true, bool skipMatrixSetup=false)"
.br
.ti -1c
.RI "void \fBDrawPosition\fP (Vector3 pos, Color lerpColor, float lerpCoeff, float? overrideScale=null)"
.br
.RI "Draws a simple XYZ-cross position gizmo at the target position, whose size is scaled relative to the main camera's distance to the target position (for reliable visibility)\&. "
.ti -1c
.RI "void \fBDrawPosition\fP (Vector3 pos)"
.br
.RI "Draws a simple XYZ-cross position gizmo at the target position, whose size is scaled relative to the main camera's distance to the target position (for reliable visibility)\&. "
.ti -1c
.RI "void \fBDrawPosition\fP (Vector3 pos, float overrideScale)"
.br
.ti -1c
.RI "void \fBDrawRect\fP (Transform frame, Rect rect)"
.br
.ti -1c
.RI "void \fBClearAllGizmos\fP ()"
.br
.ti -1c
.RI "void \fBDrawAllGizmosToScreen\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const int \fBUNLIT_SOLID_PASS\fP = 0"
.br
.ti -1c
.RI "const int \fBUNLIT_TRANSPARENT_PASS\fP = 1"
.br
.ti -1c
.RI "const int \fBSHADED_SOLID_PASS\fP = 2"
.br
.ti -1c
.RI "const int \fBSHADED_TRANSPARENT_PASS\fP = 3"
.br
.ti -1c
.RI "Mesh \fBcubeMesh\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "Shader \fBgizmoShader\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "Color \fBcolor\fP\fC [get, set]\fP"
.br
.RI "Sets or gets the color for the gizmos that will be drawn next\&. "
.ti -1c
.RI "Matrix4x4 \fBmatrix\fP\fC [get, set]\fP"
.br
.RI "Sets or gets the matrix used to transform all gizmos\&. "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 344 of file RuntimeGizmoManager\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.BeginGuard ()"

.PP
Begins a draw-guard\&. If any gizmos are drawn to this drawer an exception will be thrown at the end of the guard\&. 
.PP
Definition at line 389 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.ClearAllGizmos ()"

.PP
Definition at line 778 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawAllGizmosToScreen ()"

.PP
Definition at line 790 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawCollider (Collider collider, bool useWireframe = \fCtrue\fP, bool skipMatrixSetup = \fCfalse\fP)"

.PP
Definition at line 637 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawColliders (GameObject gameObject, bool useWireframe = \fCtrue\fP, bool traverseHierarchy = \fCtrue\fP, bool drawTriggers = \fCfalse\fP)"

.PP
Definition at line 614 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawCube (Vector3 position, Vector3 size)"

.PP
Draws a filled gizmo cube at the given position with the given size\&. 
.PP
Definition at line 509 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawEllipsoid (Vector3 foci1, Vector3 foci2, float minorAxis)"

.PP
Draws a wire ellipsoid gizmo with two specified foci and a specified minor axis length\&. 
.PP
Definition at line 553 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawLine (Vector3 a, Vector3 b)"

.PP
Draws a gizmo line that connects the two positions\&. 
.PP
Definition at line 501 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawMesh (Mesh mesh, Matrix4x4 matrix)"

.PP
Draw a filled gizmo mesh using the given matrix transform\&. 
.PP
Definition at line 471 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawMesh (Mesh mesh, Vector3 position, Quaternion rotation, Vector3 scale)"

.PP
Draws a filled gizmo mesh at the given transform location\&. 
.PP
Definition at line 479 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawPosition (Vector3 pos, Color lerpColor, float lerpCoeff, float? overrideScale = \fCnull\fP)"

.PP
Draws a simple XYZ-cross position gizmo at the target position, whose size is scaled relative to the main camera's distance to the target position (for reliable visibility)\&. Or, if you provide an override scale, you can enforce a radius size for the gizmo\&.
.PP
You can also provide a color argument and lerp coefficient towards that color from the axes' default colors (red, green, blue)\&. Colors are lerped in HSV space\&. 
.PP
Definition at line 710 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawPosition (Vector3 pos)"

.PP
Draws a simple XYZ-cross position gizmo at the target position, whose size is scaled relative to the main camera's distance to the target position (for reliable visibility)\&. 
.PP
Definition at line 758 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawPosition (Vector3 pos, float overrideScale)"

.PP
Definition at line 762 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawRect (Transform frame, Rect rect)"

.PP
Definition at line 766 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawSphere (Vector3 center, float radius)"

.PP
Draws a filled gizmo sphere at the given position with the given radius\&. 
.PP
Definition at line 523 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawWireArc (Vector3 center, Vector3 normal, Vector3 radialStartDirection, float radius, float fractionOfCircleToDraw, int numCircleSegments = \fC16\fP)"

.PP
Definition at line 599 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawWireCapsule (Vector3 start, Vector3 end, float radius)"

.PP
Draws a wire gizmo capsule at the given position, with the given start and end points and radius\&. 
.PP
Definition at line 571 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawWireCube (Vector3 position, Vector3 size)"

.PP
Draws a wire gizmo cube at the given position with the given size\&. 
.PP
Definition at line 516 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawWireMesh (Mesh mesh, Matrix4x4 matrix)"

.PP
Draws a wire gizmo mesh using the given matrix transform\&. 
.PP
Definition at line 486 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawWireMesh (Mesh mesh, Vector3 position, Quaternion rotation, Vector3 scale)"

.PP
Draws a wire gizmo mesh at the given transform location\&. 
.PP
Definition at line 494 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawWireSphere (\fBPose\fP pose, float radius, int numSegments = \fC32\fP)"

.PP
Definition at line 533 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.DrawWireSphere (Vector3 center, float radius, int numSegments = \fC32\fP)"

.PP
Draws a wire gizmo sphere at the given position with the given radius\&. 
.PP
Definition at line 545 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.EndGuard ()"

.PP
Ends a draw-guard\&. If any gizmos were drawn to this drawer during the guard, an exception will be thrown\&. 
.PP
Definition at line 396 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.PopMatrix ()"

.PP
Restores the current gizmo matrix from the gizmo matrix stack\&. 
.PP
Definition at line 422 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.PushMatrix ()"

.PP
Saves the current gizmo matrix to the gizmo matrix stack\&. 
.PP
Definition at line 415 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.RelativeTo (Transform transform)"

.PP
Causes all remaining gizmos drawing to be done in the local coordinate space of the given transform\&. 
.PP
Definition at line 408 of file RuntimeGizmoManager\&.cs\&.
.SS "void Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.ResetMatrixAndColorState ()"

.PP
Resets the matrix to the identity matrix and the color to white\&. 
.PP
Definition at line 429 of file RuntimeGizmoManager\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "Mesh Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.cubeMesh"

.PP
Definition at line 384 of file RuntimeGizmoManager\&.cs\&.
.SS "const int Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.SHADED_SOLID_PASS = 2"

.PP
Definition at line 347 of file RuntimeGizmoManager\&.cs\&.
.SS "const int Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.SHADED_TRANSPARENT_PASS = 3"

.PP
Definition at line 348 of file RuntimeGizmoManager\&.cs\&.
.SS "const int Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.UNLIT_SOLID_PASS = 0"

.PP
Definition at line 345 of file RuntimeGizmoManager\&.cs\&.
.SS "const int Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.UNLIT_TRANSPARENT_PASS = 1"

.PP
Definition at line 346 of file RuntimeGizmoManager\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "Color Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.color\fC [get]\fP, \fC [set]\fP"

.PP
Sets or gets the color for the gizmos that will be drawn next\&. 
.PP
Definition at line 437 of file RuntimeGizmoManager\&.cs\&.
.SS "Shader Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.gizmoShader\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 365 of file RuntimeGizmoManager\&.cs\&.
.SS "Matrix4x4 Leap\&.Unity\&.RuntimeGizmos\&.RuntimeGizmoDrawer\&.matrix\fC [get]\fP, \fC [set]\fP"

.PP
Sets or gets the matrix used to transform all gizmos\&. 
.PP
Definition at line 454 of file RuntimeGizmoManager\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
