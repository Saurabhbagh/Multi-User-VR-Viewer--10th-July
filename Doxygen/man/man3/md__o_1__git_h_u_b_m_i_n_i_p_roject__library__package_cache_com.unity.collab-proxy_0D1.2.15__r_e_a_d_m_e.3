.TH "md__o_1__git_h_u_b_m_i_n_i_p_roject__library__package_cache_com.unity.collab-proxy_0D1.2.15__r_e_a_d_m_e" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__o_1__git_h_u_b_m_i_n_i_p_roject__library__package_cache_com.unity.collab-proxy_0D1.2.15__r_e_a_d_m_e \- Collab Proxy UPM Package 
This is the packaged version of Collab, currently limited to containing the History and Toolbar windows, along with supporting classes\&.
.PP
.SS "Development"
.PP
Check this repository out in your {$PROJECT}/Packages/ folder, under the name com\&.unity\&.collab-proxy\&. The classes will be built by Unity\&.
.PP
.SS "Testing"
.PP
In order to run the tests, you will need to add this project to the testables key in your manifest\&.json - once you have done this, the tests will be picked up by the Unity Test Runner window\&.
.PP
.SS "Building"
.PP
You may build this project using msbuild\&. The commands to do so can be seen under \&.gitlab-ci\&.yml\&.
.PP
.SS "Deploying"
.PP
Gitlab will automatically build your project when you deploy\&. You can download the resulting artifact, which will be a dll, and place it in your Editor/bin/ folder\&. Open the package in Unity to generate the meta files, and then you will be able to publish\&.
.PP
We're currently looking into a way to avoid this manual process\&. 
