.TH "Leap.Unity.Hash" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Unity.Hash
.SH SYNOPSIS
.br
.PP
.PP
Inherits IEnumerable, and IEquatable< Hash >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBHash\fP (int hash)"
.br
.ti -1c
.RI "void \fBAdd< T >\fP (T t)"
.br
.ti -1c
.RI "void \fBAddRange< T >\fP (List< T > sequence)"
.br
.ti -1c
.RI "IEnumerator \fBGetEnumerator\fP ()"
.br
.ti -1c
.RI "override int \fBGetHashCode\fP ()"
.br
.ti -1c
.RI "override bool \fBEquals\fP (object obj)"
.br
.ti -1c
.RI "bool \fBEquals\fP (\fBHash\fP other)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBHash\fP \fBGetHierarchyHash\fP (Transform root)"
.br
.ti -1c
.RI "static \fBHash\fP \fBGetDataHash\fP (Transform transform)"
.br
.RI "Returns a hash of the Transform in addition to it's data\&. Changing either the position, rotation, or scale of a transform will result in a different hash\&. Two transforms with the same position rotation and scale will not have the same hash! "
.ti -1c
.RI "static implicit \fBoperator Hash\fP (int hash)"
.br
.ti -1c
.RI "static implicit \fBoperator int\fP (\fBHash\fP hash)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 18 of file Hash\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Leap\&.Unity\&.Hash\&.Hash (int hash)"

.PP
Definition at line 21 of file Hash\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Leap\&.Unity\&.Hash\&.Add< T > (T t)"

.PP
Definition at line 25 of file Hash\&.cs\&.
.SS "void Leap\&.Unity\&.Hash\&.AddRange< T > (List< T > sequence)"

.PP
Definition at line 30 of file Hash\&.cs\&.
.SS "override bool Leap\&.Unity\&.Hash\&.Equals (object obj)"

.PP
Definition at line 99 of file Hash\&.cs\&.
.SS "bool Leap\&.Unity\&.Hash\&.Equals (\fBHash\fP other)"

.PP
Definition at line 107 of file Hash\&.cs\&.
.SS "static \fBHash\fP Leap\&.Unity\&.Hash\&.GetDataHash (Transform transform)\fC [static]\fP"

.PP
Returns a hash of the Transform in addition to it's data\&. Changing either the position, rotation, or scale of a transform will result in a different hash\&. Two transforms with the same position rotation and scale will not have the same hash! 
.PP
Definition at line 74 of file Hash\&.cs\&.
.SS "IEnumerator Leap\&.Unity\&.Hash\&.GetEnumerator ()"

.PP
Definition at line 91 of file Hash\&.cs\&.
.SS "override int Leap\&.Unity\&.Hash\&.GetHashCode ()"

.PP
Definition at line 95 of file Hash\&.cs\&.
.SS "static \fBHash\fP Leap\&.Unity\&.Hash\&.GetHierarchyHash (Transform root)\fC [static]\fP"

.PP
Definition at line 45 of file Hash\&.cs\&.
.SS "static implicit Leap\&.Unity\&.Hash\&.operator \fBHash\fP (int hash)\fC [static]\fP"

.PP
Definition at line 111 of file Hash\&.cs\&.
.SS "static implicit Leap\&.Unity\&.Hash\&.operator int (\fBHash\fP hash)\fC [static]\fP"

.PP
Definition at line 115 of file Hash\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
