.TH "Valve.VR.CVRSystem" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Valve.VR.CVRSystem
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBGetRecommendedRenderTargetSize\fP (ref uint pnWidth, ref uint pnHeight)"
.br
.ti -1c
.RI "\fBHmdMatrix44_t\fP \fBGetProjectionMatrix\fP (\fBEVREye\fP eEye, float fNearZ, float fFarZ)"
.br
.ti -1c
.RI "void \fBGetProjectionRaw\fP (\fBEVREye\fP eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)"
.br
.ti -1c
.RI "bool \fBComputeDistortion\fP (\fBEVREye\fP eEye, float fU, float fV, ref \fBDistortionCoordinates_t\fP pDistortionCoordinates)"
.br
.ti -1c
.RI "\fBHmdMatrix34_t\fP \fBGetEyeToHeadTransform\fP (\fBEVREye\fP eEye)"
.br
.ti -1c
.RI "bool \fBGetTimeSinceLastVsync\fP (ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)"
.br
.ti -1c
.RI "int \fBGetD3D9AdapterIndex\fP ()"
.br
.ti -1c
.RI "void \fBGetDXGIOutputInfo\fP (ref int pnAdapterIndex)"
.br
.ti -1c
.RI "void \fBGetOutputDevice\fP (ref ulong pnDevice, \fBETextureType\fP textureType, IntPtr pInstance)"
.br
.ti -1c
.RI "bool \fBIsDisplayOnDesktop\fP ()"
.br
.ti -1c
.RI "bool \fBSetDisplayVisibility\fP (bool bIsVisibleOnDesktop)"
.br
.ti -1c
.RI "void \fBGetDeviceToAbsoluteTrackingPose\fP (\fBETrackingUniverseOrigin\fP eOrigin, float fPredictedSecondsToPhotonsFromNow, \fBTrackedDevicePose_t\fP [] pTrackedDevicePoseArray)"
.br
.ti -1c
.RI "void \fBResetSeatedZeroPose\fP ()"
.br
.ti -1c
.RI "\fBHmdMatrix34_t\fP \fBGetSeatedZeroPoseToStandingAbsoluteTrackingPose\fP ()"
.br
.ti -1c
.RI "\fBHmdMatrix34_t\fP \fBGetRawZeroPoseToStandingAbsoluteTrackingPose\fP ()"
.br
.ti -1c
.RI "uint \fBGetSortedTrackedDeviceIndicesOfClass\fP (\fBETrackedDeviceClass\fP eTrackedDeviceClass, uint [] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)"
.br
.ti -1c
.RI "\fBEDeviceActivityLevel\fP \fBGetTrackedDeviceActivityLevel\fP (uint unDeviceId)"
.br
.ti -1c
.RI "void \fBApplyTransform\fP (ref \fBTrackedDevicePose_t\fP pOutputPose, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose, ref \fBHmdMatrix34_t\fP pTransform)"
.br
.ti -1c
.RI "uint \fBGetTrackedDeviceIndexForControllerRole\fP (\fBETrackedControllerRole\fP unDeviceType)"
.br
.ti -1c
.RI "\fBETrackedControllerRole\fP \fBGetControllerRoleForTrackedDeviceIndex\fP (uint unDeviceIndex)"
.br
.ti -1c
.RI "\fBETrackedDeviceClass\fP \fBGetTrackedDeviceClass\fP (uint unDeviceIndex)"
.br
.ti -1c
.RI "bool \fBIsTrackedDeviceConnected\fP (uint unDeviceIndex)"
.br
.ti -1c
.RI "bool \fBGetBoolTrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "float \fBGetFloatTrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "int \fBGetInt32TrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "ulong \fBGetUint64TrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "\fBHmdMatrix34_t\fP \fBGetMatrix34TrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "uint \fBGetArrayTrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "uint \fBGetStringTrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, System\&.Text\&.StringBuilder pchValue, uint unBufferSize, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "string \fBGetPropErrorNameFromEnum\fP (\fBETrackedPropertyError\fP error)"
.br
.ti -1c
.RI "bool \fBPollNextEvent\fP (ref \fBVREvent_t\fP pEvent, uint uncbVREvent)"
.br
.ti -1c
.RI "bool \fBPollNextEventWithPose\fP (\fBETrackingUniverseOrigin\fP eOrigin, ref \fBVREvent_t\fP pEvent, uint uncbVREvent, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose)"
.br
.ti -1c
.RI "string \fBGetEventTypeNameFromEnum\fP (\fBEVREventType\fP eType)"
.br
.ti -1c
.RI "\fBHiddenAreaMesh_t\fP \fBGetHiddenAreaMesh\fP (\fBEVREye\fP eEye, \fBEHiddenAreaMeshType\fP type)"
.br
.ti -1c
.RI "bool \fBGetControllerState\fP (uint unControllerDeviceIndex, ref \fBVRControllerState_t\fP pControllerState, uint unControllerStateSize)"
.br
.ti -1c
.RI "bool \fBGetControllerStateWithPose\fP (\fBETrackingUniverseOrigin\fP eOrigin, uint unControllerDeviceIndex, ref \fBVRControllerState_t\fP pControllerState, uint unControllerStateSize, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose)"
.br
.ti -1c
.RI "void \fBTriggerHapticPulse\fP (uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)"
.br
.ti -1c
.RI "string \fBGetButtonIdNameFromEnum\fP (\fBEVRButtonId\fP eButtonId)"
.br
.ti -1c
.RI "string \fBGetControllerAxisTypeNameFromEnum\fP (\fBEVRControllerAxisType\fP eAxisType)"
.br
.ti -1c
.RI "bool \fBIsInputAvailable\fP ()"
.br
.ti -1c
.RI "bool \fBIsSteamVRDrawingControllers\fP ()"
.br
.ti -1c
.RI "bool \fBShouldApplicationPause\fP ()"
.br
.ti -1c
.RI "bool \fBShouldApplicationReduceRenderingWork\fP ()"
.br
.ti -1c
.RI "uint \fBDriverDebugRequest\fP (uint unDeviceIndex, string pchRequest, System\&.Text\&.StringBuilder pchResponseBuffer, uint unResponseBufferSize)"
.br
.ti -1c
.RI "\fBEVRFirmwareError\fP \fBPerformFirmwareUpdate\fP (uint unDeviceIndex)"
.br
.ti -1c
.RI "void \fBAcknowledgeQuit_Exiting\fP ()"
.br
.ti -1c
.RI "void \fBAcknowledgeQuit_UserPrompt\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 1726 of file openvr_api\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Valve\&.VR\&.CVRSystem\&.AcknowledgeQuit_Exiting ()"

.PP
Definition at line 2038 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.AcknowledgeQuit_UserPrompt ()"

.PP
Definition at line 2042 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.ApplyTransform (ref \fBTrackedDevicePose_t\fP pOutputPose, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose, ref \fBHmdMatrix34_t\fP pTransform)"

.PP
Definition at line 1822 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.ComputeDistortion (\fBEVREye\fP eEye, float fU, float fV, ref \fBDistortionCoordinates_t\fP pDistortionCoordinates)"

.PP
Definition at line 1752 of file openvr_api\&.cs\&.
.SS "uint Valve\&.VR\&.CVRSystem\&.DriverDebugRequest (uint unDeviceIndex, string pchRequest, System\&.Text\&.StringBuilder pchResponseBuffer, uint unResponseBufferSize)"

.PP
Definition at line 2028 of file openvr_api\&.cs\&.
.SS "uint Valve\&.VR\&.CVRSystem\&.GetArrayTrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref \fBETrackedPropertyError\fP pError)"

.PP
Definition at line 1871 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.GetBoolTrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.PP
Definition at line 1846 of file openvr_api\&.cs\&.
.SS "string Valve\&.VR\&.CVRSystem\&.GetButtonIdNameFromEnum (\fBEVRButtonId\fP eButtonId)"

.PP
Definition at line 1998 of file openvr_api\&.cs\&.
.SS "string Valve\&.VR\&.CVRSystem\&.GetControllerAxisTypeNameFromEnum (\fBEVRControllerAxisType\fP eAxisType)"

.PP
Definition at line 2003 of file openvr_api\&.cs\&.
.SS "\fBETrackedControllerRole\fP Valve\&.VR\&.CVRSystem\&.GetControllerRoleForTrackedDeviceIndex (uint unDeviceIndex)"

.PP
Definition at line 1831 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.GetControllerState (uint unControllerDeviceIndex, ref \fBVRControllerState_t\fP pControllerState, uint unControllerStateSize)"

.PP
Definition at line 1944 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.GetControllerStateWithPose (\fBETrackingUniverseOrigin\fP eOrigin, uint unControllerDeviceIndex, ref \fBVRControllerState_t\fP pControllerState, uint unControllerStateSize, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose)"

.PP
Definition at line 1975 of file openvr_api\&.cs\&.
.SS "int Valve\&.VR\&.CVRSystem\&.GetD3D9AdapterIndex ()"

.PP
Definition at line 1769 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.GetDeviceToAbsoluteTrackingPose (\fBETrackingUniverseOrigin\fP eOrigin, float fPredictedSecondsToPhotonsFromNow, \fBTrackedDevicePose_t\fP [] pTrackedDevicePoseArray)"

.PP
Definition at line 1794 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.GetDXGIOutputInfo (ref int pnAdapterIndex)"

.PP
Definition at line 1774 of file openvr_api\&.cs\&.
.SS "string Valve\&.VR\&.CVRSystem\&.GetEventTypeNameFromEnum (\fBEVREventType\fP eType)"

.PP
Definition at line 1922 of file openvr_api\&.cs\&.
.SS "\fBHmdMatrix34_t\fP Valve\&.VR\&.CVRSystem\&.GetEyeToHeadTransform (\fBEVREye\fP eEye)"

.PP
Definition at line 1757 of file openvr_api\&.cs\&.
.SS "float Valve\&.VR\&.CVRSystem\&.GetFloatTrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.PP
Definition at line 1851 of file openvr_api\&.cs\&.
.SS "\fBHiddenAreaMesh_t\fP Valve\&.VR\&.CVRSystem\&.GetHiddenAreaMesh (\fBEVREye\fP eEye, \fBEHiddenAreaMeshType\fP type)"

.PP
Definition at line 1927 of file openvr_api\&.cs\&.
.SS "int Valve\&.VR\&.CVRSystem\&.GetInt32TrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.PP
Definition at line 1856 of file openvr_api\&.cs\&.
.SS "\fBHmdMatrix34_t\fP Valve\&.VR\&.CVRSystem\&.GetMatrix34TrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.PP
Definition at line 1866 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.GetOutputDevice (ref ulong pnDevice, \fBETextureType\fP textureType, IntPtr pInstance)"

.PP
Definition at line 1779 of file openvr_api\&.cs\&.
.SS "\fBHmdMatrix44_t\fP Valve\&.VR\&.CVRSystem\&.GetProjectionMatrix (\fBEVREye\fP eEye, float fNearZ, float fFarZ)"

.PP
Definition at line 1739 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.GetProjectionRaw (\fBEVREye\fP eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)"

.PP
Definition at line 1744 of file openvr_api\&.cs\&.
.SS "string Valve\&.VR\&.CVRSystem\&.GetPropErrorNameFromEnum (\fBETrackedPropertyError\fP error)"

.PP
Definition at line 1881 of file openvr_api\&.cs\&.
.SS "\fBHmdMatrix34_t\fP Valve\&.VR\&.CVRSystem\&.GetRawZeroPoseToStandingAbsoluteTrackingPose ()"

.PP
Definition at line 1807 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.GetRecommendedRenderTargetSize (ref uint pnWidth, ref uint pnHeight)"

.PP
Definition at line 1733 of file openvr_api\&.cs\&.
.SS "\fBHmdMatrix34_t\fP Valve\&.VR\&.CVRSystem\&.GetSeatedZeroPoseToStandingAbsoluteTrackingPose ()"

.PP
Definition at line 1802 of file openvr_api\&.cs\&.
.SS "uint Valve\&.VR\&.CVRSystem\&.GetSortedTrackedDeviceIndicesOfClass (\fBETrackedDeviceClass\fP eTrackedDeviceClass, uint [] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)"

.PP
Definition at line 1812 of file openvr_api\&.cs\&.
.SS "uint Valve\&.VR\&.CVRSystem\&.GetStringTrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, System\&.Text\&.StringBuilder pchValue, uint unBufferSize, ref \fBETrackedPropertyError\fP pError)"

.PP
Definition at line 1876 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.GetTimeSinceLastVsync (ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)"

.PP
Definition at line 1762 of file openvr_api\&.cs\&.
.SS "\fBEDeviceActivityLevel\fP Valve\&.VR\&.CVRSystem\&.GetTrackedDeviceActivityLevel (uint unDeviceId)"

.PP
Definition at line 1817 of file openvr_api\&.cs\&.
.SS "\fBETrackedDeviceClass\fP Valve\&.VR\&.CVRSystem\&.GetTrackedDeviceClass (uint unDeviceIndex)"

.PP
Definition at line 1836 of file openvr_api\&.cs\&.
.SS "uint Valve\&.VR\&.CVRSystem\&.GetTrackedDeviceIndexForControllerRole (\fBETrackedControllerRole\fP unDeviceType)"

.PP
Definition at line 1826 of file openvr_api\&.cs\&.
.SS "ulong Valve\&.VR\&.CVRSystem\&.GetUint64TrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.PP
Definition at line 1861 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.IsDisplayOnDesktop ()"

.PP
Definition at line 1784 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.IsInputAvailable ()"

.PP
Definition at line 2008 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.IsSteamVRDrawingControllers ()"

.PP
Definition at line 2013 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.IsTrackedDeviceConnected (uint unDeviceIndex)"

.PP
Definition at line 1841 of file openvr_api\&.cs\&.
.SS "\fBEVRFirmwareError\fP Valve\&.VR\&.CVRSystem\&.PerformFirmwareUpdate (uint unDeviceIndex)"

.PP
Definition at line 2033 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.PollNextEvent (ref \fBVREvent_t\fP pEvent, uint uncbVREvent)"

.PP
Definition at line 1898 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.PollNextEventWithPose (\fBETrackingUniverseOrigin\fP eOrigin, ref \fBVREvent_t\fP pEvent, uint uncbVREvent, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose)"

.PP
Definition at line 1917 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.ResetSeatedZeroPose ()"

.PP
Definition at line 1798 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.SetDisplayVisibility (bool bIsVisibleOnDesktop)"

.PP
Definition at line 1789 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.ShouldApplicationPause ()"

.PP
Definition at line 2018 of file openvr_api\&.cs\&.
.SS "bool Valve\&.VR\&.CVRSystem\&.ShouldApplicationReduceRenderingWork ()"

.PP
Definition at line 2023 of file openvr_api\&.cs\&.
.SS "void Valve\&.VR\&.CVRSystem\&.TriggerHapticPulse (uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)"

.PP
Definition at line 1994 of file openvr_api\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
