.TH "Leap.Unity.RiggedHand" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Unity.RiggedHand
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBLeap\&.Unity\&.HandModel\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override bool \fBSupportsEditorPersistence\fP ()"
.br
.RI "Returns whether or not this hand model supports editor persistence\&. This is false by default and must be opt-in by a developer making their own hand model script if they want editor persistence\&. "
.ti -1c
.RI "override void \fBInitHand\fP ()"
.br
.ti -1c
.RI "Quaternion \fBReorientation\fP ()"
.br
.ti -1c
.RI "override void \fBUpdateHand\fP ()"
.br
.ti -1c
.RI "Quaternion \fBGetRiggedPalmRotation\fP ()"
.br
.ti -1c
.RI "void \fBSetupRiggedHand\fP ()"
.br
.ti -1c
.RI "void \fBAutoRigRiggedHand\fP (Transform \fBpalm\fP, Transform finger1, Transform finger2)"
.br
.ti -1c
.RI "void \fBStoreJointsStartPose\fP ()"
.br
.ti -1c
.RI "void \fBRestoreJointsStartPose\fP ()"
.br
.ti -1c
.RI "void \fBOnValidate\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static Vector3 \fBCalculateZeroedVector\fP (Vector3 vectorToZero)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBDeformPositionsInFingers\fP"
.br
.ti -1c
.RI "bool \fBModelPalmAtLeapWrist\fP = true"
.br
.ti -1c
.RI "bool \fBUseMetaCarpals\fP"
.br
.ti -1c
.RI "Vector3 \fBmodelFingerPointing\fP = new Vector3(0, 0, 0)"
.br
.ti -1c
.RI "Vector3 \fBmodelPalmFacing\fP = new Vector3(0, 0, 0)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override \fBModelType\fP \fBHandModelType\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBSetEditorLeapPose\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "bool \fBscaleLastFingerBones\fP\fC [get, set]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This version of \fBHandModelBase\fP supports a hand respresentation based on a skinned and jointed 3D model asset\&. 
.PP
Definition at line 19 of file RiggedHand\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Leap\&.Unity\&.RiggedHand\&.AutoRigRiggedHand (Transform palm, Transform finger1, Transform finger2)"
Sets up the rigged hand if \fBRiggedFinger\fP scripts have already been assigned using Mecanim values\&. 
.PP
Definition at line 152 of file RiggedHand\&.cs\&.
.SS "static Vector3 Leap\&.Unity\&.RiggedHand\&.CalculateZeroedVector (Vector3 vectorToZero)\fC [static]\fP"
Finds nearest cardinal vector to a vector 
.PP
Definition at line 269 of file RiggedHand\&.cs\&.
.SS "Quaternion Leap\&.Unity\&.RiggedHand\&.GetRiggedPalmRotation ()"

.PP
Definition at line 123 of file RiggedHand\&.cs\&.
.SS "override void Leap\&.Unity\&.RiggedHand\&.InitHand ()\fC [virtual]\fP"
Implement this function to initialise this hand after it is created\&. This function is called by the HandController during the \fBUnity\fP Update() phase when a new hand is detected by the \fBLeap\fP Motion device\&. 
.PP
Reimplemented from \fBLeap\&.Unity\&.HandModel\fP\&.
.PP
Definition at line 82 of file RiggedHand\&.cs\&.
.SS "void Leap\&.Unity\&.RiggedHand\&.OnValidate ()"

.PP
Definition at line 317 of file RiggedHand\&.cs\&.
.SS "Quaternion Leap\&.Unity\&.RiggedHand\&.Reorientation ()"

.PP
Definition at line 88 of file RiggedHand\&.cs\&.
.SS "void Leap\&.Unity\&.RiggedHand\&.RestoreJointsStartPose ()"
Restores original joint positions, particularly after model has been placed in \fBLeap\fP's editor pose 
.PP
Definition at line 294 of file RiggedHand\&.cs\&.
.SS "void Leap\&.Unity\&.RiggedHand\&.SetupRiggedHand ()"
Sets up the rigged hand by finding base of each finger by name 
.PP
Definition at line 141 of file RiggedHand\&.cs\&.
.SS "void Leap\&.Unity\&.RiggedHand\&.StoreJointsStartPose ()"
Stores a snapshot of original joint positions 
.PP
Definition at line 285 of file RiggedHand\&.cs\&.
.SS "override bool Leap\&.Unity\&.RiggedHand\&.SupportsEditorPersistence ()\fC [virtual]\fP"

.PP
Returns whether or not this hand model supports editor persistence\&. This is false by default and must be opt-in by a developer making their own hand model script if they want editor persistence\&. 
.PP
Reimplemented from \fBLeap\&.Unity\&.HandModelBase\fP\&.
.PP
Definition at line 25 of file RiggedHand\&.cs\&.
.SS "override void Leap\&.Unity\&.RiggedHand\&.UpdateHand ()\fC [virtual]\fP"
Implement this function to update this hand once every game loop\&. For \fBHandModel\fP instances assigned to the HandController graphics hand list, the HandController calls this function during the \fBUnity\fP Update() phase\&. For \fBHandModel\fP instances in the physics hand list, the HandController calls this function in the FixedUpdate() phase\&. 
.PP
Implements \fBLeap\&.Unity\&.HandModel\fP\&.
.PP
Definition at line 95 of file RiggedHand\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "bool Leap\&.Unity\&.RiggedHand\&.DeformPositionsInFingers"

.PP
Definition at line 42 of file RiggedHand\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.RiggedHand\&.modelFingerPointing = new Vector3(0, 0, 0)"

.PP
Definition at line 71 of file RiggedHand\&.cs\&.
.SS "bool Leap\&.Unity\&.RiggedHand\&.ModelPalmAtLeapWrist = true"

.PP
Definition at line 49 of file RiggedHand\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.RiggedHand\&.modelPalmFacing = new Vector3(0, 0, 0)"

.PP
Definition at line 72 of file RiggedHand\&.cs\&.
.SS "bool Leap\&.Unity\&.RiggedHand\&.UseMetaCarpals"

.PP
Definition at line 52 of file RiggedHand\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "override \fBModelType\fP Leap\&.Unity\&.RiggedHand\&.HandModelType\fC [get]\fP"

.PP
Definition at line 20 of file RiggedHand\&.cs\&.
.SS "bool Leap\&.Unity\&.RiggedHand\&.scaleLastFingerBones\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 63 of file RiggedHand\&.cs\&.
.SS "bool Leap\&.Unity\&.RiggedHand\&.SetEditorLeapPose\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 32 of file RiggedHand\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
