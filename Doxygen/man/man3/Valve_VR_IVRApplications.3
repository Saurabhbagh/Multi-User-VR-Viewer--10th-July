.TH "Valve.VR.IVRApplications" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Valve.VR.IVRApplications
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_AddApplicationManifest\fP (string pchApplicationManifestFullPath, bool bTemporary)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_RemoveApplicationManifest\fP (string pchApplicationManifestFullPath)"
.br
.ti -1c
.RI "internal delegate bool \fB_IsApplicationInstalled\fP (string pchAppKey)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetApplicationCount\fP ()"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_GetApplicationKeyByIndex\fP (uint unApplicationIndex, System\&.Text\&.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_GetApplicationKeyByProcessId\fP (uint unProcessId, System\&.Text\&.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_LaunchApplication\fP (string pchAppKey)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_LaunchTemplateApplication\fP (string pchTemplateAppKey, string pchNewAppKey, [\fBIn\fP, \fBOut\fP] \fBAppOverrideKeys_t\fP[] pKeys, uint unKeys)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_LaunchApplicationFromMimeType\fP (string pchMimeType, string pchArgs)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_LaunchDashboardOverlay\fP (string pchAppKey)"
.br
.ti -1c
.RI "internal delegate bool \fB_CancelApplicationLaunch\fP (string pchAppKey)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_IdentifyApplication\fP (uint unProcessId, string pchAppKey)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetApplicationProcessId\fP (string pchAppKey)"
.br
.ti -1c
.RI "internal delegate IntPtr \fB_GetApplicationsErrorNameFromEnum\fP (\fBEVRApplicationError\fP error)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetApplicationPropertyString\fP (string pchAppKey, \fBEVRApplicationProperty\fP eProperty, System\&.Text\&.StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref \fBEVRApplicationError\fP peError)"
.br
.ti -1c
.RI "internal delegate bool \fB_GetApplicationPropertyBool\fP (string pchAppKey, \fBEVRApplicationProperty\fP eProperty, ref \fBEVRApplicationError\fP peError)"
.br
.ti -1c
.RI "internal delegate ulong \fB_GetApplicationPropertyUint64\fP (string pchAppKey, \fBEVRApplicationProperty\fP eProperty, ref \fBEVRApplicationError\fP peError)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_SetApplicationAutoLaunch\fP (string pchAppKey, bool bAutoLaunch)"
.br
.ti -1c
.RI "internal delegate bool \fB_GetApplicationAutoLaunch\fP (string pchAppKey)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_SetDefaultApplicationForMimeType\fP (string pchAppKey, string pchMimeType)"
.br
.ti -1c
.RI "internal delegate bool \fB_GetDefaultApplicationForMimeType\fP (string pchMimeType, System\&.Text\&.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)"
.br
.ti -1c
.RI "internal delegate bool \fB_GetApplicationSupportedMimeTypes\fP (string pchAppKey, System\&.Text\&.StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetApplicationsThatSupportMimeType\fP (string pchMimeType, System\&.Text\&.StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetApplicationLaunchArguments\fP (uint unHandle, System\&.Text\&.StringBuilder pchArgs, uint unArgs)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_GetStartingApplication\fP (System\&.Text\&.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationTransitionState\fP \fB_GetTransitionState\fP ()"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_PerformApplicationPrelaunchCheck\fP (string pchAppKey)"
.br
.ti -1c
.RI "internal delegate IntPtr \fB_GetApplicationsTransitionStateNameFromEnum\fP (\fBEVRApplicationTransitionState\fP state)"
.br
.ti -1c
.RI "internal delegate bool \fB_IsQuitUserPromptRequested\fP ()"
.br
.ti -1c
.RI "internal delegate \fBEVRApplicationError\fP \fB_LaunchInternalProcess\fP (string pchBinaryPath, string pchArguments, string pchWorkingDirectory)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetCurrentSceneProcessId\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "internal \fB_AddApplicationManifest\fP \fBAddApplicationManifest\fP"
.br
.ti -1c
.RI "internal \fB_RemoveApplicationManifest\fP \fBRemoveApplicationManifest\fP"
.br
.ti -1c
.RI "internal \fB_IsApplicationInstalled\fP \fBIsApplicationInstalled\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationCount\fP \fBGetApplicationCount\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationKeyByIndex\fP \fBGetApplicationKeyByIndex\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationKeyByProcessId\fP \fBGetApplicationKeyByProcessId\fP"
.br
.ti -1c
.RI "internal \fB_LaunchApplication\fP \fBLaunchApplication\fP"
.br
.ti -1c
.RI "internal \fB_LaunchTemplateApplication\fP \fBLaunchTemplateApplication\fP"
.br
.ti -1c
.RI "internal \fB_LaunchApplicationFromMimeType\fP \fBLaunchApplicationFromMimeType\fP"
.br
.ti -1c
.RI "internal \fB_LaunchDashboardOverlay\fP \fBLaunchDashboardOverlay\fP"
.br
.ti -1c
.RI "internal \fB_CancelApplicationLaunch\fP \fBCancelApplicationLaunch\fP"
.br
.ti -1c
.RI "internal \fB_IdentifyApplication\fP \fBIdentifyApplication\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationProcessId\fP \fBGetApplicationProcessId\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationsErrorNameFromEnum\fP \fBGetApplicationsErrorNameFromEnum\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationPropertyString\fP \fBGetApplicationPropertyString\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationPropertyBool\fP \fBGetApplicationPropertyBool\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationPropertyUint64\fP \fBGetApplicationPropertyUint64\fP"
.br
.ti -1c
.RI "internal \fB_SetApplicationAutoLaunch\fP \fBSetApplicationAutoLaunch\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationAutoLaunch\fP \fBGetApplicationAutoLaunch\fP"
.br
.ti -1c
.RI "internal \fB_SetDefaultApplicationForMimeType\fP \fBSetDefaultApplicationForMimeType\fP"
.br
.ti -1c
.RI "internal \fB_GetDefaultApplicationForMimeType\fP \fBGetDefaultApplicationForMimeType\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationSupportedMimeTypes\fP \fBGetApplicationSupportedMimeTypes\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationsThatSupportMimeType\fP \fBGetApplicationsThatSupportMimeType\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationLaunchArguments\fP \fBGetApplicationLaunchArguments\fP"
.br
.ti -1c
.RI "internal \fB_GetStartingApplication\fP \fBGetStartingApplication\fP"
.br
.ti -1c
.RI "internal \fB_GetTransitionState\fP \fBGetTransitionState\fP"
.br
.ti -1c
.RI "internal \fB_PerformApplicationPrelaunchCheck\fP \fBPerformApplicationPrelaunchCheck\fP"
.br
.ti -1c
.RI "internal \fB_GetApplicationsTransitionStateNameFromEnum\fP \fBGetApplicationsTransitionStateNameFromEnum\fP"
.br
.ti -1c
.RI "internal \fB_IsQuitUserPromptRequested\fP \fBIsQuitUserPromptRequested\fP"
.br
.ti -1c
.RI "internal \fB_LaunchInternalProcess\fP \fBLaunchInternalProcess\fP"
.br
.ti -1c
.RI "internal \fB_GetCurrentSceneProcessId\fP \fBGetCurrentSceneProcessId\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 341 of file openvr_api\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._AddApplicationManifest (string pchApplicationManifestFullPath, bool bTemporary)"

.SS "internal delegate bool Valve\&.VR\&.IVRApplications\&._CancelApplicationLaunch (string pchAppKey)"

.SS "internal delegate bool Valve\&.VR\&.IVRApplications\&._GetApplicationAutoLaunch (string pchAppKey)"

.SS "internal delegate uint Valve\&.VR\&.IVRApplications\&._GetApplicationCount ()"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._GetApplicationKeyByIndex (uint unApplicationIndex, System\&.Text\&.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._GetApplicationKeyByProcessId (uint unProcessId, System\&.Text\&.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)"

.SS "internal delegate uint Valve\&.VR\&.IVRApplications\&._GetApplicationLaunchArguments (uint unHandle, System\&.Text\&.StringBuilder pchArgs, uint unArgs)"

.SS "internal delegate uint Valve\&.VR\&.IVRApplications\&._GetApplicationProcessId (string pchAppKey)"

.SS "internal delegate bool Valve\&.VR\&.IVRApplications\&._GetApplicationPropertyBool (string pchAppKey, \fBEVRApplicationProperty\fP eProperty, ref \fBEVRApplicationError\fP peError)"

.SS "internal delegate uint Valve\&.VR\&.IVRApplications\&._GetApplicationPropertyString (string pchAppKey, \fBEVRApplicationProperty\fP eProperty, System\&.Text\&.StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref \fBEVRApplicationError\fP peError)"

.SS "internal delegate ulong Valve\&.VR\&.IVRApplications\&._GetApplicationPropertyUint64 (string pchAppKey, \fBEVRApplicationProperty\fP eProperty, ref \fBEVRApplicationError\fP peError)"

.SS "internal delegate IntPtr Valve\&.VR\&.IVRApplications\&._GetApplicationsErrorNameFromEnum (\fBEVRApplicationError\fP error)"

.SS "internal delegate uint Valve\&.VR\&.IVRApplications\&._GetApplicationsThatSupportMimeType (string pchMimeType, System\&.Text\&.StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)"

.SS "internal delegate IntPtr Valve\&.VR\&.IVRApplications\&._GetApplicationsTransitionStateNameFromEnum (\fBEVRApplicationTransitionState\fP state)"

.SS "internal delegate bool Valve\&.VR\&.IVRApplications\&._GetApplicationSupportedMimeTypes (string pchAppKey, System\&.Text\&.StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)"

.SS "internal delegate uint Valve\&.VR\&.IVRApplications\&._GetCurrentSceneProcessId ()"

.SS "internal delegate bool Valve\&.VR\&.IVRApplications\&._GetDefaultApplicationForMimeType (string pchMimeType, System\&.Text\&.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._GetStartingApplication (System\&.Text\&.StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)"

.SS "internal delegate \fBEVRApplicationTransitionState\fP Valve\&.VR\&.IVRApplications\&._GetTransitionState ()"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._IdentifyApplication (uint unProcessId, string pchAppKey)"

.SS "internal delegate bool Valve\&.VR\&.IVRApplications\&._IsApplicationInstalled (string pchAppKey)"

.SS "internal delegate bool Valve\&.VR\&.IVRApplications\&._IsQuitUserPromptRequested ()"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._LaunchApplication (string pchAppKey)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._LaunchApplicationFromMimeType (string pchMimeType, string pchArgs)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._LaunchDashboardOverlay (string pchAppKey)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._LaunchInternalProcess (string pchBinaryPath, string pchArguments, string pchWorkingDirectory)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._LaunchTemplateApplication (string pchTemplateAppKey, string pchNewAppKey, [In, Out] \fBAppOverrideKeys_t\fP [] pKeys, uint unKeys)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._PerformApplicationPrelaunchCheck (string pchAppKey)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._RemoveApplicationManifest (string pchApplicationManifestFullPath)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._SetApplicationAutoLaunch (string pchAppKey, bool bAutoLaunch)"

.SS "internal delegate \fBEVRApplicationError\fP Valve\&.VR\&.IVRApplications\&._SetDefaultApplicationForMimeType (string pchAppKey, string pchMimeType)"

.SH "Member Data Documentation"
.PP 
.SS "internal \fB_AddApplicationManifest\fP Valve\&.VR\&.IVRApplications\&.AddApplicationManifest"

.PP
Definition at line 346 of file openvr_api\&.cs\&.
.SS "internal \fB_CancelApplicationLaunch\fP Valve\&.VR\&.IVRApplications\&.CancelApplicationLaunch"

.PP
Definition at line 396 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationAutoLaunch\fP Valve\&.VR\&.IVRApplications\&.GetApplicationAutoLaunch"

.PP
Definition at line 436 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationCount\fP Valve\&.VR\&.IVRApplications\&.GetApplicationCount"

.PP
Definition at line 361 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationKeyByIndex\fP Valve\&.VR\&.IVRApplications\&.GetApplicationKeyByIndex"

.PP
Definition at line 366 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationKeyByProcessId\fP Valve\&.VR\&.IVRApplications\&.GetApplicationKeyByProcessId"

.PP
Definition at line 371 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationLaunchArguments\fP Valve\&.VR\&.IVRApplications\&.GetApplicationLaunchArguments"

.PP
Definition at line 461 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationProcessId\fP Valve\&.VR\&.IVRApplications\&.GetApplicationProcessId"

.PP
Definition at line 406 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationPropertyBool\fP Valve\&.VR\&.IVRApplications\&.GetApplicationPropertyBool"

.PP
Definition at line 421 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationPropertyString\fP Valve\&.VR\&.IVRApplications\&.GetApplicationPropertyString"

.PP
Definition at line 416 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationPropertyUint64\fP Valve\&.VR\&.IVRApplications\&.GetApplicationPropertyUint64"

.PP
Definition at line 426 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationsErrorNameFromEnum\fP Valve\&.VR\&.IVRApplications\&.GetApplicationsErrorNameFromEnum"

.PP
Definition at line 411 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationsThatSupportMimeType\fP Valve\&.VR\&.IVRApplications\&.GetApplicationsThatSupportMimeType"

.PP
Definition at line 456 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationsTransitionStateNameFromEnum\fP Valve\&.VR\&.IVRApplications\&.GetApplicationsTransitionStateNameFromEnum"

.PP
Definition at line 481 of file openvr_api\&.cs\&.
.SS "internal \fB_GetApplicationSupportedMimeTypes\fP Valve\&.VR\&.IVRApplications\&.GetApplicationSupportedMimeTypes"

.PP
Definition at line 451 of file openvr_api\&.cs\&.
.SS "internal \fB_GetCurrentSceneProcessId\fP Valve\&.VR\&.IVRApplications\&.GetCurrentSceneProcessId"

.PP
Definition at line 496 of file openvr_api\&.cs\&.
.SS "internal \fB_GetDefaultApplicationForMimeType\fP Valve\&.VR\&.IVRApplications\&.GetDefaultApplicationForMimeType"

.PP
Definition at line 446 of file openvr_api\&.cs\&.
.SS "internal \fB_GetStartingApplication\fP Valve\&.VR\&.IVRApplications\&.GetStartingApplication"

.PP
Definition at line 466 of file openvr_api\&.cs\&.
.SS "internal \fB_GetTransitionState\fP Valve\&.VR\&.IVRApplications\&.GetTransitionState"

.PP
Definition at line 471 of file openvr_api\&.cs\&.
.SS "internal \fB_IdentifyApplication\fP Valve\&.VR\&.IVRApplications\&.IdentifyApplication"

.PP
Definition at line 401 of file openvr_api\&.cs\&.
.SS "internal \fB_IsApplicationInstalled\fP Valve\&.VR\&.IVRApplications\&.IsApplicationInstalled"

.PP
Definition at line 356 of file openvr_api\&.cs\&.
.SS "internal \fB_IsQuitUserPromptRequested\fP Valve\&.VR\&.IVRApplications\&.IsQuitUserPromptRequested"

.PP
Definition at line 486 of file openvr_api\&.cs\&.
.SS "internal \fB_LaunchApplication\fP Valve\&.VR\&.IVRApplications\&.LaunchApplication"

.PP
Definition at line 376 of file openvr_api\&.cs\&.
.SS "internal \fB_LaunchApplicationFromMimeType\fP Valve\&.VR\&.IVRApplications\&.LaunchApplicationFromMimeType"

.PP
Definition at line 386 of file openvr_api\&.cs\&.
.SS "internal \fB_LaunchDashboardOverlay\fP Valve\&.VR\&.IVRApplications\&.LaunchDashboardOverlay"

.PP
Definition at line 391 of file openvr_api\&.cs\&.
.SS "internal \fB_LaunchInternalProcess\fP Valve\&.VR\&.IVRApplications\&.LaunchInternalProcess"

.PP
Definition at line 491 of file openvr_api\&.cs\&.
.SS "internal \fB_LaunchTemplateApplication\fP Valve\&.VR\&.IVRApplications\&.LaunchTemplateApplication"

.PP
Definition at line 381 of file openvr_api\&.cs\&.
.SS "internal \fB_PerformApplicationPrelaunchCheck\fP Valve\&.VR\&.IVRApplications\&.PerformApplicationPrelaunchCheck"

.PP
Definition at line 476 of file openvr_api\&.cs\&.
.SS "internal \fB_RemoveApplicationManifest\fP Valve\&.VR\&.IVRApplications\&.RemoveApplicationManifest"

.PP
Definition at line 351 of file openvr_api\&.cs\&.
.SS "internal \fB_SetApplicationAutoLaunch\fP Valve\&.VR\&.IVRApplications\&.SetApplicationAutoLaunch"

.PP
Definition at line 431 of file openvr_api\&.cs\&.
.SS "internal \fB_SetDefaultApplicationForMimeType\fP Valve\&.VR\&.IVRApplications\&.SetDefaultApplicationForMimeType"

.PP
Definition at line 441 of file openvr_api\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
