.TH "Leap.Finger" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Finger \- The \fBFinger\fP class represents a tracked finger\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBFingerType\fP { \fBFingerType\&.TYPE_THUMB\fP = 0, \fBFingerType\&.TYPE_INDEX\fP = 1, \fBFingerType\&.TYPE_MIDDLE\fP = 2, \fBFingerType\&.TYPE_RING\fP = 3, \fBFingerType\&.TYPE_PINKY\fP = 4, \fBFingerType\&.TYPE_UNKNOWN\fP = -1 }"
.br
.RI "Enumerates the names of the fingers\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFinger\fP ()"
.br
.RI "Constructs a finger\&. "
.ti -1c
.RI "\fBFinger\fP (long frameId, int handId, int fingerId, float timeVisible, \fBVector\fP tipPosition, \fBVector\fP direction, float width, float length, bool isExtended, \fBFingerType\fP type, \fBBone\fP metacarpal, \fBBone\fP proximal, \fBBone\fP intermediate, \fBBone\fP distal)"
.br
.RI "Constructs a finger\&. "
.ti -1c
.RI "\fBBone\fP \fBBone\fP (\fBBone\&.BoneType\fP boneIx)"
.br
.RI "The bone at a given bone index on this finger\&. "
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.RI "A string containing a brief, human readable description of the \fBFinger\fP object\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBBone\fP [] \fBbones\fP = new \fBBone\fP[4]"
.br
.ti -1c
.RI "\fBFinger\&.FingerType\fP \fBType\fP"
.br
.RI "The type of this finger\&. "
.ti -1c
.RI "int \fBId\fP"
.br
.RI "A unique ID assigned to this \fBFinger\fP object, whose value remains the same across consecutive frames while the tracked hand remains visible\&. If tracking of the hand is lost, the \fBLeap\fP Motion software may assign a new ID when it detects the hand in a future frame\&. "
.ti -1c
.RI "int \fBHandId\fP"
.br
.RI "The \fBHand\fP associated with a finger\&. "
.ti -1c
.RI "\fBVector\fP \fBTipPosition\fP"
.br
.RI "The tip position of this \fBFinger\fP\&. "
.ti -1c
.RI "\fBVector\fP \fBDirection\fP"
.br
.RI "The direction in which this finger or tool is pointing\&. The direction is expressed as a unit vector pointing in the same direction as the tip\&. "
.ti -1c
.RI "float \fBWidth\fP"
.br
.RI "The estimated width of the finger\&. "
.ti -1c
.RI "float \fBLength\fP"
.br
.RI "The estimated length of the finger\&. "
.ti -1c
.RI "bool \fBIsExtended\fP"
.br
.RI "Whether or not this \fBFinger\fP is in an extended posture\&. "
.ti -1c
.RI "float \fBTimeVisible\fP"
.br
.RI "The duration of time this \fBFinger\fP has been visible to the \fBLeap\fP Motion \fBController\fP\&. "
.in -1c
.SH "Detailed Description"
.PP 
The \fBFinger\fP class represents a tracked finger\&. 

Fingers are objects that the \fBLeap\fP Motion software has classified as a finger\&. Get valid \fBFinger\fP objects from a \fBFrame\fP or a \fBHand\fP object\&. 
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 21 of file Finger\&.cs\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBLeap\&.Finger\&.FingerType\fP\fC [strong]\fP"

.PP
Enumerates the names of the fingers\&. Members of this enumeration are returned by \fBFinger\&.Type()\fP to identify a \fBFinger\fP object\&. 
.PP
\fBSince:\fP
.RS 4
2\&.0 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITYPE_THUMB \fP\fP
.TP
\fB\fITYPE_INDEX \fP\fP
.TP
\fB\fITYPE_MIDDLE \fP\fP
.TP
\fB\fITYPE_RING \fP\fP
.TP
\fB\fITYPE_PINKY \fP\fP
.TP
\fB\fITYPE_UNKNOWN \fP\fP
.PP
Definition at line 168 of file Finger\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Leap\&.Finger\&.Finger ()"

.PP
Constructs a finger\&. An uninitialized finger is considered invalid\&. Get valid \fBFinger\fP objects from a \fBHand\fP object\&.
.PP
\fBSince:\fP
.RS 4
3\&.0 
.RE
.PP

.PP
Definition at line 32 of file Finger\&.cs\&.
.SS "Leap\&.Finger\&.Finger (long frameId, int handId, int fingerId, float timeVisible, \fBVector\fP tipPosition, \fBVector\fP direction, float width, float length, bool isExtended, \fBFingerType\fP type, \fBBone\fP metacarpal, \fBBone\fP proximal, \fBBone\fP intermediate, \fBBone\fP distal)"

.PP
Constructs a finger\&. Generally, you should not create your own finger objects\&. Such objects will not have valid tracking data\&. Get valid finger objects from a hand in a frame received from the service\&. 
.PP
\fBSince:\fP
.RS 4
3\&.0 
.RE
.PP

.PP
Definition at line 47 of file Finger\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBBone\fP Leap\&.Finger\&.Bone (\fBBone\&.BoneType\fP boneIx)"

.PP
The bone at a given bone index on this finger\&. 
.PP
\fBSince:\fP
.RS 4
2\&.0 
.RE
.PP

.PP
Definition at line 80 of file Finger\&.cs\&.
.SS "override string Leap\&.Finger\&.ToString ()"

.PP
A string containing a brief, human readable description of the \fBFinger\fP object\&. 
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 88 of file Finger\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBBone\fP [] Leap\&.Finger\&.bones = new \fBBone\fP[4]"

.PP
Definition at line 22 of file Finger\&.cs\&.
.SS "\fBVector\fP Leap\&.Finger\&.Direction"

.PP
The direction in which this finger or tool is pointing\&. The direction is expressed as a unit vector pointing in the same direction as the tip\&. 
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 130 of file Finger\&.cs\&.
.SS "int Leap\&.Finger\&.HandId"

.PP
The \fBHand\fP associated with a finger\&. 
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 117 of file Finger\&.cs\&.
.SS "int Leap\&.Finger\&.Id"

.PP
A unique ID assigned to this \fBFinger\fP object, whose value remains the same across consecutive frames while the tracked hand remains visible\&. If tracking of the hand is lost, the \fBLeap\fP Motion software may assign a new ID when it detects the hand in a future frame\&. Use the ID value to find this \fBFinger\fP object in future frames\&.
.PP
IDs should be from 1 to 100 (inclusive)\&. If more than 100 objects are tracked an IDs of -1 will be used until an ID in the defined range is available\&.
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 111 of file Finger\&.cs\&.
.SS "bool Leap\&.Finger\&.IsExtended"

.PP
Whether or not this \fBFinger\fP is in an extended posture\&. A finger is considered extended if it is extended straight from the hand as if pointing\&. A finger is not extended when it is bent down and curled towards the palm\&.
.PP
\fBSince:\fP
.RS 4
2\&.0 
.RE
.PP

.PP
Definition at line 153 of file Finger\&.cs\&.
.SS "float Leap\&.Finger\&.Length"

.PP
The estimated length of the finger\&. 
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 142 of file Finger\&.cs\&.
.SS "float Leap\&.Finger\&.TimeVisible"

.PP
The duration of time this \fBFinger\fP has been visible to the \fBLeap\fP Motion \fBController\fP\&. 
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 159 of file Finger\&.cs\&.
.SS "\fBVector\fP Leap\&.Finger\&.TipPosition"

.PP
The tip position of this \fBFinger\fP\&. 
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 123 of file Finger\&.cs\&.
.SS "\fBFinger\&.FingerType\fP Leap\&.Finger\&.Type"

.PP
The type of this finger\&. 
.PP
\fBSince:\fP
.RS 4
2\&.0 
.RE
.PP

.PP
Definition at line 96 of file Finger\&.cs\&.
.SS "float Leap\&.Finger\&.Width"

.PP
The estimated width of the finger\&. 
.PP
\fBSince:\fP
.RS 4
1\&.0 
.RE
.PP

.PP
Definition at line 136 of file Finger\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
