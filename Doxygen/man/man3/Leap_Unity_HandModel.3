.TH "Leap.Unity.HandModel" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Unity.HandModel
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBLeap\&.Unity\&.HandModelBase\fP\&.
.PP
Inherited by \fBLeap\&.Unity\&.RiggedHand\fP, and \fBLeap\&.Unity\&.SkeletalHand\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "Vector3 \fBGetPalmPosition\fP ()"
.br
.ti -1c
.RI "Quaternion \fBGetPalmRotation\fP ()"
.br
.ti -1c
.RI "Vector3 \fBGetPalmDirection\fP ()"
.br
.ti -1c
.RI "Vector3 \fBGetPalmNormal\fP ()"
.br
.ti -1c
.RI "Vector3 \fBGetArmDirection\fP ()"
.br
.ti -1c
.RI "Vector3 \fBGetArmCenter\fP ()"
.br
.ti -1c
.RI "float \fBGetArmLength\fP ()"
.br
.ti -1c
.RI "float \fBGetArmWidth\fP ()"
.br
.ti -1c
.RI "Vector3 \fBGetElbowPosition\fP ()"
.br
.ti -1c
.RI "Vector3 \fBGetWristPosition\fP ()"
.br
.ti -1c
.RI "Quaternion \fBGetArmRotation\fP ()"
.br
.ti -1c
.RI "override \fBHand\fP \fBGetLeapHand\fP ()"
.br
.ti -1c
.RI "override void \fBSetLeapHand\fP (\fBHand\fP hand)"
.br
.ti -1c
.RI "override void \fBInitHand\fP ()"
.br
.ti -1c
.RI "int \fBLeapID\fP ()"
.br
.ti -1c
.RI "abstract override void \fBUpdateHand\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const int \fBNUM_FINGERS\fP = 5"
.br
.ti -1c
.RI "float \fBhandModelPalmWidth\fP = 0\&.085f"
.br
.ti -1c
.RI "\fBFingerModel\fP [] \fBfingers\fP = new \fBFingerModel\fP[\fBNUM_FINGERS\fP]"
.br
.ti -1c
.RI "Transform \fBpalm\fP"
.br
.ti -1c
.RI "Transform \fBforearm\fP"
.br
.ti -1c
.RI "Transform \fBwristJoint\fP"
.br
.ti -1c
.RI "Transform \fBelbowJoint\fP"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBHand\fP \fBhand_\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "override \fBChirality\fP \fBHandedness\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "abstract override \fBModelType\fP \fBHandModelType\fP\fC [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The base class for all hand models, both graphics and physics\&.
.PP
This class serves as the interface between the HandController object and the concrete hand object containing the graphics and physics of a hand\&.
.PP
Subclasses of \fBHandModel\fP must implement \fBInitHand()\fP and \fBUpdateHand()\fP\&. The \fBUpdateHand()\fP function is called in the \fBUnity\fP Update() phase for graphics \fBHandModel\fP instances; and in the \fBUnity\fP FixedUpdate() phase for physics objects\&. \fBInitHand()\fP is called once, when the hand is created and is followed by a call to \fBUpdateHand()\fP\&. 
.PP
Definition at line 26 of file HandModel\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "Vector3 Leap\&.Unity\&.HandModel\&.GetArmCenter ()"
Calculates the center of the forearm in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Vector3 containing the \fBUnity\fP coordinates of the center of the forearm\&. 
.RE
.PP

.PP
Definition at line 128 of file HandModel\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.HandModel\&.GetArmDirection ()"
Calculates the direction vector of the forearm in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Vector3 representing the direction of the forearm (pointing from elbow to wrist)\&. 
.RE
.PP

.PP
Definition at line 115 of file HandModel\&.cs\&.
.SS "float Leap\&.Unity\&.HandModel\&.GetArmLength ()"
Returns the measured length of the forearm in meters\&. 
.PP
Definition at line 140 of file HandModel\&.cs\&.
.SS "Quaternion Leap\&.Unity\&.HandModel\&.GetArmRotation ()"
Calculates the rotation of the forearm in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Quaternion representing the rotation of the arm\&. 
.RE
.PP

.PP
Definition at line 180 of file HandModel\&.cs\&.
.SS "float Leap\&.Unity\&.HandModel\&.GetArmWidth ()"
Returns the measured width of the forearm in meters\&. 
.PP
Definition at line 145 of file HandModel\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.HandModel\&.GetElbowPosition ()"
Calculates the position of the elbow in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Vector3 containing the \fBUnity\fP coordinates of the elbow\&. 
.RE
.PP

.PP
Definition at line 152 of file HandModel\&.cs\&.
.SS "override \fBHand\fP Leap\&.Unity\&.HandModel\&.GetLeapHand ()\fC [virtual]\fP"
Returns the \fBLeap\fP \fBHand\fP object represented by this \fBHandModel\fP\&. Note that any physical quantities and directions obtained from the \fBLeap\fP \fBHand\fP object are relative to the \fBLeap\fP Motion coordinate system, which uses a right-handed axes and units of millimeters\&. 
.PP
Implements \fBLeap\&.Unity\&.HandModelBase\fP\&.
.PP
Definition at line 197 of file HandModel\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.HandModel\&.GetPalmDirection ()"
Calculates the direction vector of the hand in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Vector3 representing the direction of the hand\&. 
.RE
.PP

.PP
Definition at line 89 of file HandModel\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.HandModel\&.GetPalmNormal ()"
Calculates the normal vector projecting from the hand in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Vector3 representing the vector perpendicular to the palm\&. 
.RE
.PP

.PP
Definition at line 102 of file HandModel\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.HandModel\&.GetPalmPosition ()"
Calculates the position of the palm in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Vector3 containing the \fBUnity\fP coordinates of the palm position\&. 
.RE
.PP

.PP
Definition at line 67 of file HandModel\&.cs\&.
.SS "Quaternion Leap\&.Unity\&.HandModel\&.GetPalmRotation ()"
Calculates the rotation of the hand in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Quaternion representing the rotation of the hand\&. 
.RE
.PP

.PP
Definition at line 74 of file HandModel\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.HandModel\&.GetWristPosition ()"
Calculates the position of the wrist in global coordinates\&. 
.PP
\fBReturns:\fP
.RS 4
A Vector3 containing the \fBUnity\fP coordinates of the wrist\&. 
.RE
.PP

.PP
Definition at line 166 of file HandModel\&.cs\&.
.SS "override void Leap\&.Unity\&.HandModel\&.InitHand ()\fC [virtual]\fP"
Implement this function to initialise this hand after it is created\&. This function is called by the HandController during the \fBUnity\fP Update() phase when a new hand is detected by the \fBLeap\fP Motion device\&. 
.PP
Reimplemented from \fBLeap\&.Unity\&.HandModelBase\fP\&.
.PP
Reimplemented in \fBLeap\&.Unity\&.RiggedHand\fP, and \fBLeap\&.Unity\&.RigidHand\fP\&.
.PP
Definition at line 220 of file HandModel\&.cs\&.
.SS "int Leap\&.Unity\&.HandModel\&.LeapID ()"
Returns the ID associated with the hand in the \fBLeap\fP API\&. This ID is guaranteed to be unique among all hands in a frame, and is invariant for the lifetime of the hand model\&. 
.PP
Definition at line 234 of file HandModel\&.cs\&.
.SS "override void Leap\&.Unity\&.HandModel\&.SetLeapHand (\fBHand\fP hand)\fC [virtual]\fP"
Assigns a \fBLeap\fP \fBHand\fP object to this hand model\&. Note that the \fBLeap\fP \fBHand\fP objects are recreated every frame\&. The parent HandController calls this method to set or update the underlying hand\&. 
.PP
Implements \fBLeap\&.Unity\&.HandModelBase\fP\&.
.PP
Definition at line 206 of file HandModel\&.cs\&.
.SS "abstract override void Leap\&.Unity\&.HandModel\&.UpdateHand ()\fC [pure virtual]\fP"
Implement this function to update this hand once every game loop\&. For \fBHandModel\fP instances assigned to the HandController graphics hand list, the HandController calls this function during the \fBUnity\fP Update() phase\&. For \fBHandModel\fP instances in the physics hand list, the HandController calls this function in the FixedUpdate() phase\&. 
.PP
Implements \fBLeap\&.Unity\&.HandModelBase\fP\&.
.PP
Implemented in \fBLeap\&.Unity\&.RiggedHand\fP, \fBLeap\&.Unity\&.SkeletalHand\fP, and \fBLeap\&.Unity\&.RigidHand\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "Transform Leap\&.Unity\&.HandModel\&.elbowJoint"
Transform object for the elbow joint of this hand\&. 
.PP
Definition at line 58 of file HandModel\&.cs\&.
.SS "\fBFingerModel\fP [] Leap\&.Unity\&.HandModel\&.fingers = new \fBFingerModel\fP[\fBNUM_FINGERS\fP]"
The array of finger objects for this hand\&. The array is ordered from thumb (element 0) to pinky (element 4)\&. 
.PP
Definition at line 48 of file HandModel\&.cs\&.
.SS "Transform Leap\&.Unity\&.HandModel\&.forearm"
Transform object for the forearm object of this hand\&. 
.PP
Definition at line 54 of file HandModel\&.cs\&.
.SS "\fBHand\fP Leap\&.Unity\&.HandModel\&.hand_\fC [protected]\fP"
The \fBLeap\fP \fBHand\fP object this hand model represents\&. 
.PP
Definition at line 62 of file HandModel\&.cs\&.
.SS "float Leap\&.Unity\&.HandModel\&.handModelPalmWidth = 0\&.085f"
The model width of the hand in meters\&. This value is used with the measured value of the user's hand to scale the model proportionally\&. 
.PP
Definition at line 46 of file HandModel\&.cs\&.
.SS "const int Leap\&.Unity\&.HandModel\&.NUM_FINGERS = 5"
The number of fingers on a hand\&. 
.PP
Definition at line 41 of file HandModel\&.cs\&.
.SS "Transform Leap\&.Unity\&.HandModel\&.palm"
Transform object for the palm object of this hand\&. 
.PP
Definition at line 52 of file HandModel\&.cs\&.
.SS "Transform Leap\&.Unity\&.HandModel\&.wristJoint"
Transform object for the wrist joint of this hand\&. 
.PP
Definition at line 56 of file HandModel\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "override \fBChirality\fP Leap\&.Unity\&.HandModel\&.Handedness\fC [get]\fP, \fC [set]\fP"

.PP
Definition at line 30 of file HandModel\&.cs\&.
.SS "abstract override \fBModelType\fP Leap\&.Unity\&.HandModel\&.HandModelType\fC [get]\fP"

.PP
Definition at line 36 of file HandModel\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
