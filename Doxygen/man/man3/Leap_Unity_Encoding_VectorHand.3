.TH "Leap.Unity.Encoding.VectorHand" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Unity.Encoding.VectorHand \- A Vector-based encoding of a \fBLeap\fP \fBHand\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVectorHand\fP ()"
.br
.ti -1c
.RI "\fBVectorHand\fP (\fBHand\fP hand)"
.br
.RI "Constructs a \fBVectorHand\fP representation from a \fBLeap\fP hand\&. This allocates a vector array for the encoded hand data\&. "
.ti -1c
.RI "void \fBEncode\fP (\fBHand\fP fromHand)"
.br
.ti -1c
.RI "void \fBDecode\fP (\fBHand\fP intoHand)"
.br
.ti -1c
.RI "void \fBReadBytes\fP (byte[] bytes, ref int offset)"
.br
.RI "Fills this \fBVectorHand\fP with data read from the provided byte array, starting at the provided offset\&. "
.ti -1c
.RI "void \fBFillBytes\fP (byte[] bytesToFill, ref int offset)"
.br
.RI "Fills the provided byte array with a compressed, 86-byte form of this \fBVectorHand\fP, starting at the provided offset\&. "
.ti -1c
.RI "void \fBFillBytes\fP (byte[] bytesToFill)"
.br
.RI "Fills the provided byte array with a compressed, 86-byte form of this \fBVectorHand\fP\&. "
.ti -1c
.RI "void \fBReadBytes\fP (byte[] bytes, ref int offset, \fBHand\fP intoHand)"
.br
.RI "Shortcut for reading a VectorHand-encoded byte representation of a \fBLeap\fP hand and decoding it immediately into a \fBHand\fP object\&. "
.ti -1c
.RI "void \fBFillBytes\fP (byte[] bytes, ref int offset, \fBHand\fP fromHand)"
.br
.RI "Shortcut for encoding a \fBLeap\fP hand into a \fBVectorHand\fP representation and compressing it immediately into a byte representation\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static Vector3 \fBToWorld\fP (Vector3 localPoint, Vector3 localOrigin, Quaternion localRot)"
.br
.RI "Converts a local-space point to a world-space point given the local space's origin and rotation\&. "
.ti -1c
.RI "static Vector3 \fBToLocal\fP (Vector3 worldPoint, Vector3 localOrigin, Quaternion localRot)"
.br
.RI "Converts a world-space point to a local-space point given the local space's origin and rotation\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const int \fBNUM_JOINT_POSITIONS\fP = 25"
.br
.ti -1c
.RI "bool \fBisLeft\fP"
.br
.ti -1c
.RI "Vector3 \fBpalmPos\fP"
.br
.ti -1c
.RI "Quaternion \fBpalmRot\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "Vector3 [] \fBjointPositions\fP\fC [get]\fP"
.br
.ti -1c
.RI "int \fBnumBytesRequired\fP\fC [get]\fP"
.br
.RI "The number of bytes required to encode a \fBVectorHand\fP into its byte representation\&. The byte representation is compressed to 86 bytes\&. "
.in -1c
.SH "Detailed Description"
.PP 
A Vector-based encoding of a \fBLeap\fP \fBHand\fP\&. 

You can Encode a \fBVectorHand\fP from a \fBLeap\fP hand, Decode a \fBVectorHand\fP into a \fBLeap\fP hand, convert the \fBVectorHand\fP to a compressed byte representation using FillBytes, and decompress back into a \fBVectorHand\fP using FromBytes\&.
.PP
Also see CurlHand for a more compressed but slightly less articulated encoding\&. TODO: CurlHand not yet brought in from Networking module! 
.PP
Definition at line 26 of file VectorHand\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Leap\&.Unity\&.Encoding\&.VectorHand\&.VectorHand ()"

.PP
Definition at line 49 of file VectorHand\&.cs\&.
.SS "Leap\&.Unity\&.Encoding\&.VectorHand\&.VectorHand (\fBHand\fP hand)"

.PP
Constructs a \fBVectorHand\fP representation from a \fBLeap\fP hand\&. This allocates a vector array for the encoded hand data\&. Use a pooling strategy to avoid unnecessary allocation in runtime contexts\&. 
.PP
Definition at line 57 of file VectorHand\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void Leap\&.Unity\&.Encoding\&.VectorHand\&.Decode (\fBHand\fP intoHand)"

.PP
Definition at line 81 of file VectorHand\&.cs\&.
.SS "void Leap\&.Unity\&.Encoding\&.VectorHand\&.Encode (\fBHand\fP fromHand)"

.PP
Definition at line 63 of file VectorHand\&.cs\&.
.SS "void Leap\&.Unity\&.Encoding\&.VectorHand\&.FillBytes (byte [] bytesToFill, ref int offset)"

.PP
Fills the provided byte array with a compressed, 86-byte form of this \fBVectorHand\fP, starting at the provided offset\&. Throws an IndexOutOfRangeException if the provided byte array doesn't have enough space (starting from the offset) to write the number of bytes required\&. 
.PP
Definition at line 219 of file VectorHand\&.cs\&.
.SS "void Leap\&.Unity\&.Encoding\&.VectorHand\&.FillBytes (byte [] bytesToFill)"

.PP
Fills the provided byte array with a compressed, 86-byte form of this \fBVectorHand\fP\&. Throws an IndexOutOfRangeException if the provided byte array doesn't have enough space to write the number of bytes required (see VectorHand\&.BYTE_ENCODING_SIZE)\&. 
.PP
Definition at line 261 of file VectorHand\&.cs\&.
.SS "void Leap\&.Unity\&.Encoding\&.VectorHand\&.FillBytes (byte [] bytes, ref int offset, \fBHand\fP fromHand)"

.PP
Shortcut for encoding a \fBLeap\fP hand into a \fBVectorHand\fP representation and compressing it immediately into a byte representation\&. 
.PP
Definition at line 280 of file VectorHand\&.cs\&.
.SS "void Leap\&.Unity\&.Encoding\&.VectorHand\&.ReadBytes (byte [] bytes, ref int offset)"

.PP
Fills this \fBVectorHand\fP with data read from the provided byte array, starting at the provided offset\&. 
.PP
Definition at line 185 of file VectorHand\&.cs\&.
.SS "void Leap\&.Unity\&.Encoding\&.VectorHand\&.ReadBytes (byte [] bytes, ref int offset, \fBHand\fP intoHand)"

.PP
Shortcut for reading a VectorHand-encoded byte representation of a \fBLeap\fP hand and decoding it immediately into a \fBHand\fP object\&. 
.PP
Definition at line 271 of file VectorHand\&.cs\&.
.SS "static Vector3 Leap\&.Unity\&.Encoding\&.VectorHand\&.ToLocal (Vector3 worldPoint, Vector3 localOrigin, Quaternion localRot)\fC [static]\fP"

.PP
Converts a world-space point to a local-space point given the local space's origin and rotation\&. 
.PP
Definition at line 302 of file VectorHand\&.cs\&.
.SS "static Vector3 Leap\&.Unity\&.Encoding\&.VectorHand\&.ToWorld (Vector3 localPoint, Vector3 localOrigin, Quaternion localRot)\fC [static]\fP"

.PP
Converts a local-space point to a world-space point given the local space's origin and rotation\&. 
.PP
Definition at line 293 of file VectorHand\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "bool Leap\&.Unity\&.Encoding\&.VectorHand\&.isLeft"

.PP
Definition at line 32 of file VectorHand\&.cs\&.
.SS "const int Leap\&.Unity\&.Encoding\&.VectorHand\&.NUM_JOINT_POSITIONS = 25"

.PP
Definition at line 30 of file VectorHand\&.cs\&.
.SS "Vector3 Leap\&.Unity\&.Encoding\&.VectorHand\&.palmPos"

.PP
Definition at line 33 of file VectorHand\&.cs\&.
.SS "Quaternion Leap\&.Unity\&.Encoding\&.VectorHand\&.palmRot"

.PP
Definition at line 34 of file VectorHand\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "Vector3 [] Leap\&.Unity\&.Encoding\&.VectorHand\&.jointPositions\fC [get]\fP"

.PP
Definition at line 38 of file VectorHand\&.cs\&.
.SS "int Leap\&.Unity\&.Encoding\&.VectorHand\&.numBytesRequired\fC [get]\fP"

.PP
The number of bytes required to encode a \fBVectorHand\fP into its byte representation\&. The byte representation is compressed to 86 bytes\&. The first byte determines chirality, the camera-local hand position uses 6 bytes, the camera-local hand rotation uses 4 bytes, and each joint position component is encoded in hand-local space using 3 bytes\&. 
.PP
Definition at line 179 of file VectorHand\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
