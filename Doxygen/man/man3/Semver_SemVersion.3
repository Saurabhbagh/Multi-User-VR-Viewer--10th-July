.TH "Semver.SemVersion" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Semver.SemVersion \- A semantic version implementation\&. Conforms to v2\&.0\&.0 of http://semver.org/  

.SH SYNOPSIS
.br
.PP
.PP
Inherits IComparable< SemVersion >, IComparable, and ISerializable\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSemVersion\fP (int major, int minor=0, int patch=0, string prerelease='', string build='')"
.br
.RI "Initializes a new instance of the \fBSemVersion\fP class\&. "
.ti -1c
.RI "\fBSemVersion\fP (Version version)"
.br
.RI "Initializes a new instance of the \fBSemVersion\fP class\&. "
.ti -1c
.RI "\fBSemVersion\fP \fBChange\fP (int? major=null, int? minor=null, int? patch=null, string prerelease=null, string build=null)"
.br
.RI "Make a copy of the current instance with optional altered fields\&. "
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.RI "Returns a System\&.String that represents this instance\&. "
.ti -1c
.RI "int \fBCompareTo\fP (object obj)"
.br
.RI "Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object\&. "
.ti -1c
.RI "int \fBCompareTo\fP (\fBSemVersion\fP other)"
.br
.RI "Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object\&. "
.ti -1c
.RI "bool \fBPrecedenceMatches\fP (\fBSemVersion\fP other)"
.br
.RI "Compares to semantic versions by precedence\&. This does the same as a Equals, but ignores the build information\&. "
.ti -1c
.RI "int \fBCompareByPrecedence\fP (\fBSemVersion\fP other)"
.br
.RI "Compares to semantic versions by precedence\&. This does the same as a Equals, but ignores the build information\&. "
.ti -1c
.RI "override bool \fBEquals\fP (object obj)"
.br
.RI "Determines whether the specified System\&.Object is equal to this instance\&. "
.ti -1c
.RI "override int \fBGetHashCode\fP ()"
.br
.RI "Returns a hash code for this instance\&. "
.ti -1c
.RI "void \fBGetObjectData\fP (SerializationInfo info, StreamingContext context)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSemVersion\fP \fBParse\fP (string version, bool strict=false)"
.br
.RI "Parses the specified string to a semantic version\&. "
.ti -1c
.RI "static bool \fBTryParse\fP (string version, out \fBSemVersion\fP semver, bool strict=false)"
.br
.RI "Parses the specified string to a semantic version\&. "
.ti -1c
.RI "static bool \fBEquals\fP (\fBSemVersion\fP versionA, \fBSemVersion\fP versionB)"
.br
.RI "Tests the specified versions for equality\&. "
.ti -1c
.RI "static int \fBCompare\fP (\fBSemVersion\fP versionA, \fBSemVersion\fP versionB)"
.br
.RI "Compares the specified versions\&. "
.ti -1c
.RI "static implicit \fBoperator SemVersion\fP (string version)"
.br
.RI "Implicit conversion from string to \fBSemVersion\fP\&. "
.ti -1c
.RI "static bool \fBoperator==\fP (\fBSemVersion\fP left, \fBSemVersion\fP right)"
.br
.RI "The override of the equals operator\&. "
.ti -1c
.RI "static bool \fBoperator !=\fP (\fBSemVersion\fP left, \fBSemVersion\fP right)"
.br
.RI "The override of the un-equal operator\&. "
.ti -1c
.RI "static bool \fBoperator >\fP (\fBSemVersion\fP left, \fBSemVersion\fP right)"
.br
.RI "The override of the greater operator\&. "
.ti -1c
.RI "static bool \fBoperator >=\fP (\fBSemVersion\fP left, \fBSemVersion\fP right)"
.br
.RI "The override of the greater than or equal operator\&. "
.ti -1c
.RI "static bool \fBoperator<\fP (\fBSemVersion\fP left, \fBSemVersion\fP right)"
.br
.RI "The override of the less operator\&. "
.ti -1c
.RI "static bool \fBoperator<=\fP (\fBSemVersion\fP left, \fBSemVersion\fP right)"
.br
.RI "The override of the less than or equal operator\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "int \fBMajor\fP\fC [get]\fP"
.br
.RI "Gets the major version\&. "
.ti -1c
.RI "int \fBMinor\fP\fC [get]\fP"
.br
.RI "Gets the minor version\&. "
.ti -1c
.RI "int \fBPatch\fP\fC [get]\fP"
.br
.RI "Gets the patch version\&. "
.ti -1c
.RI "string \fBPrerelease\fP\fC [get]\fP"
.br
.RI "Gets the pre-release version\&. "
.ti -1c
.RI "string \fBBuild\fP\fC [get]\fP"
.br
.RI "Gets the build version\&. "
.in -1c
.SH "Detailed Description"
.PP 
A semantic version implementation\&. Conforms to v2\&.0\&.0 of http://semver.org/ 


.PP
Definition at line 43 of file SemVersion\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Semver\&.SemVersion\&.SemVersion (int major, int minor = \fC0\fP, int patch = \fC0\fP, string prerelease = \fC''\fP, string build = \fC''\fP)"

.PP
Initializes a new instance of the \fBSemVersion\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fImajor\fP The major version\&.
.br
\fIminor\fP The minor version\&.
.br
\fIpatch\fP The patch version\&.
.br
\fIprerelease\fP The prerelease version (eg\&. 'alpha')\&.
.br
\fIbuild\fP The build eg ('nightly\&.232')\&.
.RE
.PP

.PP
Definition at line 85 of file SemVersion\&.cs\&.
.SS "Semver\&.SemVersion\&.SemVersion (Version version)"

.PP
Initializes a new instance of the \fBSemVersion\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIversion\fP The System\&.Version that is used to initialize the Major, Minor, Patch and Build properties\&.
.RE
.PP

.PP
Definition at line 100 of file SemVersion\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBSemVersion\fP Semver\&.SemVersion\&.Change (int? major = \fCnull\fP, int? minor = \fCnull\fP, int? patch = \fCnull\fP, string prerelease = \fCnull\fP, string build = \fCnull\fP)"

.PP
Make a copy of the current instance with optional altered fields\&. 
.PP
\fBParameters:\fP
.RS 4
\fImajor\fP The major version\&.
.br
\fIminor\fP The minor version\&.
.br
\fIpatch\fP The patch version\&.
.br
\fIprerelease\fP The prerelease text\&.
.br
\fIbuild\fP The build text\&.
.RE
.PP
\fBReturns:\fP
.RS 4
The new version object\&.
.RE
.PP

.PP
Definition at line 241 of file SemVersion\&.cs\&.
.SS "static int Semver\&.SemVersion\&.Compare (\fBSemVersion\fP versionA, \fBSemVersion\fP versionB)\fC [static]\fP"

.PP
Compares the specified versions\&. 
.PP
\fBParameters:\fP
.RS 4
\fIversionA\fP The version to compare to\&.
.br
\fIversionB\fP The version to compare against\&.
.RE
.PP
\fBReturns:\fP
.RS 4
If versionA < versionB \fC< 0\fP, if versionA > versionB \fC> 0\fP, if versionA is equal to versionB \fC0\fP\&.
.RE
.PP

.PP
Definition at line 225 of file SemVersion\&.cs\&.
.SS "int Semver\&.SemVersion\&.CompareByPrecedence (\fBSemVersion\fP other)"

.PP
Compares to semantic versions by precedence\&. This does the same as a Equals, but ignores the build information\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP The semantic version\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A value that indicates the relative order of the objects being compared\&. The return value has these meanings: Value Meaning Less than zero This instance precedes \fIother\fP  in the version precedence\&. Zero This instance has the same precedence as \fIother\fP \&. i Greater than zero This instance has creater precedence as \fIother\fP \&. 
.RE
.PP

.PP
Definition at line 373 of file SemVersion\&.cs\&.
.SS "int Semver\&.SemVersion\&.CompareTo (object obj)"

.PP
Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP An object to compare with this instance\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A value that indicates the relative order of the objects being compared\&. The return value has these meanings: Value Meaning Less than zero This instance precedes \fIobj\fP  in the sort order\&. Zero This instance occurs in the same position in the sort order as \fIobj\fP \&. i Greater than zero This instance follows \fIobj\fP  in the sort order\&. 
.RE
.PP

.PP
Definition at line 321 of file SemVersion\&.cs\&.
.SS "int Semver\&.SemVersion\&.CompareTo (\fBSemVersion\fP other)"

.PP
Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP An object to compare with this instance\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A value that indicates the relative order of the objects being compared\&. The return value has these meanings: Value Meaning Less than zero This instance precedes \fIother\fP  in the sort order\&. Zero This instance occurs in the same position in the sort order as \fIother\fP \&. i Greater than zero This instance follows \fIother\fP  in the sort order\&. 
.RE
.PP

.PP
Definition at line 339 of file SemVersion\&.cs\&.
.SS "static bool Semver\&.SemVersion\&.Equals (\fBSemVersion\fP versionA, \fBSemVersion\fP versionB)\fC [static]\fP"

.PP
Tests the specified versions for equality\&. 
.PP
\fBParameters:\fP
.RS 4
\fIversionA\fP The first version\&.
.br
\fIversionB\fP The second version\&.
.RE
.PP
\fBReturns:\fP
.RS 4
If versionA is equal to versionB \fCtrue\fP, else \fCfalse\fP\&.
.RE
.PP

.PP
Definition at line 211 of file SemVersion\&.cs\&.
.SS "override bool Semver\&.SemVersion\&.Equals (object obj)"

.PP
Determines whether the specified System\&.Object is equal to this instance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP The System\&.Object to compare with this instance\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fCtrue\fP if the specified System\&.Object is equal to this instance; otherwise, \fCfalse\fP\&. 
.RE
.PP

.PP
Definition at line 442 of file SemVersion\&.cs\&.
.SS "override int Semver\&.SemVersion\&.GetHashCode ()"

.PP
Returns a hash code for this instance\&. 
.PP
\fBReturns:\fP
.RS 4
A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table\&. 
.RE
.PP

.PP
Definition at line 465 of file SemVersion\&.cs\&.
.SS "void Semver\&.SemVersion\&.GetObjectData (SerializationInfo info, StreamingContext context)"

.PP
Definition at line 480 of file SemVersion\&.cs\&.
.SS "static bool Semver\&.SemVersion\&.operator != (\fBSemVersion\fP left, \fBSemVersion\fP right)\fC [static]\fP"

.PP
The override of the un-equal operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP The left value\&.
.br
\fIright\fP The right value\&.
.RE
.PP
\fBReturns:\fP
.RS 4
If left is not equal to right \fCtrue\fP, else \fCfalse\fP\&.
.RE
.PP

.PP
Definition at line 514 of file SemVersion\&.cs\&.
.SS "static bool Semver\&.SemVersion\&.operator > (\fBSemVersion\fP left, \fBSemVersion\fP right)\fC [static]\fP"

.PP
The override of the greater operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP The left value\&.
.br
\fIright\fP The right value\&.
.RE
.PP
\fBReturns:\fP
.RS 4
If left is greater than right \fCtrue\fP, else \fCfalse\fP\&.
.RE
.PP

.PP
Definition at line 525 of file SemVersion\&.cs\&.
.SS "static bool Semver\&.SemVersion\&.operator >= (\fBSemVersion\fP left, \fBSemVersion\fP right)\fC [static]\fP"

.PP
The override of the greater than or equal operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP The left value\&.
.br
\fIright\fP The right value\&.
.RE
.PP
\fBReturns:\fP
.RS 4
If left is greater than or equal to right \fCtrue\fP, else \fCfalse\fP\&.
.RE
.PP

.PP
Definition at line 536 of file SemVersion\&.cs\&.
.SS "static implicit Semver\&.SemVersion\&.operator \fBSemVersion\fP (string version)\fC [static]\fP"

.PP
Implicit conversion from string to \fBSemVersion\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIversion\fP The semantic version\&.
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBSemVersion\fP object\&.
.RE
.PP

.PP
Definition at line 492 of file SemVersion\&.cs\&.
.SS "static bool Semver\&.SemVersion\&.operator< (\fBSemVersion\fP left, \fBSemVersion\fP right)\fC [static]\fP"

.PP
The override of the less operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP The left value\&.
.br
\fIright\fP The right value\&.
.RE
.PP
\fBReturns:\fP
.RS 4
If left is less than right \fCtrue\fP, else \fCfalse\fP\&.
.RE
.PP

.PP
Definition at line 547 of file SemVersion\&.cs\&.
.SS "static bool Semver\&.SemVersion\&.operator<= (\fBSemVersion\fP left, \fBSemVersion\fP right)\fC [static]\fP"

.PP
The override of the less than or equal operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP The left value\&.
.br
\fIright\fP The right value\&.
.RE
.PP
\fBReturns:\fP
.RS 4
If left is less than or equal to right \fCtrue\fP, else \fCfalse\fP\&.
.RE
.PP

.PP
Definition at line 558 of file SemVersion\&.cs\&.
.SS "static bool Semver\&.SemVersion\&.operator== (\fBSemVersion\fP left, \fBSemVersion\fP right)\fC [static]\fP"

.PP
The override of the equals operator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP The left value\&.
.br
\fIright\fP The right value\&.
.RE
.PP
\fBReturns:\fP
.RS 4
If left is equal to right \fCtrue\fP, else \fCfalse\fP\&.
.RE
.PP

.PP
Definition at line 503 of file SemVersion\&.cs\&.
.SS "static \fBSemVersion\fP Semver\&.SemVersion\&.Parse (string version, bool strict = \fCfalse\fP)\fC [static]\fP"

.PP
Parses the specified string to a semantic version\&. 
.PP
\fBParameters:\fP
.RS 4
\fIversion\fP The version string\&.
.br
\fIstrict\fP If set to \fCtrue\fP minor and patch version are required, else they default to 0\&.
.RE
.PP
\fBReturns:\fP
.RS 4
The \fBSemVersion\fP object\&.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fISystem\&.InvalidOperationException\fP When a invalid version string is passed\&.
.RE
.PP

.PP
Definition at line 132 of file SemVersion\&.cs\&.
.SS "bool Semver\&.SemVersion\&.PrecedenceMatches (\fBSemVersion\fP other)"

.PP
Compares to semantic versions by precedence\&. This does the same as a Equals, but ignores the build information\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP The semantic version\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fCtrue\fP if the version precedence matches\&.
.RE
.PP

.PP
Definition at line 357 of file SemVersion\&.cs\&.
.SS "override string Semver\&.SemVersion\&.ToString ()"

.PP
Returns a System\&.String that represents this instance\&. 
.PP
\fBReturns:\fP
.RS 4
A System\&.String that represents this instance\&. 
.RE
.PP

.PP
Definition at line 298 of file SemVersion\&.cs\&.
.SS "static bool Semver\&.SemVersion\&.TryParse (string version, out \fBSemVersion\fP semver, bool strict = \fCfalse\fP)\fC [static]\fP"

.PP
Parses the specified string to a semantic version\&. 
.PP
\fBParameters:\fP
.RS 4
\fIversion\fP The version string\&.
.br
\fIsemver\fP When the method returns, contains a \fBSemVersion\fP instance equivalent to the version string passed in, if the version string was valid, or \fCnull\fP if the version string was not valid\&.
.br
\fIstrict\fP If set to \fCtrue\fP minor and patch version are required, else they default to 0\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fCFalse\fP when a invalid version string is passed, otherwise \fCtrue\fP\&.
.RE
.PP

.PP
Definition at line 191 of file SemVersion\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "string Semver\&.SemVersion\&.Build\fC [get]\fP"

.PP
Gets the build version\&. The build version\&. 
.PP
Definition at line 290 of file SemVersion\&.cs\&.
.SS "int Semver\&.SemVersion\&.Major\fC [get]\fP"

.PP
Gets the major version\&. The major version\&. 
.PP
Definition at line 258 of file SemVersion\&.cs\&.
.SS "int Semver\&.SemVersion\&.Minor\fC [get]\fP"

.PP
Gets the minor version\&. The minor version\&. 
.PP
Definition at line 266 of file SemVersion\&.cs\&.
.SS "int Semver\&.SemVersion\&.Patch\fC [get]\fP"

.PP
Gets the patch version\&. The patch version\&. 
.PP
Definition at line 274 of file SemVersion\&.cs\&.
.SS "string Semver\&.SemVersion\&.Prerelease\fC [get]\fP"

.PP
Gets the pre-release version\&. The pre-release version\&. 
.PP
Definition at line 282 of file SemVersion\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
