.TH "TMPro.TMP_Text" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TMPro.TMP_Text \- Base class which contains common properties and functions shared between the \fBTextMeshPro\fP and \fBTextMeshProUGUI\fP component\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MaskableGraphic\&.
.PP
Inherited by \fBTMPro\&.TextMeshPro\fP, and \fBTMPro\&.TextMeshProUGUI\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBForceMeshUpdate\fP ()"
.br
.RI "Function to force the regeneration of the text object\&. "
.ti -1c
.RI "virtual void \fBForceMeshUpdate\fP (bool ignoreActiveState)"
.br
.RI "Method used for resetting vertex layout when switching to and from Volumetric Text mode\&. "
.ti -1c
.RI "virtual void \fBUpdateGeometry\fP (Mesh \fBmesh\fP, int index)"
.br
.RI "Function to force the regeneration of the text object\&. "
.ti -1c
.RI "virtual void \fBUpdateVertexData\fP (\fBTMP_VertexDataUpdateFlags\fP flags)"
.br
.RI "Function to push the updated vertex data into the mesh and renderer\&. "
.ti -1c
.RI "virtual void \fBUpdateVertexData\fP ()"
.br
.RI "Function to push the updated vertex data into the mesh and renderer\&. "
.ti -1c
.RI "virtual void \fBSetVertices\fP (Vector3[] vertices)"
.br
.RI "Function to push a new set of vertices to the mesh\&. "
.ti -1c
.RI "virtual void \fBUpdateMeshPadding\fP ()"
.br
.RI "Function to be used to force recomputing of character padding when Shader / Material properties have been changed via script\&. "
.ti -1c
.RI "override void \fBCrossFadeColor\fP (Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha)"
.br
.ti -1c
.RI "override void \fBCrossFadeAlpha\fP (float \fBalpha\fP, float duration, bool ignoreTimeScale)"
.br
.RI "Tweens the alpha of the CanvasRenderer color associated with this Graphic\&. "
.ti -1c
.RI "void \fBSetText\fP (string \fBtext\fP)"
.br
.ti -1c
.RI "void \fBSetText\fP (string \fBtext\fP, bool syncTextInputBox)"
.br
.ti -1c
.RI "void \fBSetText\fP (string \fBtext\fP, float arg0)"
.br
.ti -1c
.RI "void \fBSetText\fP (string \fBtext\fP, float arg0, float arg1)"
.br
.ti -1c
.RI "void \fBSetText\fP (string \fBtext\fP, float arg0, float arg1, float arg2)"
.br
.ti -1c
.RI "void \fBSetText\fP (StringBuilder \fBtext\fP)"
.br
.RI "Set the text using a StringBuilder\&. "
.ti -1c
.RI "void \fBSetCharArray\fP (char[] sourceText)"
.br
.RI "Character array containing the text to be displayed\&. "
.ti -1c
.RI "void \fBSetCharArray\fP (char[] sourceText, int start, int length)"
.br
.RI "Character array containing the text to be displayed\&. "
.ti -1c
.RI "void \fBSetCharArray\fP (int[] sourceText, int start, int length)"
.br
.RI "Character array containing the text to be displayed\&. "
.ti -1c
.RI "Vector2 \fBGetPreferredValues\fP ()"
.br
.RI "Function to Calculate the Preferred Width and Height of the text object\&. "
.ti -1c
.RI "Vector2 \fBGetPreferredValues\fP (float width, float height)"
.br
.RI "Function to Calculate the Preferred Width and Height of the text object given the provided width and height\&. "
.ti -1c
.RI "Vector2 \fBGetPreferredValues\fP (string \fBtext\fP)"
.br
.RI "Function to Calculate the Preferred Width and Height of the text object given a certain string\&. "
.ti -1c
.RI "Vector2 \fBGetPreferredValues\fP (string \fBtext\fP, float width, float height)"
.br
.RI "Function to Calculate the Preferred Width and Height of the text object given a certain string and size of text container\&. "
.ti -1c
.RI "Vector2 \fBGetRenderedValues\fP ()"
.br
.RI "Method returning the rendered width and height of the text object\&. "
.ti -1c
.RI "Vector2 \fBGetRenderedValues\fP (bool onlyVisibleCharacters)"
.br
.ti -1c
.RI "virtual \fBTMP_TextInfo\fP \fBGetTextInfo\fP (string \fBtext\fP)"
.br
.RI "Function used to evaluate the length of a text string\&. "
.ti -1c
.RI "virtual void \fBComputeMarginSize\fP ()"
.br
.RI "Function to force an update of the margin size\&. "
.ti -1c
.RI "virtual void \fBClearMesh\fP ()"
.br
.RI "Function to clear the geometry of the Primary and Sub Text objects\&. "
.ti -1c
.RI "virtual void \fBClearMesh\fP (bool uploadGeometry)"
.br
.RI "Function to clear the geometry of the Primary and Sub Text objects\&. "
.ti -1c
.RI "virtual string \fBGetParsedText\fP ()"
.br
.RI "Function which returns the text after it has been parsed and rich text tags removed\&. "
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum \fBTextInputSources\fP { \fBTextInputSources\&.Text\fP = 0, \fBTextInputSources\&.SetText\fP = 1, \fBTextInputSources\&.SetCharArray\fP = 2, \fBTextInputSources\&.String\fP = 3 }"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBLoadFontAsset\fP ()"
.br
.RI "Method which derived classes need to override to load Font Assets\&. "
.ti -1c
.RI "virtual void \fBSetSharedMaterial\fP (Material mat)"
.br
.RI "Function called internally when a new shared material is assigned via the fontSharedMaterial property\&. "
.ti -1c
.RI "virtual Material \fBGetMaterial\fP (Material mat)"
.br
.RI "Function called internally when a new material is assigned via the fontMaterial property\&. "
.ti -1c
.RI "virtual void \fBSetFontBaseMaterial\fP (Material mat)"
.br
.RI "Function called internally when assigning a new base material\&. "
.ti -1c
.RI "virtual Material [] \fBGetSharedMaterials\fP ()"
.br
.RI "Method which returns an array containing the materials used by the text object\&. "
.ti -1c
.RI "virtual void \fBSetSharedMaterials\fP (Material[] materials)"
.br
.ti -1c
.RI "virtual Material [] \fBGetMaterials\fP (Material[] mats)"
.br
.RI "Method returning instances of the materials used by the text object\&. "
.ti -1c
.RI "virtual Material \fBCreateMaterialInstance\fP (Material source)"
.br
.RI "Method to set the materials of the text and sub text objects\&. "
.ti -1c
.RI "void \fBSetVertexColorGradient\fP (\fBTMP_ColorGradient\fP gradient)"
.br
.ti -1c
.RI "void \fBSetTextSortingOrder\fP (\fBVertexSortingOrder\fP order)"
.br
.RI "Function to control the sorting of the geometry of the text object\&. "
.ti -1c
.RI "void \fBSetTextSortingOrder\fP (int[] order)"
.br
.RI "Function to sort the geometry of the text object in accordance to the provided order\&. "
.ti -1c
.RI "virtual void \fBSetFaceColor\fP (Color32 \fBcolor\fP)"
.br
.RI "Function called internally to set the face color of the material\&. This will results in an instance of the material\&. "
.ti -1c
.RI "virtual void \fBSetOutlineColor\fP (Color32 \fBcolor\fP)"
.br
.RI "Function called internally to set the outline color of the material\&. This will results in an instance of the material\&. "
.ti -1c
.RI "virtual void \fBSetOutlineThickness\fP (float thickness)"
.br
.RI "Function called internally to set the outline thickness property of the material\&. This will results in an instance of the material\&. "
.ti -1c
.RI "virtual void \fBSetShaderDepth\fP ()"
.br
.RI "Set the Render Queue and ZTest mode on the current material "
.ti -1c
.RI "virtual void \fBSetCulling\fP ()"
.br
.RI "Set the culling mode on the material\&. "
.ti -1c
.RI "virtual float \fBGetPaddingForMaterial\fP ()"
.br
.RI "Get the padding value for the currently assigned material "
.ti -1c
.RI "virtual float \fBGetPaddingForMaterial\fP (Material mat)"
.br
.RI "Get the padding value for the given material "
.ti -1c
.RI "virtual Vector3 [] \fBGetTextContainerLocalCorners\fP ()"
.br
.RI "Method to return the local corners of the Text Container or RectTransform\&. "
.ti -1c
.RI "virtual void \fBInternalCrossFadeColor\fP (Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha)"
.br
.ti -1c
.RI "virtual void \fBInternalCrossFadeAlpha\fP (float \fBalpha\fP, float duration, bool ignoreTimeScale)"
.br
.ti -1c
.RI "void \fBParseInputText\fP ()"
.br
.RI "Method to parse the input text based on its source "
.ti -1c
.RI "void \fBSetTextArrayToCharArray\fP (char[] sourceText, ref int[] charBuffer)"
.br
.RI "Copies Content of formatted \fBSetText()\fP to charBuffer\&. "
.ti -1c
.RI "void \fBStringToCharArray\fP (string sourceText, ref int[] charBuffer)"
.br
.RI "Method to store the content of a string into an integer array\&. "
.ti -1c
.RI "void \fBStringBuilderToIntArray\fP (StringBuilder sourceText, ref int[] charBuffer)"
.br
.RI "Copy contents of StringBuilder into int array\&. "
.ti -1c
.RI "void \fBAddFloatToCharArray\fP (float number, ref int index, int precision)"
.br
.RI "Function used in conjunction with \fBSetText()\fP "
.ti -1c
.RI "void \fBAddIntToCharArray\fP (int number, ref int index, int precision)"
.br
.RI "// Function used in conjunction with \fBSetText()\fP "
.ti -1c
.RI "virtual int \fBSetArraySizes\fP (int[] chars)"
.br
.RI "Method used to determine the number of visible characters and required buffer allocations\&. "
.ti -1c
.RI "virtual void \fBGenerateTextMesh\fP ()"
.br
.RI "Method which parses the text input, does the layout of the text as well as generating the geometry\&. "
.ti -1c
.RI "float \fBGetPreferredWidth\fP ()"
.br
.RI "Method to calculate the preferred width of a text object\&. "
.ti -1c
.RI "float \fBGetPreferredWidth\fP (Vector2 \fBmargin\fP)"
.br
.RI "Method to calculate the preferred width of a text object\&. "
.ti -1c
.RI "float \fBGetPreferredHeight\fP ()"
.br
.RI "Method to calculate the preferred height of a text object\&. "
.ti -1c
.RI "float \fBGetPreferredHeight\fP (Vector2 \fBmargin\fP)"
.br
.RI "Method to calculate the preferred height of a text object\&. "
.ti -1c
.RI "float \fBGetRenderedWidth\fP ()"
.br
.RI "Method returning the rendered width of the text object\&. "
.ti -1c
.RI "float \fBGetRenderedWidth\fP (bool onlyVisibleCharacters)"
.br
.RI "Method returning the rendered width of the text object\&. "
.ti -1c
.RI "float \fBGetRenderedHeight\fP ()"
.br
.RI "Method returning the rendered height of the text object\&. "
.ti -1c
.RI "float \fBGetRenderedHeight\fP (bool onlyVisibleCharacters)"
.br
.RI "Method returning the rendered height of the text object\&. "
.ti -1c
.RI "virtual Vector2 \fBCalculatePreferredValues\fP (float defaultFontSize, Vector2 marginSize, bool ignoreTextAutoSizing)"
.br
.RI "Method to calculate the preferred width and height of the text object\&. "
.ti -1c
.RI "virtual Bounds \fBGetCompoundBounds\fP ()"
.br
.RI "Method returning the compound bounds of the text object and child sub objects\&. "
.ti -1c
.RI "Bounds \fBGetTextBounds\fP ()"
.br
.RI "Method which returns the bounds of the text object; "
.ti -1c
.RI "Bounds \fBGetTextBounds\fP (bool onlyVisibleCharacters)"
.br
.RI "Method which returns the bounds of the text object; "
.ti -1c
.RI "virtual void \fBAdjustLineOffset\fP (int startIndex, int endIndex, float offset)"
.br
.RI "Method to adjust line spacing as a result of using different fonts or font point size\&. "
.ti -1c
.RI "void \fBResizeLineExtents\fP (int size)"
.br
.RI "Function to increase the size of the Line \fBExtents\fP Array\&. "
.ti -1c
.RI "void \fBSaveWordWrappingState\fP (ref \fBWordWrapState\fP state, int index, int count)"
.br
.RI "Function used in conjunction with GetTextInfo to figure out Array allocations\&. "
.ti -1c
.RI "int \fBRestoreWordWrappingState\fP (ref \fBWordWrapState\fP state)"
.br
.RI "Restore the State of various variables used in the mesh creation loop\&. "
.ti -1c
.RI "virtual void \fBSaveGlyphVertexInfo\fP (float padding, float style_padding, Color32 vertexColor)"
.br
.RI "Store vertex information for each character\&. "
.ti -1c
.RI "virtual void \fBSaveSpriteVertexInfo\fP (Color32 vertexColor)"
.br
.RI "Store vertex information for each sprite\&. "
.ti -1c
.RI "virtual void \fBFillCharacterVertexBuffers\fP (int i, int index_X4)"
.br
.RI "Store vertex attributes into the appropriate \fBTMP_MeshInfo\fP\&. "
.ti -1c
.RI "virtual void \fBFillCharacterVertexBuffers\fP (int i, int index_X4, bool isVolumetric)"
.br
.ti -1c
.RI "virtual void \fBFillSpriteVertexBuffers\fP (int i, int index_X4)"
.br
.RI "Fill Vertex Buffers for Sprites "
.ti -1c
.RI "virtual void \fBDrawUnderlineMesh\fP (Vector3 start, Vector3 end, ref int index, float startScale, float endScale, float maxScale, float sdfScale, Color32 underlineColor)"
.br
.RI "Method to add the underline geometry\&. "
.ti -1c
.RI "virtual void \fBDrawTextHighlight\fP (Vector3 start, Vector3 end, ref int index, Color32 highlightColor)"
.br
.ti -1c
.RI "void \fBLoadDefaultSettings\fP ()"
.br
.RI "Internal function used to load the default settings of text objects\&. "
.ti -1c
.RI "void \fBGetSpecialCharacters\fP (\fBTMP_FontAsset\fP fontAsset)"
.br
.RI "Method used to find and cache references to the Underline and Ellipsis characters\&. "
.ti -1c
.RI "void \fBReplaceTagWithCharacter\fP (int[] chars, int insertionIndex, int tagLength, char c)"
.br
.RI "Replace a given number of characters (tag) in the array with a new character and shift subsequent characters in the array\&. "
.ti -1c
.RI "\fBTMP_FontAsset\fP \fBGetFontAssetForWeight\fP (int \fBfontWeight\fP)"
.br
.ti -1c
.RI "virtual void \fBSetActiveSubMeshes\fP (bool state)"
.br
.RI "Method to Enable or Disable child SubMesh objects\&. "
.ti -1c
.RI "virtual void \fBClearSubMeshObjects\fP ()"
.br
.RI "Destroy Sub Mesh Objects\&. "
.ti -1c
.RI "Vector2 \fBPackUV\fP (float x, float y, float scale)"
.br
.RI "Function to pack scale information in the UV2 Channel\&. "
.ti -1c
.RI "float \fBPackUV\fP (float x, float y)"
.br
.ti -1c
.RI "int \fBHexToInt\fP (char hex)"
.br
.RI "Function to pack scale information in the UV2 Channel\&. "
.ti -1c
.RI "int \fBGetUTF16\fP (string \fBtext\fP, int i)"
.br
.RI "Convert UTF-16 Hex to Char "
.ti -1c
.RI "int \fBGetUTF16\fP (StringBuilder \fBtext\fP, int i)"
.br
.RI "Convert UTF-16 Hex to Char "
.ti -1c
.RI "int \fBGetUTF32\fP (string \fBtext\fP, int i)"
.br
.RI "Convert UTF-32 Hex to Char "
.ti -1c
.RI "int \fBGetUTF32\fP (StringBuilder \fBtext\fP, int i)"
.br
.RI "Convert UTF-32 Hex to Char "
.ti -1c
.RI "Color32 \fBHexCharsToColor\fP (char[] hexChars, int tagCount)"
.br
.RI "Method to convert Hex color values to Color32 "
.ti -1c
.RI "Color32 \fBHexCharsToColor\fP (char[] hexChars, int startIndex, int length)"
.br
.RI "Method to convert Hex Color values to Color32 "
.ti -1c
.RI "float \fBConvertToFloat\fP (char[] chars, int startIndex, int length)"
.br
.RI "Extracts a float value from char[] assuming we know the position of the start, end and decimal point\&. "
.ti -1c
.RI "float \fBConvertToFloat\fP (char[] chars, int startIndex, int length, out int lastIndex)"
.br
.RI "Extracts a float value from char[] given a start index and length\&. "
.ti -1c
.RI "bool \fBValidateHtmlTag\fP (int[] chars, int startIndex, out int endIndex)"
.br
.RI "Function to identify and validate the rich tag\&. Returns the position of the > if the tag was valid\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "string \fBm_text\fP"
.br
.ti -1c
.RI "bool \fBm_isRightToLeft\fP = false"
.br
.ti -1c
.RI "\fBTMP_FontAsset\fP \fBm_fontAsset\fP"
.br
.ti -1c
.RI "\fBTMP_FontAsset\fP \fBm_currentFontAsset\fP"
.br
.ti -1c
.RI "bool \fBm_isSDFShader\fP"
.br
.ti -1c
.RI "Material \fBm_sharedMaterial\fP"
.br
.ti -1c
.RI "Material \fBm_currentMaterial\fP"
.br
.ti -1c
.RI "\fBMaterialReference\fP [] \fBm_materialReferences\fP = new \fBMaterialReference\fP[32]"
.br
.ti -1c
.RI "Dictionary< int, int > \fBm_materialReferenceIndexLookup\fP = new Dictionary<int, int>()"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< \fBMaterialReference\fP > \fBm_materialReferenceStack\fP = new \fBTMP_XmlTagStack\fP<\fBMaterialReference\fP>(new \fBMaterialReference\fP[16])"
.br
.ti -1c
.RI "int \fBm_currentMaterialIndex\fP"
.br
.ti -1c
.RI "Material [] \fBm_fontSharedMaterials\fP"
.br
.ti -1c
.RI "Material \fBm_fontMaterial\fP"
.br
.ti -1c
.RI "Material [] \fBm_fontMaterials\fP"
.br
.ti -1c
.RI "bool \fBm_isMaterialDirty\fP"
.br
.ti -1c
.RI "Color32 \fBm_fontColor32\fP = Color\&.white"
.br
.ti -1c
.RI "Color \fBm_fontColor\fP = Color\&.white"
.br
.ti -1c
.RI "Color32 \fBm_underlineColor\fP = \fBs_colorWhite\fP"
.br
.ti -1c
.RI "Color32 \fBm_strikethroughColor\fP = \fBs_colorWhite\fP"
.br
.ti -1c
.RI "Color32 \fBm_highlightColor\fP = \fBs_colorWhite\fP"
.br
.ti -1c
.RI "bool \fBm_enableVertexGradient\fP"
.br
.ti -1c
.RI "\fBColorMode\fP \fBm_colorMode\fP = \fBColorMode\&.FourCornersGradient\fP"
.br
.ti -1c
.RI "\fBVertexGradient\fP \fBm_fontColorGradient\fP = new \fBVertexGradient\fP(Color\&.white)"
.br
.ti -1c
.RI "\fBTMP_ColorGradient\fP \fBm_fontColorGradientPreset\fP"
.br
.ti -1c
.RI "\fBTMP_SpriteAsset\fP \fBm_spriteAsset\fP"
.br
.ti -1c
.RI "bool \fBm_tintAllSprites\fP"
.br
.ti -1c
.RI "bool \fBm_tintSprite\fP"
.br
.ti -1c
.RI "Color32 \fBm_spriteColor\fP"
.br
.ti -1c
.RI "bool \fBm_overrideHtmlColors\fP = false"
.br
.ti -1c
.RI "Color32 \fBm_faceColor\fP = Color\&.white"
.br
.ti -1c
.RI "Color32 \fBm_outlineColor\fP = Color\&.black"
.br
.ti -1c
.RI "float \fBm_outlineWidth\fP = 0\&.0f"
.br
.ti -1c
.RI "float \fBm_fontSize\fP = 36"
.br
.ti -1c
.RI "float \fBm_currentFontSize\fP"
.br
.ti -1c
.RI "float \fBm_fontSizeBase\fP = 36"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< float > \fBm_sizeStack\fP = new \fBTMP_XmlTagStack\fP<float>(new float[16])"
.br
.ti -1c
.RI "int \fBm_fontWeight\fP = 400"
.br
.ti -1c
.RI "int \fBm_fontWeightInternal\fP"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< int > \fBm_fontWeightStack\fP = new \fBTMP_XmlTagStack\fP<int>(new int[16])"
.br
.ti -1c
.RI "bool \fBm_enableAutoSizing\fP"
.br
.ti -1c
.RI "float \fBm_maxFontSize\fP"
.br
.ti -1c
.RI "float \fBm_minFontSize\fP"
.br
.ti -1c
.RI "float \fBm_fontSizeMin\fP = 0"
.br
.ti -1c
.RI "float \fBm_fontSizeMax\fP = 0"
.br
.ti -1c
.RI "\fBFontStyles\fP \fBm_fontStyle\fP = \fBFontStyles\&.Normal\fP"
.br
.ti -1c
.RI "\fBFontStyles\fP \fBm_style\fP = \fBFontStyles\&.Normal\fP"
.br
.ti -1c
.RI "\fBTMP_BasicXmlTagStack\fP \fBm_fontStyleStack\fP"
.br
.ti -1c
.RI "bool \fBm_isUsingBold\fP = false"
.br
.ti -1c
.RI "\fBTextAlignmentOptions\fP \fBm_textAlignment\fP = \fBTextAlignmentOptions\&.TopLeft\fP"
.br
.ti -1c
.RI "\fBTextAlignmentOptions\fP \fBm_lineJustification\fP"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< \fBTextAlignmentOptions\fP > \fBm_lineJustificationStack\fP = new \fBTMP_XmlTagStack\fP<\fBTextAlignmentOptions\fP>(new \fBTextAlignmentOptions\fP[16])"
.br
.ti -1c
.RI "Vector3 [] \fBm_textContainerLocalCorners\fP = new Vector3[4]"
.br
.ti -1c
.RI "bool \fBm_isAlignmentEnumConverted\fP"
.br
.ti -1c
.RI "float \fBm_characterSpacing\fP = 0"
.br
.ti -1c
.RI "float \fBm_cSpacing\fP = 0"
.br
.ti -1c
.RI "float \fBm_monoSpacing\fP = 0"
.br
.ti -1c
.RI "float \fBm_wordSpacing\fP = 0"
.br
.ti -1c
.RI "float \fBm_lineSpacing\fP = 0"
.br
.ti -1c
.RI "float \fBm_lineSpacingDelta\fP = 0"
.br
.ti -1c
.RI "float \fBm_lineHeight\fP = TMP_Math\&.FLOAT_UNSET"
.br
.ti -1c
.RI "float \fBm_lineSpacingMax\fP = 0"
.br
.ti -1c
.RI "float \fBm_paragraphSpacing\fP = 0"
.br
.ti -1c
.RI "float \fBm_charWidthMaxAdj\fP = 0f"
.br
.ti -1c
.RI "float \fBm_charWidthAdjDelta\fP = 0"
.br
.ti -1c
.RI "bool \fBm_enableWordWrapping\fP = false"
.br
.ti -1c
.RI "bool \fBm_isCharacterWrappingEnabled\fP = false"
.br
.ti -1c
.RI "bool \fBm_isNonBreakingSpace\fP = false"
.br
.ti -1c
.RI "bool \fBm_isIgnoringAlignment\fP"
.br
.ti -1c
.RI "float \fBm_wordWrappingRatios\fP = 0\&.4f"
.br
.ti -1c
.RI "\fBTextOverflowModes\fP \fBm_overflowMode\fP = \fBTextOverflowModes\&.Overflow\fP"
.br
.ti -1c
.RI "int \fBm_firstOverflowCharacterIndex\fP = \-1"
.br
.ti -1c
.RI "\fBTMP_Text\fP \fBm_linkedTextComponent\fP"
.br
.ti -1c
.RI "bool \fBm_isLinkedTextComponent\fP"
.br
.ti -1c
.RI "bool \fBm_isTextTruncated\fP"
.br
.ti -1c
.RI "bool \fBm_enableKerning\fP"
.br
.ti -1c
.RI "bool \fBm_enableExtraPadding\fP = false"
.br
.ti -1c
.RI "bool \fBcheckPaddingRequired\fP"
.br
.ti -1c
.RI "bool \fBm_isRichText\fP = true"
.br
.ti -1c
.RI "bool \fBm_parseCtrlCharacters\fP = true"
.br
.ti -1c
.RI "bool \fBm_isOverlay\fP = false"
.br
.ti -1c
.RI "bool \fBm_isOrthographic\fP = false"
.br
.ti -1c
.RI "bool \fBm_isCullingEnabled\fP = false"
.br
.ti -1c
.RI "bool \fBm_ignoreRectMaskCulling\fP"
.br
.ti -1c
.RI "bool \fBm_ignoreCulling\fP = true"
.br
.ti -1c
.RI "\fBTextureMappingOptions\fP \fBm_horizontalMapping\fP = \fBTextureMappingOptions\&.Character\fP"
.br
.ti -1c
.RI "\fBTextureMappingOptions\fP \fBm_verticalMapping\fP = \fBTextureMappingOptions\&.Character\fP"
.br
.ti -1c
.RI "float \fBm_uvLineOffset\fP = 0\&.0f"
.br
.ti -1c
.RI "\fBTextRenderFlags\fP \fBm_renderMode\fP = \fBTextRenderFlags\&.Render\fP"
.br
.ti -1c
.RI "\fBVertexSortingOrder\fP \fBm_geometrySortingOrder\fP"
.br
.ti -1c
.RI "int \fBm_firstVisibleCharacter\fP"
.br
.ti -1c
.RI "int \fBm_maxVisibleCharacters\fP = 99999"
.br
.ti -1c
.RI "int \fBm_maxVisibleWords\fP = 99999"
.br
.ti -1c
.RI "int \fBm_maxVisibleLines\fP = 99999"
.br
.ti -1c
.RI "bool \fBm_useMaxVisibleDescender\fP = true"
.br
.ti -1c
.RI "int \fBm_pageToDisplay\fP = 1"
.br
.ti -1c
.RI "bool \fBm_isNewPage\fP = false"
.br
.ti -1c
.RI "Vector4 \fBm_margin\fP = new Vector4(0, 0, 0, 0)"
.br
.ti -1c
.RI "float \fBm_marginLeft\fP"
.br
.ti -1c
.RI "float \fBm_marginRight\fP"
.br
.ti -1c
.RI "float \fBm_marginWidth\fP"
.br
.ti -1c
.RI "float \fBm_marginHeight\fP"
.br
.ti -1c
.RI "float \fBm_width\fP = \-1"
.br
.ti -1c
.RI "\fBTMP_TextInfo\fP \fBm_textInfo\fP"
.br
.ti -1c
.RI "bool \fBm_havePropertiesChanged\fP"
.br
.ti -1c
.RI "bool \fBm_isUsingLegacyAnimationComponent\fP"
.br
.ti -1c
.RI "Transform \fBm_transform\fP"
.br
.ti -1c
.RI "RectTransform \fBm_rectTransform\fP"
.br
.ti -1c
.RI "bool \fBm_autoSizeTextContainer\fP"
.br
.ti -1c
.RI "Mesh \fBm_mesh\fP"
.br
.ti -1c
.RI "bool \fBm_isVolumetricText\fP"
.br
.ti -1c
.RI "\fBTMP_SpriteAnimator\fP \fBm_spriteAnimator\fP"
.br
.ti -1c
.RI "float \fBm_flexibleHeight\fP = \-1f"
.br
.ti -1c
.RI "float \fBm_flexibleWidth\fP = \-1f"
.br
.ti -1c
.RI "float \fBm_minWidth\fP"
.br
.ti -1c
.RI "float \fBm_minHeight\fP"
.br
.ti -1c
.RI "float \fBm_maxWidth\fP"
.br
.ti -1c
.RI "float \fBm_maxHeight\fP"
.br
.ti -1c
.RI "LayoutElement \fBm_LayoutElement\fP"
.br
.ti -1c
.RI "float \fBm_preferredWidth\fP"
.br
.ti -1c
.RI "float \fBm_renderedWidth\fP"
.br
.ti -1c
.RI "bool \fBm_isPreferredWidthDirty\fP"
.br
.ti -1c
.RI "float \fBm_preferredHeight\fP"
.br
.ti -1c
.RI "float \fBm_renderedHeight\fP"
.br
.ti -1c
.RI "bool \fBm_isPreferredHeightDirty\fP"
.br
.ti -1c
.RI "bool \fBm_isCalculatingPreferredValues\fP"
.br
.ti -1c
.RI "int \fBm_layoutPriority\fP = 0"
.br
.ti -1c
.RI "bool \fBm_isCalculateSizeRequired\fP = false"
.br
.ti -1c
.RI "bool \fBm_isLayoutDirty\fP"
.br
.ti -1c
.RI "bool \fBm_verticesAlreadyDirty\fP"
.br
.ti -1c
.RI "bool \fBm_layoutAlreadyDirty\fP"
.br
.ti -1c
.RI "bool \fBm_isAwake\fP"
.br
.ti -1c
.RI "bool \fBm_isWaitingOnResourceLoad\fP"
.br
.ti -1c
.RI "bool \fBm_isInputParsingRequired\fP = false"
.br
.ti -1c
.RI "\fBTextInputSources\fP \fBm_inputSource\fP"
.br
.ti -1c
.RI "string \fBold_text\fP"
.br
.ti -1c
.RI "float \fBm_fontScale\fP"
.br
.ti -1c
.RI "float \fBm_fontScaleMultiplier\fP"
.br
.ti -1c
.RI "char [] \fBm_htmlTag\fP = new char[128]"
.br
.ti -1c
.RI "\fBXML_TagAttribute\fP [] \fBm_xmlAttribute\fP = new \fBXML_TagAttribute\fP[8]"
.br
.ti -1c
.RI "float [] \fBm_attributeParameterValues\fP = new float[16]"
.br
.ti -1c
.RI "float \fBtag_LineIndent\fP = 0"
.br
.ti -1c
.RI "float \fBtag_Indent\fP = 0"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< float > \fBm_indentStack\fP = new \fBTMP_XmlTagStack\fP<float>(new float[16])"
.br
.ti -1c
.RI "bool \fBtag_NoParsing\fP"
.br
.ti -1c
.RI "bool \fBm_isParsingText\fP"
.br
.ti -1c
.RI "Matrix4x4 \fBm_FXMatrix\fP"
.br
.ti -1c
.RI "bool \fBm_isFXMatrixSet\fP"
.br
.ti -1c
.RI "int [] \fBm_char_buffer\fP"
.br
.ti -1c
.RI "char [] \fBm_input_CharArray\fP = new char[256]"
.br
.ti -1c
.RI "int \fBm_totalCharacterCount\fP"
.br
.ti -1c
.RI "\fBWordWrapState\fP \fBm_SavedWordWrapState\fP = new \fBWordWrapState\fP()"
.br
.ti -1c
.RI "\fBWordWrapState\fP \fBm_SavedLineState\fP = new \fBWordWrapState\fP()"
.br
.ti -1c
.RI "int \fBm_characterCount\fP"
.br
.ti -1c
.RI "int \fBm_firstCharacterOfLine\fP"
.br
.ti -1c
.RI "int \fBm_firstVisibleCharacterOfLine\fP"
.br
.ti -1c
.RI "int \fBm_lastCharacterOfLine\fP"
.br
.ti -1c
.RI "int \fBm_lastVisibleCharacterOfLine\fP"
.br
.ti -1c
.RI "int \fBm_lineNumber\fP"
.br
.ti -1c
.RI "int \fBm_lineVisibleCharacterCount\fP"
.br
.ti -1c
.RI "int \fBm_pageNumber\fP"
.br
.ti -1c
.RI "float \fBm_maxAscender\fP"
.br
.ti -1c
.RI "float \fBm_maxCapHeight\fP"
.br
.ti -1c
.RI "float \fBm_maxDescender\fP"
.br
.ti -1c
.RI "float \fBm_maxLineAscender\fP"
.br
.ti -1c
.RI "float \fBm_maxLineDescender\fP"
.br
.ti -1c
.RI "float \fBm_startOfLineAscender\fP"
.br
.ti -1c
.RI "float \fBm_lineOffset\fP"
.br
.ti -1c
.RI "\fBExtents\fP \fBm_meshExtents\fP"
.br
.ti -1c
.RI "Color32 \fBm_htmlColor\fP = new Color(255, 255, 255, 128)"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< Color32 > \fBm_colorStack\fP = new \fBTMP_XmlTagStack\fP<Color32>(new Color32[16])"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< Color32 > \fBm_underlineColorStack\fP = new \fBTMP_XmlTagStack\fP<Color32>(new Color32[16])"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< Color32 > \fBm_strikethroughColorStack\fP = new \fBTMP_XmlTagStack\fP<Color32>(new Color32[16])"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< Color32 > \fBm_highlightColorStack\fP = new \fBTMP_XmlTagStack\fP<Color32>(new Color32[16])"
.br
.ti -1c
.RI "\fBTMP_ColorGradient\fP \fBm_colorGradientPreset\fP"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< \fBTMP_ColorGradient\fP > \fBm_colorGradientStack\fP = new \fBTMP_XmlTagStack\fP<\fBTMP_ColorGradient\fP>(new \fBTMP_ColorGradient\fP[16])"
.br
.ti -1c
.RI "float \fBm_tabSpacing\fP = 0"
.br
.ti -1c
.RI "float \fBm_spacing\fP = 0"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< int > \fBm_styleStack\fP = new \fBTMP_XmlTagStack\fP<int>(new int[16])"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< int > \fBm_actionStack\fP = new \fBTMP_XmlTagStack\fP<int>(new int[16])"
.br
.ti -1c
.RI "float \fBm_padding\fP = 0"
.br
.ti -1c
.RI "float \fBm_baselineOffset\fP"
.br
.ti -1c
.RI "\fBTMP_XmlTagStack\fP< float > \fBm_baselineOffsetStack\fP = new \fBTMP_XmlTagStack\fP<float>(new float[16])"
.br
.ti -1c
.RI "float \fBm_xAdvance\fP"
.br
.ti -1c
.RI "\fBTMP_TextElementType\fP \fBm_textElementType\fP"
.br
.ti -1c
.RI "\fBTMP_TextElement\fP \fBm_cached_TextElement\fP"
.br
.ti -1c
.RI "\fBTMP_Glyph\fP \fBm_cached_Underline_GlyphInfo\fP"
.br
.ti -1c
.RI "\fBTMP_Glyph\fP \fBm_cached_Ellipsis_GlyphInfo\fP"
.br
.ti -1c
.RI "\fBTMP_SpriteAsset\fP \fBm_defaultSpriteAsset\fP"
.br
.ti -1c
.RI "\fBTMP_SpriteAsset\fP \fBm_currentSpriteAsset\fP"
.br
.ti -1c
.RI "int \fBm_spriteCount\fP = 0"
.br
.ti -1c
.RI "int \fBm_spriteIndex\fP"
.br
.ti -1c
.RI "int \fBm_spriteAnimationID\fP"
.br
.ti -1c
.RI "bool \fBm_ignoreActiveState\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static Color32 \fBs_colorWhite\fP = new Color32(255, 255, 255, 255)"
.br
.ti -1c
.RI "static Vector2 \fBk_LargePositiveVector2\fP = new Vector2(TMP_Math\&.INT_MAX, TMP_Math\&.INT_MAX)"
.br
.ti -1c
.RI "static Vector2 \fBk_LargeNegativeVector2\fP = new Vector2(TMP_Math\&.INT_MIN, TMP_Math\&.INT_MIN)"
.br
.ti -1c
.RI "static float \fBk_LargePositiveFloat\fP = TMP_Math\&.FLOAT_MAX"
.br
.ti -1c
.RI "static float \fBk_LargeNegativeFloat\fP = TMP_Math\&.FLOAT_MIN"
.br
.ti -1c
.RI "static int \fBk_LargePositiveInt\fP = TMP_Math\&.INT_MAX"
.br
.ti -1c
.RI "static int \fBk_LargeNegativeInt\fP = TMP_Math\&.INT_MIN"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "string \fBtext\fP\fC [get, set]\fP"
.br
.RI "A string containing the text to be displayed\&. "
.ti -1c
.RI "bool \fBisRightToLeftText\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "\fBTMP_FontAsset\fP \fBfont\fP\fC [get, set]\fP"
.br
.RI "The Font Asset to be assigned to this text object\&. "
.ti -1c
.RI "virtual Material \fBfontSharedMaterial\fP\fC [get, set]\fP"
.br
.RI "The material to be assigned to this text object\&. "
.ti -1c
.RI "virtual Material [] \fBfontSharedMaterials\fP\fC [get, set]\fP"
.br
.RI "An array containing the materials used by the text object\&. "
.ti -1c
.RI "Material \fBfontMaterial\fP\fC [get, set]\fP"
.br
.RI "The material to be assigned to this text object\&. An instance of the material will be assigned to the object's renderer\&. "
.ti -1c
.RI "virtual Material [] \fBfontMaterials\fP\fC [get, set]\fP"
.br
.RI "The materials to be assigned to this text object\&. An instance of the materials will be assigned\&. "
.ti -1c
.RI "override Color \fBcolor\fP\fC [get, set]\fP"
.br
.RI "This is the default vertex color assigned to each vertices\&. Color tags will override vertex colors unless the overrideColorTags is set\&. "
.ti -1c
.RI "float \fBalpha\fP\fC [get, set]\fP"
.br
.RI "Sets the vertex color alpha value\&. "
.ti -1c
.RI "bool \fBenableVertexGradient\fP\fC [get, set]\fP"
.br
.RI "Determines if Vertex Color Gradient should be used "
.ti -1c
.RI "\fBVertexGradient\fP \fBcolorGradient\fP\fC [get, set]\fP"
.br
.RI "Sets the vertex colors for each of the 4 vertices of the character quads\&. "
.ti -1c
.RI "\fBTMP_ColorGradient\fP \fBcolorGradientPreset\fP\fC [get, set]\fP"
.br
.RI "Set the vertex colors of the 4 vertices of each character quads\&. "
.ti -1c
.RI "\fBTMP_SpriteAsset\fP \fBspriteAsset\fP\fC [get, set]\fP"
.br
.RI "Default Sprite Asset used by the text object\&. "
.ti -1c
.RI "bool \fBtintAllSprites\fP\fC [get, set]\fP"
.br
.RI "Determines whether or not the sprite color is multiplies by the vertex color of the text\&. "
.ti -1c
.RI "bool \fBoverrideColorTags\fP\fC [get, set]\fP"
.br
.RI "This overrides the color tags forcing the vertex colors to be the default font color\&. "
.ti -1c
.RI "Color32 \fBfaceColor\fP\fC [get, set]\fP"
.br
.RI "Sets the color of the _FaceColor property of the assigned material\&. Changing face color will result in an instance of the material\&. "
.ti -1c
.RI "Color32 \fBoutlineColor\fP\fC [get, set]\fP"
.br
.RI "Sets the color of the _OutlineColor property of the assigned material\&. Changing outline color will result in an instance of the material\&. "
.ti -1c
.RI "float \fBoutlineWidth\fP\fC [get, set]\fP"
.br
.RI "Sets the thickness of the outline of the font\&. Setting this value will result in an instance of the material\&. "
.ti -1c
.RI "float \fBfontSize\fP\fC [get, set]\fP"
.br
.RI "The point size of the font\&. "
.ti -1c
.RI "float \fBfontScale\fP\fC [get]\fP"
.br
.RI "The scale of the current text\&. "
.ti -1c
.RI "int \fBfontWeight\fP\fC [get, set]\fP"
.br
.RI "Control the weight of the font if an alternative font asset is assigned for the given weight in the font asset editor\&. "
.ti -1c
.RI "float \fBpixelsPerUnit\fP\fC [get]\fP"
.br
.ti -1c
.RI "bool \fBenableAutoSizing\fP\fC [get, set]\fP"
.br
.RI "Enable text auto-sizing "
.ti -1c
.RI "float \fBfontSizeMin\fP\fC [get, set]\fP"
.br
.RI "Minimum point size of the font when text auto-sizing is enabled\&. "
.ti -1c
.RI "float \fBfontSizeMax\fP\fC [get, set]\fP"
.br
.RI "Maximum point size of the font when text auto-sizing is enabled\&. "
.ti -1c
.RI "\fBFontStyles\fP \fBfontStyle\fP\fC [get, set]\fP"
.br
.RI "The style of the text "
.ti -1c
.RI "bool \fBisUsingBold\fP\fC [get]\fP"
.br
.RI "Property used in conjunction with padding calculation for the geometry\&. "
.ti -1c
.RI "\fBTextAlignmentOptions\fP \fBalignment\fP\fC [get, set]\fP"
.br
.RI "Text alignment options "
.ti -1c
.RI "float \fBcharacterSpacing\fP\fC [get, set]\fP"
.br
.RI "Use the extents of the text geometry for alignment instead of font metrics\&. "
.ti -1c
.RI "float \fBwordSpacing\fP\fC [get, set]\fP"
.br
.RI "The amount of additional spacing between words\&. "
.ti -1c
.RI "float \fBlineSpacing\fP\fC [get, set]\fP"
.br
.RI "The amount of additional spacing to add between each lines of text\&. "
.ti -1c
.RI "float \fBlineSpacingAdjustment\fP\fC [get, set]\fP"
.br
.RI "The amount of potential line spacing adjustment before text auto sizing kicks in\&. "
.ti -1c
.RI "float \fBparagraphSpacing\fP\fC [get, set]\fP"
.br
.RI "The amount of additional spacing to add between each lines of text\&. "
.ti -1c
.RI "float \fBcharacterWidthAdjustment\fP\fC [get, set]\fP"
.br
.RI "Percentage the width of characters can be adjusted before text auto-sizing begins to reduce the point size\&. "
.ti -1c
.RI "bool \fBenableWordWrapping\fP\fC [get, set]\fP"
.br
.RI "Controls whether or not word wrapping is applied\&. When disabled, the text will be displayed on a single line\&. "
.ti -1c
.RI "float \fBwordWrappingRatios\fP\fC [get, set]\fP"
.br
.RI "Controls the blending between using character and word spacing to fill-in the space for justified text\&. "
.ti -1c
.RI "\fBTextOverflowModes\fP \fBoverflowMode\fP\fC [get, set]\fP"
.br
.ti -1c
.RI "bool \fBisTextOverflowing\fP\fC [get]\fP"
.br
.RI "Indicates if the text exceeds the vertical bounds of its text container\&. "
.ti -1c
.RI "int \fBfirstOverflowCharacterIndex\fP\fC [get]\fP"
.br
.RI "The first character which exceeds the vertical bounds of its text container\&. "
.ti -1c
.RI "\fBTMP_Text\fP \fBlinkedTextComponent\fP\fC [get, set]\fP"
.br
.RI "The linked text component used for flowing the text from one text component to another\&. "
.ti -1c
.RI "bool \fBisLinkedTextComponent\fP\fC [get, set]\fP"
.br
.RI "Indicates whether this text component is linked to another\&. "
.ti -1c
.RI "bool \fBisTextTruncated\fP\fC [get]\fP"
.br
.RI "Property indicating whether the text is Truncated or using Ellipsis\&. "
.ti -1c
.RI "bool \fBenableKerning\fP\fC [get, set]\fP"
.br
.RI "Determines if kerning is enabled or disabled\&. "
.ti -1c
.RI "bool \fBextraPadding\fP\fC [get, set]\fP"
.br
.RI "Adds extra padding around each character\&. This may be necessary when the displayed text is very small to prevent clipping\&. "
.ti -1c
.RI "bool \fBrichText\fP\fC [get, set]\fP"
.br
.RI "Enables or Disables Rich Text Tags "
.ti -1c
.RI "bool \fBparseCtrlCharacters\fP\fC [get, set]\fP"
.br
.RI "Enables or Disables parsing of CTRL characters in input text\&. "
.ti -1c
.RI "bool \fBisOverlay\fP\fC [get, set]\fP"
.br
.RI "Sets the RenderQueue along with Ztest to force the text to be drawn last and on top of scene elements\&. "
.ti -1c
.RI "bool \fBisOrthographic\fP\fC [get, set]\fP"
.br
.RI "Sets Perspective Correction to Zero for Orthographic Camera mode & 0\&.875f for Perspective Camera mode\&. "
.ti -1c
.RI "bool \fBenableCulling\fP\fC [get, set]\fP"
.br
.RI "Sets the culling on the shaders\&. Note changing this value will result in an instance of the material\&. "
.ti -1c
.RI "bool \fBignoreRectMaskCulling\fP\fC [get, set]\fP"
.br
.RI "Controls whether or not the text object will be culled when using a 2D Rect Mask\&. "
.ti -1c
.RI "bool \fBignoreVisibility\fP\fC [get, set]\fP"
.br
.RI "Forces objects that are not visible to get refreshed\&. "
.ti -1c
.RI "\fBTextureMappingOptions\fP \fBhorizontalMapping\fP\fC [get, set]\fP"
.br
.RI "Controls how the face and outline textures will be applied to the text object\&. "
.ti -1c
.RI "\fBTextureMappingOptions\fP \fBverticalMapping\fP\fC [get, set]\fP"
.br
.RI "Controls how the face and outline textures will be applied to the text object\&. "
.ti -1c
.RI "float \fBmappingUvLineOffset\fP\fC [get, set]\fP"
.br
.RI "Controls the UV Offset for the various texture mapping mode on the text object\&. "
.ti -1c
.RI "\fBTextRenderFlags\fP \fBrenderMode\fP\fC [get, set]\fP"
.br
.RI "Determines if the Mesh will be rendered\&. "
.ti -1c
.RI "\fBVertexSortingOrder\fP \fBgeometrySortingOrder\fP\fC [get, set]\fP"
.br
.RI "Determines the sorting order of the geometry of the text object\&. "
.ti -1c
.RI "int \fBfirstVisibleCharacter\fP\fC [get, set]\fP"
.br
.RI "The first character which should be made visible in conjunction with the Text Overflow Linked mode\&. "
.ti -1c
.RI "int \fBmaxVisibleCharacters\fP\fC [get, set]\fP"
.br
.RI "Allows to control how many characters are visible from the input\&. "
.ti -1c
.RI "int \fBmaxVisibleWords\fP\fC [get, set]\fP"
.br
.RI "Allows to control how many words are visible from the input\&. "
.ti -1c
.RI "int \fBmaxVisibleLines\fP\fC [get, set]\fP"
.br
.RI "Allows control over how many lines of text are displayed\&. "
.ti -1c
.RI "bool \fBuseMaxVisibleDescender\fP\fC [get, set]\fP"
.br
.RI "Determines if the text's vertical alignment will be adjusted based on visible descender of the text\&. "
.ti -1c
.RI "int \fBpageToDisplay\fP\fC [get, set]\fP"
.br
.RI "Controls which page of text is shown "
.ti -1c
.RI "virtual Vector4 \fBmargin\fP\fC [get, set]\fP"
.br
.RI "The margins of the text object\&. "
.ti -1c
.RI "\fBTMP_TextInfo\fP \fBtextInfo\fP\fC [get]\fP"
.br
.RI "Returns data about the text object which includes information about each character, word, line, link, etc\&. "
.ti -1c
.RI "bool \fBhavePropertiesChanged\fP\fC [get, set]\fP"
.br
.RI "Property tracking if any of the text properties have changed\&. Flag is set before the text is regenerated\&. "
.ti -1c
.RI "bool \fBisUsingLegacyAnimationComponent\fP\fC [get, set]\fP"
.br
.RI "Property to handle legacy animation component\&. "
.ti -1c
.RI "new Transform \fBtransform\fP\fC [get]\fP"
.br
.RI "Returns are reference to the Transform "
.ti -1c
.RI "new RectTransform \fBrectTransform\fP\fC [get]\fP"
.br
.RI "Returns are reference to the RectTransform "
.ti -1c
.RI "virtual bool \fBautoSizeTextContainer\fP\fC [get, set]\fP"
.br
.RI "Enables control over setting the size of the text container to match the text object\&. "
.ti -1c
.RI "virtual Mesh \fBmesh\fP\fC [get]\fP"
.br
.RI "The mesh used by the font asset and material assigned to the text object\&. "
.ti -1c
.RI "bool \fBisVolumetricText\fP\fC [get, set]\fP"
.br
.RI "Determines if the geometry of the characters will be quads or volumetric (cubes)\&. "
.ti -1c
.RI "Bounds \fBbounds\fP\fC [get]\fP"
.br
.RI "Returns the bounds of the mesh of the text object in world space\&. "
.ti -1c
.RI "Bounds \fBtextBounds\fP\fC [get]\fP"
.br
.RI "Returns the bounds of the text of the text object\&. "
.ti -1c
.RI "\fBTMP_SpriteAnimator\fP \fBspriteAnimator\fP\fC [get]\fP"
.br
.RI "Component used to control wrapping of text following some arbitrary shape\&. "
.ti -1c
.RI "float \fBflexibleHeight\fP\fC [get]\fP"
.br
.ti -1c
.RI "float \fBflexibleWidth\fP\fC [get]\fP"
.br
.ti -1c
.RI "float \fBminWidth\fP\fC [get]\fP"
.br
.ti -1c
.RI "float \fBminHeight\fP\fC [get]\fP"
.br
.ti -1c
.RI "float \fBmaxWidth\fP\fC [get]\fP"
.br
.ti -1c
.RI "float \fBmaxHeight\fP\fC [get]\fP"
.br
.ti -1c
.RI "LayoutElement \fBlayoutElement\fP\fC [get]\fP"
.br
.ti -1c
.RI "virtual float \fBpreferredWidth\fP\fC [get]\fP"
.br
.RI "Computed preferred width of the text object\&. "
.ti -1c
.RI "virtual float \fBpreferredHeight\fP\fC [get]\fP"
.br
.RI "Computed preferred height of the text object\&. "
.ti -1c
.RI "virtual float \fBrenderedWidth\fP\fC [get]\fP"
.br
.RI "Compute the rendered width of the text object\&. "
.ti -1c
.RI "virtual float \fBrenderedHeight\fP\fC [get]\fP"
.br
.RI "Compute the rendered height of the text object\&. "
.ti -1c
.RI "int \fBlayoutPriority\fP\fC [get]\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base class which contains common properties and functions shared between the \fBTextMeshPro\fP and \fBTextMeshProUGUI\fP component\&. 


.PP
Definition at line 110 of file TMP_Text\&.cs\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBTMPro\&.TMP_Text\&.TextInputSources\fP\fC [strong]\fP, \fC [protected]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIText \fP\fP
.TP
\fB\fISetText \fP\fP
.TP
\fB\fISetCharArray \fP\fP
.TP
\fB\fIString \fP\fP
.PP
Definition at line 1314 of file TMP_Text\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void TMPro\&.TMP_Text\&.AddFloatToCharArray (float number, ref int index, int precision)\fC [protected]\fP"

.PP
Function used in conjunction with \fBSetText()\fP 
.PP
\fBParameters:\fP
.RS 4
\fInumber\fP 
.br
\fIindex\fP 
.br
\fIprecision\fP 
.RE
.PP

.PP
Definition at line 3326 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.AddIntToCharArray (int number, ref int index, int precision)\fC [protected]\fP"

.PP
// Function used in conjunction with \fBSetText()\fP 
.PP
\fBParameters:\fP
.RS 4
\fInumber\fP 
.br
\fIindex\fP 
.br
\fIprecision\fP 
.RE
.PP

.PP
Definition at line 3363 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.AdjustLineOffset (int startIndex, int endIndex, float offset)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method to adjust line spacing as a result of using different fonts or font point size\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstartIndex\fP 
.br
\fIendIndex\fP 
.br
\fIoffset\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 4498 of file TMP_Text\&.cs\&.
.SS "virtual Vector2 TMPro\&.TMP_Text\&.CalculatePreferredValues (float defaultFontSize, Vector2 marginSize, bool ignoreTextAutoSizing)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method to calculate the preferred width and height of the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3677 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.ClearMesh ()\fC [virtual]\fP"

.PP
Function to clear the geometry of the Primary and Sub Text objects\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP\&.
.PP
Definition at line 5521 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.ClearMesh (bool uploadGeometry)\fC [virtual]\fP"

.PP
Function to clear the geometry of the Primary and Sub Text objects\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 5527 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.ClearSubMeshObjects ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Destroy Sub Mesh Objects\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 5515 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.ComputeMarginSize ()\fC [virtual]\fP"

.PP
Function to force an update of the margin size\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 4544 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.ConvertToFloat (char [] chars, int startIndex, int length)\fC [protected]\fP"

.PP
Extracts a float value from char[] assuming we know the position of the start, end and decimal point\&. 
.PP
\fBParameters:\fP
.RS 4
\fIchars\fP 
.br
\fIstartIndex\fP 
.br
\fIlength\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 5894 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.ConvertToFloat (char [] chars, int startIndex, int length, out int lastIndex)\fC [protected]\fP"

.PP
Extracts a float value from char[] given a start index and length\&. 
.PP
\fBParameters:\fP
.RS 4
\fIchars\fP 
.RE
.PP
The Char[] containing the numerical sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstartIndex\fP 
.RE
.PP
The index of the start of the numerical sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlength\fP 
.RE
.PP
The length of the numerical sequence\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlastIndex\fP 
.RE
.PP
Index of the last character in the validated sequence\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 5909 of file TMP_Text\&.cs\&.
.SS "virtual Material TMPro\&.TMP_Text\&.CreateMaterialInstance (Material source)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method to set the materials of the text and sub text objects\&. 
.PP
\fBParameters:\fP
.RS 4
\fImats\fP 
.RE
.PP
.PP
Function used to create an instance of the material 
.PP
\fBParameters:\fP
.RS 4
\fIsource\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 1463 of file TMP_Text\&.cs\&.
.SS "override void TMPro\&.TMP_Text\&.CrossFadeAlpha (float alpha, float duration, bool ignoreTimeScale)"

.PP
Tweens the alpha of the CanvasRenderer color associated with this Graphic\&. 
.PP
\fBParameters:\fP
.RS 4
\fIalpha\fP Target alpha\&.
.br
\fIduration\fP Duration of the tween in seconds\&.
.br
\fIignoreTimeScale\fP Should ignore Time\&.scale?
.RE
.PP

.PP
Definition at line 1650 of file TMP_Text\&.cs\&.
.SS "override void TMPro\&.TMP_Text\&.CrossFadeColor (Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha)"

.PP
Tweens the CanvasRenderer color associated with this Graphic\&. 
.PP
\fBParameters:\fP
.RS 4
\fItargetColor\fP Target color\&.
.br
\fIduration\fP Tween duration\&.
.br
\fIignoreTimeScale\fP Should ignore Time\&.scale?
.br
\fIuseAlpha\fP Should also Tween the alpha channel?
.RE
.PP

.PP
Definition at line 1637 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.DrawTextHighlight (Vector3 start, Vector3 end, ref int index, Color32 highlightColor)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 5314 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.DrawUnderlineMesh (Vector3 start, Vector3 end, ref int index, float startScale, float endScale, float maxScale, float sdfScale, Color32 underlineColor)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method to add the underline geometry\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP 
.br
\fIend\fP 
.br
\fIstartScale\fP 
.br
\fIendScale\fP 
.br
\fImaxScale\fP 
.br
\fIunderlineColor\fP 
.RE
.PP

.PP
Definition at line 5167 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.FillCharacterVertexBuffers (int i, int index_X4)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Store vertex attributes into the appropriate \fBTMP_MeshInfo\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIi\fP 
.br
\fIindex_X4\fP 
.RE
.PP

.PP
Definition at line 4977 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.FillCharacterVertexBuffers (int i, int index_X4, bool isVolumetric)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 5028 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.FillSpriteVertexBuffers (int i, int index_X4)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Fill Vertex Buffers for Sprites 
.PP
\fBParameters:\fP
.RS 4
\fIi\fP 
.br
\fIspriteIndex_X4\fP 
.RE
.PP

.PP
Definition at line 5112 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.ForceMeshUpdate ()\fC [virtual]\fP"

.PP
Function to force the regeneration of the text object\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1555 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.ForceMeshUpdate (bool ignoreActiveState)\fC [virtual]\fP"

.PP
Method used for resetting vertex layout when switching to and from Volumetric Text mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fIupdateMesh\fP 
.RE
.PP
.PP
Function to force the regeneration of the text object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIignoreActiveState\fP If set to true, the text object will be regenerated regardless of is active state\&.
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1569 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.GenerateTextMesh ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method which parses the text input, does the layout of the text as well as generating the geometry\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 3404 of file TMP_Text\&.cs\&.
.SS "virtual Bounds TMPro\&.TMP_Text\&.GetCompoundBounds ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method returning the compound bounds of the text object and child sub objects\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 4424 of file TMP_Text\&.cs\&.
.SS "\fBTMP_FontAsset\fP TMPro\&.TMP_Text\&.GetFontAssetForWeight (int fontWeight)\fC [protected]\fP"

.PP

.PP
\fBReturns:\fP
.RS 4

.RE
.PP
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 5488 of file TMP_Text\&.cs\&.
.SS "virtual Material TMPro\&.TMP_Text\&.GetMaterial (Material mat)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Function called internally when a new material is assigned via the fontMaterial property\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1427 of file TMP_Text\&.cs\&.
.SS "virtual Material [] TMPro\&.TMP_Text\&.GetMaterials (Material [] mats)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method returning instances of the materials used by the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1450 of file TMP_Text\&.cs\&.
.SS "virtual float TMPro\&.TMP_Text\&.GetPaddingForMaterial ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Get the padding value for the currently assigned material 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1533 of file TMP_Text\&.cs\&.
.SS "virtual float TMPro\&.TMP_Text\&.GetPaddingForMaterial (Material mat)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Get the padding value for the given material 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1540 of file TMP_Text\&.cs\&.
.SS "virtual string TMPro\&.TMP_Text\&.GetParsedText ()\fC [virtual]\fP"

.PP
Function which returns the text after it has been parsed and rich text tags removed\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 5534 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.GetPreferredHeight ()\fC [protected]\fP"

.PP
Method to calculate the preferred height of a text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3563 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.GetPreferredHeight (Vector2 margin)\fC [protected]\fP"

.PP
Method to calculate the preferred height of a text object\&. 
.PP
\fBParameters:\fP
.RS 4
\fImargin\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 3598 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.GetPreferredValues ()"

.PP
Function to Calculate the Preferred Width and Height of the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3411 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.GetPreferredValues (float width, float height)"

.PP
Function to Calculate the Preferred Width and Height of the text object given the provided width and height\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3433 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.GetPreferredValues (string text)"

.PP
Function to Calculate the Preferred Width and Height of the text object given a certain string\&. 
.PP
\fBParameters:\fP
.RS 4
\fItext\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 3458 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.GetPreferredValues (string text, float width, float height)"

.PP
Function to Calculate the Preferred Width and Height of the text object given a certain string and size of text container\&. 
.PP
\fBParameters:\fP
.RS 4
\fItext\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 3482 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.GetPreferredWidth ()\fC [protected]\fP"

.PP
Method to calculate the preferred width of a text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3505 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.GetPreferredWidth (Vector2 margin)\fC [protected]\fP"

.PP
Method to calculate the preferred width of a text object\&. 
.PP
\fBParameters:\fP
.RS 4
\fImargin\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 3541 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.GetRenderedHeight ()\fC [protected]\fP"

.PP
Method returning the rendered height of the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3658 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.GetRenderedHeight (bool onlyVisibleCharacters)\fC [protected]\fP"

.PP
Method returning the rendered height of the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3667 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.GetRenderedValues ()"

.PP
Method returning the rendered width and height of the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3620 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.GetRenderedValues (bool onlyVisibleCharacters)"

.PP

.PP
\fBParameters:\fP
.RS 4
\fIonlyVisibleCharacters\fP Should returned value only factor in visible characters and exclude those greater than maxVisibleCharacters for instance\&.
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 3630 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.GetRenderedWidth ()\fC [protected]\fP"

.PP
Method returning the rendered width of the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3640 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.GetRenderedWidth (bool onlyVisibleCharacters)\fC [protected]\fP"

.PP
Method returning the rendered width of the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 3649 of file TMP_Text\&.cs\&.
.SS "virtual Material [] TMPro\&.TMP_Text\&.GetSharedMaterials ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method which returns an array containing the materials used by the text object\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1439 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.GetSpecialCharacters (\fBTMP_FontAsset\fP fontAsset)\fC [protected]\fP"

.PP
Method used to find and cache references to the Underline and Ellipsis characters\&. 
.PP
Definition at line 5434 of file TMP_Text\&.cs\&.
.SS "Bounds TMPro\&.TMP_Text\&.GetTextBounds ()\fC [protected]\fP"

.PP
Method which returns the bounds of the text object; 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 4431 of file TMP_Text\&.cs\&.
.SS "Bounds TMPro\&.TMP_Text\&.GetTextBounds (bool onlyVisibleCharacters)\fC [protected]\fP"

.PP
Method which returns the bounds of the text object; 
.PP
\fBParameters:\fP
.RS 4
\fIonlyVisibleCharacters\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 4463 of file TMP_Text\&.cs\&.
.SS "virtual Vector3 [] TMPro\&.TMP_Text\&.GetTextContainerLocalCorners ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method to return the local corners of the Text Container or RectTransform\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1547 of file TMP_Text\&.cs\&.
.SS "virtual \fBTMP_TextInfo\fP TMPro\&.TMP_Text\&.GetTextInfo (string text)\fC [virtual]\fP"

.PP
Function used to evaluate the length of a text string\&. 
.PP
\fBParameters:\fP
.RS 4
\fItext\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 4538 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.GetUTF16 (string text, int i)\fC [protected]\fP"

.PP
Convert UTF-16 Hex to Char 
.PP
\fBReturns:\fP
.RS 4
The Unicode hex\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIi\fP The index\&.
.RE
.PP

.PP
Definition at line 5683 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.GetUTF16 (StringBuilder text, int i)\fC [protected]\fP"

.PP
Convert UTF-16 Hex to Char 
.PP
\fBReturns:\fP
.RS 4
The Unicode hex\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIi\fP The index\&.
.RE
.PP

.PP
Definition at line 5698 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.GetUTF32 (string text, int i)\fC [protected]\fP"

.PP
Convert UTF-32 Hex to Char 
.PP
\fBReturns:\fP
.RS 4
The Unicode hex\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIi\fP The index\&.
.RE
.PP

.PP
Definition at line 5714 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.GetUTF32 (StringBuilder text, int i)\fC [protected]\fP"

.PP
Convert UTF-32 Hex to Char 
.PP
\fBReturns:\fP
.RS 4
The Unicode hex\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIi\fP The index\&.
.RE
.PP

.PP
Definition at line 5733 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.HexCharsToColor (char [] hexChars, int tagCount)\fC [protected]\fP"

.PP
Method to convert Hex color values to Color32 
.PP
\fBParameters:\fP
.RS 4
\fIhexChars\fP 
.br
\fItagCount\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 5754 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.HexCharsToColor (char [] hexChars, int startIndex, int length)\fC [protected]\fP"

.PP
Method to convert Hex Color values to Color32 
.PP
\fBParameters:\fP
.RS 4
\fIhexChars\fP 
.br
\fIstartIndex\fP 
.br
\fIlength\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 5836 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.HexToInt (char hex)\fC [protected]\fP"

.PP
Function to pack scale information in the UV2 Channel\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP 
.br
\fIy\fP 
.br
\fIscale\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
.PP
\fBParameters:\fP
.RS 4
\fIx\fP 
.br
\fIy\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
.PP
Method to convert Hex to Int 
.PP
\fBParameters:\fP
.RS 4
\fIhex\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 5647 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.InternalCrossFadeAlpha (float alpha, float duration, bool ignoreTimeScale)\fC [protected]\fP, \fC [virtual]\fP"

.PP

.PP
\fBParameters:\fP
.RS 4
\fIalpha\fP 
.br
\fIduration\fP 
.br
\fIignoreTimeScale\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP\&.
.PP
Definition at line 1674 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.InternalCrossFadeColor (Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha)\fC [protected]\fP, \fC [virtual]\fP"

.PP

.PP
\fBParameters:\fP
.RS 4
\fItargetColor\fP 
.br
\fIduration\fP 
.br
\fIignoreTimeScale\fP 
.br
\fIuseAlpha\fP 
.br
\fIuseRGB\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP\&.
.PP
Definition at line 1665 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.LoadDefaultSettings ()\fC [protected]\fP"

.PP
Internal function used to load the default settings of text objects\&. 
.PP
Definition at line 5394 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.LoadFontAsset ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method which derived classes need to override to load Font Assets\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1416 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.PackUV (float x, float y, float scale)\fC [protected]\fP"

.PP
Function to pack scale information in the UV2 Channel\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP 
.br
\fIy\fP 
.br
\fIscale\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
.PP
Function to pack scale information in the UV2 Channel\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP 
.br
\fIy\fP 
.br
\fIscale\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 5580 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.PackUV (float x, float y)\fC [protected]\fP"

.PP

.PP
\fBParameters:\fP
.RS 4
\fIx\fP 
.br
\fIy\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 5600 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.ParseInputText ()\fC [protected]\fP"

.PP
Method to parse the input text based on its source 
.PP
Definition at line 1680 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.ReplaceTagWithCharacter (int [] chars, int insertionIndex, int tagLength, char c)\fC [protected]\fP"

.PP
Replace a given number of characters (tag) in the array with a new character and shift subsequent characters in the array\&. 
.PP
\fBParameters:\fP
.RS 4
\fIchars\fP Array which contains the text\&.
.br
\fIinsertionIndex\fP The index of where the new character will be inserted
.br
\fItagLength\fP Length of the tag being replaced\&.
.br
\fIc\fP The replacement character\&.
.RE
.PP

.PP
Definition at line 5459 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.ResizeLineExtents (int size)\fC [protected]\fP"

.PP
Function to increase the size of the Line \fBExtents\fP Array\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP 
.RE
.PP

.PP
Definition at line 4505 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.RestoreWordWrappingState (ref \fBWordWrapState\fP state)\fC [protected]\fP"

.PP
Restore the State of various variables used in the mesh creation loop\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 4682 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SaveGlyphVertexInfo (float padding, float style_padding, Color32 vertexColor)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Store vertex information for each character\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstyle_padding\fP Style_padding\&.
.br
\fIvertexColor\fP Vertex color\&.
.RE
.PP

.PP
Definition at line 4763 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SaveSpriteVertexInfo (Color32 vertexColor)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Store vertex information for each sprite\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpadding\fP 
.br
\fIstyle_padding\fP 
.br
\fIvertexColor\fP 
.RE
.PP

.PP
Definition at line 4886 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SaveWordWrappingState (ref \fBWordWrapState\fP state, int index, int count)\fC [protected]\fP"

.PP
Function used in conjunction with GetTextInfo to figure out Array allocations\&. 
.PP
\fBParameters:\fP
.RS 4
\fIchars\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
.PP
Save the State of various variables used in the mesh creation loop in conjunction with Word Wrapping 
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP 
.br
\fIindex\fP 
.br
\fIcount\fP 
.RE
.PP

.PP
Definition at line 4604 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetActiveSubMeshes (bool state)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method to Enable or Disable child SubMesh objects\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 5509 of file TMP_Text\&.cs\&.
.SS "virtual int TMPro\&.TMP_Text\&.SetArraySizes (int [] chars)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Method used to determine the number of visible characters and required buffer allocations\&. 
.PP
\fBParameters:\fP
.RS 4
\fIchars\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 3398 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetCharArray (char [] sourceText)"

.PP
Character array containing the text to be displayed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceText\fP 
.RE
.PP

.PP
Definition at line 1882 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetCharArray (char [] sourceText, int start, int length)"

.PP
Character array containing the text to be displayed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceText\fP 
.RE
.PP

.PP
Definition at line 1986 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetCharArray (int [] sourceText, int start, int length)"

.PP
Character array containing the text to be displayed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceText\fP 
.RE
.PP

.PP
Definition at line 2099 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetCulling ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Set the culling mode on the material\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1527 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetFaceColor (Color32 color)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Function called internally to set the face color of the material\&. This will results in an instance of the material\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcolor\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1505 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetFontBaseMaterial (Material mat)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Function called internally when assigning a new base material\&. 
.PP
\fBParameters:\fP
.RS 4
\fImat\fP 
.RE
.PP

.PP
Definition at line 1433 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetOutlineColor (Color32 color)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Function called internally to set the outline color of the material\&. This will results in an instance of the material\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcolor\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1511 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetOutlineThickness (float thickness)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Function called internally to set the outline thickness property of the material\&. This will results in an instance of the material\&. 
.PP
\fBParameters:\fP
.RS 4
\fIthickness\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1517 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetShaderDepth ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Set the Render Queue and ZTest mode on the current material 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1522 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetSharedMaterial (Material mat)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Function called internally when a new shared material is assigned via the fontSharedMaterial property\&. 
.PP
\fBParameters:\fP
.RS 4
\fImat\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1422 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetSharedMaterials (Material [] materials)\fC [protected]\fP, \fC [virtual]\fP"

.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1444 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetText (string text)"

.PP

.PP
\fBParameters:\fP
.RS 4
\fItext\fP 
.RE
.PP

.PP
Definition at line 1709 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetText (string text, bool syncTextInputBox)"

.PP

.PP
\fBParameters:\fP
.RS 4
\fItext\fP 
.RE
.PP

.PP
Definition at line 1719 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetText (string text, float arg0)"

.PP
Formatted string containing a pattern and a value representing the text to be rendered\&.
.PP
ex\&. \fBTextMeshPro\&.SetText\fP ('Number is {0:1}\&.', 5\&.56f);
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fItext\fP String containing the pattern\&.'</param>
<param name='arg0">Value is a float\&.
.RE
.PP

.PP
Definition at line 1752 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetText (string text, float arg0, float arg1)"

.PP
Formatted string containing a pattern and a value representing the text to be rendered\&.
.PP
ex\&. \fBTextMeshPro\&.SetText\fP ('First number is {0} and second is {1:2}\&.', 10, 5\&.756f);
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fItext\fP String containing the pattern\&.'</param>
<param name='arg0'>Value is a float\&.</param>
<param name='arg1">Value is a float\&.
.RE
.PP

.PP
Definition at line 1765 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetText (string text, float arg0, float arg1, float arg2)"

.PP
Formatted string containing a pattern and a value representing the text to be rendered\&.
.PP
ex\&. \fBTextMeshPro\&.SetText\fP ('A = {0}, B = {1} and C = {2}\&.', 2, 5, 7);
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fItext\fP String containing the pattern\&.'</param>
<param name='arg0'>Value is a float\&.</param>
<param name='arg1'>Value is a float\&.</param>
<param name='arg2">Value is a float\&.
.RE
.PP

.PP
Definition at line 1779 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetText (StringBuilder text)"

.PP
Set the text using a StringBuilder\&. Using a StringBuilder instead of concatenating strings prevents memory pollution with temporary objects\&.  
.PP
\fBParameters:\fP
.RS 4
\fItext\fP StringBuilder with text to display\&.
.RE
.PP

.PP
Definition at line 1858 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetTextArrayToCharArray (char [] sourceText, ref int [] charBuffer)\fC [protected]\fP"

.PP
Copies Content of formatted \fBSetText()\fP to charBuffer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceText\fP 
.br
\fIcharBuffer\fP 
.RE
.PP

.PP
Definition at line 2211 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetTextSortingOrder (\fBVertexSortingOrder\fP order)\fC [protected]\fP"

.PP
Function to control the sorting of the geometry of the text object\&. 
.PP
Definition at line 1487 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetTextSortingOrder (int [] order)\fC [protected]\fP"

.PP
Function to sort the geometry of the text object in accordance to the provided order\&. 
.PP
\fBParameters:\fP
.RS 4
\fIorder\fP 
.RE
.PP

.PP
Definition at line 1496 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.SetVertexColorGradient (\fBTMP_ColorGradient\fP gradient)\fC [protected]\fP"

.PP
Definition at line 1472 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.SetVertices (Vector3 [] vertices)\fC [virtual]\fP"

.PP
Function to push a new set of vertices to the mesh\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvertices\fP 
.RE
.PP

.PP
Definition at line 1615 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.StringBuilderToIntArray (StringBuilder sourceText, ref int [] charBuffer)\fC [protected]\fP"

.PP
Copy contents of StringBuilder into int array\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceText\fP Text to copy\&.
.br
\fIcharBuffer\fP Array to store contents\&.
.RE
.PP

.PP
Definition at line 2431 of file TMP_Text\&.cs\&.
.SS "void TMPro\&.TMP_Text\&.StringToCharArray (string sourceText, ref int [] charBuffer)\fC [protected]\fP"

.PP
Method to store the content of a string into an integer array\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsourceText\fP 
.br
\fIcharBuffer\fP 
.RE
.PP

.PP
Definition at line 2286 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.UpdateGeometry (Mesh mesh, int index)\fC [virtual]\fP"

.PP
Function to force the regeneration of the text object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIflags\fP Flags to control which portions of the geometry gets uploaded\&.
.RE
.PP
.PP
Function to update the geometry of the main and sub text objects\&. 
.PP
\fBParameters:\fP
.RS 4
\fImesh\fP 
.br
\fIindex\fP 
.RE
.PP

.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1596 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.UpdateMeshPadding ()\fC [virtual]\fP"

.PP
Function to be used to force recomputing of character padding when Shader / Material properties have been changed via script\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1621 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.UpdateVertexData (\fBTMP_VertexDataUpdateFlags\fP flags)\fC [virtual]\fP"

.PP
Function to push the updated vertex data into the mesh and renderer\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1602 of file TMP_Text\&.cs\&.
.SS "virtual void TMPro\&.TMP_Text\&.UpdateVertexData ()\fC [virtual]\fP"

.PP
Function to push the updated vertex data into the mesh and renderer\&. 
.PP
Reimplemented in \fBTMPro\&.TextMeshProUGUI\fP, and \fBTMPro\&.TextMeshPro\fP\&.
.PP
Definition at line 1608 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.ValidateHtmlTag (int [] chars, int startIndex, out int endIndex)\fC [protected]\fP"

.PP
Function to identify and validate the rich tag\&. Returns the position of the > if the tag was valid\&. 
.PP
\fBParameters:\fP
.RS 4
\fIchars\fP 
.br
\fIstartIndex\fP 
.br
\fIendIndex\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 5979 of file TMP_Text\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "bool TMPro\&.TMP_Text\&.checkPaddingRequired\fC [protected]\fP"

.PP
Definition at line 768 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.k_LargeNegativeFloat = TMP_Math\&.FLOAT_MIN\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 4529 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.k_LargeNegativeInt = TMP_Math\&.INT_MIN\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 4531 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.k_LargeNegativeVector2 = new Vector2(TMP_Math\&.INT_MIN, TMP_Math\&.INT_MIN)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 4527 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.k_LargePositiveFloat = TMP_Math\&.FLOAT_MAX\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 4528 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.k_LargePositiveInt = TMP_Math\&.INT_MAX\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 4530 of file TMP_Text\&.cs\&.
.SS "Vector2 TMPro\&.TMP_Text\&.k_LargePositiveVector2 = new Vector2(TMP_Math\&.INT_MAX, TMP_Math\&.INT_MAX)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 4526 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<int> TMPro\&.TMP_Text\&.m_actionStack = new \fBTMP_XmlTagStack\fP<int>(new int[16])\fC [protected]\fP"

.PP
Definition at line 1393 of file TMP_Text\&.cs\&.
.SS "float [] TMPro\&.TMP_Text\&.m_attributeParameterValues = new float[16]\fC [protected]\fP"

.PP
Definition at line 1327 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_autoSizeTextContainer\fC [protected]\fP"

.PP
Definition at line 1082 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_baselineOffset\fC [protected]\fP"

.PP
Definition at line 1396 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<float> TMPro\&.TMP_Text\&.m_baselineOffsetStack = new \fBTMP_XmlTagStack\fP<float>(new float[16])\fC [protected]\fP"

.PP
Definition at line 1397 of file TMP_Text\&.cs\&.
.SS "\fBTMP_Glyph\fP TMPro\&.TMP_Text\&.m_cached_Ellipsis_GlyphInfo\fC [protected]\fP"

.PP
Definition at line 1403 of file TMP_Text\&.cs\&.
.SS "\fBTMP_TextElement\fP TMPro\&.TMP_Text\&.m_cached_TextElement\fC [protected]\fP"

.PP
Definition at line 1401 of file TMP_Text\&.cs\&.
.SS "\fBTMP_Glyph\fP TMPro\&.TMP_Text\&.m_cached_Underline_GlyphInfo\fC [protected]\fP"

.PP
Definition at line 1402 of file TMP_Text\&.cs\&.
.SS "int [] TMPro\&.TMP_Text\&.m_char_buffer\fC [protected]\fP"

.PP
Definition at line 1340 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_characterCount\fC [protected]\fP"

.PP
Definition at line 1353 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_characterSpacing = 0\fC [protected]\fP"

.PP
Definition at line 541 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_charWidthAdjDelta = 0\fC [protected]\fP"

.PP
Definition at line 604 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_charWidthMaxAdj = 0f\fC [protected]\fP"

.PP
Definition at line 603 of file TMP_Text\&.cs\&.
.SS "\fBTMP_ColorGradient\fP TMPro\&.TMP_Text\&.m_colorGradientPreset\fC [protected]\fP"

.PP
Definition at line 1381 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<\fBTMP_ColorGradient\fP> TMPro\&.TMP_Text\&.m_colorGradientStack = new \fBTMP_XmlTagStack\fP<\fBTMP_ColorGradient\fP>(new \fBTMP_ColorGradient\fP[16])\fC [protected]\fP"

.PP
Definition at line 1382 of file TMP_Text\&.cs\&.
.SS "\fBColorMode\fP TMPro\&.TMP_Text\&.m_colorMode = \fBColorMode\&.FourCornersGradient\fP\fC [protected]\fP"

.PP
Definition at line 266 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<Color32> TMPro\&.TMP_Text\&.m_colorStack = new \fBTMP_XmlTagStack\fP<Color32>(new Color32[16])\fC [protected]\fP"

.PP
Definition at line 1376 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_cSpacing = 0\fC [protected]\fP"

.PP
Definition at line 542 of file TMP_Text\&.cs\&.
.SS "\fBTMP_FontAsset\fP TMPro\&.TMP_Text\&.m_currentFontAsset\fC [protected]\fP"

.PP
Definition at line 147 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_currentFontSize\fC [protected]\fP"

.PP
Definition at line 396 of file TMP_Text\&.cs\&.
.SS "Material TMPro\&.TMP_Text\&.m_currentMaterial\fC [protected]\fP"

.PP
Definition at line 161 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_currentMaterialIndex\fC [protected]\fP"

.PP
Definition at line 166 of file TMP_Text\&.cs\&.
.SS "\fBTMP_SpriteAsset\fP TMPro\&.TMP_Text\&.m_currentSpriteAsset\fC [protected]\fP"

.PP
Definition at line 1406 of file TMP_Text\&.cs\&.
.SS "\fBTMP_SpriteAsset\fP TMPro\&.TMP_Text\&.m_defaultSpriteAsset\fC [protected]\fP"

.PP
Definition at line 1405 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_enableAutoSizing\fC [protected]\fP"

.PP
Definition at line 454 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_enableExtraPadding = false\fC [protected]\fP"

.PP
Definition at line 766 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_enableKerning\fC [protected]\fP"

.PP
Definition at line 754 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_enableVertexGradient\fC [protected]\fP"

.PP
Definition at line 263 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_enableWordWrapping = false\fC [protected]\fP"

.PP
Definition at line 616 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.m_faceColor = Color\&.white\fC [protected]\fP"

.PP
Definition at line 347 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_firstCharacterOfLine\fC [protected]\fP"

.PP
Definition at line 1356 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_firstOverflowCharacterIndex = \-1\fC [protected]\fP"

.PP
Definition at line 675 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_firstVisibleCharacter\fC [protected]\fP"

.PP
Definition at line 934 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_firstVisibleCharacterOfLine\fC [protected]\fP"

.PP
Definition at line 1357 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_flexibleHeight = \-1f\fC [protected]\fP"

.PP
Definition at line 1215 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_flexibleWidth = \-1f\fC [protected]\fP"

.PP
Definition at line 1221 of file TMP_Text\&.cs\&.
.SS "\fBTMP_FontAsset\fP TMPro\&.TMP_Text\&.m_fontAsset\fC [protected]\fP"

.PP
Definition at line 146 of file TMP_Text\&.cs\&.
.SS "Color TMPro\&.TMP_Text\&.m_fontColor = Color\&.white\fC [protected]\fP"

.PP
Definition at line 236 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.m_fontColor32 = Color\&.white\fC [protected]\fP"

.PP
Definition at line 234 of file TMP_Text\&.cs\&.
.SS "\fBVertexGradient\fP TMPro\&.TMP_Text\&.m_fontColorGradient = new \fBVertexGradient\fP(Color\&.white)\fC [protected]\fP"

.PP
Definition at line 278 of file TMP_Text\&.cs\&.
.SS "\fBTMP_ColorGradient\fP TMPro\&.TMP_Text\&.m_fontColorGradientPreset\fC [protected]\fP"

.PP
Definition at line 290 of file TMP_Text\&.cs\&.
.SS "Material TMPro\&.TMP_Text\&.m_fontMaterial\fC [protected]\fP"

.PP
Definition at line 206 of file TMP_Text\&.cs\&.
.SS "Material [] TMPro\&.TMP_Text\&.m_fontMaterials\fC [protected]\fP"

.PP
Definition at line 219 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_fontScale\fC [protected]\fP"

.PP
Definition at line 1321 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_fontScaleMultiplier\fC [protected]\fP"

.PP
Definition at line 1322 of file TMP_Text\&.cs\&.
.SS "Material [] TMPro\&.TMP_Text\&.m_fontSharedMaterials\fC [protected]\fP"

.PP
Definition at line 179 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_fontSize = 36\fC [protected]\fP"

.PP
Definition at line 395 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_fontSizeBase = 36\fC [protected]\fP"

.PP
Definition at line 398 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_fontSizeMax = 0\fC [protected]\fP"

.PP
Definition at line 480 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_fontSizeMin = 0\fC [protected]\fP"

.PP
Definition at line 468 of file TMP_Text\&.cs\&.
.SS "\fBFontStyles\fP TMPro\&.TMP_Text\&.m_fontStyle = \fBFontStyles\&.Normal\fP\fC [protected]\fP"

.PP
Definition at line 492 of file TMP_Text\&.cs\&.
.SS "\fBTMP_BasicXmlTagStack\fP TMPro\&.TMP_Text\&.m_fontStyleStack\fC [protected]\fP"

.PP
Definition at line 494 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_fontWeight = 400\fC [protected]\fP"

.PP
Definition at line 420 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_fontWeightInternal\fC [protected]\fP"

.PP
Definition at line 421 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<int> TMPro\&.TMP_Text\&.m_fontWeightStack = new \fBTMP_XmlTagStack\fP<int>(new int[16])\fC [protected]\fP"

.PP
Definition at line 422 of file TMP_Text\&.cs\&.
.SS "Matrix4x4 TMPro\&.TMP_Text\&.m_FXMatrix\fC [protected]\fP"

.PP
Definition at line 1336 of file TMP_Text\&.cs\&.
.SS "\fBVertexSortingOrder\fP TMPro\&.TMP_Text\&.m_geometrySortingOrder\fC [protected]\fP"

.PP
Definition at line 923 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_havePropertiesChanged\fC [protected]\fP"

.PP
Definition at line 1029 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.m_highlightColor = \fBs_colorWhite\fP\fC [protected]\fP"

.PP
Definition at line 240 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<Color32> TMPro\&.TMP_Text\&.m_highlightColorStack = new \fBTMP_XmlTagStack\fP<Color32>(new Color32[16])\fC [protected]\fP"

.PP
Definition at line 1379 of file TMP_Text\&.cs\&.
.SS "\fBTextureMappingOptions\fP TMPro\&.TMP_Text\&.m_horizontalMapping = \fBTextureMappingOptions\&.Character\fP\fC [protected]\fP"

.PP
Definition at line 862 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.m_htmlColor = new Color(255, 255, 255, 128)\fC [protected]\fP"

.PP
Definition at line 1375 of file TMP_Text\&.cs\&.
.SS "char [] TMPro\&.TMP_Text\&.m_htmlTag = new char[128]\fC [protected]\fP"

.PP
Definition at line 1324 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_ignoreActiveState\fC [protected]\fP"

.PP
Definition at line 1551 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_ignoreCulling = true\fC [protected]\fP"

.PP
Definition at line 850 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_ignoreRectMaskCulling\fC [protected]\fP"

.PP
Definition at line 838 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<float> TMPro\&.TMP_Text\&.m_indentStack = new \fBTMP_XmlTagStack\fP<float>(new float[16])\fC [protected]\fP"

.PP
Definition at line 1331 of file TMP_Text\&.cs\&.
.SS "char [] TMPro\&.TMP_Text\&.m_input_CharArray = new char[256]\fC [protected]\fP"

.PP
Definition at line 1342 of file TMP_Text\&.cs\&.
.SS "\fBTextInputSources\fP TMPro\&.TMP_Text\&.m_inputSource\fC [protected]\fP"

.PP
Definition at line 1314 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isAlignmentEnumConverted\fC [protected]\fP"

.PP
Definition at line 518 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isAwake\fC [protected]\fP"

.PP
Definition at line 1307 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isCalculateSizeRequired = false\fC [protected]\fP"

.PP
Definition at line 1301 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isCalculatingPreferredValues\fC [protected]\fP"

.PP
Definition at line 1280 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isCharacterWrappingEnabled = false\fC [protected]\fP"

.PP
Definition at line 617 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isCullingEnabled = false\fC [protected]\fP"

.PP
Definition at line 827 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isFXMatrixSet\fC [protected]\fP"

.PP
Definition at line 1337 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isIgnoringAlignment\fC [protected]\fP"

.PP
Definition at line 619 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isInputParsingRequired = false\fC [protected]\fP"

.PP
Definition at line 1311 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isLayoutDirty\fC [protected]\fP"

.PP
Definition at line 1302 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isLinkedTextComponent\fC [protected]\fP"

.PP
Definition at line 734 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isMaterialDirty\fC [protected]\fP"

.PP
Definition at line 221 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isNewPage = false\fC [protected]\fP"

.PP
Definition at line 991 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isNonBreakingSpace = false\fC [protected]\fP"

.PP
Definition at line 618 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isOrthographic = false\fC [protected]\fP"

.PP
Definition at line 815 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isOverlay = false\fC [protected]\fP"

.PP
Definition at line 803 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isParsingText\fC [protected]\fP"

.PP
Definition at line 1335 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isPreferredHeightDirty\fC [protected]\fP"

.PP
Definition at line 1278 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isPreferredWidthDirty\fC [protected]\fP"

.PP
Definition at line 1270 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isRichText = true\fC [protected]\fP"

.PP
Definition at line 780 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isRightToLeft = false\fC [protected]\fP"

.PP
Definition at line 134 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isSDFShader\fC [protected]\fP"

.PP
Definition at line 148 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isTextTruncated\fC [protected]\fP"

.PP
Definition at line 742 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isUsingBold = false\fC [protected]\fP"

.PP
Definition at line 500 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isUsingLegacyAnimationComponent\fC [protected]\fP"

.PP
Definition at line 1041 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isVolumetricText\fC [protected]\fP"

.PP
Definition at line 1104 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_isWaitingOnResourceLoad\fC [protected]\fP"

.PP
Definition at line 1308 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_lastCharacterOfLine\fC [protected]\fP"

.PP
Definition at line 1358 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_lastVisibleCharacterOfLine\fC [protected]\fP"

.PP
Definition at line 1359 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_layoutAlreadyDirty\fC [protected]\fP"

.PP
Definition at line 1305 of file TMP_Text\&.cs\&.
.SS "LayoutElement TMPro\&.TMP_Text\&.m_LayoutElement\fC [protected]\fP"

.PP
Definition at line 1262 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_layoutPriority = 0\fC [protected]\fP"

.PP
Definition at line 1299 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_lineHeight = TMP_Math\&.FLOAT_UNSET\fC [protected]\fP"

.PP
Definition at line 567 of file TMP_Text\&.cs\&.
.SS "\fBTextAlignmentOptions\fP TMPro\&.TMP_Text\&.m_lineJustification\fC [protected]\fP"

.PP
Definition at line 514 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<\fBTextAlignmentOptions\fP> TMPro\&.TMP_Text\&.m_lineJustificationStack = new \fBTMP_XmlTagStack\fP<\fBTextAlignmentOptions\fP>(new \fBTextAlignmentOptions\fP[16])\fC [protected]\fP"

.PP
Definition at line 515 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_lineNumber\fC [protected]\fP"

.PP
Definition at line 1360 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_lineOffset\fC [protected]\fP"

.PP
Definition at line 1370 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_lineSpacing = 0\fC [protected]\fP"

.PP
Definition at line 565 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_lineSpacingDelta = 0\fC [protected]\fP"

.PP
Definition at line 566 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_lineSpacingMax = 0\fC [protected]\fP"

.PP
Definition at line 579 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_lineVisibleCharacterCount\fC [protected]\fP"

.PP
Definition at line 1361 of file TMP_Text\&.cs\&.
.SS "\fBTMP_Text\fP TMPro\&.TMP_Text\&.m_linkedTextComponent\fC [protected]\fP"

.PP
Definition at line 710 of file TMP_Text\&.cs\&.
.SS "Vector4 TMPro\&.TMP_Text\&.m_margin = new Vector4(0, 0, 0, 0)\fC [protected]\fP"

.PP
Definition at line 1002 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_marginHeight\fC [protected]\fP"

.PP
Definition at line 1006 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_marginLeft\fC [protected]\fP"

.PP
Definition at line 1003 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_marginRight\fC [protected]\fP"

.PP
Definition at line 1004 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_marginWidth\fC [protected]\fP"

.PP
Definition at line 1005 of file TMP_Text\&.cs\&.
.SS "Dictionary<int, int> TMPro\&.TMP_Text\&.m_materialReferenceIndexLookup = new Dictionary<int, int>()\fC [protected]\fP"

.PP
Definition at line 163 of file TMP_Text\&.cs\&.
.SS "\fBMaterialReference\fP [] TMPro\&.TMP_Text\&.m_materialReferences = new \fBMaterialReference\fP[32]\fC [protected]\fP"

.PP
Definition at line 162 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<\fBMaterialReference\fP> TMPro\&.TMP_Text\&.m_materialReferenceStack = new \fBTMP_XmlTagStack\fP<\fBMaterialReference\fP>(new \fBMaterialReference\fP[16])\fC [protected]\fP"

.PP
Definition at line 165 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_maxAscender\fC [protected]\fP"

.PP
Definition at line 1363 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_maxCapHeight\fC [protected]\fP"

.PP
Definition at line 1364 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_maxDescender\fC [protected]\fP"

.PP
Definition at line 1365 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_maxFontSize\fC [protected]\fP"

.PP
Definition at line 455 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_maxHeight\fC [protected]\fP"

.PP
Definition at line 1245 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_maxLineAscender\fC [protected]\fP"

.PP
Definition at line 1366 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_maxLineDescender\fC [protected]\fP"

.PP
Definition at line 1367 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_maxVisibleCharacters = 99999\fC [protected]\fP"

.PP
Definition at line 944 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_maxVisibleLines = 99999\fC [protected]\fP"

.PP
Definition at line 966 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_maxVisibleWords = 99999\fC [protected]\fP"

.PP
Definition at line 955 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_maxWidth\fC [protected]\fP"

.PP
Definition at line 1239 of file TMP_Text\&.cs\&.
.SS "Mesh TMPro\&.TMP_Text\&.m_mesh\fC [protected]\fP"

.PP
Definition at line 1092 of file TMP_Text\&.cs\&.
.SS "\fBExtents\fP TMPro\&.TMP_Text\&.m_meshExtents\fC [protected]\fP"

.PP
Definition at line 1371 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_minFontSize\fC [protected]\fP"

.PP
Definition at line 456 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_minHeight\fC [protected]\fP"

.PP
Definition at line 1233 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_minWidth\fC [protected]\fP"

.PP
Definition at line 1227 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_monoSpacing = 0\fC [protected]\fP"

.PP
Definition at line 543 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.m_outlineColor = Color\&.black\fC [protected]\fP"

.PP
Definition at line 366 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_outlineWidth = 0\&.0f\fC [protected]\fP"

.PP
Definition at line 383 of file TMP_Text\&.cs\&.
.SS "\fBTextOverflowModes\fP TMPro\&.TMP_Text\&.m_overflowMode = \fBTextOverflowModes\&.Overflow\fP\fC [protected]\fP"

.PP
Definition at line 655 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_overrideHtmlColors = false\fC [protected]\fP"

.PP
Definition at line 328 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_padding = 0\fC [protected]\fP"

.PP
Definition at line 1395 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_pageNumber\fC [protected]\fP"

.PP
Definition at line 1362 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_pageToDisplay = 1\fC [protected]\fP"

.PP
Definition at line 990 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_paragraphSpacing = 0\fC [protected]\fP"

.PP
Definition at line 591 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_parseCtrlCharacters = true\fC [protected]\fP"

.PP
Definition at line 792 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_preferredHeight\fC [protected]\fP"

.PP
Definition at line 1276 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_preferredWidth\fC [protected]\fP"

.PP
Definition at line 1268 of file TMP_Text\&.cs\&.
.SS "RectTransform TMPro\&.TMP_Text\&.m_rectTransform\fC [protected]\fP"

.PP
Definition at line 1071 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_renderedHeight\fC [protected]\fP"

.PP
Definition at line 1277 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_renderedWidth\fC [protected]\fP"

.PP
Definition at line 1269 of file TMP_Text\&.cs\&.
.SS "\fBTextRenderFlags\fP TMPro\&.TMP_Text\&.m_renderMode = \fBTextRenderFlags\&.Render\fP\fC [protected]\fP"

.PP
Definition at line 909 of file TMP_Text\&.cs\&.
.SS "\fBWordWrapState\fP TMPro\&.TMP_Text\&.m_SavedLineState = new \fBWordWrapState\fP()\fC [protected]\fP"

.PP
Definition at line 1348 of file TMP_Text\&.cs\&.
.SS "\fBWordWrapState\fP TMPro\&.TMP_Text\&.m_SavedWordWrapState = new \fBWordWrapState\fP()\fC [protected]\fP"

.PP
Definition at line 1347 of file TMP_Text\&.cs\&.
.SS "Material TMPro\&.TMP_Text\&.m_sharedMaterial\fC [protected]\fP"

.PP
Definition at line 160 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<float> TMPro\&.TMP_Text\&.m_sizeStack = new \fBTMP_XmlTagStack\fP<float>(new float[16])\fC [protected]\fP"

.PP
Definition at line 399 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_spacing = 0\fC [protected]\fP"

.PP
Definition at line 1385 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_spriteAnimationID\fC [protected]\fP"

.PP
Definition at line 1409 of file TMP_Text\&.cs\&.
.SS "\fBTMP_SpriteAnimator\fP TMPro\&.TMP_Text\&.m_spriteAnimator\fC [protected]\fP"

.PP
Definition at line 1191 of file TMP_Text\&.cs\&.
.SS "\fBTMP_SpriteAsset\fP TMPro\&.TMP_Text\&.m_spriteAsset\fC [protected]\fP"

.PP
Definition at line 302 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.m_spriteColor\fC [protected]\fP"

.PP
Definition at line 316 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_spriteCount = 0\fC [protected]\fP"

.PP
Definition at line 1407 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_spriteIndex\fC [protected]\fP"

.PP
Definition at line 1408 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_startOfLineAscender\fC [protected]\fP"

.PP
Definition at line 1368 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.m_strikethroughColor = \fBs_colorWhite\fP\fC [protected]\fP"

.PP
Definition at line 239 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<Color32> TMPro\&.TMP_Text\&.m_strikethroughColorStack = new \fBTMP_XmlTagStack\fP<Color32>(new Color32[16])\fC [protected]\fP"

.PP
Definition at line 1378 of file TMP_Text\&.cs\&.
.SS "\fBFontStyles\fP TMPro\&.TMP_Text\&.m_style = \fBFontStyles\&.Normal\fP\fC [protected]\fP"

.PP
Definition at line 493 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<int> TMPro\&.TMP_Text\&.m_styleStack = new \fBTMP_XmlTagStack\fP<int>(new int[16])\fC [protected]\fP"

.PP
Definition at line 1392 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_tabSpacing = 0\fC [protected]\fP"

.PP
Definition at line 1384 of file TMP_Text\&.cs\&.
.SS "string TMPro\&.TMP_Text\&.m_text\fC [protected]\fP"

.PP
Definition at line 122 of file TMP_Text\&.cs\&.
.SS "\fBTextAlignmentOptions\fP TMPro\&.TMP_Text\&.m_textAlignment = \fBTextAlignmentOptions\&.TopLeft\fP\fC [protected]\fP"

.PP
Definition at line 513 of file TMP_Text\&.cs\&.
.SS "Vector3 [] TMPro\&.TMP_Text\&.m_textContainerLocalCorners = new Vector3[4]\fC [protected]\fP"

.PP
Definition at line 516 of file TMP_Text\&.cs\&.
.SS "\fBTMP_TextElementType\fP TMPro\&.TMP_Text\&.m_textElementType\fC [protected]\fP"

.PP
Definition at line 1400 of file TMP_Text\&.cs\&.
.SS "\fBTMP_TextInfo\fP TMPro\&.TMP_Text\&.m_textInfo\fC [protected]\fP"

.PP
Definition at line 1018 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_tintAllSprites\fC [protected]\fP"

.PP
Definition at line 314 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_tintSprite\fC [protected]\fP"

.PP
Definition at line 315 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.m_totalCharacterCount\fC [protected]\fP"

.PP
Definition at line 1344 of file TMP_Text\&.cs\&.
.SS "Transform TMPro\&.TMP_Text\&.m_transform\fC [protected]\fP"

.PP
Definition at line 1056 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.m_underlineColor = \fBs_colorWhite\fP\fC [protected]\fP"

.PP
Definition at line 238 of file TMP_Text\&.cs\&.
.SS "\fBTMP_XmlTagStack\fP<Color32> TMPro\&.TMP_Text\&.m_underlineColorStack = new \fBTMP_XmlTagStack\fP<Color32>(new Color32[16])\fC [protected]\fP"

.PP
Definition at line 1377 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_useMaxVisibleDescender = true\fC [protected]\fP"

.PP
Definition at line 978 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_uvLineOffset = 0\&.0f\fC [protected]\fP"

.PP
Definition at line 898 of file TMP_Text\&.cs\&.
.SS "\fBTextureMappingOptions\fP TMPro\&.TMP_Text\&.m_verticalMapping = \fBTextureMappingOptions\&.Character\fP\fC [protected]\fP"

.PP
Definition at line 874 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.m_verticesAlreadyDirty\fC [protected]\fP"

.PP
Definition at line 1304 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_width = \-1\fC [protected]\fP"

.PP
Definition at line 1007 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_wordSpacing = 0\fC [protected]\fP"

.PP
Definition at line 554 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_wordWrappingRatios = 0\&.4f\fC [protected]\fP"

.PP
Definition at line 630 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.m_xAdvance\fC [protected]\fP"

.PP
Definition at line 1398 of file TMP_Text\&.cs\&.
.SS "\fBXML_TagAttribute\fP [] TMPro\&.TMP_Text\&.m_xmlAttribute = new \fBXML_TagAttribute\fP[8]\fC [protected]\fP"

.PP
Definition at line 1325 of file TMP_Text\&.cs\&.
.SS "string TMPro\&.TMP_Text\&.old_text\fC [protected]\fP"

.PP
Definition at line 1317 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.s_colorWhite = new Color32(255, 255, 255, 255)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 237 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.tag_Indent = 0\fC [protected]\fP"

.PP
Definition at line 1330 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.tag_LineIndent = 0\fC [protected]\fP"

.PP
Definition at line 1329 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.tag_NoParsing\fC [protected]\fP"

.PP
Definition at line 1332 of file TMP_Text\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "\fBTextAlignmentOptions\fP TMPro\&.TMP_Text\&.alignment\fC [get]\fP, \fC [set]\fP"

.PP
Text alignment options 
.PP
Definition at line 507 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.alpha\fC [get]\fP, \fC [set]\fP"

.PP
Sets the vertex color alpha value\&. 
.PP
Definition at line 247 of file TMP_Text\&.cs\&.
.SS "virtual bool TMPro\&.TMP_Text\&.autoSizeTextContainer\fC [get]\fP, \fC [set]\fP"

.PP
Enables control over setting the size of the text container to match the text object\&. 
.PP
Definition at line 1078 of file TMP_Text\&.cs\&.
.SS "Bounds TMPro\&.TMP_Text\&.bounds\fC [get]\fP"

.PP
Returns the bounds of the mesh of the text object in world space\&. 
.PP
Definition at line 1110 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.characterSpacing\fC [get]\fP, \fC [set]\fP"

.PP
Use the extents of the text geometry for alignment instead of font metrics\&. The amount of additional spacing between characters\&. 
.PP
Definition at line 536 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.characterWidthAdjustment\fC [get]\fP, \fC [set]\fP"

.PP
Percentage the width of characters can be adjusted before text auto-sizing begins to reduce the point size\&. 
.PP
Definition at line 598 of file TMP_Text\&.cs\&.
.SS "override Color TMPro\&.TMP_Text\&.color\fC [get]\fP, \fC [set]\fP"

.PP
This is the default vertex color assigned to each vertices\&. Color tags will override vertex colors unless the overrideColorTags is set\&. 
.PP
Definition at line 228 of file TMP_Text\&.cs\&.
.SS "\fBVertexGradient\fP TMPro\&.TMP_Text\&.colorGradient\fC [get]\fP, \fC [set]\fP"

.PP
Sets the vertex colors for each of the 4 vertices of the character quads\&. The color gradient\&.
.PP
Definition at line 273 of file TMP_Text\&.cs\&.
.SS "\fBTMP_ColorGradient\fP TMPro\&.TMP_Text\&.colorGradientPreset\fC [get]\fP, \fC [set]\fP"

.PP
Set the vertex colors of the 4 vertices of each character quads\&. 
.PP
Definition at line 285 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.enableAutoSizing\fC [get]\fP, \fC [set]\fP"

.PP
Enable text auto-sizing 
.PP
Definition at line 449 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.enableCulling\fC [get]\fP, \fC [set]\fP"

.PP
Sets the culling on the shaders\&. Note changing this value will result in an instance of the material\&. 
.PP
Definition at line 822 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.enableKerning\fC [get]\fP, \fC [set]\fP"

.PP
Determines if kerning is enabled or disabled\&. 
.PP
Definition at line 749 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.enableVertexGradient\fC [get]\fP, \fC [set]\fP"

.PP
Determines if Vertex Color Gradient should be used \fCtrue\fP if enable vertex gradient; otherwise, \fCfalse\fP\&.
.PP
Definition at line 258 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.enableWordWrapping\fC [get]\fP, \fC [set]\fP"

.PP
Controls whether or not word wrapping is applied\&. When disabled, the text will be displayed on a single line\&. 
.PP
Definition at line 611 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.extraPadding\fC [get]\fP, \fC [set]\fP"

.PP
Adds extra padding around each character\&. This may be necessary when the displayed text is very small to prevent clipping\&. 
.PP
Definition at line 761 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.faceColor\fC [get]\fP, \fC [set]\fP"

.PP
Sets the color of the _FaceColor property of the assigned material\&. Changing face color will result in an instance of the material\&. 
.PP
Definition at line 335 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.firstOverflowCharacterIndex\fC [get]\fP"

.PP
The first character which exceeds the vertical bounds of its text container\&. 
.PP
Definition at line 671 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.firstVisibleCharacter\fC [get]\fP, \fC [set]\fP"

.PP
The first character which should be made visible in conjunction with the Text Overflow Linked mode\&. 
.PP
Definition at line 929 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.flexibleHeight\fC [get]\fP"

.PP

.PP
Definition at line 1214 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.flexibleWidth\fC [get]\fP"

.PP

.PP
Definition at line 1220 of file TMP_Text\&.cs\&.
.SS "\fBTMP_FontAsset\fP TMPro\&.TMP_Text\&.font\fC [get]\fP, \fC [set]\fP"

.PP
The Font Asset to be assigned to this text object\&. 
.PP
Definition at line 141 of file TMP_Text\&.cs\&.
.SS "Material TMPro\&.TMP_Text\&.fontMaterial\fC [get]\fP, \fC [set]\fP"

.PP
The material to be assigned to this text object\&. An instance of the material will be assigned to the object's renderer\&. 
.PP
Definition at line 186 of file TMP_Text\&.cs\&.
.SS "virtual Material [] TMPro\&.TMP_Text\&.fontMaterials\fC [get]\fP, \fC [set]\fP"

.PP
The materials to be assigned to this text object\&. An instance of the materials will be assigned\&. 
.PP
Definition at line 213 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.fontScale\fC [get]\fP"

.PP
The scale of the current text\&. 
.PP
Definition at line 406 of file TMP_Text\&.cs\&.
.SS "virtual Material TMPro\&.TMP_Text\&.fontSharedMaterial\fC [get]\fP, \fC [set]\fP"

.PP
The material to be assigned to this text object\&. 
.PP
Definition at line 155 of file TMP_Text\&.cs\&.
.SS "virtual Material [] TMPro\&.TMP_Text\&.fontSharedMaterials\fC [get]\fP, \fC [set]\fP"

.PP
An array containing the materials used by the text object\&. 
.PP
Definition at line 174 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.fontSize\fC [get]\fP, \fC [set]\fP"

.PP
The point size of the font\&. 
.PP
Definition at line 390 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.fontSizeMax\fC [get]\fP, \fC [set]\fP"

.PP
Maximum point size of the font when text auto-sizing is enabled\&. 
.PP
Definition at line 475 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.fontSizeMin\fC [get]\fP, \fC [set]\fP"

.PP
Minimum point size of the font when text auto-sizing is enabled\&. 
.PP
Definition at line 463 of file TMP_Text\&.cs\&.
.SS "\fBFontStyles\fP TMPro\&.TMP_Text\&.fontStyle\fC [get]\fP, \fC [set]\fP"

.PP
The style of the text 
.PP
Definition at line 487 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.fontWeight\fC [get]\fP, \fC [set]\fP"

.PP
Control the weight of the font if an alternative font asset is assigned for the given weight in the font asset editor\&. 
.PP
Definition at line 415 of file TMP_Text\&.cs\&.
.SS "\fBVertexSortingOrder\fP TMPro\&.TMP_Text\&.geometrySortingOrder\fC [get]\fP, \fC [set]\fP"

.PP
Determines the sorting order of the geometry of the text object\&. 
.PP
Definition at line 916 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.havePropertiesChanged\fC [get]\fP, \fC [set]\fP"

.PP
Property tracking if any of the text properties have changed\&. Flag is set before the text is regenerated\&. 
.PP
Definition at line 1024 of file TMP_Text\&.cs\&.
.SS "\fBTextureMappingOptions\fP TMPro\&.TMP_Text\&.horizontalMapping\fC [get]\fP, \fC [set]\fP"

.PP
Controls how the face and outline textures will be applied to the text object\&. 
.PP
Definition at line 857 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.ignoreRectMaskCulling\fC [get]\fP, \fC [set]\fP"

.PP
Controls whether or not the text object will be culled when using a 2D Rect Mask\&. 
.PP
Definition at line 833 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.ignoreVisibility\fC [get]\fP, \fC [set]\fP"

.PP
Forces objects that are not visible to get refreshed\&. 
.PP
Definition at line 845 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isLinkedTextComponent\fC [get]\fP, \fC [set]\fP"

.PP
Indicates whether this text component is linked to another\&. 
.PP
Definition at line 717 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isOrthographic\fC [get]\fP, \fC [set]\fP"

.PP
Sets Perspective Correction to Zero for Orthographic Camera mode & 0\&.875f for Perspective Camera mode\&. 
.PP
Definition at line 810 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isOverlay\fC [get]\fP, \fC [set]\fP"

.PP
Sets the RenderQueue along with Ztest to force the text to be drawn last and on top of scene elements\&. 
.PP
Definition at line 799 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isRightToLeftText\fC [get]\fP, \fC [set]\fP"

.PP

.PP
Definition at line 129 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isTextOverflowing\fC [get]\fP"

.PP
Indicates if the text exceeds the vertical bounds of its text container\&. 
.PP
Definition at line 662 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isTextTruncated\fC [get]\fP"

.PP
Property indicating whether the text is Truncated or using Ellipsis\&. 
.PP
Definition at line 740 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isUsingBold\fC [get]\fP"

.PP
Property used in conjunction with padding calculation for the geometry\&. 
.PP
Definition at line 499 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isUsingLegacyAnimationComponent\fC [get]\fP, \fC [set]\fP"

.PP
Property to handle legacy animation component\&. 
.PP
Definition at line 1036 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.isVolumetricText\fC [get]\fP, \fC [set]\fP"

.PP
Determines if the geometry of the characters will be quads or volumetric (cubes)\&. 
.PP
Definition at line 1099 of file TMP_Text\&.cs\&.
.SS "LayoutElement TMPro\&.TMP_Text\&.layoutElement\fC [get]\fP, \fC [protected]\fP"

.PP

.PP
Definition at line 1251 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.layoutPriority\fC [get]\fP"

.PP

.PP
Definition at line 1298 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.lineSpacing\fC [get]\fP, \fC [set]\fP"

.PP
The amount of additional spacing to add between each lines of text\&. 
.PP
Definition at line 560 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.lineSpacingAdjustment\fC [get]\fP, \fC [set]\fP"

.PP
The amount of potential line spacing adjustment before text auto sizing kicks in\&. 
.PP
Definition at line 574 of file TMP_Text\&.cs\&.
.SS "\fBTMP_Text\fP TMPro\&.TMP_Text\&.linkedTextComponent\fC [get]\fP, \fC [set]\fP"

.PP
The linked text component used for flowing the text from one text component to another\&. 
.PP
Definition at line 682 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.mappingUvLineOffset\fC [get]\fP, \fC [set]\fP"

.PP
Controls the UV Offset for the various texture mapping mode on the text object\&. Controls the horizontal offset of the UV of the texture mapping mode for each line of the text object\&. 
.PP
Definition at line 893 of file TMP_Text\&.cs\&.
.SS "virtual Vector4 TMPro\&.TMP_Text\&.margin\fC [get]\fP, \fC [set]\fP"

.PP
The margins of the text object\&. 
.PP
Definition at line 997 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.maxHeight\fC [get]\fP"

.PP

.PP
Definition at line 1244 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.maxVisibleCharacters\fC [get]\fP, \fC [set]\fP"

.PP
Allows to control how many characters are visible from the input\&. 
.PP
Definition at line 940 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.maxVisibleLines\fC [get]\fP, \fC [set]\fP"

.PP
Allows control over how many lines of text are displayed\&. 
.PP
Definition at line 962 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.maxVisibleWords\fC [get]\fP, \fC [set]\fP"

.PP
Allows to control how many words are visible from the input\&. 
.PP
Definition at line 951 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.maxWidth\fC [get]\fP"

.PP

.PP
Definition at line 1238 of file TMP_Text\&.cs\&.
.SS "virtual Mesh TMPro\&.TMP_Text\&.mesh\fC [get]\fP"

.PP
The mesh used by the font asset and material assigned to the text object\&. 
.PP
Definition at line 1089 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.minHeight\fC [get]\fP"

.PP

.PP
Definition at line 1232 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.minWidth\fC [get]\fP"

.PP

.PP
Definition at line 1226 of file TMP_Text\&.cs\&.
.SS "Color32 TMPro\&.TMP_Text\&.outlineColor\fC [get]\fP, \fC [set]\fP"

.PP
Sets the color of the _OutlineColor property of the assigned material\&. Changing outline color will result in an instance of the material\&. 
.PP
Definition at line 354 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.outlineWidth\fC [get]\fP, \fC [set]\fP"

.PP
Sets the thickness of the outline of the font\&. Setting this value will result in an instance of the material\&. 
.PP
Definition at line 373 of file TMP_Text\&.cs\&.
.SS "\fBTextOverflowModes\fP TMPro\&.TMP_Text\&.overflowMode\fC [get]\fP, \fC [set]\fP"

.PP
Controls the Text Overflow Mode 
.PP
Definition at line 650 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.overrideColorTags\fC [get]\fP, \fC [set]\fP"

.PP
This overrides the color tags forcing the vertex colors to be the default font color\&. 
.PP
Definition at line 323 of file TMP_Text\&.cs\&.
.SS "int TMPro\&.TMP_Text\&.pageToDisplay\fC [get]\fP, \fC [set]\fP"

.PP
Controls which page of text is shown 
.PP
Definition at line 985 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.paragraphSpacing\fC [get]\fP, \fC [set]\fP"

.PP
The amount of additional spacing to add between each lines of text\&. 
.PP
Definition at line 586 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.parseCtrlCharacters\fC [get]\fP, \fC [set]\fP"

.PP
Enables or Disables parsing of CTRL characters in input text\&. 
.PP
Definition at line 787 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.pixelsPerUnit\fC [get]\fP"

.PP

.PP
Definition at line 428 of file TMP_Text\&.cs\&.
.SS "virtual float TMPro\&.TMP_Text\&.preferredHeight\fC [get]\fP"

.PP
Computed preferred height of the text object\&. 
.PP
Definition at line 1275 of file TMP_Text\&.cs\&.
.SS "virtual float TMPro\&.TMP_Text\&.preferredWidth\fC [get]\fP"

.PP
Computed preferred width of the text object\&. 
.PP
Definition at line 1267 of file TMP_Text\&.cs\&.
.SS "new RectTransform TMPro\&.TMP_Text\&.rectTransform\fC [get]\fP"

.PP
Returns are reference to the RectTransform 
.PP
Definition at line 1063 of file TMP_Text\&.cs\&.
.SS "virtual float TMPro\&.TMP_Text\&.renderedHeight\fC [get]\fP"

.PP
Compute the rendered height of the text object\&. 
.PP
Definition at line 1292 of file TMP_Text\&.cs\&.
.SS "virtual float TMPro\&.TMP_Text\&.renderedWidth\fC [get]\fP"

.PP
Compute the rendered width of the text object\&. 
.PP
Definition at line 1286 of file TMP_Text\&.cs\&.
.SS "\fBTextRenderFlags\fP TMPro\&.TMP_Text\&.renderMode\fC [get]\fP, \fC [set]\fP"

.PP
Determines if the Mesh will be rendered\&. 
.PP
Definition at line 905 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.richText\fC [get]\fP, \fC [set]\fP"

.PP
Enables or Disables Rich Text Tags 
.PP
Definition at line 775 of file TMP_Text\&.cs\&.
.SS "\fBTMP_SpriteAnimator\fP TMPro\&.TMP_Text\&.spriteAnimator\fC [get]\fP, \fC [protected]\fP"

.PP
Component used to control wrapping of text following some arbitrary shape\&. Component used to control and animate sprites in the text object\&. 
.PP
Definition at line 1177 of file TMP_Text\&.cs\&.
.SS "\fBTMP_SpriteAsset\fP TMPro\&.TMP_Text\&.spriteAsset\fC [get]\fP, \fC [set]\fP"

.PP
Default Sprite Asset used by the text object\&. 
.PP
Definition at line 297 of file TMP_Text\&.cs\&.
.SS "string TMPro\&.TMP_Text\&.text\fC [get]\fP, \fC [set]\fP"

.PP
A string containing the text to be displayed\&. 
.PP
Definition at line 116 of file TMP_Text\&.cs\&.
.SS "Bounds TMPro\&.TMP_Text\&.textBounds\fC [get]\fP"

.PP
Returns the bounds of the text of the text object\&. 
.PP
Definition at line 1123 of file TMP_Text\&.cs\&.
.SS "\fBTMP_TextInfo\fP TMPro\&.TMP_Text\&.textInfo\fC [get]\fP"

.PP
Returns data about the text object which includes information about each character, word, line, link, etc\&. 
.PP
Definition at line 1014 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.tintAllSprites\fC [get]\fP, \fC [set]\fP"

.PP
Determines whether or not the sprite color is multiplies by the vertex color of the text\&. 
.PP
Definition at line 309 of file TMP_Text\&.cs\&.
.SS "new Transform TMPro\&.TMP_Text\&.transform\fC [get]\fP"

.PP
Returns are reference to the Transform 
.PP
Definition at line 1048 of file TMP_Text\&.cs\&.
.SS "bool TMPro\&.TMP_Text\&.useMaxVisibleDescender\fC [get]\fP, \fC [set]\fP"

.PP
Determines if the text's vertical alignment will be adjusted based on visible descender of the text\&. 
.PP
Definition at line 973 of file TMP_Text\&.cs\&.
.SS "\fBTextureMappingOptions\fP TMPro\&.TMP_Text\&.verticalMapping\fC [get]\fP, \fC [set]\fP"

.PP
Controls how the face and outline textures will be applied to the text object\&. 
.PP
Definition at line 869 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.wordSpacing\fC [get]\fP, \fC [set]\fP"

.PP
The amount of additional spacing between words\&. 
.PP
Definition at line 549 of file TMP_Text\&.cs\&.
.SS "float TMPro\&.TMP_Text\&.wordWrappingRatios\fC [get]\fP, \fC [set]\fP"

.PP
Controls the blending between using character and word spacing to fill-in the space for justified text\&. 
.PP
Definition at line 625 of file TMP_Text\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
