.TH "Valve.VR.SteamVR_Action_Skeleton" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Valve.VR.SteamVR_Action_Skeleton \- Skeleton Actions are our best approximation of where your hands are while holding vr controllers and pressing buttons\&. We give you 31 bones to help you animate hand models\&. For more information check out this blog post: https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBValve\&.VR\&.SteamVR_Action_Pose_Base< SteamVR_Action_Skeleton_Source_Map, SteamVR_Action_Skeleton_Source >\fP, \fBValve\&.VR\&.ISteamVR_Action_Skeleton_Source\fP, and ISerializationCallbackReceiver\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "delegate void \fBActiveChangeHandler\fP (\fBSteamVR_Action_Skeleton\fP fromAction, bool active)"
.br
.ti -1c
.RI "delegate void \fBChangeHandler\fP (\fBSteamVR_Action_Skeleton\fP fromAction)"
.br
.ti -1c
.RI "delegate void \fBUpdateHandler\fP (\fBSteamVR_Action_Skeleton\fP fromAction)"
.br
.ti -1c
.RI "delegate void \fBTrackingChangeHandler\fP (\fBSteamVR_Action_Skeleton\fP fromAction, \fBETrackingResult\fP \fBtrackingState\fP)"
.br
.ti -1c
.RI "delegate void \fBValidPoseChangeHandler\fP (\fBSteamVR_Action_Skeleton\fP fromAction, bool validPose)"
.br
.ti -1c
.RI "delegate void \fBDeviceConnectedChangeHandler\fP (\fBSteamVR_Action_Skeleton\fP fromAction, bool deviceConnected)"
.br
.ti -1c
.RI "\fBSteamVR_Action_Skeleton\fP ()"
.br
.ti -1c
.RI "virtual void \fBUpdateValue\fP (bool skipStateAndEventUpdates)"
.br
.RI "\fB[Should not be called by user code]\fP Updates the skeleton action data "
.ti -1c
.RI "void \fBUpdateValueWithoutEvents\fP ()"
.br
.RI "\fB[Should not be called by user code]\fP Updates the skeleton action data without firing events "
.ti -1c
.RI "void \fBUpdateTransform\fP (Transform transformToUpdate)"
.br
.RI "Update a transform's local position and local roation to match the pose from the most recent update "
.ti -1c
.RI "bool \fBGetActive\fP ()"
.br
.RI "True if this action is bound and the ActionSet is active "
.ti -1c
.RI "bool \fBGetSetActive\fP ()"
.br
.RI "True if the ActionSet that contains this action is active "
.ti -1c
.RI "bool \fBGetVelocitiesAtTimeOffset\fP (float secondsFromNow, out Vector3 \fBvelocity\fP, out Vector3 \fBangularVelocity\fP)"
.br
.RI "\fBSteamVR\fP keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive\&. "
.ti -1c
.RI "bool \fBGetPoseAtTimeOffset\fP (float secondsFromNow, out Vector3 position, out Quaternion rotation, out Vector3 \fBvelocity\fP, out Vector3 \fBangularVelocity\fP)"
.br
.RI "\fBSteamVR\fP keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive\&. "
.ti -1c
.RI "Vector3 \fBGetLocalPosition\fP ()"
.br
.RI "The local position of the pose relative to the universe origin "
.ti -1c
.RI "Quaternion \fBGetLocalRotation\fP ()"
.br
.RI "The local rotation of the pose relative to the universe origin "
.ti -1c
.RI "Vector3 \fBGetVelocity\fP ()"
.br
.RI "The local velocity of the pose relative to the universe origin "
.ti -1c
.RI "Vector3 \fBGetAngularVelocity\fP ()"
.br
.RI "The local angular velocity of the pose relative to the universe origin "
.ti -1c
.RI "bool \fBGetDeviceIsConnected\fP ()"
.br
.RI "True if the device bound to this action is connected "
.ti -1c
.RI "bool \fBGetPoseIsValid\fP ()"
.br
.RI "True if the pose retrieved for this action is valid (good data from the tracking source) "
.ti -1c
.RI "\fBETrackingResult\fP \fBGetTrackingResult\fP ()"
.br
.RI "The state of the tracking system that is used to create pose data (position, rotation, etc) "
.ti -1c
.RI "Vector3 \fBGetLastLocalPosition\fP ()"
.br
.RI "The last local position of the pose relative to the universe origin "
.ti -1c
.RI "Quaternion \fBGetLastLocalRotation\fP ()"
.br
.RI "The last local rotation of the pose relative to the universe origin "
.ti -1c
.RI "Vector3 \fBGetLastVelocity\fP ()"
.br
.RI "The last local velocity of the pose relative to the universe origin "
.ti -1c
.RI "Vector3 \fBGetLastAngularVelocity\fP ()"
.br
.RI "The last local angular velocity of the pose relative to the universe origin "
.ti -1c
.RI "bool \fBGetLastDeviceIsConnected\fP ()"
.br
.RI "True if the device bound to this action was connected during the previous update "
.ti -1c
.RI "bool \fBGetLastPoseIsValid\fP ()"
.br
.RI "True if the pose was valid during the previous update "
.ti -1c
.RI "\fBETrackingResult\fP \fBGetLastTrackingResult\fP ()"
.br
.RI "The tracking state for this pose during the previous update "
.ti -1c
.RI "Vector3 [] \fBGetBonePositions\fP (bool copy=false)"
.br
.RI "Gets the bone positions in local space\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array "
.ti -1c
.RI "Quaternion [] \fBGetBoneRotations\fP (bool copy=false)"
.br
.RI "Gets the bone rotations in local space\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array "
.ti -1c
.RI "Vector3 [] \fBGetLastBonePositions\fP (bool copy=false)"
.br
.RI "Gets the bone positions in local space from the previous update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array "
.ti -1c
.RI "Quaternion [] \fBGetLastBoneRotations\fP (bool copy=false)"
.br
.RI "Gets the bone rotations in local space from the previous update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array "
.ti -1c
.RI "void \fBSetRangeOfMotion\fP (\fBEVRSkeletalMotionRange\fP range)"
.br
.RI "Set the range of the motion of the bones in this skeleton\&. Options are 'With Controller' as if your hand is holding your \fBVR\fP controller\&. Or 'Without Controller' as if your hand is empty\&. This will set the range for the following update\&. "
.ti -1c
.RI "void \fBSetSkeletalTransformSpace\fP (\fBEVRSkeletalTransformSpace\fP space)"
.br
.RI "Sets the space that you'll get bone data back in\&. Options are relative to the Model and relative to the Parent bone "
.ti -1c
.RI "uint \fBGetBoneCount\fP ()"
.br
.RI "Returns the total number of bones in the skeleton "
.ti -1c
.RI "int [] \fBGetBoneHierarchy\fP ()"
.br
.RI "Returns the order of bones in the hierarchy "
.ti -1c
.RI "string \fBGetBoneName\fP (int boneIndex)"
.br
.RI "Returns the name of the bone "
.ti -1c
.RI "\fBSteamVR_Utils\&.RigidTransform\fP [] \fBGetReferenceTransforms\fP (\fBEVRSkeletalTransformSpace\fP transformSpace, \fBEVRSkeletalReferencePose\fP referencePose)"
.br
.RI "Returns an array of positions/rotations that represent the state of each bone in a reference pose\&. "
.ti -1c
.RI "\fBEVRSkeletalTrackingLevel\fP \fBGetSkeletalTrackingLevel\fP ()"
.br
.RI "Get the accuracy level of the skeletal tracking data\&. "
.ti -1c
.RI "float [] \fBGetFingerCurls\fP (bool copy=false)"
.br
.RI "Returns the finger curl data that we calculate each update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array "
.ti -1c
.RI "float [] \fBGetLastFingerCurls\fP (bool copy=false)"
.br
.RI "Returns the finger curl data from the previous update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array "
.ti -1c
.RI "float [] \fBGetFingerSplays\fP (bool copy=false)"
.br
.RI "Returns the finger splay data that we calculate each update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array "
.ti -1c
.RI "float [] \fBGetLastFingerSplays\fP (bool copy=false)"
.br
.RI "Returns the finger splay data from the previous update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array "
.ti -1c
.RI "float \fBGetFingerCurl\fP (int finger)"
.br
.RI "Returns a value indicating how much the passed in finger is currently curled\&. "
.ti -1c
.RI "float \fBGetSplay\fP (int fingerGapIndex)"
.br
.RI "Returns a value indicating how the size of the gap between fingers\&. "
.ti -1c
.RI "float \fBGetFingerCurl\fP (\fBSteamVR_Skeleton_FingerIndexEnum\fP finger)"
.br
.RI "Returns a value indicating how much the passed in finger is currently curled\&. "
.ti -1c
.RI "float \fBGetSplay\fP (\fBSteamVR_Skeleton_FingerSplayIndexEnum\fP fingerSplay)"
.br
.RI "Returns a value indicating how the size of the gap between fingers\&. "
.ti -1c
.RI "float \fBGetLastFingerCurl\fP (int finger)"
.br
.RI "Returns a value indicating how much the passed in finger was curled during the previous update "
.ti -1c
.RI "float \fBGetLastSplay\fP (int fingerGapIndex)"
.br
.RI "Returns a value indicating the size of the gap between fingers during the previous update "
.ti -1c
.RI "float \fBGetLastFingerCurl\fP (\fBSteamVR_Skeleton_FingerIndexEnum\fP finger)"
.br
.RI "Returns a value indicating how much the passed in finger was curled during the previous update "
.ti -1c
.RI "float \fBGetLastSplay\fP (\fBSteamVR_Skeleton_FingerSplayIndexEnum\fP fingerSplay)"
.br
.RI "Returns a value indicating the size of the gap between fingers during the previous update "
.ti -1c
.RI "string \fBGetLocalizedName\fP (params \fBEVRInputStringBits\fP[] localizedParts)"
.br
.RI "Gets the localized name of the device that the action corresponds to\&. Include as many EVRInputStringBits as you want to add to the localized string "
.ti -1c
.RI "void \fBAddOnDeviceConnectedChanged\fP (\fBDeviceConnectedChangeHandler\fP functionToCall)"
.br
.RI "Fires an event when a device is connected or disconnected\&. "
.ti -1c
.RI "void \fBRemoveOnDeviceConnectedChanged\fP (\fBDeviceConnectedChangeHandler\fP functionToStopCalling)"
.br
.RI "Stops executing the function setup by the corresponding AddListener "
.ti -1c
.RI "void \fBAddOnTrackingChanged\fP (\fBTrackingChangeHandler\fP functionToCall)"
.br
.RI "Fires an event when the tracking of the device has changed "
.ti -1c
.RI "void \fBRemoveOnTrackingChanged\fP (\fBTrackingChangeHandler\fP functionToStopCalling)"
.br
.RI "Stops executing the function setup by the corresponding AddListener "
.ti -1c
.RI "void \fBAddOnValidPoseChanged\fP (\fBValidPoseChangeHandler\fP functionToCall)"
.br
.RI "Fires an event when the device now has a valid pose or no longer has a valid pose "
.ti -1c
.RI "void \fBRemoveOnValidPoseChanged\fP (\fBValidPoseChangeHandler\fP functionToStopCalling)"
.br
.RI "Stops executing the function setup by the corresponding AddListener "
.ti -1c
.RI "void \fBAddOnActiveChangeListener\fP (\fBActiveChangeHandler\fP functionToCall)"
.br
.RI "Executes a function when this action's bound state changes "
.ti -1c
.RI "void \fBRemoveOnActiveChangeListener\fP (\fBActiveChangeHandler\fP functionToStopCalling)"
.br
.RI "Stops executing the function setup by the corresponding AddListener "
.ti -1c
.RI "void \fBAddOnChangeListener\fP (\fBChangeHandler\fP functionToCall)"
.br
.RI "Executes a function when the state of this action changes "
.ti -1c
.RI "void \fBRemoveOnChangeListener\fP (\fBChangeHandler\fP functionToStopCalling)"
.br
.RI "Stops executing the function setup by the corresponding AddListener "
.ti -1c
.RI "void \fBAddOnUpdateListener\fP (\fBUpdateHandler\fP functionToCall)"
.br
.RI "Executes a function when the state of this action is updated\&. "
.ti -1c
.RI "void \fBRemoveOnUpdateListener\fP (\fBUpdateHandler\fP functionToStopCalling)"
.br
.RI "Stops executing the function setup by the corresponding AddListener "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const int \fBnumBones\fP = 31"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static Quaternion \fBsteamVRFixUpRotation\fP = Quaternion\&.AngleAxis(Mathf\&.PI * Mathf\&.Rad2Deg, Vector3\&.up)"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBActiveChangeHandler\fP \fBonActiveChange\fP"
.br
.RI "Event fires when the active state (ActionSet active and binding active) changes "
.ti -1c
.RI "\fBActiveChangeHandler\fP \fBonActiveBindingChange\fP"
.br
.RI "Event fires when the active state of the binding changes "
.ti -1c
.RI "\fBChangeHandler\fP \fBonChange\fP"
.br
.RI "Event fires when the state of the pose or bones moves more than the changeTolerance "
.ti -1c
.RI "\fBUpdateHandler\fP \fBonUpdate\fP"
.br
.RI "Event fires when the action is updated "
.ti -1c
.RI "\fBTrackingChangeHandler\fP \fBonTrackingChanged\fP"
.br
.RI "Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes "
.ti -1c
.RI "\fBValidPoseChangeHandler\fP \fBonValidPoseChanged\fP"
.br
.RI "Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) "
.ti -1c
.RI "\fBDeviceConnectedChangeHandler\fP \fBonDeviceConnectedChanged\fP"
.br
.RI "Event fires when the device bound to this action is connected or disconnected "
.ti -1c
.RI "Vector3 [] \fBbonePositions\fP\fC [get]\fP"
.br
.RI "An array of the positions of the bones from the most recent update\&. Relative to skeletalTransformSpace\&. See SteamVR_Skeleton_JointIndexes for bone indexes\&. "
.ti -1c
.RI "Quaternion [] \fBboneRotations\fP\fC [get]\fP"
.br
.RI "An array of the rotations of the bones from the most recent update\&. Relative to skeletalTransformSpace\&. See SteamVR_Skeleton_JointIndexes for bone indexes\&. "
.ti -1c
.RI "Vector3 [] \fBlastBonePositions\fP\fC [get]\fP"
.br
.RI "From the previous update: An array of the positions of the bones from the most recent update\&. Relative to skeletalTransformSpace\&. See SteamVR_Skeleton_JointIndexes for bone indexes\&. "
.ti -1c
.RI "Quaternion [] \fBlastBoneRotations\fP\fC [get]\fP"
.br
.RI "From the previous update: An array of the rotations of the bones from the most recent update\&. Relative to skeletalTransformSpace\&. See SteamVR_Skeleton_JointIndexes for bone indexes\&. "
.ti -1c
.RI "\fBEVRSkeletalMotionRange\fP \fBrangeOfMotion\fP\fC [get, set]\fP"
.br
.RI "The range of motion the we're using to get bone data from\&. With Controller being your hand while holding the controller\&. "
.ti -1c
.RI "\fBEVRSkeletalTransformSpace\fP \fBskeletalTransformSpace\fP\fC [get, set]\fP"
.br
.RI "The space to get bone data in\&. Parent space by default "
.ti -1c
.RI "\fBEVRSkeletalTrackingLevel\fP \fBskeletalTrackingLevel\fP\fC [get]\fP"
.br
.RI "Get the accuracy level of the skeletal tracking data\&. 
.PP
* Estimated: Body part location can’t be directly determined by the device\&. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors\&. Examples include the Vive Controller and gamepads\&. 
.PP
* Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part\&.Certain body part positions may be unmeasured by the device and estimated from other input data\&.Examples include Knuckles or gloves that only measure finger curl 
.PP
* Full: Body part location can be measured directly throughout the entire range of motion of the body part\&.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment\&. "
.ti -1c
.RI "float \fBthumbCurl\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing how curled the thumb is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBindexCurl\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing how curled the index finger is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBmiddleCurl\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing how curled the middle finger is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBringCurl\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing how curled the ring finger is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBpinkyCurl\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing how curled the pinky finger is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBthumbIndexSplay\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing the size of the gap between the thumb and index fingers "
.ti -1c
.RI "float \fBindexMiddleSplay\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing the size of the gap between the index and middle fingers "
.ti -1c
.RI "float \fBmiddleRingSplay\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing the size of the gap between the middle and ring fingers "
.ti -1c
.RI "float \fBringPinkySplay\fP\fC [get]\fP"
.br
.RI "A 0-1 value representing the size of the gap between the ring and pinky fingers "
.ti -1c
.RI "float \fBlastThumbCurl\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing how curled the thumb is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBlastIndexCurl\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing how curled the index finger is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBlastMiddleCurl\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing how curled the middle finger is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBlastRingCurl\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing how curled the ring finger is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBlastPinkyCurl\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing how curled the pinky finger is\&. 0 being straight, 1 being fully curled\&. "
.ti -1c
.RI "float \fBlastThumbIndexSplay\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing the size of the gap between the thumb and index fingers "
.ti -1c
.RI "float \fBlastIndexMiddleSplay\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing the size of the gap between the index and middle fingers "
.ti -1c
.RI "float \fBlastMiddleRingSplay\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing the size of the gap between the middle and ring fingers "
.ti -1c
.RI "float \fBlastRingPinkySplay\fP\fC [get]\fP"
.br
.RI "[Previous Update] A 0-1 value representing the size of the gap between the ring and pinky fingers "
.ti -1c
.RI "float [] \fBfingerCurls\fP\fC [get]\fP"
.br
.RI "0-1 values representing how curled the specified finger is\&. 0 being straight, 1 being fully curled\&. For indexes see: \fBSteamVR_Skeleton_FingerIndexes\fP "
.ti -1c
.RI "float [] \fBfingerSplays\fP\fC [get]\fP"
.br
.RI "0-1 values representing how splayed the specified finger and it's next index'd finger is\&. For indexes see: \fBSteamVR_Skeleton_FingerIndexes\fP "
.ti -1c
.RI "float [] \fBlastFingerCurls\fP\fC [get]\fP"
.br
.RI "[Previous Update] 0-1 values representing how curled the specified finger is\&. 0 being straight, 1 being fully curled\&. For indexes see: \fBSteamVR_Skeleton_FingerIndexes\fP "
.ti -1c
.RI "float [] \fBlastFingerSplays\fP\fC [get]\fP"
.br
.RI "[Previous Update] 0-1 values representing how splayed the specified finger and it's next index'd finger is\&. For indexes see: \fBSteamVR_Skeleton_FingerIndexes\fP "
.ti -1c
.RI "bool \fBposeChanged\fP\fC [get]\fP"
.br
.RI "Separate from 'changed'\&. If the pose for this skeleton action has changed (root position/rotation) "
.ti -1c
.RI "float \fBpredictedSecondsFromNow\fP\fC [get, set]\fP"
.br
.RI "The amount of time in the future (or past!) the input system will predict poses for\&. Default is one frame forward (at 90hz) to account for render time\&. "
.ti -1c
.RI "int \fBboneCount\fP\fC [get]\fP"
.br
.RI "The number of bones in the skeleton for this action "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Skeleton Actions are our best approximation of where your hands are while holding vr controllers and pressing buttons\&. We give you 31 bones to help you animate hand models\&. For more information check out this blog post: https://steamcommunity.com/games/250820/announcements/detail/1690421280625220068 


.PP
Definition at line 18 of file SteamVR_Action_Skeleton\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Valve\&.VR\&.SteamVR_Action_Skeleton\&.SteamVR_Action_Skeleton ()"

.PP
Definition at line 57 of file SteamVR_Action_Skeleton\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "delegate void Valve\&.VR\&.SteamVR_Action_Skeleton\&.ActiveChangeHandler (\fBSteamVR_Action_Skeleton\fP fromAction, bool active)"

.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.AddOnActiveChangeListener (\fBActiveChangeHandler\fP functionToCall)"

.PP
Executes a function when this action's bound state changes 
.PP
Definition at line 637 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.AddOnChangeListener (\fBChangeHandler\fP functionToCall)"

.PP
Executes a function when the state of this action changes 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToCall\fP A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value
.RE
.PP

.PP
Definition at line 651 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.AddOnDeviceConnectedChanged (\fBDeviceConnectedChangeHandler\fP functionToCall)"

.PP
Fires an event when a device is connected or disconnected\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToCall\fP The method you would like to be called when a device is connected\&. Should take a \fBSteamVR_Action_Pose\fP as a param
.RE
.PP

.PP
Definition at line 593 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.AddOnTrackingChanged (\fBTrackingChangeHandler\fP functionToCall)"

.PP
Fires an event when the tracking of the device has changed 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToCall\fP The method you would like to be called when tracking has changed\&. Should take a \fBSteamVR_Action_Pose\fP as a param
.RE
.PP

.PP
Definition at line 608 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.AddOnUpdateListener (\fBUpdateHandler\fP functionToCall)"

.PP
Executes a function when the state of this action is updated\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToCall\fP A local function that receives the boolean action who's state has changed, the corresponding input source, and the new value
.RE
.PP

.PP
Definition at line 665 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.AddOnValidPoseChanged (\fBValidPoseChangeHandler\fP functionToCall)"

.PP
Fires an event when the device now has a valid pose or no longer has a valid pose 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToCall\fP The method you would like to be called when the pose has become valid or invalid\&. Should take a \fBSteamVR_Action_Pose\fP as a param
.RE
.PP

.PP
Definition at line 623 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "delegate void Valve\&.VR\&.SteamVR_Action_Skeleton\&.ChangeHandler (\fBSteamVR_Action_Skeleton\fP fromAction)"

.SS "delegate void Valve\&.VR\&.SteamVR_Action_Skeleton\&.DeviceConnectedChangeHandler (\fBSteamVR_Action_Skeleton\fP fromAction, bool deviceConnected)"

.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetActive ()"

.PP
True if this action is bound and the ActionSet is active 
.PP
Definition at line 205 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetAngularVelocity ()"

.PP
The local angular velocity of the pose relative to the universe origin 
.PP
Definition at line 255 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "uint Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetBoneCount ()"

.PP
Returns the total number of bones in the skeleton 
.PP
Definition at line 397 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "int [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetBoneHierarchy ()"

.PP
Returns the order of bones in the hierarchy 
.PP
Definition at line 405 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "string Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetBoneName (int boneIndex)"

.PP
Returns the name of the bone 
.PP
Definition at line 413 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetBonePositions (bool copy = \fCfalse\fP)"

.PP
Gets the bone positions in local space\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array 
.PP
\fBParameters:\fP
.RS 4
\fIcopy\fP This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array
.RE
.PP

.PP
Definition at line 332 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Quaternion [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetBoneRotations (bool copy = \fCfalse\fP)"

.PP
Gets the bone rotations in local space\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array 
.PP
\fBParameters:\fP
.RS 4
\fIcopy\fP This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array
.RE
.PP

.PP
Definition at line 344 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetDeviceIsConnected ()"

.PP
True if the device bound to this action is connected 
.PP
Definition at line 261 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetFingerCurl (int finger)"

.PP
Returns a value indicating how much the passed in finger is currently curled\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfinger\fP The index of the finger to return a curl value for\&. 0-4\&. thumb, index, middle, ring, pinky
.RE
.PP
\fBReturns:\fP
.RS 4
0-1 value\&. 0 being straight, 1 being fully curled\&.
.RE
.PP

.PP
Definition at line 497 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetFingerCurl (\fBSteamVR_Skeleton_FingerIndexEnum\fP finger)"

.PP
Returns a value indicating how much the passed in finger is currently curled\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfinger\fP The finger to return a curl value for
.RE
.PP
\fBReturns:\fP
.RS 4
0-1 value\&. 0 being straight, 1 being fully curled\&.
.RE
.PP

.PP
Definition at line 517 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetFingerCurls (bool copy = \fCfalse\fP)"

.PP
Returns the finger curl data that we calculate each update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array 
.PP
\fBParameters:\fP
.RS 4
\fIcopy\fP This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array
.RE
.PP

.PP
Definition at line 448 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetFingerSplays (bool copy = \fCfalse\fP)"

.PP
Returns the finger splay data that we calculate each update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array 
.PP
\fBParameters:\fP
.RS 4
\fIcopy\fP This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array
.RE
.PP

.PP
Definition at line 472 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastAngularVelocity ()"

.PP
The last local angular velocity of the pose relative to the universe origin 
.PP
Definition at line 299 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastBonePositions (bool copy = \fCfalse\fP)"

.PP
Gets the bone positions in local space from the previous update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array 
.PP
\fBParameters:\fP
.RS 4
\fIcopy\fP This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array
.RE
.PP

.PP
Definition at line 356 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Quaternion [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastBoneRotations (bool copy = \fCfalse\fP)"

.PP
Gets the bone rotations in local space from the previous update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array 
.PP
\fBParameters:\fP
.RS 4
\fIcopy\fP This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array
.RE
.PP

.PP
Definition at line 368 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastDeviceIsConnected ()"

.PP
True if the device bound to this action was connected during the previous update 
.PP
Definition at line 305 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastFingerCurl (int finger)"

.PP
Returns a value indicating how much the passed in finger was curled during the previous update 
.PP
\fBParameters:\fP
.RS 4
\fIfinger\fP The index of the finger to return a curl value for\&. 0-4\&. thumb, index, middle, ring, pinky
.RE
.PP
\fBReturns:\fP
.RS 4
0-1 value\&. 0 being straight, 1 being fully curled\&.
.RE
.PP

.PP
Definition at line 537 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastFingerCurl (\fBSteamVR_Skeleton_FingerIndexEnum\fP finger)"

.PP
Returns a value indicating how much the passed in finger was curled during the previous update 
.PP
\fBParameters:\fP
.RS 4
\fIfinger\fP The finger to return a curl value for
.RE
.PP
\fBReturns:\fP
.RS 4
0-1 value\&. 0 being straight, 1 being fully curled\&.
.RE
.PP

.PP
Definition at line 557 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastFingerCurls (bool copy = \fCfalse\fP)"

.PP
Returns the finger curl data from the previous update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array 
.PP
\fBParameters:\fP
.RS 4
\fIcopy\fP This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array
.RE
.PP

.PP
Definition at line 460 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastFingerSplays (bool copy = \fCfalse\fP)"

.PP
Returns the finger splay data from the previous update\&. This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array 
.PP
\fBParameters:\fP
.RS 4
\fIcopy\fP This array may be modified later so if you want to hold this data then pass true to get a copy of the data instead of the actual array
.RE
.PP

.PP
Definition at line 484 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastLocalPosition ()"

.PP
The last local position of the pose relative to the universe origin 
.PP
Definition at line 281 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Quaternion Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastLocalRotation ()"

.PP
The last local rotation of the pose relative to the universe origin 
.PP
Definition at line 287 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastPoseIsValid ()"

.PP
True if the pose was valid during the previous update 
.PP
Definition at line 311 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastSplay (int fingerGapIndex)"

.PP
Returns a value indicating the size of the gap between fingers during the previous update 
.PP
\fBParameters:\fP
.RS 4
\fIfingerGapIndex\fP The index of the finger gap to return a splay value for\&. 0 being the gap between thumb and index, 1 being the gap between index and middle, 2 being the gap between middle and ring, and 3 being the gap between ring and pinky\&.
.RE
.PP
\fBReturns:\fP
.RS 4
0-1 value\&. 0 being no gap, 1 being 'full' gap
.RE
.PP

.PP
Definition at line 547 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastSplay (\fBSteamVR_Skeleton_FingerSplayIndexEnum\fP fingerSplay)"

.PP
Returns a value indicating the size of the gap between fingers during the previous update 
.PP
\fBParameters:\fP
.RS 4
\fIfingerGapIndex\fP The finger gap to return a splay value for\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0-1 value\&. 0 being no gap, 1 being 'full' gap
.RE
.PP

.PP
Definition at line 567 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBETrackingResult\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastTrackingResult ()"

.PP
The tracking state for this pose during the previous update 
.PP
Definition at line 317 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLastVelocity ()"

.PP
The last local velocity of the pose relative to the universe origin 
.PP
Definition at line 293 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "string Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLocalizedName (params \fBEVRInputStringBits\fP [] localizedParts)"

.PP
Gets the localized name of the device that the action corresponds to\&. Include as many EVRInputStringBits as you want to add to the localized string 
.PP
\fBParameters:\fP
.RS 4
\fIlocalizedParts\fP 
.PD 0

.IP "\(bu" 2
VRInputString_Hand - Which hand the origin is in\&. ex: 'Left Hand'\&.  
.IP "\(bu" 2
VRInputString_ControllerType - What kind of controller the user has in that hand\&. ex: 'Vive Controller'\&.  
.IP "\(bu" 2
VRInputString_InputSource - What part of that controller is the origin\&. ex: 'Trackpad'\&.  
.IP "\(bu" 2
VRInputString_All - All of the above\&. ex: 'Left Hand Vive Controller Trackpad'\&.  
.PP
.RE
.PP

.PP
Definition at line 584 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLocalPosition ()"

.PP
The local position of the pose relative to the universe origin 
.PP
Definition at line 237 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Quaternion Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetLocalRotation ()"

.PP
The local rotation of the pose relative to the universe origin 
.PP
Definition at line 243 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetPoseAtTimeOffset (float secondsFromNow, out Vector3 position, out Quaternion rotation, out Vector3 velocity, out Vector3 angularVelocity)"

.PP
\fBSteamVR\fP keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsecondsFromNow\fP The time offset in the future (estimated) or in the past (previously recorded) you want to get data from
.RE
.PP
\fBReturns:\fP
.RS 4
true if we successfully returned a pose
.RE
.PP

.PP
Definition at line 231 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetPoseIsValid ()"

.PP
True if the pose retrieved for this action is valid (good data from the tracking source) 
.PP
Definition at line 267 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBSteamVR_Utils\&.RigidTransform\fP [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetReferenceTransforms (\fBEVRSkeletalTransformSpace\fP transformSpace, \fBEVRSkeletalReferencePose\fP referencePose)"

.PP
Returns an array of positions/rotations that represent the state of each bone in a reference pose\&. 
.PP
\fBParameters:\fP
.RS 4
\fItransformSpace\fP What to get the position/rotation data relative to, the model, or the bone's parent
.br
\fIreferencePose\fP Which reference pose to return
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 424 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetSetActive ()"

.PP
True if the ActionSet that contains this action is active 
.PP
Definition at line 211 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBEVRSkeletalTrackingLevel\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetSkeletalTrackingLevel ()"

.PP
Get the accuracy level of the skeletal tracking data\&. 
.PP
\fBReturns:\fP
.RS 4

.PD 0

.IP "\(bu" 2
Estimated: Body part location can’t be directly determined by the device\&. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors\&. Examples include the Vive Controller and gamepads\&.  
.IP "\(bu" 2
Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part\&.Certain body part positions may be unmeasured by the device and estimated from other input data\&.Examples include Knuckles or gloves that only measure finger curl 
.IP "\(bu" 2
Full: Body part location can be measured directly throughout the entire range of motion of the body part\&.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment\&. 
.PP
.RE
.PP

.PP
Definition at line 439 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetSplay (int fingerGapIndex)"

.PP
Returns a value indicating how the size of the gap between fingers\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfingerGapIndex\fP The index of the finger gap to return a splay value for\&. 0 being the gap between thumb and index, 1 being the gap between index and middle, 2 being the gap between middle and ring, and 3 being the gap between ring and pinky\&.
.RE
.PP
\fBReturns:\fP
.RS 4
0-1 value\&. 0 being no gap, 1 being 'full' gap
.RE
.PP

.PP
Definition at line 507 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetSplay (\fBSteamVR_Skeleton_FingerSplayIndexEnum\fP fingerSplay)"

.PP
Returns a value indicating how the size of the gap between fingers\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfingerGapIndex\fP The finger gap to return a splay value for\&.
.RE
.PP
\fBReturns:\fP
.RS 4
0-1 value\&. 0 being no gap, 1 being 'full' gap
.RE
.PP

.PP
Definition at line 527 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBETrackingResult\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetTrackingResult ()"

.PP
The state of the tracking system that is used to create pose data (position, rotation, etc) 
.PP
Definition at line 273 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetVelocitiesAtTimeOffset (float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity)"

.PP
\fBSteamVR\fP keeps a log of past poses so you can retrieve old poses or estimated poses in the future by passing in a secondsFromNow value that is negative or positive\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsecondsFromNow\fP The time offset in the future (estimated) or in the past (previously recorded) you want to get data from
.RE
.PP
\fBReturns:\fP
.RS 4
true if we successfully returned a pose
.RE
.PP

.PP
Definition at line 221 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 Valve\&.VR\&.SteamVR_Action_Skeleton\&.GetVelocity ()"

.PP
The local velocity of the pose relative to the universe origin 
.PP
Definition at line 249 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.RemoveOnActiveChangeListener (\fBActiveChangeHandler\fP functionToStopCalling)"

.PP
Stops executing the function setup by the corresponding AddListener 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToStopCalling\fP The local function that you've setup to receive update events
.RE
.PP

.PP
Definition at line 644 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.RemoveOnChangeListener (\fBChangeHandler\fP functionToStopCalling)"

.PP
Stops executing the function setup by the corresponding AddListener 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToStopCalling\fP The local function that you've setup to receive on change events
.RE
.PP

.PP
Definition at line 658 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.RemoveOnDeviceConnectedChanged (\fBDeviceConnectedChangeHandler\fP functionToStopCalling)"

.PP
Stops executing the function setup by the corresponding AddListener 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToStopCalling\fP The method you would like to stop calling when a device is connected\&. Should take a \fBSteamVR_Action_Pose\fP as a param
.RE
.PP

.PP
Definition at line 600 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.RemoveOnTrackingChanged (\fBTrackingChangeHandler\fP functionToStopCalling)"

.PP
Stops executing the function setup by the corresponding AddListener 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToStopCalling\fP The method you would like to stop calling when tracking has changed\&. Should take a \fBSteamVR_Action_Pose\fP as a param
.RE
.PP

.PP
Definition at line 615 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.RemoveOnUpdateListener (\fBUpdateHandler\fP functionToStopCalling)"

.PP
Stops executing the function setup by the corresponding AddListener 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToStopCalling\fP The local function that you've setup to receive update events
.RE
.PP

.PP
Definition at line 672 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.RemoveOnValidPoseChanged (\fBValidPoseChangeHandler\fP functionToStopCalling)"

.PP
Stops executing the function setup by the corresponding AddListener 
.PP
\fBParameters:\fP
.RS 4
\fIfunctionToStopCalling\fP The method you would like to stop calling when the pose has become valid or invalid\&. Should take a \fBSteamVR_Action_Pose\fP as a param
.RE
.PP

.PP
Definition at line 630 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.SetRangeOfMotion (\fBEVRSkeletalMotionRange\fP range)"

.PP
Set the range of the motion of the bones in this skeleton\&. Options are 'With Controller' as if your hand is holding your \fBVR\fP controller\&. Or 'Without Controller' as if your hand is empty\&. This will set the range for the following update\&. 
.PP
Definition at line 380 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.SetSkeletalTransformSpace (\fBEVRSkeletalTransformSpace\fP space)"

.PP
Sets the space that you'll get bone data back in\&. Options are relative to the Model and relative to the Parent bone 
.PP
\fBParameters:\fP
.RS 4
\fIspace\fP the space that you'll get bone data back in\&. Options are relative to the Model and relative to the Parent bone\&.
.RE
.PP

.PP
Definition at line 389 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "delegate void Valve\&.VR\&.SteamVR_Action_Skeleton\&.TrackingChangeHandler (\fBSteamVR_Action_Skeleton\fP fromAction, \fBETrackingResult\fP trackingState)"

.SS "delegate void Valve\&.VR\&.SteamVR_Action_Skeleton\&.UpdateHandler (\fBSteamVR_Action_Skeleton\fP fromAction)"

.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.UpdateTransform (Transform transformToUpdate)"

.PP
Update a transform's local position and local roation to match the pose from the most recent update 
.PP
\fBParameters:\fP
.RS 4
\fItransformToUpdate\fP The transform of the object to be updated
.RE
.PP

.PP
Definition at line 81 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "virtual void Valve\&.VR\&.SteamVR_Action_Skeleton\&.UpdateValue (bool skipStateAndEventUpdates)\fC [virtual]\fP"

.PP
\fB[Should not be called by user code]\fP Updates the skeleton action data 
.PP
Definition at line 63 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Action_Skeleton\&.UpdateValueWithoutEvents ()"

.PP
\fB[Should not be called by user code]\fP Updates the skeleton action data without firing events 
.PP
Definition at line 72 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "delegate void Valve\&.VR\&.SteamVR_Action_Skeleton\&.ValidPoseChangeHandler (\fBSteamVR_Action_Skeleton\fP fromAction, bool validPose)"

.SH "Member Data Documentation"
.PP 
.SS "const int Valve\&.VR\&.SteamVR_Action_Skeleton\&.numBones = 31"

.PP
Definition at line 20 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Quaternion Valve\&.VR\&.SteamVR_Action_Skeleton\&.steamVRFixUpRotation = Quaternion\&.AngleAxis(Mathf\&.PI * Mathf\&.Rad2Deg, Vector3\&.up)\fC [static]\fP"

.PP
Definition at line 686 of file SteamVR_Action_Skeleton\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "int Valve\&.VR\&.SteamVR_Action_Skeleton\&.boneCount\fC [get]\fP"

.PP
The number of bones in the skeleton for this action 
.PP
Definition at line 326 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.bonePositions\fC [get]\fP"

.PP
An array of the positions of the bones from the most recent update\&. Relative to skeletalTransformSpace\&. See SteamVR_Skeleton_JointIndexes for bone indexes\&. 
.PP
Definition at line 88 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Quaternion [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.boneRotations\fC [get]\fP"

.PP
An array of the rotations of the bones from the most recent update\&. Relative to skeletalTransformSpace\&. See SteamVR_Skeleton_JointIndexes for bone indexes\&. 
.PP
Definition at line 91 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.fingerCurls\fC [get]\fP"

.PP
0-1 values representing how curled the specified finger is\&. 0 being straight, 1 being fully curled\&. For indexes see: \fBSteamVR_Skeleton_FingerIndexes\fP 
.PP
Definition at line 180 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.fingerSplays\fC [get]\fP"

.PP
0-1 values representing how splayed the specified finger and it's next index'd finger is\&. For indexes see: \fBSteamVR_Skeleton_FingerIndexes\fP 
.PP
Definition at line 183 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.indexCurl\fC [get]\fP"

.PP
A 0-1 value representing how curled the index finger is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 128 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.indexMiddleSplay\fC [get]\fP"

.PP
A 0-1 value representing the size of the gap between the index and middle fingers 
.PP
Definition at line 143 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Vector3 [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastBonePositions\fC [get]\fP"

.PP
From the previous update: An array of the positions of the bones from the most recent update\&. Relative to skeletalTransformSpace\&. See SteamVR_Skeleton_JointIndexes for bone indexes\&. 
.PP
Definition at line 94 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "Quaternion [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastBoneRotations\fC [get]\fP"

.PP
From the previous update: An array of the rotations of the bones from the most recent update\&. Relative to skeletalTransformSpace\&. See SteamVR_Skeleton_JointIndexes for bone indexes\&. 
.PP
Definition at line 97 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastFingerCurls\fC [get]\fP"

.PP
[Previous Update] 0-1 values representing how curled the specified finger is\&. 0 being straight, 1 being fully curled\&. For indexes see: \fBSteamVR_Skeleton_FingerIndexes\fP 
.PP
Definition at line 186 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float [] Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastFingerSplays\fC [get]\fP"

.PP
[Previous Update] 0-1 values representing how splayed the specified finger and it's next index'd finger is\&. For indexes see: \fBSteamVR_Skeleton_FingerIndexes\fP 
.PP
Definition at line 189 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastIndexCurl\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing how curled the index finger is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 156 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastIndexMiddleSplay\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing the size of the gap between the index and middle fingers 
.PP
Definition at line 171 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastMiddleCurl\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing how curled the middle finger is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 159 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastMiddleRingSplay\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing the size of the gap between the middle and ring fingers 
.PP
Definition at line 174 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastPinkyCurl\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing how curled the pinky finger is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 165 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastRingCurl\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing how curled the ring finger is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 162 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastRingPinkySplay\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing the size of the gap between the ring and pinky fingers 
.PP
Definition at line 177 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastThumbCurl\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing how curled the thumb is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 153 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.lastThumbIndexSplay\fC [get]\fP"

.PP
[Previous Update] A 0-1 value representing the size of the gap between the thumb and index fingers 
.PP
Definition at line 168 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.middleCurl\fC [get]\fP"

.PP
A 0-1 value representing how curled the middle finger is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 131 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.middleRingSplay\fC [get]\fP"

.PP
A 0-1 value representing the size of the gap between the middle and ring fingers 
.PP
Definition at line 146 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBActiveChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.onActiveBindingChange\fC [add]\fP, \fC [remove]\fP"

.PP
Event fires when the active state of the binding changes 
.PP
Definition at line 35 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBActiveChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.onActiveChange\fC [add]\fP, \fC [remove]\fP"

.PP
Event fires when the active state (ActionSet active and binding active) changes 
.PP
Definition at line 31 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.onChange\fC [add]\fP, \fC [remove]\fP"

.PP
Event fires when the state of the pose or bones moves more than the changeTolerance 
.PP
Definition at line 39 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBDeviceConnectedChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.onDeviceConnectedChanged\fC [add]\fP, \fC [remove]\fP"

.PP
Event fires when the device bound to this action is connected or disconnected 
.PP
Definition at line 55 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBTrackingChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.onTrackingChanged\fC [add]\fP, \fC [remove]\fP"

.PP
Event fires when the state of the tracking system that is used to create pose data (position, rotation, etc) changes 
.PP
Definition at line 47 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBUpdateHandler\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.onUpdate\fC [add]\fP, \fC [remove]\fP"

.PP
Event fires when the action is updated 
.PP
Definition at line 43 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBValidPoseChangeHandler\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.onValidPoseChanged\fC [add]\fP, \fC [remove]\fP"

.PP
Event fires when the state of the pose data retrieved for this action changes validity (good/bad data from the tracking source) 
.PP
Definition at line 51 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.pinkyCurl\fC [get]\fP"

.PP
A 0-1 value representing how curled the pinky finger is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 137 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Action_Skeleton\&.poseChanged\fC [get]\fP"

.PP
Separate from 'changed'\&. If the pose for this skeleton action has changed (root position/rotation) 
.PP
Definition at line 192 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.predictedSecondsFromNow\fC [get]\fP, \fC [set]\fP"

.PP
The amount of time in the future (or past!) the input system will predict poses for\&. Default is one frame forward (at 90hz) to account for render time\&. 
.PP
Definition at line 199 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBEVRSkeletalMotionRange\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.rangeOfMotion\fC [get]\fP, \fC [set]\fP"

.PP
The range of motion the we're using to get bone data from\&. With Controller being your hand while holding the controller\&. 
.PP
Definition at line 101 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.ringCurl\fC [get]\fP"

.PP
A 0-1 value representing how curled the ring finger is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 134 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.ringPinkySplay\fC [get]\fP"

.PP
A 0-1 value representing the size of the gap between the ring and pinky fingers 
.PP
Definition at line 149 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBEVRSkeletalTrackingLevel\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.skeletalTrackingLevel\fC [get]\fP"

.PP
Get the accuracy level of the skeletal tracking data\&. 
.PP
* Estimated: Body part location can’t be directly determined by the device\&. Any skeletal pose provided by the device is estimated based on the active buttons, triggers, joysticks, or other input sensors\&. Examples include the Vive Controller and gamepads\&. 
.PP
* Partial: Body part location can be measured directly but with fewer degrees of freedom than the actual body part\&.Certain body part positions may be unmeasured by the device and estimated from other input data\&.Examples include Knuckles or gloves that only measure finger curl 
.PP
* Full: Body part location can be measured directly throughout the entire range of motion of the body part\&.Examples include hi-end mocap systems, or gloves that measure the rotation of each finger segment\&. 
.PP
Definition at line 120 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "\fBEVRSkeletalTransformSpace\fP Valve\&.VR\&.SteamVR_Action_Skeleton\&.skeletalTransformSpace\fC [get]\fP, \fC [set]\fP"

.PP
The space to get bone data in\&. Parent space by default 
.PP
Definition at line 108 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.thumbCurl\fC [get]\fP"

.PP
A 0-1 value representing how curled the thumb is\&. 0 being straight, 1 being fully curled\&. 
.PP
Definition at line 125 of file SteamVR_Action_Skeleton\&.cs\&.
.SS "float Valve\&.VR\&.SteamVR_Action_Skeleton\&.thumbIndexSplay\fC [get]\fP"

.PP
A 0-1 value representing the size of the gap between the thumb and index fingers 
.PP
Definition at line 140 of file SteamVR_Action_Skeleton\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
