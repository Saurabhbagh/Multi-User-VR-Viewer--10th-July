.TH "Valve.VR.IVRSystem" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Valve.VR.IVRSystem
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "internal delegate void \fB_GetRecommendedRenderTargetSize\fP (ref uint pnWidth, ref uint pnHeight)"
.br
.ti -1c
.RI "internal delegate \fBHmdMatrix44_t\fP \fB_GetProjectionMatrix\fP (\fBEVREye\fP eEye, float fNearZ, float fFarZ)"
.br
.ti -1c
.RI "internal delegate void \fB_GetProjectionRaw\fP (\fBEVREye\fP eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)"
.br
.ti -1c
.RI "internal delegate bool \fB_ComputeDistortion\fP (\fBEVREye\fP eEye, float fU, float fV, ref \fBDistortionCoordinates_t\fP pDistortionCoordinates)"
.br
.ti -1c
.RI "internal delegate \fBHmdMatrix34_t\fP \fB_GetEyeToHeadTransform\fP (\fBEVREye\fP eEye)"
.br
.ti -1c
.RI "internal delegate bool \fB_GetTimeSinceLastVsync\fP (ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)"
.br
.ti -1c
.RI "internal delegate int \fB_GetD3D9AdapterIndex\fP ()"
.br
.ti -1c
.RI "internal delegate void \fB_GetDXGIOutputInfo\fP (ref int pnAdapterIndex)"
.br
.ti -1c
.RI "internal delegate void \fB_GetOutputDevice\fP (ref ulong pnDevice, \fBETextureType\fP textureType, IntPtr pInstance)"
.br
.ti -1c
.RI "internal delegate bool \fB_IsDisplayOnDesktop\fP ()"
.br
.ti -1c
.RI "internal delegate bool \fB_SetDisplayVisibility\fP (bool bIsVisibleOnDesktop)"
.br
.ti -1c
.RI "internal delegate void \fB_GetDeviceToAbsoluteTrackingPose\fP (\fBETrackingUniverseOrigin\fP eOrigin, float fPredictedSecondsToPhotonsFromNow, [\fBIn\fP, \fBOut\fP] \fBTrackedDevicePose_t\fP[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount)"
.br
.ti -1c
.RI "internal delegate void \fB_ResetSeatedZeroPose\fP ()"
.br
.ti -1c
.RI "internal delegate \fBHmdMatrix34_t\fP \fB_GetSeatedZeroPoseToStandingAbsoluteTrackingPose\fP ()"
.br
.ti -1c
.RI "internal delegate \fBHmdMatrix34_t\fP \fB_GetRawZeroPoseToStandingAbsoluteTrackingPose\fP ()"
.br
.ti -1c
.RI "internal delegate uint \fB_GetSortedTrackedDeviceIndicesOfClass\fP (\fBETrackedDeviceClass\fP eTrackedDeviceClass, [\fBIn\fP, \fBOut\fP] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex)"
.br
.ti -1c
.RI "internal delegate \fBEDeviceActivityLevel\fP \fB_GetTrackedDeviceActivityLevel\fP (uint unDeviceId)"
.br
.ti -1c
.RI "internal delegate void \fB_ApplyTransform\fP (ref \fBTrackedDevicePose_t\fP pOutputPose, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose, ref \fBHmdMatrix34_t\fP pTransform)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetTrackedDeviceIndexForControllerRole\fP (\fBETrackedControllerRole\fP unDeviceType)"
.br
.ti -1c
.RI "internal delegate \fBETrackedControllerRole\fP \fB_GetControllerRoleForTrackedDeviceIndex\fP (uint unDeviceIndex)"
.br
.ti -1c
.RI "internal delegate \fBETrackedDeviceClass\fP \fB_GetTrackedDeviceClass\fP (uint unDeviceIndex)"
.br
.ti -1c
.RI "internal delegate bool \fB_IsTrackedDeviceConnected\fP (uint unDeviceIndex)"
.br
.ti -1c
.RI "internal delegate bool \fB_GetBoolTrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "internal delegate float \fB_GetFloatTrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "internal delegate int \fB_GetInt32TrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "internal delegate ulong \fB_GetUint64TrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "internal delegate \fBHmdMatrix34_t\fP \fB_GetMatrix34TrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetArrayTrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "internal delegate uint \fB_GetStringTrackedDeviceProperty\fP (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, System\&.Text\&.StringBuilder pchValue, uint unBufferSize, ref \fBETrackedPropertyError\fP pError)"
.br
.ti -1c
.RI "internal delegate IntPtr \fB_GetPropErrorNameFromEnum\fP (\fBETrackedPropertyError\fP error)"
.br
.ti -1c
.RI "internal delegate bool \fB_PollNextEvent\fP (ref \fBVREvent_t\fP pEvent, uint uncbVREvent)"
.br
.ti -1c
.RI "internal delegate bool \fB_PollNextEventWithPose\fP (\fBETrackingUniverseOrigin\fP eOrigin, ref \fBVREvent_t\fP pEvent, uint uncbVREvent, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose)"
.br
.ti -1c
.RI "internal delegate IntPtr \fB_GetEventTypeNameFromEnum\fP (\fBEVREventType\fP eType)"
.br
.ti -1c
.RI "internal delegate \fBHiddenAreaMesh_t\fP \fB_GetHiddenAreaMesh\fP (\fBEVREye\fP eEye, \fBEHiddenAreaMeshType\fP type)"
.br
.ti -1c
.RI "internal delegate bool \fB_GetControllerState\fP (uint unControllerDeviceIndex, ref \fBVRControllerState_t\fP pControllerState, uint unControllerStateSize)"
.br
.ti -1c
.RI "internal delegate bool \fB_GetControllerStateWithPose\fP (\fBETrackingUniverseOrigin\fP eOrigin, uint unControllerDeviceIndex, ref \fBVRControllerState_t\fP pControllerState, uint unControllerStateSize, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose)"
.br
.ti -1c
.RI "internal delegate void \fB_TriggerHapticPulse\fP (uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)"
.br
.ti -1c
.RI "internal delegate IntPtr \fB_GetButtonIdNameFromEnum\fP (\fBEVRButtonId\fP eButtonId)"
.br
.ti -1c
.RI "internal delegate IntPtr \fB_GetControllerAxisTypeNameFromEnum\fP (\fBEVRControllerAxisType\fP eAxisType)"
.br
.ti -1c
.RI "internal delegate bool \fB_IsInputAvailable\fP ()"
.br
.ti -1c
.RI "internal delegate bool \fB_IsSteamVRDrawingControllers\fP ()"
.br
.ti -1c
.RI "internal delegate bool \fB_ShouldApplicationPause\fP ()"
.br
.ti -1c
.RI "internal delegate bool \fB_ShouldApplicationReduceRenderingWork\fP ()"
.br
.ti -1c
.RI "internal delegate uint \fB_DriverDebugRequest\fP (uint unDeviceIndex, string pchRequest, System\&.Text\&.StringBuilder pchResponseBuffer, uint unResponseBufferSize)"
.br
.ti -1c
.RI "internal delegate \fBEVRFirmwareError\fP \fB_PerformFirmwareUpdate\fP (uint unDeviceIndex)"
.br
.ti -1c
.RI "internal delegate void \fB_AcknowledgeQuit_Exiting\fP ()"
.br
.ti -1c
.RI "internal delegate void \fB_AcknowledgeQuit_UserPrompt\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "internal \fB_GetRecommendedRenderTargetSize\fP \fBGetRecommendedRenderTargetSize\fP"
.br
.ti -1c
.RI "internal \fB_GetProjectionMatrix\fP \fBGetProjectionMatrix\fP"
.br
.ti -1c
.RI "internal \fB_GetProjectionRaw\fP \fBGetProjectionRaw\fP"
.br
.ti -1c
.RI "internal \fB_ComputeDistortion\fP \fBComputeDistortion\fP"
.br
.ti -1c
.RI "internal \fB_GetEyeToHeadTransform\fP \fBGetEyeToHeadTransform\fP"
.br
.ti -1c
.RI "internal \fB_GetTimeSinceLastVsync\fP \fBGetTimeSinceLastVsync\fP"
.br
.ti -1c
.RI "internal \fB_GetD3D9AdapterIndex\fP \fBGetD3D9AdapterIndex\fP"
.br
.ti -1c
.RI "internal \fB_GetDXGIOutputInfo\fP \fBGetDXGIOutputInfo\fP"
.br
.ti -1c
.RI "internal \fB_GetOutputDevice\fP \fBGetOutputDevice\fP"
.br
.ti -1c
.RI "internal \fB_IsDisplayOnDesktop\fP \fBIsDisplayOnDesktop\fP"
.br
.ti -1c
.RI "internal \fB_SetDisplayVisibility\fP \fBSetDisplayVisibility\fP"
.br
.ti -1c
.RI "internal \fB_GetDeviceToAbsoluteTrackingPose\fP \fBGetDeviceToAbsoluteTrackingPose\fP"
.br
.ti -1c
.RI "internal \fB_ResetSeatedZeroPose\fP \fBResetSeatedZeroPose\fP"
.br
.ti -1c
.RI "internal \fB_GetSeatedZeroPoseToStandingAbsoluteTrackingPose\fP \fBGetSeatedZeroPoseToStandingAbsoluteTrackingPose\fP"
.br
.ti -1c
.RI "internal \fB_GetRawZeroPoseToStandingAbsoluteTrackingPose\fP \fBGetRawZeroPoseToStandingAbsoluteTrackingPose\fP"
.br
.ti -1c
.RI "internal \fB_GetSortedTrackedDeviceIndicesOfClass\fP \fBGetSortedTrackedDeviceIndicesOfClass\fP"
.br
.ti -1c
.RI "internal \fB_GetTrackedDeviceActivityLevel\fP \fBGetTrackedDeviceActivityLevel\fP"
.br
.ti -1c
.RI "internal \fB_ApplyTransform\fP \fBApplyTransform\fP"
.br
.ti -1c
.RI "internal \fB_GetTrackedDeviceIndexForControllerRole\fP \fBGetTrackedDeviceIndexForControllerRole\fP"
.br
.ti -1c
.RI "internal \fB_GetControllerRoleForTrackedDeviceIndex\fP \fBGetControllerRoleForTrackedDeviceIndex\fP"
.br
.ti -1c
.RI "internal \fB_GetTrackedDeviceClass\fP \fBGetTrackedDeviceClass\fP"
.br
.ti -1c
.RI "internal \fB_IsTrackedDeviceConnected\fP \fBIsTrackedDeviceConnected\fP"
.br
.ti -1c
.RI "internal \fB_GetBoolTrackedDeviceProperty\fP \fBGetBoolTrackedDeviceProperty\fP"
.br
.ti -1c
.RI "internal \fB_GetFloatTrackedDeviceProperty\fP \fBGetFloatTrackedDeviceProperty\fP"
.br
.ti -1c
.RI "internal \fB_GetInt32TrackedDeviceProperty\fP \fBGetInt32TrackedDeviceProperty\fP"
.br
.ti -1c
.RI "internal \fB_GetUint64TrackedDeviceProperty\fP \fBGetUint64TrackedDeviceProperty\fP"
.br
.ti -1c
.RI "internal \fB_GetMatrix34TrackedDeviceProperty\fP \fBGetMatrix34TrackedDeviceProperty\fP"
.br
.ti -1c
.RI "internal \fB_GetArrayTrackedDeviceProperty\fP \fBGetArrayTrackedDeviceProperty\fP"
.br
.ti -1c
.RI "internal \fB_GetStringTrackedDeviceProperty\fP \fBGetStringTrackedDeviceProperty\fP"
.br
.ti -1c
.RI "internal \fB_GetPropErrorNameFromEnum\fP \fBGetPropErrorNameFromEnum\fP"
.br
.ti -1c
.RI "internal \fB_PollNextEvent\fP \fBPollNextEvent\fP"
.br
.ti -1c
.RI "internal \fB_PollNextEventWithPose\fP \fBPollNextEventWithPose\fP"
.br
.ti -1c
.RI "internal \fB_GetEventTypeNameFromEnum\fP \fBGetEventTypeNameFromEnum\fP"
.br
.ti -1c
.RI "internal \fB_GetHiddenAreaMesh\fP \fBGetHiddenAreaMesh\fP"
.br
.ti -1c
.RI "internal \fB_GetControllerState\fP \fBGetControllerState\fP"
.br
.ti -1c
.RI "internal \fB_GetControllerStateWithPose\fP \fBGetControllerStateWithPose\fP"
.br
.ti -1c
.RI "internal \fB_TriggerHapticPulse\fP \fBTriggerHapticPulse\fP"
.br
.ti -1c
.RI "internal \fB_GetButtonIdNameFromEnum\fP \fBGetButtonIdNameFromEnum\fP"
.br
.ti -1c
.RI "internal \fB_GetControllerAxisTypeNameFromEnum\fP \fBGetControllerAxisTypeNameFromEnum\fP"
.br
.ti -1c
.RI "internal \fB_IsInputAvailable\fP \fBIsInputAvailable\fP"
.br
.ti -1c
.RI "internal \fB_IsSteamVRDrawingControllers\fP \fBIsSteamVRDrawingControllers\fP"
.br
.ti -1c
.RI "internal \fB_ShouldApplicationPause\fP \fBShouldApplicationPause\fP"
.br
.ti -1c
.RI "internal \fB_ShouldApplicationReduceRenderingWork\fP \fBShouldApplicationReduceRenderingWork\fP"
.br
.ti -1c
.RI "internal \fB_DriverDebugRequest\fP \fBDriverDebugRequest\fP"
.br
.ti -1c
.RI "internal \fB_PerformFirmwareUpdate\fP \fBPerformFirmwareUpdate\fP"
.br
.ti -1c
.RI "internal \fB_AcknowledgeQuit_Exiting\fP \fBAcknowledgeQuit_Exiting\fP"
.br
.ti -1c
.RI "internal \fB_AcknowledgeQuit_UserPrompt\fP \fBAcknowledgeQuit_UserPrompt\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 16 of file openvr_api\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._AcknowledgeQuit_Exiting ()"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._AcknowledgeQuit_UserPrompt ()"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._ApplyTransform (ref \fBTrackedDevicePose_t\fP pOutputPose, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose, ref \fBHmdMatrix34_t\fP pTransform)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._ComputeDistortion (\fBEVREye\fP eEye, float fU, float fV, ref \fBDistortionCoordinates_t\fP pDistortionCoordinates)"

.SS "internal delegate uint Valve\&.VR\&.IVRSystem\&._DriverDebugRequest (uint unDeviceIndex, string pchRequest, System\&.Text\&.StringBuilder pchResponseBuffer, uint unResponseBufferSize)"

.SS "internal delegate uint Valve\&.VR\&.IVRSystem\&._GetArrayTrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref \fBETrackedPropertyError\fP pError)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._GetBoolTrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.SS "internal delegate IntPtr Valve\&.VR\&.IVRSystem\&._GetButtonIdNameFromEnum (\fBEVRButtonId\fP eButtonId)"

.SS "internal delegate IntPtr Valve\&.VR\&.IVRSystem\&._GetControllerAxisTypeNameFromEnum (\fBEVRControllerAxisType\fP eAxisType)"

.SS "internal delegate \fBETrackedControllerRole\fP Valve\&.VR\&.IVRSystem\&._GetControllerRoleForTrackedDeviceIndex (uint unDeviceIndex)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._GetControllerState (uint unControllerDeviceIndex, ref \fBVRControllerState_t\fP pControllerState, uint unControllerStateSize)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._GetControllerStateWithPose (\fBETrackingUniverseOrigin\fP eOrigin, uint unControllerDeviceIndex, ref \fBVRControllerState_t\fP pControllerState, uint unControllerStateSize, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose)"

.SS "internal delegate int Valve\&.VR\&.IVRSystem\&._GetD3D9AdapterIndex ()"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._GetDeviceToAbsoluteTrackingPose (\fBETrackingUniverseOrigin\fP eOrigin, float fPredictedSecondsToPhotonsFromNow, [In, Out] \fBTrackedDevicePose_t\fP [] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount)"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._GetDXGIOutputInfo (ref int pnAdapterIndex)"

.SS "internal delegate IntPtr Valve\&.VR\&.IVRSystem\&._GetEventTypeNameFromEnum (\fBEVREventType\fP eType)"

.SS "internal delegate \fBHmdMatrix34_t\fP Valve\&.VR\&.IVRSystem\&._GetEyeToHeadTransform (\fBEVREye\fP eEye)"

.SS "internal delegate float Valve\&.VR\&.IVRSystem\&._GetFloatTrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.SS "internal delegate \fBHiddenAreaMesh_t\fP Valve\&.VR\&.IVRSystem\&._GetHiddenAreaMesh (\fBEVREye\fP eEye, \fBEHiddenAreaMeshType\fP type)"

.SS "internal delegate int Valve\&.VR\&.IVRSystem\&._GetInt32TrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.SS "internal delegate \fBHmdMatrix34_t\fP Valve\&.VR\&.IVRSystem\&._GetMatrix34TrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._GetOutputDevice (ref ulong pnDevice, \fBETextureType\fP textureType, IntPtr pInstance)"

.SS "internal delegate \fBHmdMatrix44_t\fP Valve\&.VR\&.IVRSystem\&._GetProjectionMatrix (\fBEVREye\fP eEye, float fNearZ, float fFarZ)"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._GetProjectionRaw (\fBEVREye\fP eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)"

.SS "internal delegate IntPtr Valve\&.VR\&.IVRSystem\&._GetPropErrorNameFromEnum (\fBETrackedPropertyError\fP error)"

.SS "internal delegate \fBHmdMatrix34_t\fP Valve\&.VR\&.IVRSystem\&._GetRawZeroPoseToStandingAbsoluteTrackingPose ()"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._GetRecommendedRenderTargetSize (ref uint pnWidth, ref uint pnHeight)"

.SS "internal delegate \fBHmdMatrix34_t\fP Valve\&.VR\&.IVRSystem\&._GetSeatedZeroPoseToStandingAbsoluteTrackingPose ()"

.SS "internal delegate uint Valve\&.VR\&.IVRSystem\&._GetSortedTrackedDeviceIndicesOfClass (\fBETrackedDeviceClass\fP eTrackedDeviceClass, [In, Out] uint [] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex)"

.SS "internal delegate uint Valve\&.VR\&.IVRSystem\&._GetStringTrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, System\&.Text\&.StringBuilder pchValue, uint unBufferSize, ref \fBETrackedPropertyError\fP pError)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._GetTimeSinceLastVsync (ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)"

.SS "internal delegate \fBEDeviceActivityLevel\fP Valve\&.VR\&.IVRSystem\&._GetTrackedDeviceActivityLevel (uint unDeviceId)"

.SS "internal delegate \fBETrackedDeviceClass\fP Valve\&.VR\&.IVRSystem\&._GetTrackedDeviceClass (uint unDeviceIndex)"

.SS "internal delegate uint Valve\&.VR\&.IVRSystem\&._GetTrackedDeviceIndexForControllerRole (\fBETrackedControllerRole\fP unDeviceType)"

.SS "internal delegate ulong Valve\&.VR\&.IVRSystem\&._GetUint64TrackedDeviceProperty (uint unDeviceIndex, \fBETrackedDeviceProperty\fP prop, ref \fBETrackedPropertyError\fP pError)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._IsDisplayOnDesktop ()"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._IsInputAvailable ()"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._IsSteamVRDrawingControllers ()"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._IsTrackedDeviceConnected (uint unDeviceIndex)"

.SS "internal delegate \fBEVRFirmwareError\fP Valve\&.VR\&.IVRSystem\&._PerformFirmwareUpdate (uint unDeviceIndex)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._PollNextEvent (ref \fBVREvent_t\fP pEvent, uint uncbVREvent)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._PollNextEventWithPose (\fBETrackingUniverseOrigin\fP eOrigin, ref \fBVREvent_t\fP pEvent, uint uncbVREvent, ref \fBTrackedDevicePose_t\fP pTrackedDevicePose)"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._ResetSeatedZeroPose ()"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._SetDisplayVisibility (bool bIsVisibleOnDesktop)"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._ShouldApplicationPause ()"

.SS "internal delegate bool Valve\&.VR\&.IVRSystem\&._ShouldApplicationReduceRenderingWork ()"

.SS "internal delegate void Valve\&.VR\&.IVRSystem\&._TriggerHapticPulse (uint unControllerDeviceIndex, uint unAxisId, ushort usDurationMicroSec)"

.SH "Member Data Documentation"
.PP 
.SS "internal \fB_AcknowledgeQuit_Exiting\fP Valve\&.VR\&.IVRSystem\&.AcknowledgeQuit_Exiting"

.PP
Definition at line 246 of file openvr_api\&.cs\&.
.SS "internal \fB_AcknowledgeQuit_UserPrompt\fP Valve\&.VR\&.IVRSystem\&.AcknowledgeQuit_UserPrompt"

.PP
Definition at line 251 of file openvr_api\&.cs\&.
.SS "internal \fB_ApplyTransform\fP Valve\&.VR\&.IVRSystem\&.ApplyTransform"

.PP
Definition at line 106 of file openvr_api\&.cs\&.
.SS "internal \fB_ComputeDistortion\fP Valve\&.VR\&.IVRSystem\&.ComputeDistortion"

.PP
Definition at line 36 of file openvr_api\&.cs\&.
.SS "internal \fB_DriverDebugRequest\fP Valve\&.VR\&.IVRSystem\&.DriverDebugRequest"

.PP
Definition at line 236 of file openvr_api\&.cs\&.
.SS "internal \fB_GetArrayTrackedDeviceProperty\fP Valve\&.VR\&.IVRSystem\&.GetArrayTrackedDeviceProperty"

.PP
Definition at line 156 of file openvr_api\&.cs\&.
.SS "internal \fB_GetBoolTrackedDeviceProperty\fP Valve\&.VR\&.IVRSystem\&.GetBoolTrackedDeviceProperty"

.PP
Definition at line 131 of file openvr_api\&.cs\&.
.SS "internal \fB_GetButtonIdNameFromEnum\fP Valve\&.VR\&.IVRSystem\&.GetButtonIdNameFromEnum"

.PP
Definition at line 206 of file openvr_api\&.cs\&.
.SS "internal \fB_GetControllerAxisTypeNameFromEnum\fP Valve\&.VR\&.IVRSystem\&.GetControllerAxisTypeNameFromEnum"

.PP
Definition at line 211 of file openvr_api\&.cs\&.
.SS "internal \fB_GetControllerRoleForTrackedDeviceIndex\fP Valve\&.VR\&.IVRSystem\&.GetControllerRoleForTrackedDeviceIndex"

.PP
Definition at line 116 of file openvr_api\&.cs\&.
.SS "internal \fB_GetControllerState\fP Valve\&.VR\&.IVRSystem\&.GetControllerState"

.PP
Definition at line 191 of file openvr_api\&.cs\&.
.SS "internal \fB_GetControllerStateWithPose\fP Valve\&.VR\&.IVRSystem\&.GetControllerStateWithPose"

.PP
Definition at line 196 of file openvr_api\&.cs\&.
.SS "internal \fB_GetD3D9AdapterIndex\fP Valve\&.VR\&.IVRSystem\&.GetD3D9AdapterIndex"

.PP
Definition at line 51 of file openvr_api\&.cs\&.
.SS "internal \fB_GetDeviceToAbsoluteTrackingPose\fP Valve\&.VR\&.IVRSystem\&.GetDeviceToAbsoluteTrackingPose"

.PP
Definition at line 76 of file openvr_api\&.cs\&.
.SS "internal \fB_GetDXGIOutputInfo\fP Valve\&.VR\&.IVRSystem\&.GetDXGIOutputInfo"

.PP
Definition at line 56 of file openvr_api\&.cs\&.
.SS "internal \fB_GetEventTypeNameFromEnum\fP Valve\&.VR\&.IVRSystem\&.GetEventTypeNameFromEnum"

.PP
Definition at line 181 of file openvr_api\&.cs\&.
.SS "internal \fB_GetEyeToHeadTransform\fP Valve\&.VR\&.IVRSystem\&.GetEyeToHeadTransform"

.PP
Definition at line 41 of file openvr_api\&.cs\&.
.SS "internal \fB_GetFloatTrackedDeviceProperty\fP Valve\&.VR\&.IVRSystem\&.GetFloatTrackedDeviceProperty"

.PP
Definition at line 136 of file openvr_api\&.cs\&.
.SS "internal \fB_GetHiddenAreaMesh\fP Valve\&.VR\&.IVRSystem\&.GetHiddenAreaMesh"

.PP
Definition at line 186 of file openvr_api\&.cs\&.
.SS "internal \fB_GetInt32TrackedDeviceProperty\fP Valve\&.VR\&.IVRSystem\&.GetInt32TrackedDeviceProperty"

.PP
Definition at line 141 of file openvr_api\&.cs\&.
.SS "internal \fB_GetMatrix34TrackedDeviceProperty\fP Valve\&.VR\&.IVRSystem\&.GetMatrix34TrackedDeviceProperty"

.PP
Definition at line 151 of file openvr_api\&.cs\&.
.SS "internal \fB_GetOutputDevice\fP Valve\&.VR\&.IVRSystem\&.GetOutputDevice"

.PP
Definition at line 61 of file openvr_api\&.cs\&.
.SS "internal \fB_GetProjectionMatrix\fP Valve\&.VR\&.IVRSystem\&.GetProjectionMatrix"

.PP
Definition at line 26 of file openvr_api\&.cs\&.
.SS "internal \fB_GetProjectionRaw\fP Valve\&.VR\&.IVRSystem\&.GetProjectionRaw"

.PP
Definition at line 31 of file openvr_api\&.cs\&.
.SS "internal \fB_GetPropErrorNameFromEnum\fP Valve\&.VR\&.IVRSystem\&.GetPropErrorNameFromEnum"

.PP
Definition at line 166 of file openvr_api\&.cs\&.
.SS "internal \fB_GetRawZeroPoseToStandingAbsoluteTrackingPose\fP Valve\&.VR\&.IVRSystem\&.GetRawZeroPoseToStandingAbsoluteTrackingPose"

.PP
Definition at line 91 of file openvr_api\&.cs\&.
.SS "internal \fB_GetRecommendedRenderTargetSize\fP Valve\&.VR\&.IVRSystem\&.GetRecommendedRenderTargetSize"

.PP
Definition at line 21 of file openvr_api\&.cs\&.
.SS "internal \fB_GetSeatedZeroPoseToStandingAbsoluteTrackingPose\fP Valve\&.VR\&.IVRSystem\&.GetSeatedZeroPoseToStandingAbsoluteTrackingPose"

.PP
Definition at line 86 of file openvr_api\&.cs\&.
.SS "internal \fB_GetSortedTrackedDeviceIndicesOfClass\fP Valve\&.VR\&.IVRSystem\&.GetSortedTrackedDeviceIndicesOfClass"

.PP
Definition at line 96 of file openvr_api\&.cs\&.
.SS "internal \fB_GetStringTrackedDeviceProperty\fP Valve\&.VR\&.IVRSystem\&.GetStringTrackedDeviceProperty"

.PP
Definition at line 161 of file openvr_api\&.cs\&.
.SS "internal \fB_GetTimeSinceLastVsync\fP Valve\&.VR\&.IVRSystem\&.GetTimeSinceLastVsync"

.PP
Definition at line 46 of file openvr_api\&.cs\&.
.SS "internal \fB_GetTrackedDeviceActivityLevel\fP Valve\&.VR\&.IVRSystem\&.GetTrackedDeviceActivityLevel"

.PP
Definition at line 101 of file openvr_api\&.cs\&.
.SS "internal \fB_GetTrackedDeviceClass\fP Valve\&.VR\&.IVRSystem\&.GetTrackedDeviceClass"

.PP
Definition at line 121 of file openvr_api\&.cs\&.
.SS "internal \fB_GetTrackedDeviceIndexForControllerRole\fP Valve\&.VR\&.IVRSystem\&.GetTrackedDeviceIndexForControllerRole"

.PP
Definition at line 111 of file openvr_api\&.cs\&.
.SS "internal \fB_GetUint64TrackedDeviceProperty\fP Valve\&.VR\&.IVRSystem\&.GetUint64TrackedDeviceProperty"

.PP
Definition at line 146 of file openvr_api\&.cs\&.
.SS "internal \fB_IsDisplayOnDesktop\fP Valve\&.VR\&.IVRSystem\&.IsDisplayOnDesktop"

.PP
Definition at line 66 of file openvr_api\&.cs\&.
.SS "internal \fB_IsInputAvailable\fP Valve\&.VR\&.IVRSystem\&.IsInputAvailable"

.PP
Definition at line 216 of file openvr_api\&.cs\&.
.SS "internal \fB_IsSteamVRDrawingControllers\fP Valve\&.VR\&.IVRSystem\&.IsSteamVRDrawingControllers"

.PP
Definition at line 221 of file openvr_api\&.cs\&.
.SS "internal \fB_IsTrackedDeviceConnected\fP Valve\&.VR\&.IVRSystem\&.IsTrackedDeviceConnected"

.PP
Definition at line 126 of file openvr_api\&.cs\&.
.SS "internal \fB_PerformFirmwareUpdate\fP Valve\&.VR\&.IVRSystem\&.PerformFirmwareUpdate"

.PP
Definition at line 241 of file openvr_api\&.cs\&.
.SS "internal \fB_PollNextEvent\fP Valve\&.VR\&.IVRSystem\&.PollNextEvent"

.PP
Definition at line 171 of file openvr_api\&.cs\&.
.SS "internal \fB_PollNextEventWithPose\fP Valve\&.VR\&.IVRSystem\&.PollNextEventWithPose"

.PP
Definition at line 176 of file openvr_api\&.cs\&.
.SS "internal \fB_ResetSeatedZeroPose\fP Valve\&.VR\&.IVRSystem\&.ResetSeatedZeroPose"

.PP
Definition at line 81 of file openvr_api\&.cs\&.
.SS "internal \fB_SetDisplayVisibility\fP Valve\&.VR\&.IVRSystem\&.SetDisplayVisibility"

.PP
Definition at line 71 of file openvr_api\&.cs\&.
.SS "internal \fB_ShouldApplicationPause\fP Valve\&.VR\&.IVRSystem\&.ShouldApplicationPause"

.PP
Definition at line 226 of file openvr_api\&.cs\&.
.SS "internal \fB_ShouldApplicationReduceRenderingWork\fP Valve\&.VR\&.IVRSystem\&.ShouldApplicationReduceRenderingWork"

.PP
Definition at line 231 of file openvr_api\&.cs\&.
.SS "internal \fB_TriggerHapticPulse\fP Valve\&.VR\&.IVRSystem\&.TriggerHapticPulse"

.PP
Definition at line 201 of file openvr_api\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
