.TH "Valve.VR.SteamVR_Behaviour_Pose" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Valve.VR.SteamVR_Behaviour_Pose \- This component simplifies the use of Pose actions\&. Adding it to a gameobject will auto set that transform's position and rotation every update to match the pose\&. Advanced velocity estimation is handled through a buffer of the last 30 updates\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MonoBehaviour\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "int \fBGetDeviceIndex\fP ()"
.br
.RI "Returns the device index for the device bound to the pose\&. "
.ti -1c
.RI "Vector3 \fBGetVelocity\fP ()"
.br
.RI "Returns the current velocity of the pose (as of the last update) "
.ti -1c
.RI "Vector3 \fBGetAngularVelocity\fP ()"
.br
.RI "Returns the current angular velocity of the pose (as of the last update) "
.ti -1c
.RI "bool \fBGetVelocitiesAtTimeOffset\fP (float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity)"
.br
.RI "Returns the velocities of the pose at the time specified\&. Can predict in the future or return past values\&. "
.ti -1c
.RI "void \fBGetEstimatedPeakVelocities\fP (out Vector3 velocity, out Vector3 angularVelocity)"
.br
.RI "Uses previously recorded values to find the peak speed of the pose and returns the corresponding velocity and angular velocity "
.ti -1c
.RI "string \fBGetLocalizedName\fP (params \fBEVRInputStringBits\fP[] localizedParts)"
.br
.RI "Gets the localized name of the device that the action corresponds to\&. "
.ti -1c
.RI "delegate void \fBActiveChangeHandler\fP (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, bool active)"
.br
.ti -1c
.RI "delegate void \fBChangeHandler\fP (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource)"
.br
.ti -1c
.RI "delegate void \fBUpdateHandler\fP (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource)"
.br
.ti -1c
.RI "delegate void \fBTrackingChangeHandler\fP (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, \fBETrackingResult\fP trackingState)"
.br
.ti -1c
.RI "delegate void \fBValidPoseChangeHandler\fP (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, bool validPose)"
.br
.ti -1c
.RI "delegate void \fBDeviceConnectedChangeHandler\fP (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, bool deviceConnected)"
.br
.ti -1c
.RI "delegate void \fBDeviceIndexChangedHandler\fP (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, int newDeviceIndex)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSteamVR_Action_Pose\fP \fBposeAction\fP = SteamVR_Input\&.GetAction<\fBSteamVR_Action_Pose\fP>('Pose')"
.br
.ti -1c
.RI "\fBSteamVR_Input_Sources\fP \fBinputSource\fP"
.br
.ti -1c
.RI "Transform \fBorigin\fP"
.br
.ti -1c
.RI "\fBSteamVR_Behaviour_PoseEvent\fP \fBonTransformUpdated\fP"
.br
.RI "This Unity event will fire whenever the position or rotation of this transform is updated\&. "
.ti -1c
.RI "\fBSteamVR_Behaviour_PoseEvent\fP \fBonTransformChanged\fP"
.br
.RI "This Unity event will fire whenever the position or rotation of this transform is changed\&. "
.ti -1c
.RI "\fBSteamVR_Behaviour_Pose_ConnectedChangedEvent\fP \fBonConnectedChanged\fP"
.br
.RI "This Unity event will fire whenever the device is connected or disconnected "
.ti -1c
.RI "\fBSteamVR_Behaviour_Pose_TrackingChangedEvent\fP \fBonTrackingChanged\fP"
.br
.RI "This Unity event will fire whenever the device's tracking state changes "
.ti -1c
.RI "\fBSteamVR_Behaviour_Pose_DeviceIndexChangedEvent\fP \fBonDeviceIndexChanged\fP"
.br
.RI "This Unity event will fire whenever the device's deviceIndex changes "
.ti -1c
.RI "\fBUpdateHandler\fP \fBonTransformUpdatedEvent\fP"
.br
.RI "This C# event will fire whenever the position or rotation of this transform is updated\&. "
.ti -1c
.RI "\fBChangeHandler\fP \fBonTransformChangedEvent\fP"
.br
.RI "This C# event will fire whenever the position or rotation of this transform is changed\&. "
.ti -1c
.RI "\fBDeviceConnectedChangeHandler\fP \fBonConnectedChangedEvent\fP"
.br
.RI "This C# event will fire whenever the device is connected or disconnected "
.ti -1c
.RI "\fBTrackingChangeHandler\fP \fBonTrackingChangedEvent\fP"
.br
.RI "This C# event will fire whenever the device's tracking state changes "
.ti -1c
.RI "\fBDeviceIndexChangedHandler\fP \fBonDeviceIndexChangedEvent\fP"
.br
.RI "This C# event will fire whenever the device's deviceIndex changes "
.ti -1c
.RI "bool \fBbroadcastDeviceChanges\fP = true"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBStart\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnEnable\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnDisable\fP ()"
.br
.ti -1c
.RI "virtual void \fBUpdateTransform\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnDeviceConnectedChanged\fP (\fBSteamVR_Action_Pose\fP changedAction, \fBSteamVR_Input_Sources\fP changedSource, bool connected)"
.br
.ti -1c
.RI "virtual void \fBOnTrackingChanged\fP (\fBSteamVR_Action_Pose\fP changedAction, \fBSteamVR_Input_Sources\fP changedSource, \fBETrackingResult\fP trackingChanged)"
.br
.ti -1c
.RI "virtual void \fBCheckDeviceIndex\fP ()"
.br
.ti -1c
.RI "void \fBUpdateHistoryBuffer\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "int \fBdeviceIndex\fP = \-1"
.br
.ti -1c
.RI "\fBSteamVR_HistoryBuffer\fP \fBhistoryBuffer\fP = new \fBSteamVR_HistoryBuffer\fP(30)"
.br
.ti -1c
.RI "int \fBlastFrameUpdated\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBisValid\fP\fC [get]\fP"
.br
.RI "Returns whether or not the current pose is in a valid state "
.ti -1c
.RI "bool \fBisActive\fP\fC [get]\fP"
.br
.RI "Returns whether or not the pose action is bound and able to be updated "
.in -1c
.SH "Detailed Description"
.PP 
This component simplifies the use of Pose actions\&. Adding it to a gameobject will auto set that transform's position and rotation every update to match the pose\&. Advanced velocity estimation is handled through a buffer of the last 30 updates\&. 


.PP
Definition at line 15 of file SteamVR_Behaviour_Pose\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "delegate void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.ActiveChangeHandler (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, bool active)"

.SS "delegate void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.ChangeHandler (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource)"

.SS "virtual void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.CheckDeviceIndex ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 165 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "delegate void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.DeviceConnectedChangeHandler (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, bool deviceConnected)"

.SS "delegate void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.DeviceIndexChangedHandler (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, int newDeviceIndex)"

.SS "Vector3 Valve\&.VR\&.SteamVR_Behaviour_Pose\&.GetAngularVelocity ()"

.PP
Returns the current angular velocity of the pose (as of the last update) 
.PP
Definition at line 207 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "int Valve\&.VR\&.SteamVR_Behaviour_Pose\&.GetDeviceIndex ()"

.PP
Returns the device index for the device bound to the pose\&. 
.PP
Definition at line 192 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.GetEstimatedPeakVelocities (out Vector3 velocity, out Vector3 angularVelocity)"

.PP
Uses previously recorded values to find the peak speed of the pose and returns the corresponding velocity and angular velocity 
.PP
Definition at line 219 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "string Valve\&.VR\&.SteamVR_Behaviour_Pose\&.GetLocalizedName (params \fBEVRInputStringBits\fP [] localizedParts)"

.PP
Gets the localized name of the device that the action corresponds to\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlocalizedParts\fP 
.PD 0

.IP "\(bu" 2
VRInputString_Hand - Which hand the origin is in\&. E\&.g\&. 'Left Hand' 
.IP "\(bu" 2
VRInputString_ControllerType - What kind of controller the user has in that hand\&.E\&.g\&. 'Vive Controller' 
.IP "\(bu" 2
VRInputString_InputSource - What part of that controller is the origin\&. E\&.g\&. 'Trackpad' 
.IP "\(bu" 2
VRInputString_All - All of the above\&. E\&.g\&. 'Left Hand Vive Controller Trackpad' 
.PP
.RE
.PP

.PP
Definition at line 248 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Behaviour_Pose\&.GetVelocitiesAtTimeOffset (float secondsFromNow, out Vector3 velocity, out Vector3 angularVelocity)"

.PP
Returns the velocities of the pose at the time specified\&. Can predict in the future or return past values\&. 
.PP
Definition at line 213 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "Vector3 Valve\&.VR\&.SteamVR_Behaviour_Pose\&.GetVelocity ()"

.PP
Returns the current velocity of the pose (as of the last update) 
.PP
Definition at line 201 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "virtual void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.OnDeviceConnectedChanged (\fBSteamVR_Action_Pose\fP changedAction, \fBSteamVR_Input_Sources\fP changedSource, bool connected)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 147 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "virtual void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.OnDisable ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 99 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "virtual void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.OnEnable ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 86 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "virtual void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.OnTrackingChanged (\fBSteamVR_Action_Pose\fP changedAction, \fBSteamVR_Input_Sources\fP changedSource, \fBETrackingResult\fP trackingChanged)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 157 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "virtual void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.Start ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 72 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "delegate void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.TrackingChangeHandler (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, \fBETrackingResult\fP trackingState)"

.SS "delegate void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.UpdateHandler (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource)"

.SS "void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.UpdateHistoryBuffer ()\fC [protected]\fP"

.PP
Definition at line 227 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "virtual void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.UpdateTransform ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 123 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "delegate void Valve\&.VR\&.SteamVR_Behaviour_Pose\&.ValidPoseChangeHandler (\fBSteamVR_Behaviour_Pose\fP fromAction, \fBSteamVR_Input_Sources\fP fromSource, bool validPose)"

.SH "Member Data Documentation"
.PP 
.SS "bool Valve\&.VR\&.SteamVR_Behaviour_Pose\&.broadcastDeviceChanges = true"

.PP
Definition at line 65 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "int Valve\&.VR\&.SteamVR_Behaviour_Pose\&.deviceIndex = \-1\fC [protected]\fP"

.PP
Definition at line 67 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBSteamVR_HistoryBuffer\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.historyBuffer = new \fBSteamVR_HistoryBuffer\fP(30)\fC [protected]\fP"

.PP
Definition at line 69 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBSteamVR_Input_Sources\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.inputSource"

.PP
Definition at line 20 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "int Valve\&.VR\&.SteamVR_Behaviour_Pose\&.lastFrameUpdated\fC [protected]\fP"

.PP
Definition at line 226 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBSteamVR_Behaviour_Pose_ConnectedChangedEvent\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onConnectedChanged"

.PP
This Unity event will fire whenever the device is connected or disconnected 
.PP
Definition at line 39 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBDeviceConnectedChangeHandler\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onConnectedChangedEvent"

.PP
This C# event will fire whenever the device is connected or disconnected 
.PP
Definition at line 55 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBSteamVR_Behaviour_Pose_DeviceIndexChangedEvent\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onDeviceIndexChanged"

.PP
This Unity event will fire whenever the device's deviceIndex changes 
.PP
Definition at line 45 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBDeviceIndexChangedHandler\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onDeviceIndexChangedEvent"

.PP
This C# event will fire whenever the device's deviceIndex changes 
.PP
Definition at line 61 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBSteamVR_Behaviour_Pose_TrackingChangedEvent\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onTrackingChanged"

.PP
This Unity event will fire whenever the device's tracking state changes 
.PP
Definition at line 42 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBTrackingChangeHandler\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onTrackingChangedEvent"

.PP
This C# event will fire whenever the device's tracking state changes 
.PP
Definition at line 58 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBSteamVR_Behaviour_PoseEvent\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onTransformChanged"

.PP
This Unity event will fire whenever the position or rotation of this transform is changed\&. 
.PP
Definition at line 36 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBChangeHandler\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onTransformChangedEvent"

.PP
This C# event will fire whenever the position or rotation of this transform is changed\&. 
.PP
Definition at line 52 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBSteamVR_Behaviour_PoseEvent\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onTransformUpdated"

.PP
This Unity event will fire whenever the position or rotation of this transform is updated\&. 
.PP
Definition at line 33 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBUpdateHandler\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.onTransformUpdatedEvent"

.PP
This C# event will fire whenever the position or rotation of this transform is updated\&. 
.PP
Definition at line 49 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "Transform Valve\&.VR\&.SteamVR_Behaviour_Pose\&.origin"

.PP
Definition at line 23 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "\fBSteamVR_Action_Pose\fP Valve\&.VR\&.SteamVR_Behaviour_Pose\&.poseAction = SteamVR_Input\&.GetAction<\fBSteamVR_Action_Pose\fP>('Pose')"

.PP
Definition at line 17 of file SteamVR_Behaviour_Pose\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "bool Valve\&.VR\&.SteamVR_Behaviour_Pose\&.isActive\fC [get]\fP"

.PP
Returns whether or not the pose action is bound and able to be updated 
.PP
Definition at line 29 of file SteamVR_Behaviour_Pose\&.cs\&.
.SS "bool Valve\&.VR\&.SteamVR_Behaviour_Pose\&.isValid\fC [get]\fP"

.PP
Returns whether or not the current pose is in a valid state 
.PP
Definition at line 26 of file SteamVR_Behaviour_Pose\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
