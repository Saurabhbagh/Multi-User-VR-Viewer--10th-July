.TH "LeapInternal" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LeapInternal
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBCircularObjectBuffer\fP"
.br
.ti -1c
.RI "class \fBConnection\fP"
.br
.ti -1c
.RI "class \fBCopyFromLeapCExtensions\fP"
.br
.ti -1c
.RI "class \fBImageData\fP"
.br
.ti -1c
.RI "struct \fBLEAP_ALLOCATOR\fP"
.br
.ti -1c
.RI "struct \fBLEAP_BONE\fP"
.br
.ti -1c
.RI "struct \fBLEAP_CONFIG_CHANGE_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_CONFIG_RESPONSE_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_CONFIG_RESPONSE_EVENT_WITH_REF_TYPE\fP"
.br
.ti -1c
.RI "struct \fBLEAP_CONNECTION_CONFIG\fP"
.br
.ti -1c
.RI "struct \fBLEAP_CONNECTION_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_CONNECTION_INFO\fP"
.br
.ti -1c
.RI "struct \fBLEAP_CONNECTION_LOST_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_CONNECTION_MESSAGE\fP"
.br
.ti -1c
.RI "struct \fBLEAP_DEVICE_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_DEVICE_FAILURE_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_DEVICE_INFO\fP"
.br
.ti -1c
.RI "struct \fBLEAP_DEVICE_REF\fP"
.br
.ti -1c
.RI "struct \fBLEAP_DIGIT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_DISCONNECTION_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_DROPPED_FRAME_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_FRAME_HEADER\fP"
.br
.ti -1c
.RI "struct \fBLEAP_HAND\fP"
.br
.ti -1c
.RI "struct \fBLEAP_HEAD_POSE_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_IMAGE\fP"
.br
.ti -1c
.RI "struct \fBLEAP_IMAGE_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_IMAGE_PROPERTIES\fP"
.br
.ti -1c
.RI "struct \fBLEAP_LOG_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_MATRIX_3x3\fP"
.br
.ti -1c
.RI "struct \fBLEAP_PALM\fP"
.br
.ti -1c
.RI "struct \fBLEAP_POINT_MAPPING\fP"
.br
.ti -1c
.RI "struct \fBLEAP_POINT_MAPPING_CHANGE_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_POLICY_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_QUATERNION\fP"
.br
.ti -1c
.RI "struct \fBLEAP_TELEMETRY_DATA\fP"
.br
.ti -1c
.RI "struct \fBLEAP_TIP\fP"
.br
.ti -1c
.RI "struct \fBLEAP_TRACKING_EVENT\fP"
.br
.ti -1c
.RI "struct \fBLEAP_VARIANT_REF_TYPE\fP"
.br
.ti -1c
.RI "struct \fBLEAP_VARIANT_VALUE_TYPE\fP"
.br
.ti -1c
.RI "struct \fBLEAP_VECTOR\fP"
.br
.ti -1c
.RI "class \fBLeapC\fP"
.br
.ti -1c
.RI "class \fBLogger\fP"
.br
.ti -1c
.RI "class \fBMemoryManager\fP"
.br
.ti -1c
.RI "class \fBStructMarshal\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBeLeapConnectionStatus\fP : uint { \fBeLeapConnectionStatus\&.eLeapConnectionStatus_NotConnected\fP = 0, \fBeLeapConnectionStatus\&.eLeapConnectionStatus_Connected\fP, \fBeLeapConnectionStatus\&.eLeapConnectionStatus_HandshakeIncomplete\fP, \fBeLeapConnectionStatus\&.eLeapConnectionStatus_NotRunning\fP = 0xE7030004 }"
.br
.ti -1c
.RI "enum \fBeLeapDeviceCaps\fP : uint { \fBeLeapDeviceCaps\&.eLeapDeviceCaps_Color\fP = 0x00000001 }"
.br
.ti -1c
.RI "enum \fBeLeapDeviceType\fP : uint { \fBeLeapDeviceType\&.eLeapDeviceType_Peripheral\fP = 0x0003, \fBeLeapDeviceType\&.eLeapDeviceType_Dragonfly\fP = 0x1102, \fBeLeapDeviceType\&.eLeapDeviceType_Nightcrawler\fP = 0x1201, \fBeLeapDeviceType\&.eLeapDevicePID_Rigel\fP = 0x1202 }"
.br
.ti -1c
.RI "enum \fBeLeapServiceDisposition\fP : uint { \fBeLeapServiceDisposition\&.eLeapServiceState_LowFpsDetected\fP = 0x00000001, \fBeLeapServiceDisposition\&.eLeapServiceState_PoorPerformancePause\fP = 0x00000002 }"
.br
.ti -1c
.RI "enum \fBeDistortionMatrixType\fP { \fBeDistortionMatrixType\&.eDistortionMatrixType_64x64\fP }"
.br
.ti -1c
.RI "enum \fBeLeapPolicyFlag\fP : uint { \fBeLeapPolicyFlag\&.eLeapPolicyFlag_BackgroundFrames\fP = 0x00000001, \fBeLeapPolicyFlag\&.eLeapPolicyFlag_Images\fP = 0x00000002, \fBeLeapPolicyFlag\&.eLeapPolicyFlag_OptimizeHMD\fP = 0x00000004, \fBeLeapPolicyFlag\&.eLeapPolicyFlag_AllowPauseResume\fP = 0x00000008, \fBeLeapPolicyFlag\&.eLeapPolicyFlag_MapPoints\fP = 0x00000080 }"
.br
.ti -1c
.RI "enum \fBeLeapDeviceStatus\fP : uint { \fBeLeapDeviceStatus\&.eLeapDeviceStatus_Streaming\fP = 0x00000001, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_Paused\fP = 0x00000002, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_Robust\fP = 0x00000004, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_Smudged\fP = 0x00000008, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_LowResource\fP = 0x00000010, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_UnknownFailure\fP = 0xE8010000, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_BadCalibration\fP = 0xE8010001, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_BadFirmware\fP = 0xE8010002, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_BadTransport\fP = 0xE8010003, \fBeLeapDeviceStatus\&.eLeapDeviceStatus_BadControl\fP = 0xE8010004 }"
.br
.ti -1c
.RI "enum \fBeLeapImageType\fP { \fBeLeapImageType\&.eLeapImageType_Unknown\fP = 0, \fBeLeapImageType\&.eLeapImageType_Default\fP, \fBeLeapImageType\&.eLeapImageType_Raw\fP }"
.br
.ti -1c
.RI "enum \fBeLeapImageFormat\fP : uint { \fBeLeapImageFormat\&.eLeapImageFormat_UNKNOWN\fP = 0, \fBeLeapImageFormat\&.eLeapImageType_IR\fP = 0x317249, \fBeLeapImageFormat\&.eLeapImageType_RGBIr_Bayer\fP = 0x49425247 }"
.br
.ti -1c
.RI "enum \fBeLeapPerspectiveType\fP { \fBeLeapPerspectiveType\&.eLeapPerspectiveType_invalid\fP = 0, \fBeLeapPerspectiveType\&.eLeapPerspectiveType_stereo_left\fP = 1, \fBeLeapPerspectiveType\&.eLeapPerspectiveType_stereo_right\fP = 2, \fBeLeapPerspectiveType\&.eLeapPerspectiveType_mono\fP = 3 }"
.br
.ti -1c
.RI "enum \fBeLeapHandType\fP { \fBeLeapHandType\&.eLeapHandType_Left\fP, \fBeLeapHandType\&.eLeapHandType_Right\fP }"
.br
.ti -1c
.RI "enum \fBeLeapLogSeverity\fP { \fBeLeapLogSeverity\&.eLeapLogSeverity_Unknown\fP = 0, \fBeLeapLogSeverity\&.eLeapLogSeverity_Critical\fP, \fBeLeapLogSeverity\&.eLeapLogSeverity_Warning\fP, \fBeLeapLogSeverity\&.eLeapLogSeverity_Information\fP }"
.br
.ti -1c
.RI "enum \fBeLeapValueType\fP : int { \fBeLeapValueType\&.eLeapValueType_Unknown\fP, \fBeLeapValueType\&.eLeapValueType_Boolean\fP, \fBeLeapValueType\&.eLeapValueType_Int32\fP, \fBeLeapValueType\&.eLeapValueType_Float\fP, \fBeLeapValueType\&.eLeapValueType_String\fP }"
.br
.ti -1c
.RI "enum \fBeLeapAllocatorType\fP : uint { \fBeLeapAllocatorType\&.eLeapAllocatorType_Int8\fP = 0, \fBeLeapAllocatorType\&.eLeapAllocatorType_Uint8\fP = 1, \fBeLeapAllocatorType\&.eLeapAllocatorType_Int16\fP = 2, \fBeLeapAllocatorType\&.eLeapAllocatorType_UInt16\fP = 3, \fBeLeapAllocatorType\&.eLeapAllocatorType_Int32\fP = 4, \fBeLeapAllocatorType\&.eLeapAllocatorType_UInt32\fP = 5, \fBeLeapAllocatorType\&.eLeapAllocatorType_Float\fP = 6, \fBeLeapAllocatorType\&.eLeapAllocatorType_Int64\fP = 8, \fBeLeapAllocatorType\&.eLeapAllocatorType_UInt64\fP = 9, \fBeLeapAllocatorType\&.eLeapAllocatorType_Double\fP = 10 }"
.br
.ti -1c
.RI "enum \fBeLeapRS\fP : uint { \fBeLeapRS\&.eLeapRS_Success\fP = 0x00000000, \fBeLeapRS\&.eLeapRS_UnknownError\fP = 0xE2010000, \fBeLeapRS\&.eLeapRS_InvalidArgument\fP = 0xE2010001, \fBeLeapRS\&.eLeapRS_InsufficientResources\fP = 0xE2010002, \fBeLeapRS\&.eLeapRS_InsufficientBuffer\fP = 0xE2010003, \fBeLeapRS\&.eLeapRS_Timeout\fP = 0xE2010004, \fBeLeapRS\&.eLeapRS_NotConnected\fP = 0xE2010005, \fBeLeapRS\&.eLeapRS_HandshakeIncomplete\fP = 0xE2010006, \fBeLeapRS\&.eLeapRS_BufferSizeOverflow\fP = 0xE2010007, \fBeLeapRS\&.eLeapRS_ProtocolError\fP = 0xE2010008, \fBeLeapRS\&.eLeapRS_InvalidClientID\fP = 0xE2010009, \fBeLeapRS\&.eLeapRS_UnexpectedClosed\fP = 0xE201000A, \fBeLeapRS\&.eLeapRS_UnknownImageFrameRequest\fP = 0xE201000B, \fBeLeapRS\&.eLeapRS_UnknownTrackingFrameID\fP = 0xE201000C, \fBeLeapRS\&.eLeapRS_RoutineIsNotSeer\fP = 0xE201000D, \fBeLeapRS\&.eLeapRS_TimestampTooEarly\fP = 0xE201000E, \fBeLeapRS\&.eLeapRS_ConcurrentPoll\fP = 0xE201000F, \fBeLeapRS\&.eLeapRS_NotAvailable\fP = 0xE7010002, \fBeLeapRS\&.eLeapRS_NotStreaming\fP = 0xE7010004, \fBeLeapRS\&.eLeapRS_CannotOpenDevice\fP = 0xE7010005 }"
.br
.ti -1c
.RI "enum \fBeLeapEventType\fP { \fBeLeapEventType\&.eLeapEventType_None\fP = 0, \fBeLeapEventType\&.eLeapEventType_Connection\fP, \fBeLeapEventType\&.eLeapEventType_ConnectionLost\fP, \fBeLeapEventType\&.eLeapEventType_Device\fP, \fBeLeapEventType\&.eLeapEventType_DeviceFailure\fP, \fBeLeapEventType\&.eLeapEventType_Policy\fP, \fBeLeapEventType\&.eLeapEventType_Tracking\fP = 0x100, \fBeLeapEventType\&.eLeapEventType_ImageRequestError\fP, \fBeLeapEventType\&.eLeapEventType_ImageComplete\fP, \fBeLeapEventType\&.eLeapEventType_LogEvent\fP, \fBeLeapEventType\&.eLeapEventType_DeviceLost\fP, \fBeLeapEventType\&.eLeapEventType_ConfigResponse\fP, \fBeLeapEventType\&.eLeapEventType_ConfigChange\fP, \fBeLeapEventType\&.eLeapEventType_DeviceStatusChange\fP, \fBeLeapEventType\&.eLeapEventType_DroppedFrame\fP, \fBeLeapEventType\&.eLeapEventType_Image\fP, \fBeLeapEventType\&.eLeapEventType_PointMappingChange\fP, \fBeLeapEventType\&.eLeapEventType_LogEvents\fP, \fBeLeapEventType\&.eLeapEventType_HeadPose\fP }"
.br
.ti -1c
.RI "enum \fBeLeapDeviceFlag\fP : uint { \fBeLeapDeviceFlag\&.eLeapDeviceFlag_Stream\fP = 0x00000001 }"
.br
.ti -1c
.RI "enum \fBeLeapDroppedFrameType\fP { \fBeLeapDroppedFrameType\&.eLeapDroppedFrameType_PreprocessingQueue\fP, \fBeLeapDroppedFrameType\&.eLeapDroppedFrameType_TrackingQueue\fP, \fBeLeapDroppedFrameType\&.eLeapDroppedFrameType_Other\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "delegate IntPtr \fBAllocate\fP (UInt32 size, \fBeLeapAllocatorType\fP typeHint, IntPtr state)"
.br
.ti -1c
.RI "delegate void \fBDeallocate\fP (IntPtr buffer, IntPtr state)"
.br
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBLeapInternal\&.eDistortionMatrixType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeDistortionMatrixType_64x64 \fP\fP
A 64x64 matrix of pairs of points\&. 
.PP
Definition at line 74 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapAllocatorType\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapAllocatorType_Int8 \fP\fP
.TP
\fB\fIeLeapAllocatorType_Uint8 \fP\fP
.TP
\fB\fIeLeapAllocatorType_Int16 \fP\fP
.TP
\fB\fIeLeapAllocatorType_UInt16 \fP\fP
.TP
\fB\fIeLeapAllocatorType_Int32 \fP\fP
.TP
\fB\fIeLeapAllocatorType_UInt32 \fP\fP
.TP
\fB\fIeLeapAllocatorType_Float \fP\fP
.TP
\fB\fIeLeapAllocatorType_Int64 \fP\fP
.TP
\fB\fIeLeapAllocatorType_UInt64 \fP\fP
.TP
\fB\fIeLeapAllocatorType_Double \fP\fP
.PP
Definition at line 229 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapConnectionStatus\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapConnectionStatus_NotConnected \fP\fP
A connection has been established\&. 
.TP
\fB\fIeLeapConnectionStatus_Connected \fP\fP
The connection has not been completed\&. Call OpenConnection\&. 
.TP
\fB\fIeLeapConnectionStatus_HandshakeIncomplete \fP\fP
The connection handshake has not completed\&. 
.TP
\fB\fIeLeapConnectionStatus_NotRunning \fP\fP
A connection could not be established because the server does not appear to be running\&. 
.PP
Definition at line 15 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapDeviceCaps\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapDeviceCaps_Color \fP\fP
The device can send color images\&. 
.PP
Definition at line 34 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapDeviceFlag\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapDeviceFlag_Stream \fP\fP
Flag set if the device is presently streaming frames This flag is updated when the user pauses or resumes tracking on the device from the \fBLeap\fP control panel\&. Modification of this flag will fail if the AllowPauseResume policy is not set on this device object\&. 
.PP
Definition at line 440 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapDeviceStatus\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapDeviceStatus_Streaming \fP\fP
Presently sending frames to all clients that have requested them\&. 
.TP
\fB\fIeLeapDeviceStatus_Paused \fP\fP
Device streaming has been paused\&. 
.TP
\fB\fIeLeapDeviceStatus_Robust \fP\fP
There are known sources of infrared interference\&. Device has transitioned to robust mode in order to compensate\&. 
.TP
\fB\fIeLeapDeviceStatus_Smudged \fP\fP
The device's window is smudged, tracking may be degraded\&. 
.TP
\fB\fIeLeapDeviceStatus_LowResource \fP\fP
The device has entered low-resource mode\&. 
.TP
\fB\fIeLeapDeviceStatus_UnknownFailure \fP\fP
The device has failed, but the failure reason is not known\&. 
.TP
\fB\fIeLeapDeviceStatus_BadCalibration \fP\fP
Bad calibration, cannot send frames\&. 
.TP
\fB\fIeLeapDeviceStatus_BadFirmware \fP\fP
Corrupt firmware and/or cannot receive a required firmware update\&. 
.TP
\fB\fIeLeapDeviceStatus_BadTransport \fP\fP
Exhibiting USB communications issues\&. 
.TP
\fB\fIeLeapDeviceStatus_BadControl \fP\fP
Missing critical control interfaces needed for communication\&. 
.PP
Definition at line 104 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapDeviceType\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapDeviceType_Peripheral \fP\fP
The \fBLeap\fP Motion consumer peripheral 
.TP
\fB\fIeLeapDeviceType_Dragonfly \fP\fP
Internal research product codename 'Dragonfly'\&. 
.TP
\fB\fIeLeapDeviceType_Nightcrawler \fP\fP
Internal research product codename 'Nightcrawler'\&. 
.TP
\fB\fIeLeapDevicePID_Rigel \fP\fP
Research product codename 'Rigel'\&. 
.PP
Definition at line 41 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapDroppedFrameType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapDroppedFrameType_PreprocessingQueue \fP\fP
.TP
\fB\fIeLeapDroppedFrameType_TrackingQueue \fP\fP
.TP
\fB\fIeLeapDroppedFrameType_Other \fP\fP
.PP
Definition at line 451 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapEventType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapEventType_None \fP\fP
No event has occurred within the timeout period specified when calling LeapPollConnection()\&. 
.TP
\fB\fIeLeapEventType_Connection \fP\fP
A connection to the \fBLeap\fP Motion service has been established\&. 
.TP
\fB\fIeLeapEventType_ConnectionLost \fP\fP
The connection to the \fBLeap\fP Motion service has been lost\&. 
.TP
\fB\fIeLeapEventType_Device \fP\fP
A device has been detected or plugged-in\&. A device event is dispatched after a connection is established for any devices already plugged in\&. (The system currently only supports one streaming device at a time\&.) 
.TP
\fB\fIeLeapEventType_DeviceFailure \fP\fP
Note that unplugging a device generates an eLeapEventType_DeviceLost event message, not a failure message\&. 
.TP
\fB\fIeLeapEventType_Policy \fP\fP
A policy change has occurred\&. This can be due to setting a policy with LeapSetPolicyFlags() or due to changing or policy-related config settings, including images_mode\&. (A user can also change these policies using the \fBLeap\fP Motion Control Panel\&.) 
.TP
\fB\fIeLeapEventType_Tracking \fP\fP
A tracking frame\&. The message contains the tracking data for the frame\&. 
.TP
\fB\fIeLeapEventType_ImageRequestError \fP\fP
The request for an image has failed\&. The message contains information about the failure\&. The client application will not receive the requested image set\&. 
.TP
\fB\fIeLeapEventType_ImageComplete \fP\fP
The request for an image is complete\&. The image data has been completely written to the application-provided buffer\&. 
.TP
\fB\fIeLeapEventType_LogEvent \fP\fP
A system message\&. 
.TP
\fB\fIeLeapEventType_DeviceLost \fP\fP
The device connection has been lost\&. This event is generally asserted when the device has been detached from the system, when the connection to the service has been lost, or if the device is closed while streaming\&. Generally, any event where the system can conclude no further frames will be received will result in this message\&. The DeviceEvent field will be filled with the id of the formerly attached device\&. 
.TP
\fB\fIeLeapEventType_ConfigResponse \fP\fP
The asynchronous response to a call to LeapRequestConfigValue()\&. Contains the value of requested configuration item\&. 
.TP
\fB\fIeLeapEventType_ConfigChange \fP\fP
The asynchronous response to a call to LeapSaveConfigValue()\&. Reports whether the change succeeded or failed\&. 
.TP
\fB\fIeLeapEventType_DeviceStatusChange \fP\fP
Notification that a status change has been detected on an attached device\&. 
.TP
\fB\fIeLeapEventType_DroppedFrame \fP\fP
A tracking frame has been dropped by the service\&. 
.TP
\fB\fIeLeapEventType_Image \fP\fP
Notification that an unrequested stereo image pair is available\&. 
.TP
\fB\fIeLeapEventType_PointMappingChange \fP\fP
Notification that point mapping has changed\&. 
.TP
\fB\fIeLeapEventType_LogEvents \fP\fP
An array of system messages\&. 
.TP
\fB\fIeLeapEventType_HeadPose \fP\fP
A new head pose is available\&. 
.PP
Definition at line 343 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapHandType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapHandType_Left \fP\fP
.TP
\fB\fIeLeapHandType_Right \fP\fP
.PP
Definition at line 194 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapImageFormat\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapImageFormat_UNKNOWN \fP\fP
An invalid or unknown format\&. 
.TP
\fB\fIeLeapImageType_IR \fP\fP
An infrared image\&. 
.TP
\fB\fIeLeapImageType_RGBIr_Bayer \fP\fP
A Bayer RGBIr image with uncorrected RGB channels 
.PP
Definition at line 160 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapImageType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapImageType_Unknown \fP\fP
.TP
\fB\fIeLeapImageType_Default \fP\fP
Default processed IR image 
.TP
\fB\fIeLeapImageType_Raw \fP\fP
Image from raw sensor values 
.PP
Definition at line 148 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapLogSeverity\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapLogSeverity_Unknown \fP\fP
The message severity is not known or was not specified\&. 
.TP
\fB\fIeLeapLogSeverity_Critical \fP\fP
A message about a fault that could render the software or device non-functional\&. 
.TP
\fB\fIeLeapLogSeverity_Warning \fP\fP
A message warning about a condition that could degrade device capabilities\&. 
.TP
\fB\fIeLeapLogSeverity_Information \fP\fP
A system status message\&. 
.PP
Definition at line 199 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapPerspectiveType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapPerspectiveType_invalid \fP\fP
An unknown or invalid type\&. 
.TP
\fB\fIeLeapPerspectiveType_stereo_left \fP\fP
A canonically left image\&. 
.TP
\fB\fIeLeapPerspectiveType_stereo_right \fP\fP
A canonically right image\&. 
.TP
\fB\fIeLeapPerspectiveType_mono \fP\fP
Reserved for future use\&. 
.PP
Definition at line 175 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapPolicyFlag\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapPolicyFlag_BackgroundFrames \fP\fP
Allows frame receipt even when this application is not the foreground application\&. 
.TP
\fB\fIeLeapPolicyFlag_Images \fP\fP
Allow streaming images 
.TP
\fB\fIeLeapPolicyFlag_OptimizeHMD \fP\fP
Optimize HMD Policy Flag\&. 
.TP
\fB\fIeLeapPolicyFlag_AllowPauseResume \fP\fP
Modifies the security token to allow calls to LeapPauseDevice to succeed 
.TP
\fB\fIeLeapPolicyFlag_MapPoints \fP\fP
Allows streaming map points\&. 
.PP
Definition at line 81 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapRS\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapRS_Success \fP\fP
The operation completed successfully\&. 
.TP
\fB\fIeLeapRS_UnknownError \fP\fP
An undetermined error has occurred\&. This is usually the result of an abnormal operating condition in \fBLeapC\fP, the \fBLeap\fP Motion service, or the host computer itself\&. 
.TP
\fB\fIeLeapRS_InvalidArgument \fP\fP
An invalid argument was specified\&. 
.TP
\fB\fIeLeapRS_InsufficientResources \fP\fP
Insufficient resources existed to complete the request\&. 
.TP
\fB\fIeLeapRS_InsufficientBuffer \fP\fP
The specified buffer was not large enough to complete the request\&. 
.TP
\fB\fIeLeapRS_Timeout \fP\fP
The requested operation has timed out\&. 
.TP
\fB\fIeLeapRS_NotConnected \fP\fP
The operation is invalid because there is no current connection\&. 
.TP
\fB\fIeLeapRS_HandshakeIncomplete \fP\fP
The operation is invalid because the connection is not complete\&. 
.TP
\fB\fIeLeapRS_BufferSizeOverflow \fP\fP
The specified buffer size is too large\&. 
.TP
\fB\fIeLeapRS_ProtocolError \fP\fP
A communications protocol error occurred\&. 
.TP
\fB\fIeLeapRS_InvalidClientID \fP\fP
The server incorrectly specified zero as a client ID\&. 
.TP
\fB\fIeLeapRS_UnexpectedClosed \fP\fP
The connection to the service was unexpectedly closed while reading or writing a message\&. The server may have terminated\&. 
.TP
\fB\fIeLeapRS_UnknownImageFrameRequest \fP\fP
The specified request token does not appear to be valid Provided that the token value which identifies the request itself was, at one point, valid, this error condition occurs when the request to which the token refers has already been satisfied or is currently being satisfied\&. 
.TP
\fB\fIeLeapRS_UnknownTrackingFrameID \fP\fP
The specified frame ID is not valid or is no longer valid Provided that frame ID was, at one point, valid, this error condition occurs when the identifier refers to a frame that occurred further in the past than is currently recorded in the rolling frame window\&. 
.TP
\fB\fIeLeapRS_RoutineIsNotSeer \fP\fP
The specified timestamp references a future point in time The related routine can only operate on time points having occurred in the past, and the provided timestamp occurs in the future\&. 
.TP
\fB\fIeLeapRS_TimestampTooEarly \fP\fP
The specified timestamp references a point too far in the past The related routine can only operate on time points occurring within its immediate record of the past\&. 
.TP
\fB\fIeLeapRS_ConcurrentPoll \fP\fP
LeapPollConnection is called concurrently\&. 
.TP
\fB\fIeLeapRS_NotAvailable \fP\fP
A connection to the \fBLeap\fP Motion service could not be established\&. 
.TP
\fB\fIeLeapRS_NotStreaming \fP\fP
The requested operation can only be performed while the device is sending data\&. 
.TP
\fB\fIeLeapRS_CannotOpenDevice \fP\fP
The specified device could not be opened\&. It is possible that the device identifier is invalid, or that the device has been disconnected since being enumerated\&. 
.PP
Definition at line 242 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapServiceDisposition\fP : uint\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapServiceState_LowFpsDetected \fP\fP
The service cannot receive frames fast enough from the underlying hardware\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.3 
.RE
.PP

.TP
\fB\fIeLeapServiceState_PoorPerformancePause \fP\fP
The service has paused itself due to an insufficient frame rate from the hardware\&. 
.PP
\fBSince:\fP
.RS 4
3\&.1\&.3 
.RE
.PP

.PP
Definition at line 60 of file LeapC\&.cs\&.
.SS "enum \fBLeapInternal\&.eLeapValueType\fP : int\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIeLeapValueType_Unknown \fP\fP
The type is unknown (which is an abnormal condition)\&. 
.TP
\fB\fIeLeapValueType_Boolean \fP\fP
.TP
\fB\fIeLeapValueType_Int32 \fP\fP
.TP
\fB\fIeLeapValueType_Float \fP\fP
.TP
\fB\fIeLeapValueType_String \fP\fP
.PP
Definition at line 218 of file LeapC\&.cs\&.
.SH "Function Documentation"
.PP 
.SS "delegate IntPtr LeapInternal\&.Allocate (UInt32 size, \fBeLeapAllocatorType\fP typeHint, IntPtr state)"

.SS "delegate void LeapInternal\&.Deallocate (IntPtr buffer, IntPtr state)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
