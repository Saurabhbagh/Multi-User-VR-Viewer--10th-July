.TH "Leap.Unity.LeapServiceProvider" 3 "Sat Jul 20 2019" "Version https://github.com/Saurabhbagh/Multi-User-VR-Viewer--10th-July/" "Multi User Vr Viewer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Leap.Unity.LeapServiceProvider \- The \fBLeapServiceProvider\fP provides tracked \fBLeap\fP \fBHand\fP data and images from the device via the \fBLeap\fP service running on the client machine\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBLeap\&.Unity\&.LeapProvider\fP\&.
.PP
Inherited by \fBLeap\&.Unity\&.LeapXRServiceProvider\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBFrameOptimizationMode\fP { \fBFrameOptimizationMode\&.None\fP, \fBFrameOptimizationMode\&.ReuseUpdateForPhysics\fP, \fBFrameOptimizationMode\&.ReusePhysicsForUpdate\fP }"
.br
.ti -1c
.RI "enum \fBPhysicsExtrapolationMode\fP { \fBPhysicsExtrapolationMode\&.None\fP, \fBPhysicsExtrapolationMode\&.Auto\fP, \fBPhysicsExtrapolationMode\&.Manual\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "float \fBCalculatePhysicsExtrapolation\fP ()"
.br
.ti -1c
.RI "\fBController\fP \fBGetLeapController\fP ()"
.br
.RI "Returns the \fBLeap\fP \fBController\fP instance\&. "
.ti -1c
.RI "bool \fBIsConnected\fP ()"
.br
.RI "Returns true if the \fBLeap\fP Motion hardware is plugged in and this application is connected to the \fBLeap\fP Motion service\&. "
.ti -1c
.RI "void \fBRetransformFrames\fP ()"
.br
.RI "Retransforms hand data from \fBLeap\fP space to the space of the \fBUnity\fP transform\&. This is only necessary if you're moving the \fBLeapServiceProvider\fP around in a custom script and trying to access \fBHand\fP data from it directly afterward\&. "
.ti -1c
.RI "void \fBCopySettingsToLeapXRServiceProvider\fP (\fBLeapXRServiceProvider\fP leapXRServiceProvider)"
.br
.RI "Copies property settings from this \fBLeapServiceProvider\fP to the target \fBLeapXRServiceProvider\fP where applicable\&. Does not modify any XR-specific settings that only exist on the \fBLeapXRServiceProvider\fP\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBReset\fP ()"
.br
.ti -1c
.RI "virtual void \fBAwake\fP ()"
.br
.ti -1c
.RI "virtual void \fBStart\fP ()"
.br
.ti -1c
.RI "virtual void \fBUpdate\fP ()"
.br
.ti -1c
.RI "virtual void \fBFixedUpdate\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnDestroy\fP ()"
.br
.ti -1c
.RI "virtual void \fBOnApplicationPause\fP (bool isPaused)"
.br
.ti -1c
.RI "virtual void \fBOnApplicationQuit\fP ()"
.br
.ti -1c
.RI "virtual long \fBCalculateInterpolationTime\fP (bool endOfFrame=false)"
.br
.ti -1c
.RI "virtual void \fBinitializeFlags\fP ()"
.br
.RI "Initializes \fBLeap\fP Motion policy flags\&. "
.ti -1c
.RI "void \fBcreateController\fP ()"
.br
.RI "Creates an instance of a \fBController\fP, initializing its policy flags and subscribing to its connection event\&. "
.ti -1c
.RI "void \fBdestroyController\fP ()"
.br
.RI "Stops the connection for the existing instance of a \fBController\fP, clearing old policy flags and resetting the \fBController\fP to null\&. "
.ti -1c
.RI "bool \fBcheckConnectionIntegrity\fP ()"
.br
.RI "Checks whether this provider is connected to a service; If it is not, attempt to reconnect at regular intervals for MAX_RECONNECTION_ATTEMPTS "
.ti -1c
.RI "void \fBonHandControllerConnect\fP (object sender, \fBLeapEventArgs\fP args)"
.br
.ti -1c
.RI "virtual void \fBtransformFrame\fP (\fBFrame\fP source, \fBFrame\fP dest)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "const double \fBNS_TO_S\fP = 1e\-6"
.br
.RI "Converts nanoseconds to seconds\&. "
.ti -1c
.RI "const double \fBS_TO_NS\fP = 1e6"
.br
.RI "Converts seconds to nanoseconds\&. "
.ti -1c
.RI "const string \fBHAND_ARRAY_GLOBAL_NAME\fP = '_LeapHandTransforms'"
.br
.RI "The transform array used for late-latching\&. "
.ti -1c
.RI "const int \fBMAX_RECONNECTION_ATTEMPTS\fP = 5"
.br
.RI "The maximum number of times the provider will attempt to reconnect to the service before giving up\&. "
.ti -1c
.RI "const int \fBRECONNECTION_INTERVAL\fP = 180"
.br
.RI "The number of frames to wait between each reconnection attempt\&. "
.ti -1c
.RI "\fBFrameOptimizationMode\fP \fB_frameOptimization\fP = \fBFrameOptimizationMode\&.None\fP"
.br
.ti -1c
.RI "\fBPhysicsExtrapolationMode\fP \fB_physicsExtrapolation\fP = \fBPhysicsExtrapolationMode\&.Auto\fP"
.br
.ti -1c
.RI "float \fB_physicsExtrapolationTime\fP = 1\&.0f / 90\&.0f"
.br
.ti -1c
.RI "bool \fB_workerThreadProfiling\fP = false"
.br
.ti -1c
.RI "bool \fB_useInterpolation\fP = true"
.br
.ti -1c
.RI "int \fBExtrapolationAmount\fP = 0"
.br
.ti -1c
.RI "int \fBBounceAmount\fP = 0"
.br
.ti -1c
.RI "\fBController\fP \fB_leapController\fP"
.br
.ti -1c
.RI "bool \fB_isDestroyed\fP"
.br
.ti -1c
.RI "\fBSmoothedFloat\fP \fB_fixedOffset\fP = new \fBSmoothedFloat\fP()"
.br
.ti -1c
.RI "\fBSmoothedFloat\fP \fB_smoothedTrackingLatency\fP = new \fBSmoothedFloat\fP()"
.br
.ti -1c
.RI "long \fB_unityToLeapOffset\fP"
.br
.ti -1c
.RI "\fBFrame\fP \fB_untransformedUpdateFrame\fP"
.br
.ti -1c
.RI "\fBFrame\fP \fB_transformedUpdateFrame\fP"
.br
.ti -1c
.RI "\fBFrame\fP \fB_untransformedFixedFrame\fP"
.br
.ti -1c
.RI "\fBFrame\fP \fB_transformedFixedFrame\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "Action< \fBDevice\fP > \fBOnDeviceSafe\fP"
.br
.RI "A utility event to get a callback whenever a new device is connected to the service\&. This callback will ALSO trigger a callback upon subscription if a device is already connected\&. "
.ti -1c
.RI "override \fBFrame\fP \fBCurrentFrame\fP\fC [get]\fP"
.br
.ti -1c
.RI "override \fBFrame\fP \fBCurrentFixedFrame\fP\fC [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBLeapServiceProvider\fP provides tracked \fBLeap\fP \fBHand\fP data and images from the device via the \fBLeap\fP service running on the client machine\&. 


.PP
Definition at line 21 of file LeapServiceProvider\&.cs\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBLeap\&.Unity\&.LeapServiceProvider\&.FrameOptimizationMode\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINone \fP\fP
.TP
\fB\fIReuseUpdateForPhysics \fP\fP
.TP
\fB\fIReusePhysicsForUpdate \fP\fP
.PP
Definition at line 56 of file LeapServiceProvider\&.cs\&.
.SS "enum \fBLeap\&.Unity\&.LeapServiceProvider\&.PhysicsExtrapolationMode\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINone \fP\fP
.TP
\fB\fIAuto \fP\fP
.TP
\fB\fIManual \fP\fP
.PP
Definition at line 65 of file LeapServiceProvider\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.Awake ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 250 of file LeapServiceProvider\&.cs\&.
.SS "virtual long Leap\&.Unity\&.LeapServiceProvider\&.CalculateInterpolationTime (bool endOfFrame = \fCfalse\fP)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBLeap\&.Unity\&.LeapXRServiceProvider\fP\&.
.PP
Definition at line 434 of file LeapServiceProvider\&.cs\&.
.SS "float Leap\&.Unity\&.LeapServiceProvider\&.CalculatePhysicsExtrapolation ()"

.PP
Definition at line 368 of file LeapServiceProvider\&.cs\&.
.SS "bool Leap\&.Unity\&.LeapServiceProvider\&.checkConnectionIntegrity ()\fC [protected]\fP"

.PP
Checks whether this provider is connected to a service; If it is not, attempt to reconnect at regular intervals for MAX_RECONNECTION_ATTEMPTS 
.PP
Definition at line 511 of file LeapServiceProvider\&.cs\&.
.SS "void Leap\&.Unity\&.LeapServiceProvider\&.CopySettingsToLeapXRServiceProvider (\fBLeapXRServiceProvider\fP leapXRServiceProvider)"

.PP
Copies property settings from this \fBLeapServiceProvider\fP to the target \fBLeapXRServiceProvider\fP where applicable\&. Does not modify any XR-specific settings that only exist on the \fBLeapXRServiceProvider\fP\&. 
.PP
Definition at line 422 of file LeapServiceProvider\&.cs\&.
.SS "void Leap\&.Unity\&.LeapServiceProvider\&.createController ()\fC [protected]\fP"

.PP
Creates an instance of a \fBController\fP, initializing its policy flags and subscribing to its connection event\&. 
.PP
Definition at line 461 of file LeapServiceProvider\&.cs\&.
.SS "void Leap\&.Unity\&.LeapServiceProvider\&.destroyController ()\fC [protected]\fP"

.PP
Stops the connection for the existing instance of a \fBController\fP, clearing old policy flags and resetting the \fBController\fP to null\&. 
.PP
Definition at line 494 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.FixedUpdate ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 306 of file LeapServiceProvider\&.cs\&.
.SS "\fBController\fP Leap\&.Unity\&.LeapServiceProvider\&.GetLeapController ()"

.PP
Returns the \fBLeap\fP \fBController\fP instance\&. 
.PP
Definition at line 389 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.initializeFlags ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Initializes \fBLeap\fP Motion policy flags\&. 
.PP
Reimplemented in \fBLeap\&.Unity\&.LeapXRServiceProvider\fP\&.
.PP
Definition at line 449 of file LeapServiceProvider\&.cs\&.
.SS "bool Leap\&.Unity\&.LeapServiceProvider\&.IsConnected ()"

.PP
Returns true if the \fBLeap\fP Motion hardware is plugged in and this application is connected to the \fBLeap\fP Motion service\&. 
.PP
Definition at line 403 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.OnApplicationPause (bool isPaused)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 352 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.OnApplicationQuit ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 363 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.OnDestroy ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 347 of file LeapServiceProvider\&.cs\&.
.SS "void Leap\&.Unity\&.LeapServiceProvider\&.onHandControllerConnect (object sender, \fBLeapEventArgs\fP args)\fC [protected]\fP"

.PP
Definition at line 535 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.Reset ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBLeap\&.Unity\&.LeapXRServiceProvider\fP\&.
.PP
Definition at line 246 of file LeapServiceProvider\&.cs\&.
.SS "void Leap\&.Unity\&.LeapServiceProvider\&.RetransformFrames ()"

.PP
Retransforms hand data from \fBLeap\fP space to the space of the \fBUnity\fP transform\&. This is only necessary if you're moving the \fBLeapServiceProvider\fP around in a custom script and trying to access \fBHand\fP data from it directly afterward\&. 
.PP
Definition at line 412 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.Start ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBLeap\&.Unity\&.LeapXRServiceProvider\fP\&.
.PP
Definition at line 255 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.transformFrame (\fBFrame\fP source, \fBFrame\fP dest)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBLeap\&.Unity\&.LeapXRServiceProvider\fP\&.
.PP
Definition at line 543 of file LeapServiceProvider\&.cs\&.
.SS "virtual void Leap\&.Unity\&.LeapServiceProvider\&.Update ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBLeap\&.Unity\&.LeapXRServiceProvider\fP\&.
.PP
Definition at line 263 of file LeapServiceProvider\&.cs\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSmoothedFloat\fP Leap\&.Unity\&.LeapServiceProvider\&._fixedOffset = new \fBSmoothedFloat\fP()\fC [protected]\fP"

.PP
Definition at line 109 of file LeapServiceProvider\&.cs\&.
.SS "\fBFrameOptimizationMode\fP Leap\&.Unity\&.LeapServiceProvider\&._frameOptimization = \fBFrameOptimizationMode\&.None\fP\fC [protected]\fP"

.PP
Definition at line 63 of file LeapServiceProvider\&.cs\&.
.SS "bool Leap\&.Unity\&.LeapServiceProvider\&._isDestroyed\fC [protected]\fP"

.PP
Definition at line 107 of file LeapServiceProvider\&.cs\&.
.SS "\fBController\fP Leap\&.Unity\&.LeapServiceProvider\&._leapController\fC [protected]\fP"

.PP
Definition at line 106 of file LeapServiceProvider\&.cs\&.
.SS "\fBPhysicsExtrapolationMode\fP Leap\&.Unity\&.LeapServiceProvider\&._physicsExtrapolation = \fBPhysicsExtrapolationMode\&.Auto\fP\fC [protected]\fP"

.PP
Definition at line 75 of file LeapServiceProvider\&.cs\&.
.SS "float Leap\&.Unity\&.LeapServiceProvider\&._physicsExtrapolationTime = 1\&.0f / 90\&.0f\fC [protected]\fP"

.PP
Definition at line 79 of file LeapServiceProvider\&.cs\&.
.SS "\fBSmoothedFloat\fP Leap\&.Unity\&.LeapServiceProvider\&._smoothedTrackingLatency = new \fBSmoothedFloat\fP()\fC [protected]\fP"

.PP
Definition at line 110 of file LeapServiceProvider\&.cs\&.
.SS "\fBFrame\fP Leap\&.Unity\&.LeapServiceProvider\&._transformedFixedFrame\fC [protected]\fP"

.PP
Definition at line 116 of file LeapServiceProvider\&.cs\&.
.SS "\fBFrame\fP Leap\&.Unity\&.LeapServiceProvider\&._transformedUpdateFrame\fC [protected]\fP"

.PP
Definition at line 114 of file LeapServiceProvider\&.cs\&.
.SS "long Leap\&.Unity\&.LeapServiceProvider\&._unityToLeapOffset\fC [protected]\fP"

.PP
Definition at line 111 of file LeapServiceProvider\&.cs\&.
.SS "\fBFrame\fP Leap\&.Unity\&.LeapServiceProvider\&._untransformedFixedFrame\fC [protected]\fP"

.PP
Definition at line 115 of file LeapServiceProvider\&.cs\&.
.SS "\fBFrame\fP Leap\&.Unity\&.LeapServiceProvider\&._untransformedUpdateFrame\fC [protected]\fP"

.PP
Definition at line 113 of file LeapServiceProvider\&.cs\&.
.SS "bool Leap\&.Unity\&.LeapServiceProvider\&._useInterpolation = true\fC [protected]\fP"

.PP
Definition at line 94 of file LeapServiceProvider\&.cs\&.
.SS "bool Leap\&.Unity\&.LeapServiceProvider\&._workerThreadProfiling = false\fC [protected]\fP"

.PP
Definition at line 89 of file LeapServiceProvider\&.cs\&.
.SS "int Leap\&.Unity\&.LeapServiceProvider\&.BounceAmount = 0\fC [protected]\fP"

.PP
Definition at line 103 of file LeapServiceProvider\&.cs\&.
.SS "int Leap\&.Unity\&.LeapServiceProvider\&.ExtrapolationAmount = 0\fC [protected]\fP"

.PP
Definition at line 102 of file LeapServiceProvider\&.cs\&.
.SS "const string Leap\&.Unity\&.LeapServiceProvider\&.HAND_ARRAY_GLOBAL_NAME = '_LeapHandTransforms'\fC [protected]\fP"

.PP
The transform array used for late-latching\&. 
.PP
Definition at line 38 of file LeapServiceProvider\&.cs\&.
.SS "const int Leap\&.Unity\&.LeapServiceProvider\&.MAX_RECONNECTION_ATTEMPTS = 5\fC [protected]\fP"

.PP
The maximum number of times the provider will attempt to reconnect to the service before giving up\&. 
.PP
Definition at line 44 of file LeapServiceProvider\&.cs\&.
.SS "const double Leap\&.Unity\&.LeapServiceProvider\&.NS_TO_S = 1e\-6\fC [protected]\fP"

.PP
Converts nanoseconds to seconds\&. 
.PP
Definition at line 28 of file LeapServiceProvider\&.cs\&.
.SS "const int Leap\&.Unity\&.LeapServiceProvider\&.RECONNECTION_INTERVAL = 180\fC [protected]\fP"

.PP
The number of frames to wait between each reconnection attempt\&. 
.PP
Definition at line 50 of file LeapServiceProvider\&.cs\&.
.SS "const double Leap\&.Unity\&.LeapServiceProvider\&.S_TO_NS = 1e6\fC [protected]\fP"

.PP
Converts seconds to nanoseconds\&. 
.PP
Definition at line 33 of file LeapServiceProvider\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "override \fBFrame\fP Leap\&.Unity\&.LeapServiceProvider\&.CurrentFixedFrame\fC [get]\fP"

.PP
Definition at line 222 of file LeapServiceProvider\&.cs\&.
.SS "override \fBFrame\fP Leap\&.Unity\&.LeapServiceProvider\&.CurrentFrame\fC [get]\fP"

.PP
Definition at line 202 of file LeapServiceProvider\&.cs\&.
.SS "Action<\fBDevice\fP> Leap\&.Unity\&.LeapServiceProvider\&.OnDeviceSafe\fC [add]\fP, \fC [remove]\fP"

.PP
A utility event to get a callback whenever a new device is connected to the service\&. This callback will ALSO trigger a callback upon subscription if a device is already connected\&. For situations with multiple devices OnDeviceSafe will be dispatched once for each device\&. 
.PP
Definition at line 130 of file LeapServiceProvider\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multi User Vr Viewer from the source code\&.
